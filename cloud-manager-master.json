{
    "url": "http://mongodb.com/docs/cloud-manager",
    "includeInGlobalSearch": true,
    "documents": [
        {
            "slug": "faq",
            "title": "Frequently Asked Questions",
            "headings": [],
            "paragraphs": "This document addresses common questions about  Cloud Manager  and its use.",
            "code": [],
            "preview": "This document addresses common questions about Cloud Manager and its use.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "api",
            "title": "API",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "troubleshooting",
            "title": "Troubleshooting",
            "headings": [],
            "paragraphs": "This document provides advice for troubleshooting problems with  Cloud Manager . For resolutions to alert conditions, see also  Resolve Alerts . Fix connectivity, authentication, and agent issues. Fix issues with authentication and 2FA. Fix issues with  Cloud Manager  automation. Fix issues with alerts, deployments, and projects. Fix issues with backing up and restoring data. Fix issues with the  MongoDB Enterprise Kubernetes Operator .",
            "code": [],
            "preview": "This document provides advice for troubleshooting problems with Cloud Manager.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "data-explorer",
            "title": "Interact with Your Data",
            "headings": [
                "Cloud Manager UI Read Behavior",
                "Disable Cloud Manager UI Data Interaction",
                "Go to your Project Settings.",
                "Set the Data Explorer toggle to Off.",
                "Interact with Data in the Cloud Manager UI",
                "Manage Your Data in the Cloud Manager UI"
            ],
            "paragraphs": "You can use the  Cloud Manager  UI to interact with data in the following ways: View databases, collections, and indexes in your cluster. Create and drop databases, collections, and indexes. Insert/edit/delete documents. Create and run aggregation pipelines to process your data. The  Cloud Manager  UI reads from the primary unless the primary is\nunavailable. If the primary is unavailable, the  Cloud Manager  UI\nreads from a non-hidden, non-delayed secondary member. The  Cloud Manager  UI uses the Automation to retrieve all data. No  Cloud Manager \nconfiguration changes are required to access data in the  Cloud Manager  UI. To interact with your data in the  Cloud Manager  UI, you have the\n Data Explorer  setting enabled. The\n Data Explorer  setting is enabled by default. To disable the  Data Explorer  setting: To enable or disable the  Data Explorer  setting for a\nproject, you must have the  Project Owner   role for the\nproject or the  Organization Owner  role on its parent\norganization. Next to the  Projects  menu, expand the\n Options  menu. Click  Project Settings . To enable the  Data Explorer  setting, set the toggle to\n On . To interact with your data in the  Cloud Manager  UI, you must have one of\nthe following roles: You can't interact with your data in the  MongoDB Cloud Manager  UI with trial\nversions of  MongoDB Cloud Manager  after the initial 30 day trial period. Project Owner  or\n Organization Owner Project Data Access Admin Project Data Access Read/Write Project Data Access Read Only To interact with data in the  Cloud Manager  UI: Click  Deployment  in the left navigation. Select the desired MongoDB deployment. Select the  Data  tab. The following pages show how you can use the  Cloud Manager  UI to manage your\ndatabases, collections, indexes, documents, and data\nwithin documents: Manage Databases and Collections Manage Documents Manage Indexes Create Aggregation Pipelines",
            "code": [],
            "preview": "You can use the Cloud Manager UI to interact with data in the following ways:",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference",
            "title": "Reference",
            "headings": [],
            "paragraphs": "MongoDB versions compatible with  Cloud Manager  features. Browsers that  Cloud Manager  supports. Common  Cloud Manager  terms and concepts with their definitions. Explanation of the advanced deployment options for replica sets and\nsharded clusters. Available settings in the Automation configuration file used to\ndetermine the desired state of the MongoDB deployment. Supported and unsupported options for a MongoDB process as specified\nin the automationconfiguration file. The  AWS (Amazon Web Services)  permissions required for the user associated with\nthe  AWS (Amazon Web Services)  access keys configured in  Cloud Manager . A reference sheet for the monitoring service. An inventory of all alert events generated in  Cloud Manager . Solutions for problems discovered during  a Cloud Manager  health check. Monitoring metrics per  Cloud Manager  plan. Describes the options for the  Kubernetes  pod specifications to create\nMongoDB databases. Known issues with the MongoDB Enterprise Kubernetes Operator.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "application",
            "title": "Cloud Manager Overview",
            "headings": [
                "Automation",
                "Monitoring",
                "How Monitoring Works",
                "Backup",
                "How Backup Works",
                "Backup Workflow",
                "Restore Data"
            ],
            "paragraphs": "MongoDB Cloud Manager  can automate, monitor, and back up your MongoDB\ninfrastructure. Cloud Manager  Automation enables you to configure and maintain MongoDB nodes\nand clusters. MongoDB Agents using Automation on each MongoDB host can maintain your\nMongoDB deployments. You can\n install  the\n MongoDB Agent . Automation can\n add hosts  and\n deploy and upgrade new or existing clusters . Cloud Manager  Monitoring provides real-time reporting, visualization, and\nalerting on key database and hardware indicators. When you activate Monitoring on a MongoDB host, Monitoring collects\nstatistics from the nodes in your MongoDB deployment. The Agent\ntransmits database statistics back to  Cloud Manager  to report deployment status\nin real time. You can  set alerts  on\nindicators you choose. Cloud Manager  Backup provides scheduled\n snapshots  and\npoint-in-time\n recovery \nof your MongoDB  replica sets  and\n sharded clusters . When you activate Backup for a MongoDB deployment, Backup takes\nsnapshots of data from the MongoDB processes you have specified. Only sharded clusters or replica sets can be backed up. To back up a\nstandalone  mongod  process, you must\n convert it to a single-member replica set . Backups rely upon the\n MongoDB version compatibility \nof your database.\nThis Feature Compatibility Version ranges from the current version to\none version earlier. For MongoDB 4.2, the FCV can be  4.0  or\n 4.2 . The backup process works in this manner regardless of how snapshots are\nstored. Backup uses a MongoDB instance version equal to or greater than the\nversion of the replica set it backs up. Backup takes and stores snapshots based on a user-defined\n snapshot retention policy .\nSharded cluster snapshots temporarily stop the balancer. The snapshots\nthen can insert a marker token into all shards and config servers in\nthe cluster.  Cloud Manager  takes a  snapshot  when the marker tokens\nappear in the snapshot data. To learn more about how to configure backups, see\n Backup Configuration Options . Monthly backup costs for  Cloud Manager  are based on the size per-gigabyte\nof your most recent snapshot. To learn about  Cloud Manager  backup pricing,\nsee  Backup Costs . The MongoDB Agent uses WiredTiger's incremental backup cursor to\ncapture the incremental changes. The backup process takes a snapshot of the data directory at its\n scheduled snapshot intervals . This process copies the data files in a MongoDB deployment, sending\nthem over the network to backup storage for  Cloud Manager . Your deployment can still handle read and write operations during the\ncopying process. With the new backup process, there are no longer initial syncs. As a\nresult of not having initial syncs,  Cloud Manager  (using a  mongod  running\n FCV  4.2) can support a wider array of customers such as those\nheavily using  renameCollection . Once backup has started,  Cloud Manager  backs up the data as an ongoing\nand continuous process. This process continues creating snapshots\nas long as the head database remains synchronized with the\ndatabase. The MongoDB Agent then tails each replica set's  oplog \nto update the backup when performing a point-in-time restore.\nThe backup is consistent with the original primary up to the\nlast oplog that the MongoDB Agent supplies. This process works like\n replica set data synchronization . The backup process: Performs an  inital sync  to back up all of your existing\ndata in its current state.\nIn  sharded clusters , this occurs on each\nshard and on the config servers. Takes snapshots of the  data  directory in a deployment as often\nas your  snapshot schedule \nspecifies and then transfers the snapshots to a storage system. Monitors the  oplog  constantly and adds new database\noperations to the latest backup to keep the local  Cloud Manager  copy of\nthe data to allow\n point-in-time restores . Backup can restore data from a complete scheduled snapshot or from\na selected point between snapshots. When you restore from a  snapshot ,  Cloud Manager  reads directly from\nthe snapshot storage. You can restore the snapshot: You can restore  sharded clusters  and\n replica sets  from selected points in time. For  sharded clusters , you can restore\nfrom  checkpoints  between snapshots. For  replica sets , you can restore from\nselected points in time. To another cluster. To download the snapshot files from an  HTTPS (Hypertext Transfer Protocol Secure)  link. When you restore from a point in time,  Cloud Manager  does the following: Restores a full snapshot from the snapshot storage. Applies stored  oplogs  until it reaches the\nspecified point. Delivers the snapshot and oplog updates using the same\n HTTPS (Hypertext Transfer Protocol Secure)  mechanisms. When you restore from a checkpoint or point in time,  Cloud Manager  does the following: Restores a full snapshot from the snapshot storage. Applies stored  oplogs  until it reaches the\nspecified point. Delivers the snapshot and oplog updates using the same  HTTPS (Hypertext Transfer Protocol Secure)  mechanisms.\nTo enable checkpoints, see  Enable Cluster Checkpoints .",
            "code": [],
            "preview": "MongoDB Cloud Manager can automate, monitor, and back up your MongoDB\ninfrastructure.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "migration",
            "title": "Migrate Deployments",
            "headings": [
                "MongoDB 6.0.8 and Later: Live Migrate to Atlas",
                "Earlier MongoDB Versions: Live Migrate to Atlas"
            ],
            "paragraphs": "For source deployments running any MongoDB 6.0.+ versions, where the\ndeployments are managed or monitored by  Ops Manager , live migration (push) is not supported. For source deployments running any MongoDB 5.0 and earlier versions,\nwhere the deployments are managed or monitored by  Ops Manager ,\nlive migration (push) is deprecated. For source deployments running MongoDB 6.0.+, where the deployments\nare monitored by  Cloud Manager , live migration (push) is supported.\nTo learn more, see\n Live Migrate Your MongoDB Cluster Monitored by Cloud Manager to Atlas . If both the source and destination clusters are running MongoDB 6.0.8 or\nlater, you can migrate your data from a source cluster into a destination\nMongoDB cluster in  Atlas  using one of the following types of\nguided live migration in the  MongoDB Atlas  UI: The choice between push and pull live migrations depends on whether the\nnetwork for your deployment allows flexibility in ingress rules and allows\naccess through the firewall. In addition, you can use these migration methods for MongoDB 6.0.8 and later\ndeployments: Live migration (push). For instructions, see  Live Migrate Your MongoDB Cluster Monitored by Cloud Manager to Atlas . Live migration (pull). For instructions, see  Live Migrate (Pull) a MongoDB Cluster into Atlas . If your data is in a MongoDB deployment and you don't have access to the  oplog ,\nYou can use  mongorestore  to run a self-managed migration.\nTo learn more, see  Seed with mongorestore . If your data is in  Cloud Manager  and you have a  snapshot , you can\n restore a backup of a deployment to an Atlas deployment . If you are migrating MongoDB versions earlier than 6.0.8, use one of the\nfollowing migration methods, depending on your deployment's requirements\nand configuration. Deployment Configuration Migration Strategy Your data is in a cluster running MongoDB earlier than 6.0.8,\nis managed or monitored by  Cloud Manager  and your network allows flexibility in\ningress rules. Pull data into Atlas \nfrom  Cloud Manager . In this type of live migration,  Atlas \nrequires access to the source deployment in  Cloud Manager  through\nthe deployment's firewall. Your data is in a cluster running MongoDB earlier than 6.0.8,\nyour cluster is managed or monitored by  Cloud Manager , and your network doesn't\nallow flexibility in ingress rules. Push your data into Atlas  from  Cloud Manager .\nIn this type of live migration,  Atlas  receives data from\n Cloud Manager  without requiring access through the firewall. Your data is in a MongoDB Community cluster running MongoDB earlier than 6.0.8,\nand your network doesn't allow flexibility in ingress rules. Push your MongoDB Community data into Atlas \nafter adding your Community deployment to  Cloud Manager  for monitoring.\nIn this type of live migration,  Atlas  receives data from\n Cloud Manager  without requiring access through the firewall. Your data is in  Cloud Manager  and you have a  snapshot . Restore a backup of a deployment to an Atlas deployment . Your data is in a MongoDB deployment and you don't have access to the  oplog . Use  mongorestore  to run a self-managed migration.\nTo learn more, see  Seed with mongorestore .",
            "code": [],
            "preview": "If both the source and destination clusters are running MongoDB 6.0.8 or\nlater, you can migrate your data from a source cluster into a destination\nMongoDB cluster in Atlas using one of the following types of\nguided live migration in the MongoDB Atlas UI:",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "view-replica-set-metrics",
            "title": "View Replica Set Deployments",
            "headings": [
                "Chart Controls",
                "Chart Display",
                "Chart Selection"
            ],
            "paragraphs": "A  replica set  in MongoDB is a group of\n ~bin.mongod  processes that maintain the same data set. To\nview the metrics for a specific  Cloud Manager  replica set deployment\nin a  project , click the  Metrics \nbutton for that deployment. Alternatively, click on the name of\nthe deployment to open the deployment overview, then click the\n Metrics  tab. The  Metrics  view has three distinct sections: Monitor deployment metrics to identify performance issues and\ndetermine whether your current deployment meets your\nrequirements. To learn more about the metrics available to monitor\nyour deployments, see  Review Available Metrics . Cloud Manager  provides the following controls for the  Metric \nview. Adjusting any of these options affects all charts\ndisplayed under the  Metrics  view: Control Function Granularity Modifies the granularity of metrics displayed for each chart.\nSelect a granularity between 1 minute and 1 day (24 hours).\nSelect  Auto  to automatically adjust the granularity based\non the selected  Zoom  or  Current Display \ndate controls.  Auto  granularity selects the highest fidelity\ngranularity available for the time range. Zoom Modifies the date range of metrics displayed for each chart.\nSelect a zoom range between 1 hour and 5 years. Adjusting\nthe  Zoom  automatically adjusts the\n Current Display  date range. Current Display Modifies the start and end date-time range of metrics displayed\nfor each chart. Modifying the start and end date sets the\nvalue of  Zoom  to  custom  and overrides the\npreviously selected zoom level. Toggle Members Limit charts to the selected replica set members. The\n P  icon represents the  primary  replica set member,\nwhile the  S  icon represents a  secondary \nmember. Add Chart Select one or more charts to display or hide. Adding\ncharts using this dropdown is identical to adding charts\nfrom the  Toggle Charts  section of the\n Metrics  view. Display Opcounters on Separate Charts Directs  Cloud Manager  to split the  Opcounters \nchart into its individual components. You can then choose\nto chart one or more of those components. Display Timeline Annotations Directs  Cloud Manager  to display or hide chart annotations.\nChart annotations consist of colored vertical lines that\nindicate server events, such as a server restart or\na transition in member state. When viewing charts, you can do the following: Task Action View a detailed description of a chart. Hover your mouse over the chart to display the context menu. Click the  i  icon next to the chart name to open the\n Chart Info  modal. This modal includes a breakdown\nof the chart's data series, the annotations available for\nthat chart, and the operations the chart supports. Expand a chart. Hover your mouse over the chart to display the context menu. Click the two-way arrow at the top right of the chart. Zoom in on a period of time. Click and drag the mouse pointer over a portion of the chart. To reset to the originally selected range (zoom out), double-click the chart. When you zoom in on a period of time, the\n Current Display  date range in the chart control\nsection automatically updates to reflect the selected period. View statistics at a particular time. Hover the mouse pointer over a point on the chart. Move a chart. Click and hold the grabber in the upper left corner of the chart, and\ndrag the chart to the new position. Share a URL to the chart. Hover your mouse over the chart to display the context menu. Click the curved arrow on the chart. Select\n Chart Permalink  to retrieve a URL to the chart.\nSelect  Email Chart  to e-mail the chart. Click the curved arrow on the chart. Select\n Chart Permalink  to retrieve a URL to the chart.\nSelect  Email Chart  to e-mail the chart. The recipient of the chart URL must have a  Cloud Manager \nuser account with access to the project and deployment. Cloud Manager  displays the available metrics to chart for the selected\ndeployment under the  Toggle Charts  header. Metrics\nare grouped into two sections: Click on any chart to toggle the chart state. Metrics associated with the MongoDB process. For metrics\nrelated to database performance, such as\n DB Storage ,  Cloud Manager  presents the sum total across\nall databases in the deployment. If you enable\n Display Opcounters on Separate Charts ,\n Cloud Manager  replaces the  Opcounters  option with the\nindividual components of that chart. Metrics associated with the host machines supporting the\ndeployment. Charts marked with   are inactive. Charts marked with    are active.",
            "code": [],
            "preview": "A replica set in MongoDB is a group of\n~bin.mongod processes that maintain the same data set. To\nview the metrics for a specific Cloud Manager replica set deployment\nin a project, click the Metrics\nbutton for that deployment. Alternatively, click on the name of\nthe deployment to open the deployment overview, then click the\nMetrics tab.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes",
            "title": "Release Notes",
            "headings": [],
            "paragraphs": "A record of changes to the  Cloud Manager  server. A record of changes to the MongoDB Agent. A record of changes to the legacy Automation Agent. A record of changes to the legacy Monitoring Agent. A record of changes to the legacy Backup Agent. A record of changes to the MongoDB Enterprise Operator.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "view-sharded-cluster-metrics",
            "title": "View Sharded Clusters",
            "headings": [
                "Chart Controls",
                "Chart Display",
                "Data Sources"
            ],
            "paragraphs": "A  sharded cluster  is the set of nodes\ncomprising a sharded MongoDB deployment. To view the metrics for a\nspecific  Cloud Manager  deployment in a  project , click the\n Metrics  button for that deployment. Alternatively, click on\nthe name of the deployment to open the deployment overview, then click\nthe  Metrics  tab. The  Metrics  view has three distinct sections: Monitor deployment metrics to identify performance issues and\ndetermine whether your current deployment meets your\nrequirements. To learn more about the metrics available to monitor\nyour deployments, see  Review Available Metrics . Cloud Manager  provides the following controls for the\n Metric  view: Control Function Granularity Modifies the granularity of metrics displayed for each chart.\nSelect a granularity between 1 minute and 1 day (24 hours).\nSelect  Auto  to automatically adjust the granularity based\non the selected  Zoom  or  Current Display \ndate controls. Auto  granularity selects the highest fidelity\ngranularity available within the selected time range and sharded\ncluster metric rendering limits. In the Sharded Cluster metrics view,  Cloud Manager  renders a maximum of: As a result, when rendering metrics for large deployments over a\nlong period of time,  Cloud Manager  may display metrics at a lower\ngranularity than is retained. The granularity at which  Cloud Manager  gathers and stores metric data\ndepends on your  Cloud Manager  plan. To learn more about metric data\ngranularity, see  Monitoring Metrics Per Plan . 3,000 data points for a single series, and 100,000 total data points. For Premium  Cloud Manager  users,  Cloud Manager  retains data for the past\nyear with a granularity of 1 hour. A year's worth of data\nresults in  365  days *  24  hours, or  8760  data\npoints per data series. Therefore, when rendering a year\nof historical metrics,  Cloud Manager  renders the chart at a lower\ngranularity because it can only render a maximum 3,000\ndata points for a single series. Zoom Modifies the date range of metrics displayed for each chart.\nSelect a zoom range between 1 hour and 5 years. Adjusting\nthe  Zoom  automatically adjusts the\n Current Display  date range. Display Data Directs  Cloud Manager  to display data based on the selected options Individually  - displays the selected metrics for each shard as an individual line. Sum  - displays the sum of the selected metrics across all shards in the deployment. Averaged  - displays the average of the selected metrics across all shards in the deployment. Current Display Modifies the start and end date-time range of metrics displayed\nfor each chart. Modifying the start and end date sets the\nvalue of  Zoom  to  custom  and overrides the\npreviously selected zoom level. Display Selects which metric to chart. You can display no more than\none chart at a time. View Selects which sharded cluster components to display SHARDS  - displays metrics for each shard in the sharded cluster deployment. MONGOS  - displays metrics for each  mongos  in the sharded cluster deployment. CONFIGS  - displays metrics for the config server in the sharded cluster config server replica set. When viewing charts, you can do the following: Task Action Zoom in on a period of time. Click and drag the mouse pointer over a portion of the chart. To reset to the originally selected range (zoom out), double-click the chart. When you zoom in on a period of time, the\n Current Display  date range in the chart control\nsection automatically updates to reflect the selected period. View statistics at a particular time. Hover the mouse pointer over a point on the chart. Cloud Manager  displays each data source that contributes to the metric\nchart in a table below the chart. The table consists of the\nfollowing: Column Description Shard Name When  View  is set to  SHARDS , displays the name\nof each shard in the sharded cluster deployment. When  View  is set to  MONGOS  or  CONFIGS ,\ndisplays the name of each  mongos  or\nconfig server  mongod  process in the\nsharded cluster deployment. Click on a listed component to open the\n Metrics  view for that component. Alerts Indicates if there are any open alerts for the listed\nshard or process. Click on the alert icon to open the\n Alerts  view for that shard or process. To learn more\nabout responding to open alerts, see\n Manage Alerts . Data Size Only visible if  View  is set to  SHARDS . Indicates the logical size of all documents and indexes\non the shard. Show Only visible if  View  is set to  SHARDS Indicates which replica set members to show on the selected\nchart. Select  Primaries ,  Secondaries  or  All . Read ,  Write , and  Queued Metric data related to the displayed chart. Hover over\nthe corresponding column for a pop up with detailed\ninformation on the metrics shown.",
            "code": [],
            "preview": "A sharded cluster is the set of nodes\ncomprising a sharded MongoDB deployment. To view the metrics for a\nspecific Cloud Manager deployment in a project, click the\nMetrics button for that deployment. Alternatively, click on\nthe name of the deployment to open the deployment overview, then click\nthe Metrics tab.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "organizations-projects",
            "title": "Organizations and Projects",
            "headings": [
                "Organizations",
                "Projects",
                "Existing Groups",
                "Deployments",
                "Teams",
                "Invitations to Organizations and Projects"
            ],
            "paragraphs": "Cloud Manager  provides a new organizations and projects hierarchy to\nhelp you manage your  Cloud Manager  deployments. Groups are now\nknown as projects. You can create many projects in an\norganization. In the organizations and projects hierarchy, an organization can\ncontain many projects (previously referred to as groups). Under\nthis structure, you can: Use the same billing settings across multiple projects in your\norganization. View all projects within an organization, create teams of users,\nand assign teams to projects. See  Organizations . Connect to  Atlas  as part of  live migration \nto  Atlas . See  Connect to Atlas . Groups are now projects. Previously, users managed\ndeployments by groups, where each group was managed separately even if\na user belonged to multiple groups. If you have existing groups, organizations have been automatically\ncreated for your groups (now projects), and your groups have been\nplaced under these organizations. If your groups share the same billing settings, they have been placed\nin the same organization. Deployments are now associated with projects. As before, deployments\nmust have unique names within projects. See\n Projects \nand  Edit Project Settings . You can create teams of users and then assign teams of users to\nprojects. See  Cloud Manager  Access . You can view and accept invitations to organizations\nand projects. See  Invitations to Organizations and Projects .",
            "code": [],
            "preview": "In the organizations and projects hierarchy, an organization can\ncontain many projects (previously referred to as groups). Under\nthis structure, you can:",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "invitations",
            "title": "Invitations to Organizations and Projects",
            "headings": [
                "View Pending Invitations",
                "Click Preferences at the top of the page.",
                "Click Invitations in the left navigation pane.",
                "Invitation Details",
                "Accept an Invitation"
            ],
            "paragraphs": "The  Invitations  tab allows you to view and accept\npending invitations to  Cloud Manager  Organizations and Projects. Cloud Manager  displays the following information for each invitation: Organization Name of the organization you are invited to join. Project(s) Name of the project(s) you are invited to join, if applicable.\nIf the invitation is for an organization, this field is blank. Roles(s) User roles  this invitation grants\non the specified organization / project(s). Sent On Time that the invitation was sent. Expiration Date Date that the invitation expires. Actions Button to accept the invitation. To accept an invitation, click the  Accept Invite  button\nfor the corresponding invitation. You can also accept an invitation from the email  Cloud Manager  sends when\nyou are first invited to join a project or organization.",
            "code": [],
            "preview": "The Invitations tab allows you to view and accept\npending invitations to Cloud Manager Organizations and Projects.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "analyze-slow-queries",
            "title": "Analyze Slow Queries",
            "headings": [
                "Performance Advisor",
                "Profiler",
                "Best Practices for Query Performance"
            ],
            "paragraphs": "Cloud Manager  provides several tools to help analyze slow queries\nexecuted on your clusters. See the following sections for descriptions\nof each tool. To optimize your query performance,\n review the best practices for query performance . The  Performance Advisor  monitors slow\nqueries and suggests new indexes to improve query performance. You can use the Performance Advisor to review the following information: Index Ranking Drop Index Recommendations The  Profiler  displays slow-running\noperations and their key performance statistics. You can explore a\nsample of historical queries for up to the last 24 hours without\nadditional performance overhead. Before you enable the\nProfiler, see  Considerations . To optimize query performance, review the following best practices: Create queries that your current indexes support to reduce the time\nneeded to search for your results. Avoid creating documents with large array fields that require a lot\nof processing to search and index. Optimize your indexes and remove unused or inefficent indexes. Too\nmany indexes can negatively affect write performance. Consider the suggested indexes from the  Performance Advisor  with the highest  Impact  scores and\nlowest  Average Query Targeting  scores. Create the indexes that the Performance Advisor suggests when they\nalign with your  Indexing Strategies . The Performance Advisor can't suggest indexes for MongoDB databases\nconfigured to use the  ctime timestamp format . As a\nworkaround, set the timestamp format for such databases to either\n iso8601-utc  or\n iso8601-local . Perform  rolling index builds \nto reduce the performance impact of building indexes on\n replica sets  and  sharded clusters . Drop unused, redundant, and hidden indexes  to\nimprove write performance and free storage space.",
            "code": [],
            "preview": "Cloud Manager provides several tools to help analyze slow queries\nexecuted on your clusters. See the following sections for descriptions\nof each tool. To optimize your query performance,\nreview the best practices for query performance.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "",
            "title": "MongoDB Cloud Manager",
            "headings": [
                "Automation",
                "Monitoring",
                "How Monitoring Works",
                "Backup",
                "How Backup Works",
                "Backup Workflow",
                "Restore Data"
            ],
            "paragraphs": "Welcome to the documentation for\n MongoDB Cloud Manager . Engineered\nby the team who develops MongoDB,  Cloud Manager  provides a complete package\nfor managing MongoDB deployments. MongoDB Cloud Manager  can automate, monitor, and back up your MongoDB\ninfrastructure. Cloud Manager  Automation enables you to configure and maintain MongoDB nodes\nand clusters. MongoDB Agents using Automation on each MongoDB host can maintain your\nMongoDB deployments. You can\n install  the\n MongoDB Agent . Automation can\n add hosts  and\n deploy and upgrade new or existing clusters . Cloud Manager  Monitoring provides real-time reporting, visualization, and\nalerting on key database and hardware indicators. When you activate Monitoring on a MongoDB host, Monitoring collects\nstatistics from the nodes in your MongoDB deployment. The Agent\ntransmits database statistics back to  Cloud Manager  to report deployment status\nin real time. You can  set alerts  on\nindicators you choose. Cloud Manager  Backup provides scheduled\n snapshots  and\npoint-in-time\n recovery \nof your MongoDB  replica sets  and\n sharded clusters . When you activate Backup for a MongoDB deployment, Backup takes\nsnapshots of data from the MongoDB processes you have specified. Only sharded clusters or replica sets can be backed up. To back up a\nstandalone  mongod  process, you must\n convert it to a single-member replica set . Backups rely upon the\n MongoDB version compatibility \nof your database.\nThis Feature Compatibility Version ranges from the current version to\none version earlier. For MongoDB 4.2, the FCV can be  4.0  or\n 4.2 . The backup process works in this manner regardless of how snapshots are\nstored. Backup uses a MongoDB instance version equal to or greater than the\nversion of the replica set it backs up. Backup takes and stores snapshots based on a user-defined\n snapshot retention policy .\nSharded cluster snapshots temporarily stop the balancer. The snapshots\nthen can insert a marker token into all shards and config servers in\nthe cluster.  Cloud Manager  takes a  snapshot  when the marker tokens\nappear in the snapshot data. To learn more about how to configure backups, see\n Backup Configuration Options . Monthly backup costs for  Cloud Manager  are based on the size per-gigabyte\nof your most recent snapshot. To learn about  Cloud Manager  backup pricing,\nsee  Backup Costs . The MongoDB Agent uses WiredTiger's incremental backup cursor to\ncapture the incremental changes. The backup process takes a snapshot of the data directory at its\n scheduled snapshot intervals . This process copies the data files in a MongoDB deployment, sending\nthem over the network to backup storage for  Cloud Manager . Your deployment can still handle read and write operations during the\ncopying process. With the new backup process, there are no longer initial syncs. As a\nresult of not having initial syncs,  Cloud Manager  (using a  mongod  running\n FCV  4.2) can support a wider array of customers such as those\nheavily using  renameCollection . Once backup has started,  Cloud Manager  backs up the data as an ongoing\nand continuous process. This process continues creating snapshots\nas long as the head database remains synchronized with the\ndatabase. The MongoDB Agent then tails each replica set's  oplog \nto update the backup when performing a point-in-time restore.\nThe backup is consistent with the original primary up to the\nlast oplog that the MongoDB Agent supplies. This process works like\n replica set data synchronization . The backup process: Performs an  inital sync  to back up all of your existing\ndata in its current state.\nIn  sharded clusters , this occurs on each\nshard and on the config servers. Takes snapshots of the  data  directory in a deployment as often\nas your  snapshot schedule \nspecifies and then transfers the snapshots to a storage system. Monitors the  oplog  constantly and adds new database\noperations to the latest backup to keep the local  Cloud Manager  copy of\nthe data to allow\n point-in-time restores . Backup can restore data from a complete scheduled snapshot or from\na selected point between snapshots. When you restore from a  snapshot ,  Cloud Manager  reads directly from\nthe snapshot storage. You can restore the snapshot: You can restore  sharded clusters  and\n replica sets  from selected points in time. For  sharded clusters , you can restore\nfrom  checkpoints  between snapshots. For  replica sets , you can restore from\nselected points in time. To another cluster. To download the snapshot files from an  HTTPS (Hypertext Transfer Protocol Secure)  link. When you restore from a point in time,  Cloud Manager  does the following: Restores a full snapshot from the snapshot storage. Applies stored  oplogs  until it reaches the\nspecified point. Delivers the snapshot and oplog updates using the same\n HTTPS (Hypertext Transfer Protocol Secure)  mechanisms. When you restore from a checkpoint or point in time,  Cloud Manager  does the following: Restores a full snapshot from the snapshot storage. Applies stored  oplogs  until it reaches the\nspecified point. Delivers the snapshot and oplog updates using the same  HTTPS (Hypertext Transfer Protocol Secure)  mechanisms.\nTo enable checkpoints, see  Enable Cluster Checkpoints . MongoDB welcomes your feedback. Let us know how we can\n improve Ops Manager .",
            "code": [],
            "preview": "Welcome to the documentation for\nMongoDB Cloud Manager. Engineered\nby the team who develops MongoDB, Cloud Manager provides a complete package\nfor managing MongoDB deployments.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "view-mongodb-process-metrics",
            "title": "View MongoDB Processes",
            "headings": [
                "Chart Controls",
                "Chart Display",
                "Chart Selection"
            ],
            "paragraphs": "To view the metrics for a specific MongoDB process in a\n Cloud Manager  deployment, click on that process from the\n Deployment  view. The  Cloud Manager  process view displays\nthree tabs for monitoring metrics for the process: Cloud Manager  retrieves database metrics every 20 minutes by default but\nadjusts frequency when necessary to reduce the impact on database\nperformance. If the collection of database statistics still affects\nperformance, you can disable collection by clicking\n Settings  from the left-hand navigation,\nthen  Project Settings , and then setting\n Collect Database Specific Statistics  to  No . The view for each tab has three distinct sections: The  Status  tab displays the process metrics  Cloud Manager \ncollects from the selected  mongod  or\n mongos  process. The  Hardware  tab displays hardware metrics for\nthe host machine supporting the selected\n mongod  or  mongos \nprocess. The  DB Stats  tab displays the database metrics for the\nselected database. Monitor deployment metrics to identify performance issues and\ndetermine whether your current deployment meets your\nrequirements. To learn more about the metrics available to monitor\nyour deployments, see  Review Available Metrics . Cloud Manager  provides the following controls for the  Status ,\n Hardware , and  DB Stats \nviews. Adjusting any of these options affects all charts displayed under\nthe selected view: Control Function Granularity Modifies the granularity of metrics displayed for each chart.\nSelect a granularity between 1 minute and 1 day (24 hours).\nSelect  Auto  to automatically adjust the granularity based\non the selected  Zoom  or  Current Display \ndate controls.  Auto  granularity selects the highest fidelity\ngranularity available for the time range. Zoom Modifies the date range of metrics displayed for each chart.\nSelect a zoom range between 1 hour and 5 years. Adjusting\nthe  Zoom  automatically adjusts the\n Current Display  date range. Current Display Modifies the start and end date-time range of metrics displayed\nfor each chart. Modifying the start and end date sets the\nvalue of  Zoom  to  custom  and overrides the\npreviously selected zoom level. Add Chart Select one or more charts to display or hide. Adding\ncharts using this dropdown is identical to adding charts\nfrom the  Toggle Charts  section of the\n Metrics  view. Select Database Select Database Only visible for the  DB Stats  view. Selects\nthe database for which to display metrics. Display Opcounters on Separate Charts Directs  Cloud Manager  to split the  Opcounters \nchart into its individual components. You can then choose\nto chart one or more of those components. Display Timeline Annotations Directs  Cloud Manager  to display or hide chart annotations.\nChart annotations consist of colored vertical lines that\nindicate server events, such as a server restart or\na transition in member state. When viewing charts, you can do the following: Task Action View a detailed description of a chart. Hover your mouse over the chart to display the context menu. Click the  i  icon next to the chart name to open the\n Chart Info  modal. This modal includes a breakdown\nof the chart's data series, the annotations available for\nthat chart, and the operations the chart supports. Expand a chart. Hover your mouse over the chart to display the context menu. Click the two-way arrow at the top right of the chart. Zoom in on a period of time. Click and drag the mouse pointer over a portion of the chart. To reset to the originally selected range (zoom out), double-click the chart. When you zoom in on a period of time, the\n Current Display  date range in the chart control\nsection automatically updates to reflect the selected period. View statistics at a particular time. Hover the mouse pointer over a point on the chart. Move a chart. Click and hold the grabber in the upper left corner of the chart, and\ndrag the chart to the new position. Share a URL to the chart. Hover your mouse over the chart to display the context menu. Click the curved arrow on the chart. Select\n Chart Permalink  to retrieve a URL to the chart.\nSelect  Email Chart  to e-mail the chart. Click the curved arrow on the chart. Select\n Chart Permalink  to retrieve a URL to the chart.\nSelect  Email Chart  to e-mail the chart. The recipient of the chart URL must have a  Cloud Manager \nuser account with access to the project and deployment. Cloud Manager  displays the available metrics to chart for the\nselected deployment under the  Toggle Charts  header. Click on any chart to toggle the chart state. Charts marked with   are inactive. Charts marked with    are active.",
            "code": [],
            "preview": "To view the metrics for a specific MongoDB process in a\nCloud Manager deployment, click on that process from the\nDeployment view. The Cloud Manager process view displays\nthree tabs for monitoring metrics for the process:",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "view-real-time-metrics",
            "title": "View Real Time Metrics",
            "headings": [
                "Enable or Disable Real-Time Performance Panel for a Project",
                "Click Settings.",
                "Toggle the button next to Real-Time Performance Panel.",
                "Table View",
                "Graph View",
                "Read Exact Metrics from Graph View",
                "Stop and Restart Display"
            ],
            "paragraphs": "To view real-time metrics, click the  Metrics  button\nfor the desired deployment, then click  Real Time . In the upper-right corner, you can click to view the metrics in a\n Table  or  Graph . Availability \n Cloud Manager  can display real-time metrics for MongoDB deployments that\nAutomation manages. Collection of real time data requires the\nMongoDB Agent. Cloud Manager  supports real-time metrics for  mongod  (replica sets and\nshards) and  mongos  processes. Monitor deployment metrics to identify performance issues and\ndetermine whether your current deployment meets your\nrequirements. To learn more about the metrics available to monitor\nyour deployments, see  Review Available Metrics . To access this feature, you must be have the\n Project Owner  or  Project Data Access Admin \n Cloud Manager  user roles. Cloud Manager  enables the  Real-Time Performance Panel  by default. To toggle\nthis setting: To enable  Real-Time Performance Panel  for a project,\nyou must have the  Project Owner  role for the project. Click   to hide or display fields from\nthe table. Fields Displays Number of the specified operations\n(commands, queries, etc.) that\n mongostat \nhas reported. Latency metrics for current read requests,\nwrite requests, and other database commands. Available\nonly for MongoDB 3.4+. To learn more, see  opLatencies \nat  serverStatus . Ratio of documents and objects scanned to\ndocuments and objects returned in current queries. These\nmetrics are useful in determining if and how a query\nuses an index. To learn more, see\n Analyze Query Performance . Number of active reads, queued reads, active\nwrites, and queued writes that\n mongostat \nhas reported. Time required to replicate operations from\nthe primary to the secondary members of a replica set.\nAvailable only for secondary members of a replica set.\nTo learn more, see\n Replica Set Secondary Members . Statistic depending on the operating system of the\nnodes in your cluster: Linux: Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage, excluding buffers,\ncache and swap space, of the machine hosting MongoDB. macOS: Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage, excluding cache and\nswap space, of the machine hosting MongoDB. Windows:  Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage of the machine hosting\nMongoDB. Number of current connections to the\nmachine hosting MongoDB and the number of inbound and\noutbound bytes that\n mongostat \nhas reported. To hide/show a metric in the graph, click the color box for\nthe metric. Chart Displays Connections, Network In, Network Out Number of current connections to the machine\nhosting MongoDB and the number of inbound and outbound\nbytes that\n mongostat \nhas reported. CPU, Disk IOPS, and Sys Mem Statistic depends on the operating system of the\nnodes in your cluster: Linux: Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage, excluding buffers,\ncache and swap space, of the machine hosting MongoDB. macOS: Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage, excluding cache and\nswap space, of the machine hosting MongoDB. Windows:  Displays the currently used percentage of CPU and disk\ncapacity and the total physical memory usage of the machine hosting\nMongoDB. Operations Number of operations as reported by\n mongostat . Query Execution Times Displays latency metrics for current read requests,\nwrite requests, and other database commands. Available\nonly for MongoDB 3.4+. To learn more, see  opLatencies \nat  serverStatus . Query Targeting Ratio of documents and objects scanned to\ndocuments and objects returned in current queries. These\nmetrics are useful in determining if and how a query\nuses an index. To learn more, see\n Analyze Query Performance . Reads & Writes Number of active reads, queued reads, active\nwrites, and queued writes as reported by\n mongostat . Replication Lag Time required to replicate operations from\nthe primary to the secondary members of a replica set.\nAvailable only for secondary members of a replica set.\nTo learn more, see\n Replica Set Secondary Members . Hottest Collections Collections with the most operations that\n mongotop \nhas reported. For each hot collection, the table also\ndisplays the  Utilization Percent  for the\ncollection. Utilization Percent  is calculated from the\nread and write times that\n mongotop \nhas reported during a sample period. Specifically, the\n Utilization Percent  is the percentage\n(rounded to the nearest 0.1%) of the read and write\ntimes for a collection relative to the read and write\ntimes for all collections in the deployment during the\nsample period. If no read and write operation occur\nduring this period, the  Utilization Percent \nmay be 0%. The hottest collections correspond to the most current\ntime displayed in the charts. That is, if the display is\nrunning (not paused), the collections correspond to\nthe hottest collections at the current timestamp. If the\ndisplay is paused, the collections correspond to the\nhottest collections at the paused time. Slowest Operations Slowest operations that the\n db.currentOp() \nhas reported. The operations correspond to the most current time\ndisplayed in the charts. That is, if the display is\nrunning (not paused), the operations correspond to\nthe slowest operations at the current timestamp. If the\ndisplay is paused, the operations correspond to the\nslowest operations at the paused time. Click the operation to view the detailed JSON\ndocument that\n db.currentOp() \nhas reported for the operation. Users with the\n Data Access Admin \nrole can access buttons to force stop an operation or\nan inactive transaction in the operation details panel: To stop a slow operation: To learn more about\n transactions , refer to\nthe MongoDB manual. Click the operation in the  Slowest Operations \npane. Click  Kill Op  in the\n Operation Details  pane. Alternatively, click  Kill Session  if the\noperation is  an inactive transaction. Click  Yes, terminate this operation  in the\n Confirm Operation  modal. If you pause the  Graph  view of the Real-Time\nPerformance Panel, you can hover over a line graph to see its\nexact value, along with the slowest operations and hottest\ncollections, at a given moment in time. To stop the update of the metrics displayed, click\n Pause .  Pause  only\nstops the update of the displays and doesn't pause the\ncollection of the underlying data. To restart the display updates, click  Play .",
            "code": [],
            "preview": "To view real-time metrics, click the Metrics button\nfor the desired deployment, then click Real Time.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "data-explorer/cloud-agg-pipeline",
            "title": "Aggregation Pipeline Builder",
            "headings": [
                "Required Roles",
                "Access the Aggregation Pipeline Builder",
                "Select the database for the collection.",
                "Select the collection on the left-hand side or in the main panel.",
                "Select the Aggregation view.",
                "Create an Aggregation Pipeline",
                "Select an aggregation stage.",
                "Fill in your aggregation stage.",
                "Add additional stages to your pipeline as desired.",
                "Repeat steps 1 and 2 for each additional stage.",
                "Collation",
                "Import an Aggregation Pipeline from Text",
                "Open the New Pipeline from Text dialog.",
                "Type or paste your pipeline in the dialog.",
                "Click Create New.",
                "Click Confirm in the ensuing dialog.",
                "Reset Your Pipeline",
                "Export an Aggregation Pipeline to Driver Language",
                "Construct an aggregation pipeline.",
                "Click Export to Language at the top of the pipeline builder.",
                "Select your desired export language.",
                "Include import statements, if desired.",
                "Click the Copy button.",
                "Click Close to return to the aggregation pipeline builder.",
                "Aggregation Pipeline Settings",
                "Click the  icon at the top-right of the pipeline builder.",
                "Modify pipeline settings as desired.",
                "Click Apply to save your changes."
            ],
            "paragraphs": "The  Data Explorer  provides an\n aggregation pipeline  builder\nto process your data. Aggregation pipelines transform your documents\ninto aggregated results based on selected\n pipeline stages . The  MongoDB Atlas  aggregation pipeline builder is primarily designed for\nbuilding pipelines, rather than executing them. The pipeline builder\nprovides an easy way to  export your pipeline \nto execute in a  driver . To interact with data in the  Cloud Manager  UI: Click  Deployment  in the left navigation. Select the desired MongoDB deployment. Select the  Data  tab. To create and execute aggregation pipelines in the\n Data Explorer , you must have been granted at least the\n Project Data Access Read Only  role. To utilize the  $out  stage in your pipeline, you must\nhave been granted at least the\n Project Data Access Read/Write  role. The main panel and  Namespaces  on the left side list the\ncollections in the database. The main panel displays the  Find ,  Indexes ,\nand  Aggregation  views. When you first open the  Aggregation  view, the\n Data Explorer  displays an empty aggregation pipeline. Select an aggregation stage from the  Select  dropdown in\nthe bottom-left panel. The toggle to the right of the dropdown dictates whether the\nstage is enabled. Fill in your stage with the appropriate values. If\n Comment Mode  is enabled, the pipeline\nbuilder provides syntactic guidelines for your selected stage. As you modify your stage, the  Data Explorer  updates the\npreview documents on the right based on the results of the current\nstage. There are two ways to add additional stages to your pipeline: To delete a pipeline stage, click the   icon\non the desired stage. Click the  Add Stage  button at the bottom of the pipeline\nto add a new stage at the end of your pipeline: Click the   button on a stage to add a new stage\ndirectly after the stage where the button was clicked. Use  collation  to specify\nlanguage-specific rules for string comparison, such as rules for lettercase and accent marks. To specify a collation document, click  Collation  at\nthe top of the pipeline builder. A collation document has the following fields: The  locale  field is mandatory; all other collation fields are\noptional. For descriptions of the fields, see\n Collation Document . You can import aggregation pipelines from plain text into the\npipeline builder to easily modify and verify your pipelines. To import a pipeline from plain text: Click the arrow next to the plus icon at the top of the\npipeline builder. Click  New Pipeline from Text . Your pipeline must match the syntax of the  pipeline  parameter of\nthe  db.collection.aggregate() \nmethod. To return your pipeline to the initial blank state, click the plus icon\nat the top of the pipeline builder. You can use the aggregation pipeline builder to export your finished\npipeline to one of the supported  driver languages ; Java,\nNode, C#, and Python 3. Use this feature to format and export pipelines\nfor use in your applications. To export your aggregation pipeline: For instructions on creating an aggregation pipeline, see\n Create an Aggregation Pipeline . In the  Export Pipeline To  dropdown, select your desired\nlanguage. The  My Pipeline  pane on the left displays your\npipeline in  mongosh  syntax. The pane on the right displays your pipeline in the selected\nlanguage. (Optional) : Check the  Include Import Statements  option\nto include the required import statements for the language selected. Click the  Copy  button at the top-right of the pipeline\nto copy the pipeline for the selected language to your clipboard.\nYou can now integrate your pipeline into your application. To modify the aggregation pipeline builder settings: You can modify the following settings: Setting Description Default Comment Mode When enabled, the  Data Explorer  adds helper\ncomments to each stage. Changing this setting only affects new stages and does not\nmodify stages which have already been added to your pipeline. On Number of Preview Documents Number of documents to show in the preview for each stage. 20",
            "code": [
                {
                    "lang": "javascript",
                    "value": "{\n   locale: <string>,\n   caseLevel: <boolean>,\n   caseFirst: <string>,\n   strength: <int>,\n   numericOrdering: <boolean>,\n   alternate: <string>,\n   maxVariable: <string>,\n   backwards: <boolean>\n}"
                }
            ],
            "preview": "The Data Explorer provides an\naggregation pipeline builder\nto process your data. Aggregation pipelines transform your documents\ninto aggregated results based on selected\npipeline stages.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "data-explorer/databases-collections",
            "title": "Manage Databases and Collections in Data Explorer",
            "headings": [
                "Required Roles",
                "View Databases and Collections",
                "Create Databases and Collections",
                "Drop Databases and Collections",
                "View Databases and Collections",
                "Create a Database",
                "Click Create Database.",
                "Enter the Database Name and the Collection Name.",
                "Optional. Specify a capped collection.",
                "Click Create.",
                "Create a Collection",
                "Click on the plus sign + icon for a database.",
                "Enter the Collection Name.",
                "Optional. Specify a capped collection.",
                "Click Create.",
                "Drop a Database",
                "Drop the database.",
                "Confirm action.",
                "Drop a Collection",
                "Drop the collection.",
                "Confirm action."
            ],
            "paragraphs": "You can use the  Data Explorer  to manage your cluster's\ndatabases and collections. To interact with data in the  Cloud Manager  UI: Click  Deployment  in the left navigation. Select the desired MongoDB deployment. Select the  Data  tab. To  view databases and collections , through\nthe  Data Explorer  you must have been granted at least the\n Project Data Access Read Only  role. To  create databases  and\n collections  through the\n Data Explorer , you must have been granted access through\none of the following roles: Project Owner  or  Organization Owner Project Data Access Admin Project Data Access Read/Write To  drop databases  and\n collections  through the\n Data Explorer , you must have been granted access through\none of the following roles: Project Owner Project Data Access Admin From the  Collections  tab, you can view the databases and\ncollections in the deployment.  Cloud Manager  shows the databases in the\nleft pane of the Data Explorer: To view the collections in a particular database, click on the\nname of the database. To create a database through the  Data Explorer : Enter the  Database Name  and the  Collection\nName  to create the database and its first collection. For more information on MongoDB database names and collection names,\nsee  Naming Restrictions . Select whether the collection is a  capped collection . If you select to create a capped\ncollection, specify the maximum size in bytes. Upon successful creation, the database and the collection appears in\nthe  Data Explorer . To create a collection in an existing database through the  Data\nExplorer : To create the first collection in a new database, see\n Create a Database . Either select or hover over the database to drop and click on the\nplus sign  +  icon. For more information on MongoDB collection names, see\n Naming Restrictions . Select whether the collection is a  capped collection . If you select to create a capped\ncollection, specify the maximum size in bytes. Upon successful creation, the collection appears underneath the\ndatabase in the  Data Explorer . To drop a database, including all its collections, through the\n Data Explorer : Either select or hover of the database to drop and click on its\ntrash can icon. Confirm by typing the name of the database, and click  Drop . To drop a collection, including its documents and indexes, through the\n Data Explorer : Either select or hover of the collection to drop and click on its\ntrash can icon. Confirm by typing the name of the collection, and click  Drop .",
            "code": [],
            "preview": "You can use the Data Explorer to manage your cluster's\ndatabases and collections.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "data-explorer/indexes",
            "title": "Manage Indexes in Data Explorer",
            "headings": [
                "Required Roles",
                "View Indexes",
                "Select the database for the collection.",
                "Select the collection on the left-hand side or in the main panel.",
                "Select the Indexes view.",
                "Create an Index",
                "Go to the Indexes tab.",
                "Click Create Index.",
                "(Optional) Specify the index options.",
                "(Optional) Set the Collation options.",
                "(Optional) Build indexes with rolling builds.",
                "Click Create.",
                "Confirm your index.",
                "Drop an Index",
                "Go to the Indexes tab.",
                "Click the Drop Index button for the index to drop.",
                "Confirm action."
            ],
            "paragraphs": "You can use the  Data Explorer  to manage indexes on your\ncollections. To interact with data in the  Cloud Manager  UI: Click  Deployment  in the left navigation. Select the desired MongoDB deployment. Select the  Data  tab. To  create  or\n drop indexes , you must have access provided\nby at least one of the following roles: Project Owner  or  Organization Owner Project Data Access Admin From the  Collections  tab, you can view index information\nfor a collection. To view index information for a collection: The main panel and  Namespaces  on the left side list the\ncollections in the database. The main panel displays the  Find ,  Indexes ,\nand  Aggregation  views. The indexes table lists the indexes and associated index information\nfor the collection. Index information includes the index definition,\nthe size, and the usage frequency. To create an index for a collection through the  Data Explorer : When you create indexes, keep the ratio of reads to writes on the\ntarget collection in mind. Indexes come with a performance cost, but\nare more than worth the cost for frequent queries on large data sets.\nTo learn more about indexing strategies, see\n Indexing Strategies . Click the collection you wish to index. Click the  Indexes  tab under the collection name. In the  Create Index  modal,\nenter the  index key specification \ndocument in the  Fields  box: For more information on indexes, see  Indexes . To create a compound index on the fields  category \n(ascending order) and  score  (descending order), specify the\nindex specification document: To set the  unique  option and a  name  for the new index,\nenter this document: Use collation to specify language-specific rules for string comparison,\nsuch as rules for lettercase and accent marks. The\n collation document \ncontains a  locale  field which indicates the  ICU Locale code , and may contain other\nfields to define collation behavior. To review the list of locales that MongoDB collation supports, see\nthe  list of languages and locales . To learn more about collation\noptions, including which are enabled by default for each locale, see\n Collation  in the MongoDB manual. The following collation option document specifies a locale value\nof  fr  for a French language collation: Building indexes in a rolling fashion reduces the performance impact of\nbuilding indexes on  replica sets  and\n sharded clusters . To maintain cluster\navailability,  Cloud Manager  removes one node from the cluster at a time\nstarting with a  secondary . After you build an index in a rolling fashion, if your MongoDB database\nruns with an  FCV \nless than  4.2 ,  resync the head database  to ensure that the head database takes the\nnew index into account. Cloud Manager  automatically cancels rolling index builds\nthat don't succeed on all nodes. When a rolling index build completes\non some nodes, but fails on others,  Cloud Manager  cancels the build\nand removes the index from any nodes that it was successfully built on. In the event of a rolling index build cancellation,  Cloud Manager  generates an\nactivity feed event and sends a notification email to the project owner\nwith the following information: To learn more about rebuilding indexes, see  Build Indexes on\nReplica Sets . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing certain  versions  of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Rolling index builds succeed only when they meet certain conditions.\nTo ensure your index build succeeds, avoid the following design\npatterns that commonly trigger a restart loop: Index key exceeds the  index key limit Index name  already exists Index on  more than one array field Index on collection that has the\n maximum number of text indexes Text index on collection that has the\n maximum number of text indexes Data Explorer doesn't support building indexes in a rolling fashion\nfor standalone deployments. Name of the cluster on which the rolling index build failed Namespace on which the rolling index build failed Project that contains the cluster and namespace Organization that contains the project Link to the activity feed event The following  index options  are\nincompatible with building indexes in a rolling fashion: Cloud Manager  ignores these options if you specify them in the\n Options  pane. unique storageEngine textIndexVersion 2dsphereIndexVersion The  Confirm Operation  modal appears. If your index creation looks correct, click  Confirm .\nThis closes the modal and create the index. If your index creation looks incorrect, click  Cancel .\nThis closes the modal without creating the index. To drop an index from a collection through the  Data\nExplorer : Select the collection whose index you wish to drop, and go to the\n Indexes  tab. Confirm by typing the name of the index, and click  Drop . You cannot delete the  _id  index.",
            "code": [
                {
                    "lang": "json",
                    "value": "{ <field1>: <index type>, ... }"
                },
                {
                    "lang": "json",
                    "value": "{ category: 1, score: -1 }"
                },
                {
                    "lang": "json",
                    "value": "{ <option1>: <value1>, ... }"
                },
                {
                    "lang": "json",
                    "value": "{ unique: true, name: \"myUniqueIndex\" }"
                },
                {
                    "lang": "json",
                    "value": "{ \"locale\": \"fr\" }"
                }
            ],
            "preview": "You can use the Data Explorer to manage indexes on your\ncollections.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "review-available-metrics",
            "title": "Review Available Metrics",
            "headings": [],
            "paragraphs": "You can review the following metrics to monitor your\ndeployments. All hardware metrics include metrics or\nindividual charts for maximum values. Cloud Manager  can only collect hardware metrics if you have enabled an\nautomation agent. A monitoring agent can only collect database\nmetrics. The metrics available depend on your user role and\ndeployment type. Metric Description Asserts Displays the following information: Monitor asserts to track how many errors occur while trying to\nread or write data. Check the server logs to identify the source\nof any errors. regular  displays the average rate of\nregular asserts raised per second over the selected sample\nperiod. warning  displays the average rate of\nwarnings per second over the selected sample period. msg  displays the average rate of message\nasserts per second over the selected sample period. These\ninternal server errors have a well-defined text string.\n MongoDB Atlas  logs stack traces for these. user  displays the average rate of user\nasserts per second over the selected sample period. This\nmetric includes asserts that a user generates, such as out of\ndisk space or duplicate key errors. Avg Object Size Displays the average object size across all collections in the\ndatabase. Monitor object size to track the size of your objects and better\nunderstand your database space. Background Flush Avg Displays the average time of background flushes in seconds.\n mongod  writes to and flushes (fsyncs) journal\nfiles immediately. By default, all other data files are flushed\nevery 60 seconds in the background. Monitor the background flush average to determine whether this\nstatistic is a significant percentage of 60 seconds. If so, this\nstatistic could indicate that the server is bottlenecked on\nthese writes. You might have a large number of random writes\noccurring. The operating system might flush data faster than\nevery 60 seconds. In that case, this statistic will be a very\nsmall value even if the writing is a bottleneck. Catalog Displays the following information: Monitor catalog counts to prevent an excessive number of\ndatabases, collections, views, or indexes from causing startup\nfailures. total databases  displays the total number of\nnon-system databases. total collections  displays the total number of\ncollections across all non-system databases. total views  displays the total number of views\nacross all non-system databases. total indexes  displays the total number of indexes\nacross all non-system collections. Collections Displays the number of collections in the database. Monitor collections to determine restart times, continuous\nbackup performance, and stability. Connections Displays the total number of active connections to the\ndeployment. Monitor connections to determine whether the current connection\nlimits are sufficient. Cursors Displays the following information: Monitor cursors to close unnecessary cursors and reduce the\ntimeout configuration in the application. totalOpen  displays the number of cursors that the\nserver is maintaining for clients. Since MongoDB exhausts\nunused cursors, this value is usually small or zero. However,\nif there is a queue, stale tailable cursors, or a large number\nof operations, this value might rise. timedOut  displays the average rate of cursors\nthat have timed out per second over the selected sample period. Data Size Displays the actual size of the data files in the database. Monitor data size to ensure that database is not using too much\nmemory or CPU. DB Storage Displays the following information: Monitor storage space to determine whether to manually increase\nthe disk size. storageSize  displays the sum\ntotal amount of on-disk storage space allocated for document\nstorage across all databases. dataSize  displays the amount\nof storage space in bytes that your stored data uses. indexSize  displays the sum total\nsize in bytes of the index data across all databases. Disk IOPS Displays input operations per second. Monitor whether disk IOPS approaches the maximum provisioned\nIOPS. Determine whether the deployment can handle future\nworkloads. Disk Latency Displays the following information: Monitor disk latency to track the efficiency of reading from and\nwriting to disk. read latency  displays the average amount of time\nto read from disk. write latency  displays the average amount of time\nto write to disk. Disk Queue Depth Displays the average length of the queue of requests issued\nto the disk partition that stores MongoDB data. Monitor disk queue depth to identify potential issues and bottlenecks. Disk Space Free Displays the total amount of free space remaining on disk. Monitor free disk space to determine whether to use disk\nauto-scaling or manually increase the disk size. Disk Space Percent Free Displays the total amount of free space remaining on disk as a\npercentage of the total disk space. Monitor the percentage of free disk space to determine whether\nto use disk auto-scaling or manually increase the disk size. Disk Space Used Displays the total bytes of used disk space on the partition\nthat runs MongoDB. Monitor the used disk space to determine whether to manually\nincrease the disk size. Document Metrics Displays the following information: Monitor document metrics to measure the work MongoDB completes. returned  displays the documents per second\nreturned. inserted  displays the documents per second\ninserted. updated  displays the documents per second updated. deleted  displays the documents per second deleted. File Size Displays the total size of all the data files in the database. Monitor file size to deternine whether files are consuming\nexcessive disk space. Index Size Displays the total size of all indexes in the database. This\nmetric includes the overhead incurred by indexes on top of the\nactual document data on which the indexes are based. Monitor the index size to manage your indexes. To learn more,\nsee  Indexing Strategies . Indexes Displays the total number of indexes in the database. Monitor indexes to manage them. To learn more,\nsee  Indexing Strategies . Max Disk IOPS Displays the following maximum disk IOPS values over the time\nperiod specified by the metric granularity: max read iops  maximum disk read input operations\nper second. max write iops  maximum disk write input operations\nper second. Monitor whether disk IOPS approaches the maximum provisioned\nIOPS. Determine whether the deployment can handle future\nworkloads. Max Disk Queue Depth Displays the maximum disk queue depth values over the time\nperiod specified by the metric granularity. Disk queue depth\nis the average length of the queue of requests issued to the\ndisk partition that stores MongoDB data. Monitor disk queue depth to identify potential issues and bottlenecks. Max Normalized System CPU Displays the maximum CPU usage values of all processes on the\nnode, scaled to a range of 0-100% by dividing by the number of\nCPU cores. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Max Process CPU Displays the following maximum process CPU values over the time\nperiod specified by the metric granularity: max user  displays the maximum percentage of time\nthat the CPU spent servicing the MongoDB process. max kernel  displays the maximum percentage of time\nthe CPU spent servicing operating system calls for the MongoDB\nprocess. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Max System CPU Displays the maximum CPU usage values of all processes on the\nnode. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Max System Memory Displays the maximum system memory values in bytes. Monitor memory to determine whether your currrent deployment\nmeets your memory needs. Memory Displays the total consumption of memory in megabytes at a\nparticular point in time: resident  displays the memory that the MongoDB\nprocess running on a node consumes. This metric excludes the\nconsumption of other processes and does not represent the\ntotal memory that the node consumes. virtual  displays the memory reserved in disk to\nact as swap space. mapped  displays the number of MMAPv1 memory maps\nof all the data files. This number is likely similar to your\ntotal database(s) size. WiredTiger does not use memory mapped\nfiles, so this should be 0. Monitor memory to determine whether your currrent deployment\nmeets your memory needs. Network Displays the following information: Monitor network metrics to track network performance. bytesIn  displays the average rate of physical\nbytes (after any wire compression) sent to this database\nserver per second over the selected sample period. bytesOut  displays the average rate of physical\nbytes (after any wire compression) sent from this database\nserver per second over the selected sample period. numRequests  displays the average rate of requests\nsent to this database server per second over the selected\nsample period. Non-Mapped Virtual Memory Displays the amount of virtual memory that the memory mapping of\ndata files doesn't take into account. Monitor non-mapped virtual memory to determine whether aspects\nother than memory mapping files use excessive memory. For\nexample, this could indicate too many connections to the\ndatabase. Each connection has a thread stack and the memory for\nthose stacks can add up to a considerable amount. Keep this\nstatistic reasonably low because the memory used here is\nunavailable for caching. Normalized Process CPU Displays the following information: user  displays the percentage of time that the CPU\nspent servicing the MongoDB process, scaled to a range of\n0-100% by dividing by the number of CPU cores. kernel  displays the percentage of time the CPU\nspent servicing operating system calls for the MongoDB\nprocess, scaled to a range of 0-100% by dividing by the number\nof CPU cores. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Normalized System CPU Displays the CPU usage of all processes on the node, scaled to a\nrange of 0-100% by dividing by the number of CPU cores. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Num Extents Displays the total number of contiguously allocated chunks of\ndata file space for the database. Monitor this metric to better understand your database space. Objects Displays the number of objects in the database. Monitor this metric to better understand your database space. OpCounters Displays the number of the following operations per second run\non a MongoDB process since the process last started: Monitor MongoDB operations to validate performance issues\nrelated to high workloads. Confirm the type of operations\nresponsible for the load. command  (replica set) or  cmd  (sharded\ncluster) query insert delete update getmore Page Faults Displays the average rate of page faults on this process per\nsecond over the selected sample period. In non-Windows\nenvironments this applies to hard page faults only. Monitor page faults to determine whether to increase your memory. Process CPU Displays the following information: user  displays the percentage of time that the CPU\nspent servicing the MongoDB process. kernel  displays the percentage of time the CPU\nspent servicing operating system calls for the MongoDB process. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. Queues Displays the following information: Monitor queues to identify potential issues and bottlenecks. total  displays the number of operations queued\nand waiting for any lock. readers  displays the number of operations queued\nand waiting for a read lock. writers  displays the number of operation queued\nand waiting for a write lock. Query Targeting Displays the following information: Monitor query targeting to determine whether you have any\ninefficient queries. scanned  displays the number of index\nitems scanned per second. scanned objects  displays the number of documents\nscanned per second. Query Targeting Displays the efficiency of read operations run on MongoDB: Monitor query targeting to determine read efficiency and\noptimize queries and indexes. scanned / returned  displays the number of\ndocuments scanned to return one document. scanned objects / returned  the ratio of the number\nof documents scanned to the number of documents returned by\nqueries, since the previous data point for the selected sample\nperiod. Scan and Order Displays the number of operations per second returning results\nthat required a sort in-memory. Monitor this metric to identify whether your queries need\nindexes. Shard Data Size Displays the amount of storage space in bytes that your\nstored data uses on each shard. You can access this chart only\nfor sharded clusters with MongoDB 6.0+. Monitor this metric to verify whether you have  balanced shards . Shard Document Count Displays the number of documents on each shard. You can access\nthis chart only for sharded clusters with MongoDB 6.0+. Monitor this metric to verify whether you have  balanced shards . Storage Size Displays the storage size of the database. Monitor storage size to determine whether to manually increase\nthe disk size. System CPU Displays the CPU usage of all processes on the node. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. System Network Displays the following information: Monitor network metrics to track network performance. network bytes in  displays the average rate of\nphysical bytes that the network interface receives per second. network bytes out  displays the average rate of\nphysical bytes that the network interface transmits per second. The  Cloud Manager  release on February 14, 2024 fixes an issue\nwhere  Cloud Manager  inaccurately reported this metric. This\nrelease resets this metric and the previous values no longer\nappear. max network bytes in  displays the maximum network\nbytes in values over the time period that the metric\ngranularity specifies. max network bytes out  displays the maximum network\nbytes out values over the time period that the metric\ngranularity specifies.",
            "code": [],
            "preview": "You can review the following metrics to monitor your\ndeployments. All hardware metrics include metrics or\nindividual charts for maximum values.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "data-explorer/documents",
            "title": "Manage Documents in Data Explorer",
            "headings": [
                "Required Roles",
                "View Documents",
                "Select the database for the collection.",
                "Select the collection on the left-hand side or in the main panel.",
                "Select the Find view.",
                "Optional: Specify a query to find specific documents.",
                "Click Apply to run your query.",
                "Number of Documents Displayed per Page",
                "Insert Documents",
                "Insert One Document",
                "Go to the Find tab in Data Explorer.",
                "Click Insert Document.",
                "Modify the document.",
                "Click Insert.",
                "Insert Multiple Documents",
                "Go to the Find tab in Data Explorer.",
                "Click Insert Document.",
                "Select the JSON View.",
                "Type or paste an array of documents to insert.",
                "Click Insert.",
                "Clone One Document",
                "Go to Find tab in Data Explorer.",
                "Optional. Specify a filter.",
                "Clone the document.",
                "Modify the document.",
                "Click Insert.",
                "Edit One Document",
                "Go to Find tab in Data Explorer.",
                "Optional. Specify a filter.",
                "Edit the document.",
                "Save or cancel changes.",
                "Delete One Document",
                "Go to Find tab in Data Explorer.",
                "Optional. Specify a filter.",
                "Delete the document.",
                "To confirm, click the Delete button."
            ],
            "paragraphs": "You can use the  Data Explorer  to manage documents inside\nyour cluster collections. To interact with data in the  Cloud Manager  UI: Click  Deployment  in the left navigation. Select the desired MongoDB deployment. Select the  Data  tab. To  insert ,  edit ,\nor  delete documents , you must have been\ngranted access through one of the following roles: Project Owner  or  Organization Owner Project Data Access Admin Project Data Access Read/Write From the  Collections  tab, you can view documents in a\ncollection. To view documents for a collection: The main panel and  Namespaces  on the left side list the\ncollections in the database. The main panel displays the  Find  view and the\n Indexes  view. The panel displays the documents in the collection. Each page\ndisplays up to 20 documents. You can use the query bar to search for specific documents in your\ncollection. You can specify one or more of the following in the\nquery bar: A filter condition A project document to include and exclude specific fields in the\nresults A sort order for the documents in the results A collation document for language specific rules. To specify a filter condition, type in a  query filter  document in the\n Filter  field. For example, to specify equality\ncondition, use a filter document of the form: To use  query operators  to specify a\nfilter condition, use a filter document of the form: For example, the following query returns all documents where\nthe date added to a  created_at  field is equal to or more\nrecent than midnight on January 1, 2019,  UTC (Coordinated Universal Time)  time: For more information on specifying query filters, including\ncompound conditions, see  Query Documents . Data Explorer  does not support date queries\nthat use the  IsoDate()  function. Instead, use the\n MongoDB Extended JSON (v2)   $date  data type\nfor date queries. To specify the document fields to include or exclude in the\nresults, click  Options  in the query bar and\nspecify the document fields in the  Project  field. To include fields, specify the field name and set to  1  in\nthe project document. For example, to include the  year  and\n name  fields in the documents: Cloud Manager  returns the fields specified in the  Project \nfield and the  _id  field, which is returned unless it is\nexplicitly excluded. To exclude fields, specify the field name and set to  0  in\nthe project document. For example, to exclude the  year  and\n name  fields in the documents: Cloud Manager  returns all fields except the fields specified in\n Project . To learn more about project documents, see\n $project . To sort the order of the documents in the results, click\n Options  in the query bar and enter the  sort \ndocument in the  Sort  field. For example, the following  sort  document sorts results\nfirst by  year  in descending order, and within each year,\nsorts by  name  in ascending order: To learn more about sort documents, see\n $sort . To specify ascending order for a field, set the field to\n 1  in the sort document. To specify descending order for a field, set the field to\n -1  in the sort documents. To specify language-specific rules for string comparison, such\nas rules for lettercase and accent marks, click\n Options  in the query bar and enter the collation\ndocument in the  Collation  field. Use the\n locale  field in the collation document to specify the  ICU\nLocale code  for\nthe desired language. For example, to use the  pinyin \nvariant of the Chinese collation, use the following collation\ndocument: To learn more about collation documents, see\n Collation . As you type, the  Apply  button is disabled and the\nfield name in the User Interface turns red until a valid query is\nentered. Cloud Manager  limits the  total byte size  of documents shown per page in the\n Data Explorer . As a result, you may see varying numbers\nof documents per page, especially if your documents vary\nsignificantly in size. To add one or more documents to a collection through the\n Data Explorer , you can specify the document(s) to insert\nfrom scratch or you can clone an existing document and modify its\nfields and values as needed. Select the collection and go to the  Find  tab. The document editor appears with the  _id  field with an\n ObjectId  value that reflects the time of its generation and\nnot the insertion time of the document. As such, the  ObjectId \ndoes not represent a strict insertion order. To add a new field after an existing field, hover over the field\nand click on the plus sign that appears over the field's line\nnumber. To delete a field, hover over the field and click on the x sign\nthat appears to the left of the field's line number. You cannot\ndelete the  _id  field. To edit a field name, value, or type, click on the field name,\nvalue, or type. Select the collection and go to the  Find  tab. Data Explorer opens the  Insert to Collection  dialog. The following array of documents inserts three documents into\nthe collection: Select the collection and go to the  Find  tab. Up to 20 documents displays in the tab. To specify filter condition, type in a  query filter  document in the filter bar. For\nexample, to specify equality condition, use a filter document of the\nform: To use query operators to specify a filter condition, use a filter\ndocument of the form: To clone a document displayed in the query results, hover over the\ndocument and click on its clone document icon. The document editor appears with the  _id  field with an\n ObjectId  value that reflects the time of its generation and\nnot the insertion time of the document. As such, the  ObjectId \ndoes not represent a strict insertion order. To add a new field after an existing field, hover over the field\nand click on the plus sign that appears over the field's line\nnumber. To delete a field, hover over the field and click on the x sign\nthat appears to the left of the field's line number. You cannot\ndelete the  _id  field. To edit a field name, value, or type, click on the field name,\nvalue, or type. To edit a document from a collection through the  Data\nExplorer : Select the collection and go to the  Find  tab. Up to 20 documents displays in the tab. To specify filter condition, type in a  query filter  document in the filter bar. For\nexample, to specify equality condition, use a filter document of the\nform: To use query operators to specify a filter condition, use a filter\ndocument of the form: To edit a document displayed in the query results, hover over the\ndocument to edit and click on the pencil icon. The document appears in the document editor: To add a new field, hover over the field and click on the plus\nsign that appears over the field's line number. To delete a field, hover over the field and click on the x sign\nthat appears to the left of the field's line number. You cannot\ndelete the  _id  field. To edit a field name, value, or type, click on the field name,\nvalue, or type. To revert a specific change, hover over the edited field and click the\nrevert icon that appears to the left of the field's line number. To confirm and save changes, click the  Update  button. To cancel all modifications to the document, click the\n Cancel  button. To delete a document from a collection through the  Data\nExplorer : Select the collection and go to the  Find  tab. Up to 20 documents displays in the tab. To specify filter condition, type in a  query filter  document in the filter bar. For\nexample, to specify equality condition, use a filter document of the\nform: To use query operators to specify a filter condition, use a filter\ndocument of the form: To delete a document displayed in the query results, hover over the\ndocument to delete and click on the trash can icon. The document is flagged for deletion.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "{ <field1>: <value1>, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: { <queryoperator>: <value1> }, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ created_at: { $gte: { $date: \"2019-01-01T00:00-00:00\" } } }"
                },
                {
                    "lang": "javascript",
                    "value": "{ year: 1, name: 1 }"
                },
                {
                    "lang": "javascript",
                    "value": "{ year: 0, name: 0 }"
                },
                {
                    "lang": "javascript",
                    "value": "{ year: -1, name: 1 }"
                },
                {
                    "lang": "javascript",
                    "value": "{ \"locale\" : \"zh@collation=pinyin\" }"
                },
                {
                    "lang": "json",
                    "value": "[\n  {\n    \"name\": \"Alice\",\n    \"age\": 26,\n    \"email\": \"alice@abc.com\"\n  },\n  {\n    \"name\": \"Bob\",\n    \"age\": 43,\n    \"email\": \"bob@def.com\"\n  },\n  {\n    \"name\": \"Carol\",\n    \"age\": 19,\n    \"email\": \"carol@xyz.com\"\n  }\n]"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: <value1>, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: { <queryoperator>: <value1> }, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: <value1>, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: { <queryoperator>: <value1> }, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: <value1>, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ <field1>: { <queryoperator>: <value1> }, ... }"
                }
            ],
            "preview": "You can use the Data Explorer to manage documents inside\nyour cluster collections.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "performance-advisor/drop-indexes",
            "title": "Review Drop Index Recommendations",
            "headings": [
                "Unused Indexes",
                "Redundant Indexes",
                "Hidden Indexes",
                "Drop or Hide an Index",
                "Navigate to the Performance Advisor Drop Indexes recommendations.",
                "On the index you want to drop or hide, click Drop Index.",
                "Drop or hide the index through Data Explorer or MongoDB Shell."
            ],
            "paragraphs": "The Performance Advisor suggests dropping unused, redundant, and hidden\nindexes to improve write performance and increase storage space. To learn more about the impact of unnecessary indexes, see\n Remove Unnecessary Indexes . An index is unused if it doesn't support any queries. The Performance Advisor flags an index as unused if it hasn't supported\na query in 7 or more days after it was created or the server was\nrestarted. An index is redundant if another index supports any query that it could. The Performance Advisor flags an index as redundant if it matches the\nprefix of another index in the same collection. In the Performance Advisor, redundant indexes are marked with a red\n Redundant  badge. Below each redundant index, the Performance\nAdvisor displays the related indexes that cover it. If a collection contains the indexes: { a: 1 }  is redundant because it matches the prefix\n { a: 1, b: -1 } . { b: -1 }  is not redundant because it does not match any prefix. { a: 1 } { b: -1 } { a: 1, b: -1 } Related indexes are displayed for you to verify that the redundant\nindex can be dropped safely. Related indexes are not recommended\nfor removal. New in MongoDB version 4.4 Hidden indexes aren't used to support queries. They still impact write\nperformance and consume storage space. Hiding an index is useful for evaluating the impact of removing an\nindex before doing so. Unhiding an index is much easier than\nrebuilding a deleted index. To hide an index with the Performance Advisor, see\n Drop or Hide an Index . To unhide an index, see\n Unhide an Existing Index \nin the MongoDB manual. The Performance Advisor always recommends dropping hidden indexes.\nAfter you are confident a hidden index is unnecessary, drop it. To learn more about hidden indexes, see\n Hidden Indexes  in the MongoDB manual. To drop or hide an index with the Performance Advisor: MongoDB recommends hiding indexes before you\ndrop them.  Hidden Indexes  are available in\nMongoDB version 4.4 and higher. In the Performance Advisor tab, click\n View Recommendations  on the  Drop Indexes  card. The Performance Advisor displays a dialog with a link to\n Data Explorer  and a copyable\n MongoDB Shell  command to drop that index. In MongoDB 4.4 and higher, the dialog also provides a copyable\nMongoDB Shell command to hide that index. To drop an index with Data Explorer, click the\n Indexes  tab, then click  Drop  next to the\nindex you want to drop. You will be asked for confirmation. To drop or hide an index with MongoDB Shell, paste and run the\ncommand provided by the Performance Advisor.",
            "code": [],
            "preview": "The Performance Advisor suggests dropping unused, redundant, and hidden\nindexes to improve write performance and increase storage space.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "performance-advisor/index-ranking",
            "title": "Review Index Ranking",
            "headings": [
                "How Performance Advisor Suggests and Ranks Indexes",
                "Index Field Order",
                "Limiting Proposed Indexes",
                "Index De-Duplication",
                "Example: New York City Taxi Data"
            ],
            "paragraphs": "The  Performance Advisor  orders the  indexes  that it suggests by\ntheir respective  Impact .  Impact  indicates the\nestimated performance improvement that the suggested index would\nbring. The  Performance Advisor  monitors queries that take longer than  100  milliseconds to\nexecute and groups these queries into common  query shapes . The  Performance Advisor  calculates the inefficiency of each query shape by\nconsidering the following aggregated metrics from queries which match\nthe shape: To establish recommended indexes, the  Performance Advisor  uses these metrics in a\nformula to calculate the  Impact , or performance improvement\nthat creating an index matching that query shape would cause. When the\n Performance Advisor  suggests indexes, it ranks the indexes by their\n Impact . The  Impact  indicates  High \nor  Medium  based on the total wasted bytes read. Amount of time spent executing the query. Number of documents scanned. Number of documents returned. Average object size. The type of query operation in the query shape affects the order of the\nfields used to construct the index. In general, the  Performance Advisor  ranks fields by\ntheir  cardinality . The following table shows how the  Performance Advisor  ranks various operation types by\norder of relative importance: Rank Operation Type Example Operator 1 Equality match $eq 2 Array query $in 3 Range query $gte 4 Type query $type 5 Exists $exists 6 All other operators $nearSphere 7 Sort sort() The  Performance Advisor  doesn't suggest indexes that have more than 16 fields. Also, the  Performance Advisor  suggests the index only if the difference between\nscanned documents and returned documents is greater than 500 for\nimpacted queries. The  Performance Advisor  de-duplicates overlapping indexes before it makes suggestions.\nFor example, consider if the  Performance Advisor  calculates the following potential\nsuggested indexes: Since  { a : 1 }  is a prefix of  { a : 1, b : 1 } ,  Performance Advisor \nsuggests only  { a : 1, b : 1 } . To learn more about index prefixes,\nsee  Prefixes . This example uses a database named  cab-db  that contains information\nabout New York City taxi rides, with fields for the times of pickup and\ndropoff, ride distance, and a breakdown of ride costs. A typical\ndocument in the collection  yellow  looks like the following example: The collection contains more than 10 million documents, so an\napplication that needs to run queries based on specific field data will\ngenerate some very inefficient operations unless you properly index the\ncollection. Typical queries for this application search for documents that contain\na specific dropoff time, combined with one or more other fields. For\nexample: The  Performance Advisor  recommends the following indexes to improve performance: The  Performance Advisor  lists recommended indexes in order of performance impact, from\ngreatest to least. The first recommendation is for an index on three fields: Click the  Create Index  button to create the index with\nany desired additional options. To learn more about creating an index\nin the  Performance Advisor , see  Create Suggested Indexes . If you create this index, you remove the need for the database engine\nto scan the entire collection to find documents that match the query,\nwhich improves performance. Queries with the shape shown in the\n example  return results in 50 milliseconds\nor less on the indexed collection, as opposed to several seconds on the\nunindexed collection. By default, the  Performance Advisor  shows index recommendations for all collections\nin your cluster. To narrow the recommendations down to a specific\ncollection, select one from the  Collection  dropdown\nmenu. passenger_count dropoff_datetime trip_distance You can also create indexes with the  Data Explorer .",
            "code": [
                {
                    "lang": "json",
                    "value": "{ a : 1 }\n{ a : 1, b : 1 }"
                },
                {
                    "lang": "json",
                    "value": "{\n     \"_id\" : ObjectId(\"5db9daab0b2a17b7706cd6a3\"),\n     \"pickup_datetime\" : \"2014-06-30 02:09:23\",\n     \"dropoff_datetime\" : \"2014-06-30 02:20:36\",\n     \"passenger_count\" : 2,\n     \"trip_distance\" : 3,\n     \"fare_amount\" : 12,\n     \"tip_amount\" : 2.6,\n     \"total_amount\" : 15.6\n}"
                },
                {
                    "lang": "javascript",
                    "value": "db.yellow.find({ \"dropoff_datetime\": \"2014-06-19 21:45:00\",\n                 \"passenger_count\": 1,\n                 \"trip_distance\": {\"$gt\": 3 }\n               })"
                }
            ],
            "preview": "The Performance Advisor orders the indexes that it suggests by\ntheir respective Impact. Impact indicates the\nestimated performance improvement that the suggested index would\nbring.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "performance-advisor/slow-query-threshold",
            "title": "Configure the Slow Query Threshold",
            "headings": [],
            "paragraphs": "The Performance Advisor recognizes a query as slow if it takes longer\nto execute than the value of\n slowms .\nBy default, this value is  100  milliseconds. You can change the\nthreshold with either the\n profile \ncommand or the  db.setProfilingLevel() \n mongosh  method. If you are running MongoDB 3.6 or later, you can customize the\npercentage of slow queries in your logs used by the Performance Advisor\nby specifying the  sampleRate  parameter. The following  profile  command example sets the threshold at 200\nmilliseconds: This sets the slow query threshold to a lower value of 100\nmilliseconds but also sets the sample rate to 10%. By default, the value of  profile  is  0 . MongoDB recommends\nleaving this value unchanged since other values can negatively\nimpact database performance. To learn more, see the\n profile  command.",
            "code": [
                {
                    "lang": "json",
                    "value": "db.runCommand({\n  profile: 0,\n  slowms: 200\n})"
                },
                {
                    "lang": "json",
                    "value": "db.runCommand({\n  profile: 0,\n  slowms: 100,\n  sampleRate: 0.1\n})"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "performance-advisor/schema-advisor",
            "title": "Improve Your Schema",
            "headings": [
                "Schema Design Patterns",
                "Schema Suggestions",
                "Limitations of Schema Suggestions"
            ],
            "paragraphs": "Your schema is the architecture of your cluster, including your\n collections ,  indexes  and\n documents . This feature is available only with Cloud Manager Premium,\nwhich comes with certain MongoDB subscriptions.  Contact MongoDB  for more information. You can model your schema based on frequently used design patterns. The\n Building with Patterns  blog series discusses the following frequently used design patterns. To read about situations in which arrays work well, see the\nfollowing design patterns: Use\n The Attribute Pattern  for handling data\nwith unique combinations of attributes, such as movie data where each\nmovie is released in a subset of countries. Use\n The Bucket Pattern  for handling tightly\ngrouped or sequential data, such as time span data. Use\n The Polymorphic Pattern  for handling\ndifferently shaped documents in the same collection, such as athlete\nrecords across several sports. To read about strategies for keeping documents in your working set at\na manageable size, see the following patterns: Use\n The Extended Reference Pattern  to\nduplicate a frequently-read portion of data from large documents to\nsmaller ones. Use\n The Subset Pattern \nto reduce the size of documents with large array fields. Use\n The Outlier Pattern  to handle a few\nlarge documents in an otherwise standard collection. To learn how to incorporate the flexible data model into your schema,\nsee the following presentations from  MongoDB.live 2020 : Learn about entity relationships in MongoDB and examples of their\nimplementations with\n Data Modeling with MongoDB . Learn advanced data modeling design patterns you can incorporate\ninto your schema with\n Advanced Schema Design Patterns . Cloud Manager  offers two ways to detect common\nschema design issues and suggests modifications that follow MongoDB\u2019s\nbest practices: To learn more about how to apply the suggestions offered in either the\nPerformance Advisor or Data Explorer, refer to the following pages: The  Performance Advisor  provides\nholistic schema recommendations for your cluster by sampling documents\nin your most active collections and collections with slow-running\nqueries. The  Data Explorer  offers schema\nsuggestions for a specific collection by sampling documents in that\ncollection. Schema Improvement Reason for Suggestion Reduce  $lookup  Operations You are running too many  $lookup  operations on\nyour data. Take advantage of MongoDB's rich schema model to\nembed related data in a single collection. Avoid Unbounded Arrays Your documents contain array fields with many elements,\nwhich can degrade query performance. Remove Unnecessary Indexes You have unnecessary indexes in your collection, which can\nconsume disk space and degrade write performance. Reduce the Size of Large Documents You have excessively large documents, which can degrade\nthe performance of your most frequent queries. Reduce Number of Collections You have an exceedingly high number of collections in a\ndatabase, which can result in unnecessary disk space usage. Schema suggestions for a collection are partly driven by a random\nsampling of documents from that collection. Because this sampling is\nperformed each time your schema is analyzed, you may see different\nsuggestions at different times for the same collection. The  Performance Advisor  uses slow query\nlogs as an input to recognize certain schema issues, namely too many\n $lookup  operations and not utilizing an index for\ncase-sensitive regex queries. If a collection does not have any\noperations that last longer than 100 milliseconds, the Performance\nAdvisor may not suggest all potential improvements for that\ncollection, or may not show all reasons why an improvement is being\nsuggested. The  Performance Advisor  analyzes\nthe 20 most active collections based on the output of the\n top  command. To see suggestions for a specific\ncollection, view that collection in the\n Data Explorer .",
            "code": [],
            "preview": "Your schema is the architecture of your cluster, including your\ncollections, indexes and\ndocuments.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "schema-advisor/avoid-unbounded-arrays",
            "title": "Avoid Unbounded Arrays",
            "headings": [
                "Overview",
                "Example",
                "Document References May Require $lookups",
                "Learn More",
                "MongoDB.live 2020 Presentations"
            ],
            "paragraphs": "One of the benefits of MongoDB's rich schema model is the ability to\nstore arrays as document field values. Storing arrays as field values\nallows you to model one-to-many or many-to-many relationships in a\nsingle document, instead of across separate collections as you might in\na relational database. However, you should exercise caution if you are consistently adding\nelements to arrays in your documents. If you do not limit the number of\nelements in an array, your documents may grow to an unpredictable size.\nAs an array continues to grow, reading and building indexes on that\narray gradually decrease in performance. A large, growing array can\nstrain application resources and put your documents at risk of exceeding\nthe  BSON Document Size  limit. Instead, consider bounding your arrays to improve performance and keep\nyour documents a manageable size. Consider the following schema for a  publishers  collection: In this scenario, the  books  array is  unbounded . Each new book\nreleased by this publishing company adds a new sub-document to the\n books  array. As publishing companies continue to release books, the\ndocuments will eventually grow very large and cause a disproportionate\namount of memory strain on the application. To avoid mutable, unbounded arrays, separate the  publishers \ncollection into two collections, one for  publishers  and one for\n books . Instead of embedding the entire  book  document in the\n publishers  document, include a\n reference \nto the publisher inside of the book document: This updated schema removes the unbounded array in the  publishers \ncollection and places a reference to the publisher in each book document\nusing the  publisher_id  field. This ensures that each document has a\nmanageable size, and there is no risk of a document field growing\nabnormally large. This approach works especially well if your application loads the book\nand publisher information separately. If your application requires the\nbook and information together, it needs to perform a  $lookup \noperation to join the data from the  publishers  and  books \ncollections.  $lookup  operations are not very performant, but\nin this scenario may be worth the trade off to avoid unbounded arrays. To learn more about Data Modeling in MongoDB and the flexible schema\nmodel, see  Data Modeling Introduction . To learn how to model relationships with document references,\nsee  Model One-to-Many Relationships with Document References To learn how to query arrays in MongoDB, see\n Query an Array . MongoDB also offers a free MongoDB University Course on Data Modeling:\n Data Modeling for MongoDB . To learn how to incorporate the flexible data model into your schema,\nsee the following presentations from  MongoDB.live 2020 : Learn about entity relationships in MongoDB and examples of their\nimplementations with\n Data Modeling with MongoDB . Learn advanced data modeling design patterns you can incorporate\ninto your schema with\n Advanced Schema Design Patterns .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "// publishers collection\n{\n  \"_id\": \"orielly\"\n  \"name\": \"O'Reilly Media\",\n  \"founded\": 1980,\n  \"location\": \"CA\",\n  \"books\": [\n    {\n      \"_id\": 123456789,\n      \"title\": \"MongoDB: The Definitive Guide\",\n      \"author\": [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n      \"published_date\": ISODate(\"2010-09-24\"),\n      \"pages\": 216,\n      \"language\": \"English\"\n    },\n    {\n      \"_id\": 234567890,\n      \"title\": \"50 Tips and Tricks for MongoDB Developer\",\n      \"author\": \"Kristina Chodorow\",\n      \"published_date\": ISODate(\"2011-05-06\"),\n      \"pages\": 68,\n      \"language\": \"English\"\n    }\n  ]\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// publishers collection\n{\n  \"_id\": \"oreilly\"\n  \"name\": \"O'Reilly Media\",\n  \"founded\": 1980,\n  \"location\": \"CA\"\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// books collection\n{\n  \"_id\": 123456789,\n  \"title\": \"MongoDB: The Definitive Guide\",\n  \"author\": [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n  \"published_date\": ISODate(\"2010-09-24\"),\n  \"pages\": 216,\n  \"language\": \"English\",\n  \"publisher_id\": \"oreilly\"\n}\n\n{\n  \"_id\": 234567890,\n  \"title\": \"50 Tips and Tricks for MongoDB Developer\",\n  \"author\": \"Kristina Chodorow\",\n  \"published_date\": ISODate(\"2011-05-06\"),\n  \"pages\": 68,\n  \"language\": \"English\",\n  \"publisher_id\": \"oreilly\"\n}"
                }
            ],
            "preview": "One of the benefits of MongoDB's rich schema model is the ability to\nstore arrays as document field values. Storing arrays as field values\nallows you to model one-to-many or many-to-many relationships in a\nsingle document, instead of across separate collections as you might in\na relational database.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "schema-advisor/reduce-document-size",
            "title": "Reduce the Size of Large Documents",
            "headings": [
                "Overview",
                "Example",
                "Learn More",
                "Design Patterns",
                "MongoDB.live 2020 Presentations"
            ],
            "paragraphs": "Storing large documents in your database can lead to excessive RAM and\nbandwidth usage. MongoDB keeps frequently accessed data, referred to as\nthe  working set , in\nRAM. When the working set grows beyond the RAM allotment, performance\nis degraded as data must be retrieved from disk instead. If your most frequent queries are for documents that contain much more\ninformation than you need for that query, consider restructuring your\nschema with smaller documents using\n references \nto additional collections. By breaking up your data into more\ncollections and using smaller documents for frequently accessed data,\nyou reduce the overall size of the working set and improve performance. Your hardware configuration can affect the size of documents that\nyour system can support. The\n BSON Document Size  limit is 16 megabytes. Consider a movie catalog website that displays a list of the 50\nmost recently released movie titles and their poster images on the home\npage. From the home page, a user can click on a movie to see\nadditional details. The website stores information about movies in a  movies  collection.\nEach movie document contains all of the information available for that\nmovie: In this example, the most frequent query the website performs is to\nfind the 50 most recent movies'  title  and  poster . Instead of\nquerying for all movie information, consider breaking up the  movie \ncollection into two separate collections,  movies  and\n movie_metadata . The collections are linked with the  _id  of\n movie  documents: This way, when the website queries for the 50 most recent movies\nand their posters, it only loads information that it needs. If a user\nclicks on a movie, the site performs another query to find the\n movie_metadata  document associated with that movie. This new schema\nis more performant than the original because the most frequent query\nreturns much smaller documents. Consider your use case, especially the operations you most frequently\nperform, and design a schema that efficiently uses your working set. Whenever possible, you should host images outside of your MongoDB\ndeployment and reference them with URLs. If you store images in\nyour database, you are much more likely to reach the document size\nlimit. To learn more about Data Modeling in MongoDB and the flexible schema\nmodel, see  Data Modeling Introduction . To learn more about using references to model your schema, see\n Model One-to-Many Relationships with Document References . MongoDB also offers a free MongoDB University Course on Data Modeling:\n Data Modeling for MongoDB To read about strategies for keeping documents in your working set at\na manageable size, see the following patterns: Use\n The Extended Reference Pattern  to\nduplicate a frequently-read portion of data from large documents to\nsmaller ones. Use\n The Subset Pattern \nto reduce the size of documents with large array fields. Use\n The Outlier Pattern  to handle a few\nlarge documents in an otherwise standard collection. To learn how to incorporate the flexible data model into your schema,\nsee the following presentations from  MongoDB.live 2020 : Learn about entity relationships in MongoDB and examples of their\nimplementations with\n Data Modeling with MongoDB . Learn advanced data modeling design patterns you can incorporate\ninto your schema with\n Advanced Schema Design Patterns .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "// movies collection\n\n{\n    \"_id\": 123,\n    \"title\": \"2001: A Space Odyssey\",\n    \"poster\": <url>,\n    \"director\": \"Stanley Kubrick\",\n    \"release_year\": 1968,\n    \"box_office_usd\": 146000000,\n    \"countries_released\": [\n        \"United States\",\n        ...\n    ],\n    \"cast\": [\n        \"Keir Dullea\",\n        ...\n    ],\n    \"crew\": [\n         \"Ray Lovejoy\",\n         ...\n    ],\n    ...\n\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// movies collection\n\n{\n    \"_id\": 123,\n    \"title\": \"2001: A Space Odyssey\",\n    \"poster\": <url>\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// movie_metadata collection\n\n{\n    \"_id\": <object_id>,\n    \"movie_id\": 123, // reference to a movies document\n    \"director\": \"Stanley Kubrick\",\n    \"release_year\": 1968,\n    \"box_office_usd\": 146000000,\n    \"countries_released\": [\n        \"United States\",\n        ...\n    ],\n    \"cast\": [\n        \"Keir Dullea\",\n        ...\n    ],\n    \"crew\": [\n         \"Ray Lovejoy\",\n         ...\n    ],\n    ...\n\n}"
                }
            ],
            "preview": "Storing large documents in your database can lead to excessive RAM and\nbandwidth usage. MongoDB keeps frequently accessed data, referred to as\nthe working set, in\nRAM. When the working set grows beyond the RAM allotment, performance\nis degraded as data must be retrieved from disk instead.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "schema-advisor/too-many-collections",
            "title": "Reduce Number of Collections",
            "headings": [
                "Overview",
                "Example",
                "Updated Schema",
                "How to Check for Unnecessary Collections",
                "MongoDB Shell (mongosh)",
                "MongoDB Cloud Manager",
                "Data Explorer",
                "Real-Time Performance Panel",
                "Learn More",
                "MongoDB.live 2020 Presentations"
            ],
            "paragraphs": "Collections  are groupings of MongoDB documents,\nsimilar to an  RDBMS (Relational Database Management System) \ntable. A collection exists within a single database. Even if a collection does not contain any documents, it still comes with\na resource cost in the form of an undroppable  default _id index . Although this index does not take up much\nspace on its own (especially for small collections) if you have\nthousands of collections these indexes can add up in resources and\nstrain your database allocation. If your deployment contains unnecessary or an increasing number of\ncollections, you should consider restructuring your data to reduce the\nnumber of collections and ultimately reduce the resource requirements\nof your application. Consider a  temperatures  database that stores collections of\ntemperature readings obtained from a sensor. The sensor takes readings\nevery half hour from 10 AM to 10 PM. Each day's readings are stored in a\nseparate collection, named by the reading date: With each passing day, the number of collections in the database\nincrements. Since the number of collections is unbounded, there is an\never-growing need from the database to maintain these collections and\ntheir corresponding indexes. If the database eventually reaches a point\nwhere it is managing thousands of collections and indexes, it may result\nin performance degradation. Additionally, this approach does not easily facilitate queries across\nmultiple days. To query data from multiple days to obtain temperature\ntrends over longer periods of time, you would need to perform a\n $lookup  operation, which is not as performant as querying\ndata in the same collection. Instead, a better approach to structure this data is to store\nall temperature readings in a single collection, and have each\nday's readings in a single document. Consider this updated schema,\nwhere all temperatures are in a single collection:\n temperatures.readings : This updated schema requires much fewer resources than the original\nschema. Now, rather than requiring an index for every single day\nthat temperatures are read, the default  _id  index on this collection\nhelps facilitate queries by date. Use Buckets for Time-Series Data To check the number of collections in your database, you can\nrun the following command from  mongosh : The  db.stats()  method also\nreturns the number of collections in your database, along with useful\ndatabase statistics such as the total size of your data and indexes. The  Cloud Manager   Data Explorer  provides a high-level\noverview of collections in your databases. The Data Explorer shows\nthe total size of a collection, including the size of a collection's\nindexes. If the majority of a collection's size is comprised of\nindexes, you can consider consolidating that collection's data into\nanother collection and dropping the original collection. Refer to the\n $merge  documentation for an approach to merging data\nfrom one collection into another. Additionally, if the Data Explorer reveals that you have empty\ncollections, you can drop those collections directly from the\nData Explorer. The  Cloud Manager   Real-Time Performance Panel  shows which collections receive the most\nactivity. You can use this tool to ensure that before you drop a\ncollection, it is not being actively used by your application. To learn more about Data Modeling in MongoDB and the flexible schema\nmodel, see  Data Modeling Introduction . To learn more about databases and collections, see\n Databases and Collections . To learn more about embedding related data in a single document, see\n Embedded Data Models To learn how to incorporate the flexible data model into your schema,\nsee the following presentations from  MongoDB.live 2020 : Learn about entity relationships in MongoDB and examples of their\nimplementations with\n Data Modeling with MongoDB . Learn advanced data modeling design patterns you can incorporate\ninto your schema with\n Advanced Schema Design Patterns .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "// temperatures.march-09-2020\n\n{\n  \"_id\": 1,\n  \"timestamp\": \"2020-03-09T010:00:00Z\",\n  \"temperature\": 29\n}\n{\n  \"_id\": 2,\n  \"timestamp\": \"2020-03-09T010:30:00Z\",\n  \"temperature\": 30\n}\n...\n{\n  \"_id\": 25,\n  \"timestamp\": \"2020-03-09T022:00:00Z\",\n  \"temperature\": 26\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// temperatures.march-10-2020\n\n{\n  \"_id\": 1,\n  \"timestamp\": \"2020-03-10T010:00:00Z\",\n  \"temperature\": 30\n}\n{\n  \"_id\": 2,\n  \"timestamp\": \"2020-03-10T010:30:00Z\",\n  \"temperature\": 32\n}\n...\n{\n  \"_id\": 25,\n  \"timestamp\": \"2020-03-10T022:00:00Z\",\n  \"temperature\": 28\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// temperatures.readings\n\n{\n  \"_id\": ISODate(\"2020-03-09\"),\n  \"readings\": [\n    {\n      \"timestamp\": \"2020-03-09T010:00:00Z\",\n      \"temperature\": 29\n    },\n    {\n      \"timestamp\": \"2020-03-09T010:30:00Z\",\n      \"temperature\": 30\n    },\n    ...\n    {\n      \"timestamp\": \"2020-03-09T022:00:00Z\",\n      \"temperature\": 26\n    }\n  ]\n}\n{\n  \"_id\": ISODate(\"2020-03-10\"),\n  \"readings\": [\n    {\n      \"timestamp\": \"2020-03-10T010:00:00Z\",\n      \"temperature\": 30\n    },\n    {\n      \"timestamp\": \"2020-03-10T010:30:00Z\",\n      \"temperature\": 32\n    },\n    ...\n    {\n      \"timestamp\": \"2020-03-10T022:00:00Z\",\n      \"temperature\": 28\n    }\n  ]\n}"
                },
                {
                    "lang": "javascript",
                    "value": "db.getCollectionNames().length"
                }
            ],
            "preview": "Collections are groupings of MongoDB documents,\nsimilar to an RDBMS (Relational Database Management System)\ntable. A collection exists within a single database.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "schema-advisor/reduce-lookup-operations",
            "title": "Reduce $lookup Operations",
            "headings": [
                "Overview",
                "Examples",
                "Use Embedded Documents",
                "Use Arrays",
                "Array Considerations",
                "Denormalization",
                "Learn More",
                "Data Models",
                "MongoDB.live 2020 Data Modeling Presentations",
                "Arrays",
                "Design Patterns",
                "Denormalized Schemas"
            ],
            "paragraphs": "$lookup  operations join data from two collections in the\nsame database based on a specified field.  $lookup  operations\ncan be useful when your data is structured similarly to a relational\ndatabase and you need to model large hierarchical datasets. However,\nthese operations can be slow and resource-intensive because they need\nto read and perform logic on two collections instead of a single\ncollection. If you frequently run  $lookup  operations, consider\nrestructuring your schema such that the your application can query a\nsingle collection to obtain all of the information it needs. You can\nutilize MongoDB's  flexible schema model  with embedded\ndocuments and arrays to capture relationships between data in a single\ndocument structure. Use this\n denormalized model  to take\nadvantage of MongoDB's rich documents and allow your application to\nretrieve and manipulate related data in a single query. The following examples show two schema structures designed\nto reduce  $lookup  operations: Use Embedded Documents Use Arrays Consider the following example where a grocery store tracks\none-to-one inventory and nutrition information in two separate\ncollections. Each inventory item corresponds to a unique nutrition\nfacts item. The  nutrition_id  field links the  inventory \ncollection to the  nutrition_facts  collection, similar to a\ntabular database: If an application requests the nutrition facts for an inventory\nitem by  name , this schema structure requires a\n $lookup  of the  nutrition_facts  collection to find\nan entry that matches the inventory item's  nutrition_id . Instead, you can embed the nutrition information inside the\n inventory  collection: This way, when you query for an item in  inventory , the nutrition\nfacts are included in the result without the need for another query or\na  $lookup  operation. Consider embedding documents when data across\ncollections has a one-to-one relationship. Consider the following example where documents in a baseball league's\n players  collection reference documents in a  teams \ncollection, similar to a tabular database: If an application requests a list of players on a team, this schema\nstructure requires a  $lookup  of the  players  collection\nto find each player that matches a  team_id . Instead, you can list the  players  in an array on the\nteam document itself: By using arrays to hold related data, an application can retrieve\ncomplete  team  information, including that team's players,\nwithout  $lookup  operations or indexes on other collections.\nIn this case, using arrays is more performant than storing the\ninformation in separate collections. In the example above, the baseball teams have a set number of\nplayers and there is no risk of arrays becoming exceedingly large. The performance cost of reading and writing to large arrays can\noutweigh the benefit gained by avoiding  $lookup \noperations. If your arrays are unbounded or exceedingly large, those\narrays may degrade read and write performance. If you create an index on an array, each element in the array is\nindexed. If you write to that array frequently, the performance cost of\nindexing or re-indexing a potentially large array field may be\nsignificant. Avoid Unbounded Arrays Denormalizing your schema is the process of duplicating fields or\nderiving new fields from existing ones. Denormalization can improve\nread performance in a variety of cases, such as: While embedding documents or arrays without duplication is\npreferred for grouping related data, denormalization can improve read\nperformance when separate collections must be maintained. A recurring query requires a few fields from a large document in\nanother collection. You may choose to maintain a copy of those fields\nin an embedded document in the collection that the recurring query\ntargets to avoid merging two distinct collections or performing\nfrequent  $lookup  operations. An average value of some field in a collection is frequently\nrequested. You may choose to create a derived field in a separate\ncollection that is updated as part of your writes and maintains a\nrunning average for that field. When you denormalize your schema, it becomes your responsibility to\nmaintain consistent duplicated data. The best structure for your schema depends on your application context.\nThe following resources provide detailed information on data modeling\nand additional example use cases for embedded documents and arrays: To learn more about Data Modeling in MongoDB and the flexible schema\nmodel, see  Data Modeling Introduction . To learn more about the tradeoffs between embedded and normalized\ndata models, see\n Data Model Design . MongoDB also offers a free MongoDB University Course on Data Modeling:\n Data Modeling for MongoDB . To learn how to incorporate the flexible data model into your schema,\nsee the following presentations from  MongoDB.live 2020 : Learn about entity relationships in MongoDB and examples of their\nimplementations with\n Data Modeling with MongoDB . Learn advanced data modeling design patterns you can incorporate\ninto your schema with\n Advanced Schema Design Patterns . To learn more about how to query arrays in MongoDB, see\n Query an Array . To read about situations in which arrays work well, see the\nfollowing design patterns: Use\n The Attribute Pattern  for handling data\nwith unique combinations of attributes, such as movie data where each\nmovie is released in a subset of countries. Use\n The Bucket Pattern  for handling tightly\ngrouped or sequential data, such as time span data. Use\n The Polymorphic Pattern  for handling\ndifferently shaped documents in the same collection, such as athlete\nrecords across several sports. To read about a situation in which duplicating data\nimproves your schema, see the following design pattern: Use\n The Extended Reference Pattern  to\nduplicate a frequently-read portion of data from large documents to\nsmaller ones.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "// inventory collection\n\n{\n   \"name\": \"Pear\",\n   \"stock\": 20,\n   \"nutrition_id\": 123, // reference to a nutrition_fact document\n   ...\n}\n\n{\n   \"name\": \"Candy Bar\",\n   \"stock\": 26,\n   \"nutrition_id\": 456,\n   ...\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// nutrition_facts collection\n\n{\n   \"_id\": 123,\n   \"calories\": 100,\n   \"grams_sugar\": 17,\n   \"grams_protein\": 1,\n   ...\n}\n\n{\n   \"_id\": 456,\n   \"calories\": 250,\n   \"grams_sugar\": 27,\n   \"grams_protein\": 4,\n   ...\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// inventory collection\n\n{\n   \"name\": \"Pear\",\n   \"stock\": 20,\n   \"nutrition_facts\": {\n      \"calories\": 100,\n      \"grams_sugar\": 17,\n      \"grams_protein\": 1,\n      ...\n   }\n   ...\n}\n\n{\n   \"name\": \"Candy Bar\",\n   \"stock\": 26,\n   \"nutrition_facts\": {\n      \"calories\": 250,\n      \"grams_sugar\": 27,\n      \"grams_protein\": 4,\n      ...\n   }\n   ...\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// players collection\n\n{\n   \"team_id\": 1, // reference to a team document\n   \"name\": \"Nick\",\n   \"position\": \"Pitcher\"\n   ...\n}\n\n{\n   \"team_id\": 1,\n   \"name\": \"Anuj\",\n   \"position\": \"Shortstop\"\n   ...\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// teams collection\n\n{\n   \"_id\": 1,\n   \"name\": \"Danbury Dolphins\"\n   ...\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// teams collection\n\n{\n    \"_id\": 1,\n    \"name\": \"Danbury Dolphins\",\n    \"players\": [\n       {\n          \"name\": \"Nick\",\n          \"position\": \"Pitcher\"\n          ...\n       },\n       {\n          \"name\": \"Anuj\",\n          \"position\": \"Shortstop\"\n          ...\n       }\n    ]\n}"
                }
            ],
            "preview": "$lookup operations join data from two collections in the\nsame database based on a specified field. $lookup operations\ncan be useful when your data is structured similarly to a relational\ndatabase and you need to model large hierarchical datasets. However,\nthese operations can be slow and resource-intensive because they need\nto read and perform logic on two collections instead of a single\ncollection.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "schema-advisor/too-many-indexes",
            "title": "Remove Unnecessary Indexes",
            "headings": [
                "Overview",
                "Example",
                "last_name Index",
                "coins Index",
                "stars Index",
                "Identify & Drop Unnecessary Indexes",
                "Learn More"
            ],
            "paragraphs": "Indexes  support the efficient execution of queries\nin MongoDB. However, each index you create has a negative performance\nimpact on writes and requires some disk space. Creating unnecessary indexes leads to a bloated collection and slow\nwrites. Consider each query your application performs and whether it\njustifies an index. Remove indexes that are unused, either because the\nfield is not used to query the database or because the index is\nredundant. You should\n identify and drop unnecessary indexes .\nUse the  Data Explorer  to manage\nindexes in  Cloud Manager . Consider a game that awards  coins  to players. When a player reaches\n20  coins , that player earns 1  star  and their  coins  are\nreset to 0. The game has a  players  collection with documents such\nas the following: The  players  collection has an index for every field: _id  is indexed by default. { last_name: 1 } { last_name: 1, first_name: 1 } { coins: -1 } { stars: -1 } In this example, when the game queries the database for player\ninformation, it finds a single record using a player's full name. The\n compound index   { last_name: 1,\nfirst_name: 1 }  covers this case, so the game should drop the index\n { last_name: 1 }  because it is redundant. In this example, the  coins  field is never used to search the\ndatabase. The game should drop the index  { coins: -1 }  because it\nis unused. In this example, at the end of a game, the players' names are displayed\non a leaderboard in descending order by number of stars. The game\nshould maintain the index  { stars: -1 } , even if it is used\ninfrequently, to avoid scanning every document in the\n players  collection. Now, the game uses the following indexes: After dropping unnecessary indexes, the  players  collection has\nmore free space and can perform faster writes. The most frequent reads\ndo not experience a drop in performance because the indexes supporting\nthose reads still exist in the collection. _id  is indexed by default. { last_name: 1, first_name: 1 } { stars: -1 } To identify unnecessary indexes in  Cloud Manager ,\n View Indexes with Data Explorer . Under the  Indexes  tab in Data Explorer, you can view\n Size ,  Usage , and other information for each of\nyour indexes. If an index is unused or covered by another index, you\nshould drop it. To drop an index in  Cloud Manager ,\n Drop an Index with Data Explorer . To learn more about indexes, see  Indexes . To learn more about indexing for your use case, see\n Indexing Strategies . MongoDB also offers a free MongoDB University Course on improving\ndatabase performance, including optimizing indexes:\n Monitoring and Insights .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "// players collection\n{\n  \"_id\": \"ObjectId(123)\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"coins\": 11,\n  \"stars\": 2\n}"
                }
            ],
            "preview": "Indexes support the efficient execution of queries\nin MongoDB. However, each index you create has a negative performance\nimpact on writes and requires some disk space.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/federated-authentication",
            "title": "Configure Federated Authentication",
            "headings": [
                "Federation Management Access",
                "Tutorials",
                "Consideration for Two-Factor Authentication"
            ],
            "paragraphs": "To link your  IdP (Identity Provider)  to  Cloud Manager  you provide each with the appropriate\nmetadata. Once you have linked your  IdP (Identity Provider)  to  Cloud Manager , map domains and\norganizations to your  IdP (Identity Provider) : MongoDB Federated Authentication links your credentials across many\nMongoDB systems.  MongoDB Cloud Manager  implements authentication using the\nFederated Identity Management model. Using the  FIM (Federated Identity Management)  model: This goes beyond  SSO (Single Sign-On)  as your  IdP (Identity Provider)  manages your credentials, not\nMongoDB. Your users can use  Cloud Manager  without needing to remember\nanother username and password. Your company manages your credentials using an Identity Provider\n( IdP (Identity Provider) ). With its  IdP (Identity Provider) , your company can enable you to authenticate\nwith other services across the web. You configure  Cloud Manager  to authenticate using data passed from\nyour  IdP (Identity Provider) . If you or another user log in to  Cloud Manager  using one of these mapped\ndomains,  Cloud Manager  redirects you to the associated  IdP (Identity Provider) . After you\nauthenticate with the IdP, it returns you to the  Cloud Manager \napplication. To learn more about Domain Mapping, see\n Manage Domain Mapping for Federated Authentication . Users who log in through the  IdP (Identity Provider)  are granted access to the mapped\n Cloud Manager  organizations. You can choose what\n role  these users have within the\nselected organizations. To learn more about Organization Mapping, see\n Manage Organization Mapping for Federated Authentication . You can manage federated authentication from the  Federation\nManagement Console . You can access the console as long as you are an\n Organization Owner  in one or more organizations that are\ndelegating federation settings to the instance. To configure federated authentication in  Cloud Manager , you must: Once you set up your  IdP (Identity Provider) , you can optionally\n Map Organizations to your Identity Provider  to give your users a unified login\nexperience. End-to-end tutorials on implementing federated authentication: Link an Identity Provider to Cloud Manager  to ensure that your users are authenticated\nthrough your trusted  IdP (Identity Provider) . Map Domains to your Identity Provider  to streamline the login experience\nfor users from specified domains by authenticating them through an\n IdP (Identity Provider) . Azure AD Okta When you configure federated authentication and users authenticate\nthrough your  IdP (Identity Provider) ,  Cloud Manager   2FA (two-factor authentication)  for those users is bypassed. If a\nuser authenticates through your  IdP (Identity Provider)  and has  2FA (two-factor authentication)  for their  Cloud Manager \naccount enabled,  Cloud Manager  does not prompt the user for  2FA (two-factor authentication) . Instead,\nyou can configure your trusted  IdP (Identity Provider)  to prompt users for  2FA (two-factor authentication) .",
            "code": [],
            "preview": "To link your IdP (Identity Provider) to Cloud Manager you provide each with the appropriate\nmetadata. Once you have linked your IdP (Identity Provider) to Cloud Manager, map domains and\norganizations to your IdP (Identity Provider):",
            "tags": "connect, sso, single sign-on, fim, federated identity management",
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/federation-advanced-options",
            "title": "Advanced Options for Federated Authentication",
            "headings": [
                "Federation Management Access",
                "Navigate to the Settings page for your organization.",
                "In Setup Federated Login, click Visit Federation Management App.",
                "Assign a Default User Role for an Organization",
                "Click Organizations in the left navigation pane.",
                "Click the Name of the organization for which you want to assign default permissions.",
                "In the Default User Role dropdown, select the desired role.",
                "Restrict Access to an Organization by Domain",
                "Click Organizations in the left navigation pane.",
                "Click the Name of the organization for which you want to restrict access.",
                "In the Advanced Settings, toggle Restrict Access by Domain to On.",
                "Add domains to the approved list.",
                "Bypass SAML Mode",
                "Click Identity Providers in the left navigation pane.",
                "Locate the IdP (Identity Provider) for which you want to view / modify the Bypass SAML Mode setting.",
                "Toggle Bypass SAML Mode as desired.",
                "If you are disabling Bypass SAML Mode, click Disable in the confirmation dialog.",
                "Sign in After Enabling Bypass SAML Mode",
                "Restrict User Membership to the Federation",
                "Considerations",
                "Procedure",
                "Click Advanced Settings in the left navigation pane.",
                "Toggle Restrict Membership to On.",
                "View User Conflicts"
            ],
            "paragraphs": "You can configure advanced options in your Federated Authentication\ninstance for greater control over your federated users and\nauthentication flow. To open the  Federation Management Console : You can manage federated authentication from the  Federation\nManagement Console . You can access the console as long as you are an\n Organization Owner  in one or more organizations that are\ndelegating federation settings to the instance. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. authenticates through the  IdP (Identity Provider)  with a default\n role  in a mapped organization. You can\nselect different roles for different organizations. The selected role only applies to users who authenticate through the\n IdP (Identity Provider)  if they do not already have a  role \nin the organization. To remove a default user role, click the\n  next to the dropdown. You can specify a list of approved domains to prevent users outside of\nthose domains from accessing your organization. Use this list to define\na list of approved domains for your organization without needing to\ndirectly map those domains to your  IdP (Identity Provider) . From the  Federation Management Console : Once you enable the  Restrict Access by Domain  option: You can only invite new users to join your organization whose email\naddresses are in the approved list of domains. Users who are already in your organization whose usernames do not\ncontain a domain in the approved list are  not  restricted\naccess to your organization. Any domains which are mapped to your  IdP (Identity Provider)  are automatically added\nto the approved list. When you enable this setting,  Cloud Manager  automatically adds all\ndomains which are mapped to an  IdP (Identity Provider)  to the list of\n Approved Domains . To add domains to the approved list, you can either: Once you have added all desired domains, click  Submit . Click  Add Domains from Existing Members .  Cloud Manager \nopens a modal containing domains from existing user email\naddresses in your organization. Use this list to easily enable\naccess for users who are already part of your organization. Use the checkboxes to select the desired domains, then click\n Add  to add them to the approved list. Click  Add Domains .  Cloud Manager  opens a modal where\nyou can manually add domains the approved list. Enter the domain you want approve in the input box, then\nclick  Add . Repeat this process for each domain you\nwant to approve. If you have  restricted user membership to your federation ,  Cloud Manager  warns you if you add a\ndomain which is being used to access organizations outside of your\nfederation. Bypass SAML Mode  provides a login  URL (Uniform Resource Locator)  which\nbypasses your federated authentication, and instead allows you to\nauthenticate with your  Cloud Manager  credentials. If your Federated Authentication settings are not properly configured,\nyou may not be able to log in to  Cloud Manager  through your  IdP (Identity Provider) . The\n Bypass SAML Mode   URL (Uniform Resource Locator)  helps prevent you from being locked\nout of your  Cloud Manager  organization. While configuring and testing your\n IdP (Identity Provider) , we recommend that you make note of the  Bypass SAML\nMode  URL to ensure you can log in to  Cloud Manager  and properly configure\nyour Federated Authentication settings. Each  Bypass SAML Mode  URL is associated with an individual\n IdP (Identity Provider) , and corresponds to the IdP's  Login URL . Bypass SAML Mode  is enabled by default, however you may want\nto disable it as a security measure once you are confident that you have\nproperly configured your Federated Authentication. To set  Bypass SAML Mode , from the\n Federation Management Console : After you enable  Bypass SAML Mode , you must sign in to\n Cloud Manager  using: The  Bypass SAML Mode   URL (Uniform Resource Locator)  for your  IdP (Identity Provider) . A username that: Contains the  domain you mapped \nto your  IdP (Identity Provider) . You have used to sign in to  MongoDB Atlas  or  Cloud Manager  before you configured\nFederated Authentication. You can prevent users in your Federated Authentication instance from\ncreating new organizations or using their credentials to access\norganizations outside of the federation. Configure this setting for\nfull control of your federated users and to help ensure that federated\nusers only have access to desired  Cloud Manager  organizations. This setting applies to the  entire  federation, including all\nIdentity Providers and Organizations within the federation. Once you enable this setting: No users in your Federated Authentication instance can gain access\nto organizations outside of your federation. Similarly, no federated users can accept or receive invitations\nto join organizations outside of your federation. Users in your federation with the  Organization Owner \nrole can still create new organizations. These new organizations\nare automatically connected to your federation. Users in your federation without the  Organization Owner \nrole cannot create any new organizations. Users in your federation retain access to any organizations they had\naccess to prior to the membership restriction. From the  Federation Management Console : If your federation contains users who belong to organizations\noutside of your federation,  Cloud Manager  displays a warning banner. To\nreview the conflicting users, click  View User Conflicts . Cloud Manager  displays a modal with a list of users that conflict with\nthe federation restriction. Consider contacting these users to make\nthem aware of the restriction.",
            "code": [],
            "preview": "You can configure advanced options in your Federated Authentication\ninstance for greater control over your federated users and\nauthentication flow.",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/federated-auth-okta",
            "title": "Configure Federated Authentication from Okta",
            "headings": [
                "Prerequisites",
                "Procedures",
                "Configure Okta as an Identity Provider",
                "Open the Federation Management Console.",
                "Provide Okta credentials to MongoDB Cloud Manager.",
                "Click Finish.",
                "Configure your SAML integration.",
                "Click Next.",
                "Click Finish.",
                "Map your Domain",
                "Open the Federation Management Console.",
                "Enter domain mapping information.",
                "Choose how to verify your domain.",
                "Verify your domain.",
                "Associate Your Domain with Your Identity Provider",
                "Click Identity Providers in the left navigation.",
                "For the IdP (Identity Provider) you want to associate with your domain, click  next to Associated Domains.",
                "Select the domain you want to associate with the IdP (Identity Provider).",
                "Click Confirm.",
                "Test Your Domain Mapping",
                "In a private browser window, navigate to the Cloud Manager log in page.",
                "Enter a username (usually an email address) with your verified domain.",
                "Click Next.",
                "(Optional) Map an Organization",
                "Open the Federation Management Console.",
                "Connect an organization to the Federation Application.",
                "Apply an Identity Provider to the organization.",
                "Connect an organization to the Federation Application.",
                "(Optional) Configure Advanced Federated Authentication Options",
                "Sign in to Cloud Manager Using Your Login URL"
            ],
            "paragraphs": "This guide shows you how to configure federated authentication\nusing Okta as your  IdP (Identity Provider) . After integrating Okta and  Cloud Manager , you can use your\ncompany's credentials to log in to  Cloud Manager  and other MongoDB cloud\nservices. If you are using Okta's built-in MongoDB Cloud app, you can use\n Okta's documentation . If you are creating your own SAML app, use the procedures described here. To use Okta as an  IdP (Identity Provider)  for  Cloud Manager , you must have: An  Okta account . A custom, routable domain name. Throughout the following procedure, it is helpful to have one browser\ntab open to your  Federation Management Console  and one tab open to your Okta account. Download your  Okta  origination\ncertificate. In your  Okta  account, click\n Admin  in the upper right corner to access\nthe Administrator environment. In the left-hand pane, navigate to\n Applications  ->  Applications . Click  Create App Integration .\nSelect  SAML 2.0  for the\n Sign-in method  and click\n Next . Fill in the  App name  text field with\nyour desired application name. Optionally, add a logo image and set app\nvisibility. Click  Next . On the  Configure SAML  screen, enter the\nfollowing information: Leave the other fields empty or set to their default values\nand click  Next  at the bottom of the page. Field Value Single sign-on URL http://localhost Audience URI urn:idp:default These are placeholder values and are  not  intended\nfor use in production. You will replace them in a later\nstep. On the  Feedback  screen, select\n I'm an Okta customer adding an internal app  and\nclick  Finish . At the bottom of the page under the heading\n SAML Signing Certificates , locate the newest\ncertificate with a  Status  of  Active --this\nis the certificate you just created. Click  Actions  and select\n Download certificate  from the drop-down menu.\nThe generated certificate is a  .cert  file. You must\nconvert it to a  .pem  certificate for use later in this\nprocedure. To do this, open a terminal of your choosing and\nrun the following: Log in to\n MongoDB Cloud Manager . Use the drop-down at the top-left of  MongoDB Cloud Manager  to\nselect the organization for which you want to manage\nfederation settings. Click  Settings  in the left navigation\npane. In  Federated Authentication Settings , click\n Open Federation Management App . Click  Identity Providers  in the\nleft-hand pane. If you have previously configured an  IdP (Identity Provider) ,\nclick  Add Identity Provider  in the upper-right\ncorner of the page, then click\n Setup Identity Provider . If you have not\npreviously configured an  IdP (Identity Provider) , click\n Setup Identity Provider . On the  Configure Identity Provider \nscreen, enter the following information: Field Value Configuration Name Descriptive label that identifies the configuration Issuer URI Fill with Placeholder Values Single Sign-On URL Fill with Placeholder Values Identity Provider Signature Certificate Certificate you received from  Okta \nin a prior step Request Binding HTTP POST Response Signature Algorithm SHA-256 Click the  Next  button to see the values\nfor the  Okta  configuration. In your  Okta  account, return to the page\nfor your SAML application and ensure the  General \ntab is selected. In the  SAML Settings  pane, click\n Edit . On the  General Settings  page, click\n Next . On the  Configure SAML  screen, enter the\nfollowing information: Okta Data Field Value Single sign on URL Assertion Consumer Service URL  from the\n MongoDB Cloud Manager  FMC. Checkboxes: Check  Use this for Recipient URL and Destination URL . Clear  Allow this app to request other SSO URLs . Audience URI (SP Entity ID) Audience URI  from the  MongoDB Cloud Manager  FMC. Default RelayState Optionally, add a RelayState URL to your  IdP (Identity Provider)  to send users to a\nURL you choose and avoid unnecessary redirects after login.\nYou can use: Destination RelayState URL MongoDB  MongoDB Cloud Manager The  Login URL  that was generated for your identity\nprovider configuration in the  MongoDB Cloud Manager \n Federation Management App . MongoDB Support Portal MongoDB University MongoDB Community Forums MongoDB Feedback Engine MongoDB JIRA Name ID format Unspecified Application username Email Update application username on Create and update Click the  Click Show Advanced Settings  link in the\nOkta configuration page and ensure that the following values are\nset: Okta Data Field Value Response Signed Assertion Signature Signed Signature Algorithm RSA-SHA256 Digest Algorithm SHA256 Assertion Encryption Unencrypted Leave the remaining  Advanced Settings  fields in their\ndefault state. Scroll down to the  Attribute Statements (optional) \nsection and create four attributes with the following values: Name Name Format Value firstName Unspecified user.firstName lastName Unspecified user.lastName The values in the  Name  column are case-sensitive. Enter\nthem exactly as shown. These values may be different if Okta is connected to an Active\nDirectory. For the appropriate values, use the Active Directory\nfields that contain a user's first name, last name, and full\nemail address. (Optional) If you plan to use\n role mapping ,\nscroll down to the\n Group Attribute Statements (optional)  section\nand create an attribute with the following values: This filter matches all group names associated with the user.\nTo filter the group names sent to  MongoDB Cloud Manager  further,\nadjust the  Filter  and  Value  fields. Name Name Format Filter Value memberOf Unspecified Matches regex .* Click  Next  at the bottom of the\npage. On the  Feedback  screen,\nclick  Finish . Replace placeholder values in the  MongoDB Cloud Manager \n FMC (Federation Management Console) . :style:connected On the Okta application page, click\n View Setup Instructions \nin the middle of the page. In the  MongoDB Cloud Manager   FMC (Federation Management Console) , navigate to the\n Identity Providers  page. Locate your\n Okta  and click  Edit . Replace the placeholder values in the following\nfields: FMC Data Field Value Issuer URI Identity Provider Issuer  value from\nthe Okta Setup Instructions page. Single Sign-on URL Identity Provider Single Sign-On URL \nvalue from the Okta Setup Instructions page. Identity Provider Signature Certificate Copy the  X.509 Certificate  from the\nOkta Setup Instructions page and paste the contents\ndirectly. Assign users to your  Okta \napplication. :style:connected On the Okta application page, click the\n Assignments  tab. Ensure that all your  MongoDB Cloud Manager  organization users\nwho will use Okta are enrolled. Mapping your domain to the  IdP (Identity Provider)  lets  Cloud Manager  know that users from your\ndomain should be directed to the  Login URL  for\nyour identity provider configuration. When users visit the  Cloud Manager  login page, they enter their email address.\nIf the email domain is associated with an IdP, they are sent to the\nLogin URL for that IdP. Use the  Federation Management Console  to map your domain\nto the  IdP (Identity Provider) : You can map a single domain to multiple identity providers. If you\ndo, users who log in using the MongoDB Cloud console are\nautomatically redirected to the first matching  IdP (Identity Provider)  mapped to the\ndomain. To log in using an alternative identity provider, users must either: Initiate the MongoDB Cloud login through the desired  IdP (Identity Provider) , or Log in using the  Login URL  associated with the desired\n IdP (Identity Provider) . Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Add a Domain . On the  Domains  screen, click  Add Domain . Enter the following information for your domain mapping: Field Description Display Name Name to easily identify the domain. Domain Name Domain name  to\nmap. Click  Next . Select the appropriate tab based on whether you are verifying your\ndomain by uploading an  HTML (Hypertext Markup Language)  file or creating a  DNS (Domain Name System)  TXT record: You can choose the verification method once. It cannot be\nmodified. To select a different verification method, delete and\nrecreate the domain mapping. Upload an  HTML (Hypertext Markup Language)  file containing a verification key to verify\nthat you own your domain. Click  HTML File Upload . Click  Next . Download the  mongodb-site-verification.html  file\nthat  Cloud Manager  provides. Upload the  HTML (Hypertext Markup Language)  file to a web site on your domain. You\nmust be able to access the file at\n <https://host.domain>/mongodb-site-verification.html . Click  Finish . Create a  DNS (Domain Name System)  TXT record with your domain provider to verify\nthat you own your domain. Each  DNS (Domain Name System)  record associates a\nspecific  Cloud Manager  organization with a specific domain. Click  DNS Record . Click  Next . Copy the provided TXT record. The TXT record has the\nfollowing form: Log in to your domain name provider (such as GoDaddy.com or\nnetworksolutions.com). Add the TXT record that  Cloud Manager  provides to your domain. Return to  Cloud Manager  and click  Finish . The  Domains  screen displays both unverified and verified\ndomains you've mapped to your  IdP (Identity Provider) . To verify your domain, click the\ntarget domain's  Verify  button.  Cloud Manager  shows whether\nthe verification succeeded in a banner at the top of the screen. After successfully verifying your domain, use the\n Federation Management Console  to associate the domain with\n Okta : Use the  Federation Management Console  to test the\nintegration between your domain and  Okta : Before you begin testing, copy and save the\n Bypass SAML Mode   URL (Uniform Resource Locator)  for your  IdP (Identity Provider) . Use this\nURL to bypass federated authentication in the event that you are\nlocked out of your  Cloud Manager  organization. While testing, keep your session logged in to the\n Federation Management Console  to further ensure against\nlockouts. To learn more about  Bypass SAML Mode , see\n Bypass SAML Mode . If your verified domain is  mongodb.com , enter\n alice@mongodb.com . If you mapped your domain correctly, you're redirected to your  IdP (Identity Provider)  to\nauthenticate. If authenticating with your  IdP (Identity Provider)  succeeds, you're\nredirected back to  Cloud Manager . You can bypass the  Cloud Manager  log in page by navigating directly to\nyour  IdP (Identity Provider) 's  Login URL . The  Login URL \ntakes you directly to your  IdP (Identity Provider)  to authenticate. Use the  Federation Management Console  to assign your\ndomain's users access to specific  Cloud Manager  organizations: Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  View Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner . Organizations which are not already connected to the Federation\nApplication have  Connect  button in the\n Actions  column. Click the desired organization's  Connect  button. From the  Organizations  screen in the management console: Click the  Name  of the organization you want to map to\nan  IdP (Identity Provider) . On the  Identity Provider  screen, click\n Apply Identity Provider . Cloud Manager  directs you to the  Identity Providers  screen\nwhich shows all  IdPs (Identity Providers)  you have linked to  Cloud Manager . For the  IdP (Identity Provider)  you want to apply to the organization, click\n Modify . At the bottom of the  Edit Identity Provider  form,\nselect the organizations to which this  IdP (Identity Provider)  applies. Click  Next . Click  Finish . Click  Organizations  in the left navigation. In the list of  Organizations , ensure that your desired\norganization(s) now have the expected\n Identity Provider . You can configure the following advanced options for federated\nauthentication for greater control over your federated users and\nauthentication flow: Bypass SAML Mode The following advanced options for federated authentication require\nyou to  map an organization . Assign a Default User Role for an Organization Restrict Access to an Organization by Domain Restrict User Membership to the Federation All users you assigned to the Okta application can log in to\n Cloud Manager  using their  Okta  credentials on the\n Login URL . Users have access to the organizations you\nmapped to your  IdP (Identity Provider) . If you selected a default organization role, new users who log in to\n Cloud Manager  using the  Login URL  have the role you specified. You can map a single domain to multiple identity providers. If you\ndo, users who log in using the MongoDB Cloud console are\nautomatically redirected to the first matching  IdP (Identity Provider)  mapped to the\ndomain. To log in using an alternative identity provider, users must either: Initiate the MongoDB Cloud login through the desired  IdP (Identity Provider) , or Log in using the  Login URL  associated with the desired\n IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "sh",
                    "value": "openssl x509 -in path/to/mycert.crt -out path/to/mycert.pem -outform PEM"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/salesforce/exk1rw00vux0h1iFz297/sso/saml"
                },
                {
                    "lang": "none",
                    "value": "https://university.mongodb.com"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_communityforums_3/0oa3bqf5mlIQvkbmF297/aln3bqgadajdHoymn297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_uservoice_1/0oa27cs0zouYPwgj0297/aln27cvudlhBT7grX297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/mongodbexternal_mongodbjira_1/exk1s832qkFO3Rqox297/sso/saml"
                },
                {
                    "lang": "ini",
                    "value": "mongodb-site-verification=<32-character string>"
                }
            ],
            "preview": "This guide shows you how to configure federated authentication\nusing Okta as your IdP (Identity Provider).",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/manage-role-mapping",
            "title": "Manage Mapping Cloud Manager Roles to IdP Groups",
            "headings": [
                "Role Mapping Process",
                "Prerequisites",
                "Add Role Mappings in Your Organization and its Projects",
                "Open the Federation Management Console.",
                "Choose an organization in which you want to map roles.",
                "Navigate to the Create Role Mapping For Your Users page.",
                "Assign Cloud Manager organization roles to the desired IdP group.",
                "Assign project roles to the desired IdP group.",
                "Verify which roles have been assigned to the desired IdP group.",
                "Edit Role Mappings in Your Organization and its Projects",
                "Open the Federation Management Console.",
                "Choose an organization in which you want to edit role mappings.",
                "Navigate to the Create Role Mapping For Your Users page.",
                "Change Cloud Manager organization roles in the desired IdP group.",
                "Assign Cloud Manager project roles to the desired IdP group.",
                "Verify which Cloud Manager roles have been assigned to the desired IdP group.",
                "Remove One Role Mapping in Your Organization and its Projects",
                "Open the Federation Management Console.",
                "Choose an organization in which you want to remove role mappings.",
                "Navigate to the Organization Role Mappings page."
            ],
            "paragraphs": "You can map your  IdP (Identity Provider)  groups to  Cloud Manager  roles. This streamlines\nauthorization setup. You can grant one  IdP (Identity Provider)  group one or more roles to\nsimplify their access to  Cloud Manager  organizations, projects, and\nclusters. You can't edit roles for specific users on the\n Access Manager  page if you configure role mappings for\n IdP (Identity Provider)  groups. Cloud Manager  applies the role mappings when you log in. Cloud Manager  compares the  IdP (Identity Provider)  groups named  memberOf  to role\nmappings defined for your organizations. These organizations must\nuse the same  IdP (Identity Provider)  that the user did to authenticate. Cloud Manager  applies the mapped roles to federated users if you\ndefined role mappings. Cloud Manager  applies the default role if: You haven't defined role mappings, or Role mappings would result in a user without any roles. Organization role mappings define federated users'  Cloud Manager \naccess. If a federated user logs in but doesn't belong to an  IdP (Identity Provider) \ngroup mapped to a desired organization,  Cloud Manager  removes the\nmapped role from the user in that organization and its projects.\nThe federated user may still belong to other  IdP (Identity Provider)  groups. Consider a scenario where a user belongs to the  admin   IdP (Identity Provider) \ngroup. You have configured a role mapping of  admin  to the\n Organization Owner  in  Organization A . If you\nremove that user from the  admin   IdP (Identity Provider)  group,  Cloud Manager \ndeletes that users'  Organization Owner  role when\nthe user next logs in. Every project must have at least one user that has the\n Project Owner  role.  Cloud Manager  won't remove a role if\nremoving the role removes the last owner from a project. Every organization must have at least one user that has the\n Organization Owner  role.  Cloud Manager  won't remove a role if\nremoving the role removes the last owner from an organization. To complete this tutorial, you must have: Created an  IdP (Identity Provider)  application. This application must have a  SAML (Security Assertion Markup Language) \nattribute named to  memberOf . Map this attribute to the  IdP (Identity Provider) \nsource attributes for groups. This attribute links the  IdP (Identity Provider)  groups\nwith your  MongoDB Atlas  roles. Linked an  IdP to Cloud Manager . Mapped an  organization  to\nyour  IdP (Identity Provider) . Created at least one group in your  IdP (Identity Provider) . Added at least one user in your  IdP (Identity Provider)  application to a group you\ncreated. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Manage Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner  in a table. Organizations connected to federated authentication display\n  in the  Actions  column. Organizations unconnected to federated authentication display\n Connect  in the  Actions  column. To map roles in an organization: Click  Connect  to enable federated authentication\nfor that organization if needed. Click   and select  View . Click  Create Role Mappings . Cloud Manager  displays the  Organization Role Mappings \npage. Click  Create A Role Mapping . Cloud Manager  displays the  Create Role Mapping For Your\nUsers  page. At the  Map Group and Assign Roles  stage: Section Action Enter Group Name Type the name of the group as it is displayed in your  IdP (Identity Provider)  in\nthis field.  Cloud Manager  assigns this group to your  Cloud Manager \nrole. If the  IdP (Identity Provider)  group doesn't exist, you can't enter a new\ngroup name to create a new  IdP (Identity Provider)  group. If you use  Azure (Microsoft Azure)  as your  IdP (Identity Provider)  and you selected\n Group Id  as your source attribute, enter the\ngroup's Object ID in this field instead of the group's name.\nTo learn more, see :ref:cm-configure-azuread-idp`. Assign Organization Roles Click on each  Cloud Manager  organization role that you want to\nassign to the  IdP (Identity Provider)  group. If you don't need to assign any  Cloud Manager  project roles to this\n IdP (Identity Provider)  group, click  Finish . You can skip the rest of\nthis procedure. If you need to assign  Cloud Manager  project roles to this  IdP (Identity Provider)  group,\nclick  Next . The  Assign Project Roles  stage displays a table. This\ntable includes project names and the roles you can assign for those\nprojects. For each project, click the project roles that you want\nto assign to the  IdP (Identity Provider)  group. If you don't need to review the roles assigned to this\n IdP (Identity Provider)  group, click  Finish . You can skip the rest of\nthis procedure. If you need to review the roles assigned to this  IdP (Identity Provider)  group,\nclick  Next . The  Review and Confirm  stage displays the organization\nand project roles assigned to the  IdP (Identity Provider)  group. If you agree with the roles assigned to this\n IdP (Identity Provider)  group, click  Finish . If you need to change the roles assigned to this  IdP (Identity Provider)  group, click\n .  Cloud Manager  returns to the  Map\nGroup and Assign Roles  stage, described in step 4. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Manage Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner  in a table. Click   next to the desired  IdP (Identity Provider) \n Group Name  and select  View . Click  Create Role Mappings . Cloud Manager  displays the  Organization Role Mappings \npage. Click   to the right of the  IdP (Identity Provider)  group you\nwant to change. Cloud Manager  displays the  Edit Your Role Mapping For This\nOrganization  page. At the  Map Group and Assign Roles  stage: Section Action Enter Group Name Type the name of the group as it is displayed in your  IdP (Identity Provider)  in\nthis field.  Cloud Manager  assigns this group to your  Cloud Manager \nrole. If the  IdP (Identity Provider)  group doesn't exist, you can't enter a new\ngroup name to create a new  IdP (Identity Provider)  group. If you use  Azure (Microsoft Azure)  as your  IdP (Identity Provider)  and you selected\n Group Id  as your source attribute, enter the\ngroup's Object ID in this field instead of the group's name.\nTo learn more, see :ref:cm-configure-azuread-idp`. Assign Organization Roles Click on each  Cloud Manager  organization role that you want to\nassign to the  IdP (Identity Provider)  group. If you don't need to assign any  Cloud Manager  project roles to this\n IdP (Identity Provider)  group, click  Finish . You can skip the rest of\nthis procedure. If you need to assign  Cloud Manager  project roles to this  IdP (Identity Provider)  group,\nclick  Next . The  Assign Project Roles  stage displays a table. This\ntable includes project names and the roles you can assign for those\nprojects. For each project, click the project roles that you want\nto assign to the  IdP (Identity Provider)  group. If you don't need to review the roles assigned to this\n IdP (Identity Provider)  group, click  Finish . You can skip the rest of\nthis procedure. If you need to review the roles assigned to this  IdP (Identity Provider)  group,\nclick  Next . The  Review and Confirm  stage displays the organization\nand project roles assigned to the  IdP (Identity Provider)  group. If you agree with the roles assigned to this\n IdP (Identity Provider)  group, click  Finish . If you need to change the roles assigned to this  IdP (Identity Provider)  group, click\n .  Cloud Manager  returns to the  Map\nGroup and Assign Roles  stage, described in step 4. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Manage Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner  in a table. Organizations connected to federated authentication display\n  in the  Actions  column. Organizations unconnected to federated authentication display\n Connect  in the  Actions  column. To map roles in an organization: Click  Connect  to enable federated authentication\nfor that organization if needed. Click   and select  View . Click  Create Role Mappings . Cloud Manager  displays the  Organization Role Mappings \npage. Click   to the right of the  IdP (Identity Provider)  group you\nwant to remove. Cloud Manager  displays the\n Delete role mappings for this group  modal. Click  Delete  to remove all role mappings from this\n IdP (Identity Provider)  group. If you don't want to remove all role mappings, click\n Cancel .",
            "code": [],
            "preview": "You can map your IdP (Identity Provider) groups to Cloud Manager roles. This streamlines\nauthorization setup. You can grant one IdP (Identity Provider) group one or more roles to\nsimplify their access to Cloud Manager organizations, projects, and\nclusters.",
            "tags": "connect, authorization, federated authentication",
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/manage-domain-mapping",
            "title": "Manage Domain Mapping for Federated Authentication",
            "headings": [
                "Prerequisites",
                "Federation Management Access",
                "Map a Domain to Your Identity Provider",
                "Open the Federation Management Console.",
                "Enter domain mapping information.",
                "Choose how to verify your domain.",
                "Verify your domain.",
                "Associate Your Domain with Your Identity Provider",
                "Click Identity Providers in the left navigation.",
                "For the IdP (Identity Provider) you want to associate with your domain, click  next to Associated Domains.",
                "Select the domain you want to associate with the IdP (Identity Provider).",
                "Click Confirm.",
                "Test Your Domain Mapping",
                "In a private browser window, navigate to the Cloud Manager log in page.",
                "Enter a username (usually an email address) with your verified domain.",
                "Click Next.",
                "Delete a Domain Mapping",
                "Open the Federation Management Console",
                "Navigate to the Settings page for your organization.",
                "In Setup Federated Login, click Visit Federation Management App.",
                "Delete the Domain",
                "Open the Federation Management Console.",
                "Delete the domain."
            ],
            "paragraphs": "You can map domains to your  IdP (Identity Provider)  to streamline the login experience\nfor users from specified domains by authenticating them through an\n IdP (Identity Provider) . Domain mapping ensures that all users with a particular domain\nin their email address have the same login experience. To map a domain to your  IdP (Identity Provider) , you must verify that you own the\ndomain. You can either: You can map a single domain to multiple identity providers. If you\ndo, users who log in using the MongoDB Cloud console are\nautomatically redirected to the first matching  IdP (Identity Provider)  mapped to the\ndomain. To log in using an alternative identity provider, users must either: Initiate the MongoDB Cloud login through the desired  IdP (Identity Provider) , or Log in using the  Login URL  associated with the desired\n IdP (Identity Provider) . Upload an  HTML (Hypertext Markup Language)  file containing a verification key to a host in your\ndomain or Create a  DNS (Domain Name System)   TXT record \nthat contains a verification key. To complete this tutorial, you must have already linked an  IdP (Identity Provider)  to\n Cloud Manager . To learn how to link an  IdP (Identity Provider)  to  Cloud Manager , see\n Manage Identity Providers . You can manage federated authentication from the  Federation\nManagement Console . You can access the console as long as you are an\n Organization Owner  in one or more organizations that are\ndelegating federation settings to the instance. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Add a Domain . On the  Domains  screen, click  Add Domain . Enter the following information for your domain mapping: Field Description Display Name Name to easily identify the domain. Domain Name Domain name  to\nmap. Click  Next . Select the appropriate tab based on whether you are verifying your\ndomain by uploading an  HTML (Hypertext Markup Language)  file or creating a  DNS (Domain Name System)  TXT record: You can choose the verification method once. It cannot be\nmodified. To select a different verification method, delete and\nrecreate the domain mapping. Upload an  HTML (Hypertext Markup Language)  file containing a verification key to verify\nthat you own your domain. Click  HTML File Upload . Click  Next . Download the  mongodb-site-verification.html  file\nthat  Cloud Manager  provides. Upload the  HTML (Hypertext Markup Language)  file to a web site on your domain. You\nmust be able to access the file at\n <https://host.domain>/mongodb-site-verification.html . Click  Finish . Create a  DNS (Domain Name System)  TXT record with your domain provider to verify\nthat you own your domain. Each  DNS (Domain Name System)  record associates a\nspecific  Cloud Manager  organization with a specific domain. Click  DNS Record . Click  Next . Copy the provided TXT record. The TXT record has the\nfollowing form: Log in to your domain name provider (such as GoDaddy.com or\nnetworksolutions.com). Add the TXT record that  Cloud Manager  provides to your domain. Return to  Cloud Manager  and click  Finish . The  Domains  screen displays both unverified and verified\ndomains you've mapped to your  IdP (Identity Provider) . To verify your domain, click the\ntarget domain's  Verify  button.  Cloud Manager  shows whether\nthe verification succeeded in a banner at the top of the screen. After successfully verifying your domain, associate the domain with\nyour  IdP (Identity Provider) : To test the integration between your domain and your  IdP (Identity Provider) : Before you begin testing, copy and save the\n Bypass SAML Mode   URL (Uniform Resource Locator)  for your  IdP (Identity Provider) . Use this\nURL to bypass federated authentication in the event that you are\nlocked out of your  Cloud Manager  organization. While testing, keep your session logged in to the\n Federation Management Console  to further ensure against\nlockouts. To learn more about  Bypass SAML Mode , see\n Bypass SAML Mode . If your verified domain is  mongodb.com , enter\n alice@mongodb.com . If you mapped your domain correctly, you're redirected to your  IdP (Identity Provider)  to\nauthenticate. If authenticating with your  IdP (Identity Provider)  succeeds, you're\nredirected back to  Cloud Manager . You can bypass the  Cloud Manager  log in page by navigating directly to\nyour  IdP (Identity Provider) 's  Login URL . The  Login URL \ntakes you directly to your  IdP (Identity Provider)  to authenticate. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . To delete a domain from the Federation Management instance: You cannot delete a domain mapping if it is\n associated with an IdP .\nTo disassociate a domain from an IdP: From the management console, click  Identity Providers \nin the left navigation. For the  IdP (Identity Provider)  you want to disassociate from your domain, click\n  next to  Associated Domains . Deselect the domain desired domain. Click  Confirm . Click  Add a Domain . Open the  Actions  menu for the domain you want to delete. Click  Delete . Click  Confirm .",
            "code": [
                {
                    "lang": "ini",
                    "value": "mongodb-site-verification=<32-character string>"
                }
            ],
            "preview": "You can map domains to your IdP (Identity Provider) to streamline the login experience\nfor users from specified domains by authenticating them through an\nIdP (Identity Provider). Domain mapping ensures that all users with a particular domain\nin their email address have the same login experience.",
            "tags": "connect",
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/manage-org-mapping",
            "title": "Manage Organization Mapping for Federated Authentication",
            "headings": [
                "Prerequisites",
                "Federation Management Access",
                "Map an Organization to your Identity Provider",
                "Open the Federation Management Console.",
                "Connect an organization to the Federation Application.",
                "Apply an Identity Provider to the organization.",
                "Connect an organization to the Federation Application.",
                "Change an Organization's Mapped Identity Provider",
                "Unmap the current Identity Provider.",
                "Map the new Identity Provider.",
                "(Optional) Configure Advanced Options for Your Organization",
                "Assign a Default User Role for Your Organization",
                "Restrict Access to an Organization by Domain",
                "Disconnect an Organization from the Federation Application",
                "Click View Organizations.",
                "Open the Actions dropdown for the organization you want to disconnect.",
                "Click Disconnect.",
                "Click Confirm."
            ],
            "paragraphs": "When you map organizations to your Identity Provider,  Cloud Manager  grants\nusers who authenticate through the  IdP (Identity Provider)  membership in the selected\norganizations. You can give these users a default\n role  in the mapped organizations.\nOrganization mapping lets you configure a single  IdP (Identity Provider)  to grant users\naccess to multiple  Cloud Manager  organizations. You can apply the same  IdP (Identity Provider)  to multiple organizations. You can\nassign each organization a single  IdP (Identity Provider) . To complete this tutorial, you must have already linked an  IdP (Identity Provider)  to\n Cloud Manager  and mapped one or more domains to that  IdP (Identity Provider) .\nFor instructions on these procedures, see: Manage Identity Providers Manage Domain Mapping for Federated Authentication You can manage federated authentication from the  Federation\nManagement Console . You can access the console as long as you are an\n Organization Owner  in one or more organizations that are\ndelegating federation settings to the instance. MongoDB Cloud Manager  creates an  Organization's IdP certificate is about to expire  alert automatically when you map an\norganization to an  IdP (Identity Provider)  provider. If you remove the mapping,\n MongoDB Cloud Manager  deletes all instances of this alert. Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  View Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner . Organizations which are not already connected to the Federation\nApplication have  Connect  button in the\n Actions  column. Click the desired organization's  Connect  button. From the  Organizations  screen in the management console: Click the  Name  of the organization you want to map to\nan  IdP (Identity Provider) . On the  Identity Provider  screen, click\n Apply Identity Provider . Cloud Manager  directs you to the  Identity Providers  screen\nwhich shows all  IdPs (Identity Providers)  you have linked to  Cloud Manager . For the  IdP (Identity Provider)  you want to apply to the organization, click\n Modify . At the bottom of the  Edit Identity Provider  form,\nselect the organizations to which this  IdP (Identity Provider)  applies. Click  Next . Click  Finish . Click  Organizations  in the left navigation. In the list of  Organizations , ensure that your desired\norganization(s) now have the expected\n Identity Provider . Reconfigure your  IdP (Identity Provider)  to change the organizations to which it's mapped. Click  Organizations  in the left navigation. Click the  Identity Provider  of the organization whose\n IdP (Identity Provider)  you wish to change. Click  Modify  for the  IdP (Identity Provider)  which is currently mapped to\nthe organization. At the bottom of the  Edit Identity Provider  form,\ndeselect the organization. Click  Next . Click  Finish . Click  Modify  for the  IdP (Identity Provider)  you want to map to the\norganization. At the bottom of the  Edit Identity Provider  form,\nselect the organization. Click  Next . Click  Finish . The following optional settings provide even greater control over user\nmanagement and authentication in your organization. You can assign users who authenticate through the  IdP (Identity Provider)  a default\n role  in a mapped organization. Configuring\nthis option ensures that users who authenticate through your  IdP (Identity Provider)  have\nthe same set of permissions. This setting is not required for\norganization mapping. For instructions on assigning a default role, see\n Assign a Default User Role for an Organization . The selected role only applies to users who authenticate through the\n IdP (Identity Provider)  if they do not already have a  role \nin the organization. You can restrict access to your organization to an approved list of\ndomains. This allows you to set the domains from which organization\nusers can login without needing to directly map those domains to your\n IdP (Identity Provider) . For instructions on restricting access by domain, see\n Restrict Access to an Organization by Domain . When you disconnect an organization from the Federation Application,\n Cloud Manager  no longer grants membership or a default\n organization role  to users who authenticate\nthrough the  IdP (Identity Provider) . From the  Federation Management Console :",
            "code": [],
            "preview": "When you map organizations to your Identity Provider, Cloud Manager grants\nusers who authenticate through the IdP (Identity Provider) membership in the selected\norganizations. You can give these users a default\nrole in the mapped organizations.\nOrganization mapping lets you configure a single IdP (Identity Provider) to grant users\naccess to multiple Cloud Manager organizations.",
            "tags": "connect",
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api-error-codes",
            "title": "Cloud Manager Administration API Error Codes",
            "headings": [],
            "paragraphs": "If you encounter an error when issuing a request to the Cloud Manager Administration API,\n Cloud Manager  returns one of the following error codes: Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Error HTTP Code Description 402 Group has an unpaid invoice that is more than 30 days old. 400 Acknowledgement comment too long. It must not exceed\n <number>  characters. 409 The address  <address>  is already on the access list. 404 No alert configuration with ID  <ID>  exists in group\n <group> . 404 No alert with ID  <ID>  exists in group  <group> . 401 API Keys cannot create  groups . 401 API Keys cannot create  organizations . 400 No API Key with ID {API-KEY-ID} exists. 400 API Key  access lists are only\naccessible by the API Key itself or by a user administrator. 404 The specified IP address does not exist in the\ncorresponding  API Key  access list. 400 The attribute  <attribute>  cannot be negative or zero. 400 The attribute  <attribute>  cannot be negative. 400 The attribute  <attribute>  is read-only and cannot be\nchanged by the user. 400 Authentication mechanism  <mechanism>  requires SSL. 404 No automation configuration exists for group  <group> . 404 No backup configuration exists for cluster  <cluster>  in\ngroup  <group> . 400 User  <username>  is not in group  <group> . 400 No user with username  <username>  exists. 400 Should not specify both the IP address and the CIDR block. 400 The specified username  <username>  is not allowed. 400 The specified address cannot be added to access list.\n Cloud Manager  does not allow certain IP addresses to be\nadded to the access list, such as  0.0.0.0/32 . 403 Adding a global role is not supported. 403 Current user is not authorized to change group name. 409 Cannot close account while the group has active backups;\nplease terminate all backups. 402 Cannot close account because there are failed invoices. 403 Cannot individually delete a snapshot that is part of a\ncluster snapshot. 403 Cannot remove the last owner from the group. If you are\ntrying to close the group by removing all users, please\ndelete the group instead. 403 You cannot remove all roles from a user. Specify at least one\nrole. 403 Cannot demote the last owner of the organization. 403 Cannot demote the last owner of the group. 400 Cannot distribute subnets. There must be at least one subnet\navailable. 403 Cannot download a log collection request job in the\n EXPIRED  state. 403 Cannot download a log collection request job in the\n IN_PROGRESS  state. 403 Cannot extend duration of logs that have already expired. 409 Cannot get backup configuration without cluster being\nmonitored. 500 Cannot get volume size limits for volume type  <type> . 403 Cannot modify host  <host>  because it is managed by\nAutomation. 409 Cannot modify backup configuration for individual shard; use\ncluster ID  <ID>  for entire cluster. 400 Cannot remove caller's IP address  <address>  from the\naccess list. 409 Username and password cannot be manually set for a managed\ncluster. 400 Cluster checkpoint interval can only be set for sharded\nclusters, not replica sets. 400 Username and password fields are only supported for\nauthentication mechanism  MONGODB_CR  or  PLAIN . 400 Cannot change password unless authentication mechanism is\n MONGODB_CR  or  PLAIN . 400 Setting the point in time window is not allowed. 400 Setting the reference point time of day is not allowed. 409 Cannot start backup unless the cluster is in the  INACTIVE \nor  STOPPED  state. 402 Cannot start backup without providing billing information. 409 Cannot start restore job for deleted cluster snapshot. 409 Cannot start restore job for deleted snapshot. 409 Cannot start restore job for incomplete cluster snapshot. 409 Cannot stop backup unless the cluster is in the STARTED\nstate. 409 Cannot terminate backup unless the cluster is in the STOPPED\nstate. 404 No checkpoint with ID  <ID>  exists for cluster\n <cluster> . 404 No cluster with ID  <ID>  exists in group  <group> . 404 No restore job with ID  <ID>  exists for config server\n <config server> . 404 No snapshot with ID  <ID>  exists for config server\n <config server> . 400 Metric  <metric>  requires a database name to be provided. 404 No database with name  <name>  exists on host  <host> . 400 The limit check failed while trying to add the requested\nresource. Please try again. 400 Failed to send an invitation to  <username>  to join\n <group> . 400 Metric  <metric>  requires a device name to be provided. 404 No device with name  <name>  exists on host  <host> . 400 The domain name for the machine is too long. Try shortening\nthe hostname prefix. 400 Two or more of the IP addresses being added to the access list\nare the same. 400 Email and/or SMS must be enabled for group notifications. 400 Email and/or SMS must be enabled for user notifications. 400 Expiration date for log collection request job must be in\nthe future. 400 Expiration date for log collection request job can only be as\nfar as 6 months in the future. 402 Cannot close account due to a charge failure. 403 Feature not supported by current account level. 400 Timestamp must be whole number of seconds. 400 The specified event type  <type>  can only be used for\nglobal alerts. 409 A group with name  <name>  already exists. 404 No group with  API (Application Programming Interface)  Key  <key>  exists. 400 The specified group ID  <ID>  does not match the URL. 404 No group with name  <name>  exists. 404 No group with ID  <ID>  exists. 404 No last ping exists for host  <host>  in group  <group> . 404 No host with ID  <ID>  exists in group  <group> . 404 No host with hostname and port  <name:port>  exists in\ngroup  <group> . 400 Instance must be created with exactly one SSH-enabled\nsecurity group. 400 An invalid agent type name  <name>  was specified. 404 An invalid alert configuration ID  <ID>  was specified. 404 An invalid alert ID  <ID>  was specified. 400 An invalid alert status  <status>  was specified. 400 Invalid attribute  <attribute>  specified. 400 Invalid authentication mechanism  <mechanism> . 400 An invalid authentication type name  <name>  was specified. 404 An invalid checkpoint ID  <ID>  was specified. 400 Cluster checkpoint interval must be 15, 30, or 60 minutes. 404 An invalid cluster ID  <ID>  was specified. 400 Daily snapshot retention period must be between 1 and 365\ndays. 400 An invalid directory name  <name>  was specified. 400 An invalid email address was specified. 400 An invalid enumeration value  <value>  was specified. 400 Event type  <type>  not supported for alerts. 400 Backup configuration cannot specify both included namespaces\nand excluded namespaces. 400 An invalid granularity  <granularity>  was specified. 404 An invalid group ID  <ID>  was specified. 400 Group name cannot contain \"10gen-\" or \"-10gen\". 400 An invalid group name  <name>  was specified. 400 A group tag must be a string (alphanumeric, periods,\nunderscores, and dashes) of length  <MAX_TAG_LENGTH> \ncharacters or less. 400 Invalid host port  <number> . 400 Invalid hostname prefix  <prefix> . It must contain only\nalphanumeric characters and hyphens, may not begin or end\nwith a hyphen (\"-\"), and must not be more than 63 characters\nlong. 400 Invalid hostname  <name> . 400 Invalid instance count  <number> . It must be between\n <number>  and  <number> . 400 Invalid instance type  <type> . It must be one of the\nlisted instance types returned in the machine configuration\noptions. 400 The IOPS value  <number>  is not valid. The maximum ratio\nbetween the IOPS value and the volume size is 30 : 1. 400 The IOPS value  <number>  is not valid. It must be between\nthe minimum and maximum values returned in the machine\nconfiguration options. 404 An invalid restore job ID  <ID>  was specified. 400 Received JSON for the  <attribute>  attribute does not\nmatch expected format. 400 Received JSON does not match expected format. 404 An invalid key ID  <ID>  was specified. 400 Log request size must be a positive number. 404 An invalid machine ID  <ID>  was specified. 400 The specified machine image is invalid. 404 An invalid metric name  <name>  was specified. 400 The username  <username>  is not a valid MongoDB login. 400 Monthly snapshot retention period must be between 1 and 36\nmonths. 400 An invalid mount location  <location>  was specified. The\nmount location must be equal to or a parent of\n <location> . 400 Operator  <operator>  is not compatible with event type\n <type> . 400 An invalid period was specified. 400 Invalid parameter combination specified for provider\n <provider> . 400 Invalid query parameter  <parameter>  specified. 400 Snapshot schedule reference hour must be between 0 and 23,\ninclusive. 400 Snapshot schedule reference minute must be between 0 and 59,\ninclusive. 400 Snapshot schedule timezone offset must conform to ISO-8601\ntime offset format, such as \"+0000\". 400 No region  <region>  exists for provider  <provider> . 400 Role  <role>  is invalid for group  <group> . 400 Invalid root volume size  <number> . It must be between the\nminimum and maximum values returned in the machine\nconfiguration options. 400 Security group  <group>  is invalid. It must be one of the\nsecurity groups returned in the machine configuration\noptions. 404 An invalid snapshot ID  <ID>  was specified. 400 Snapshot interval must be 6, 8, 12, or 24 hours. 400 Snapshot retention period must be between 1 and 5 days. 400 An invalid SSH key was specified. 404 An invalid user ID  <ID>  was specified. 400 The specified username is not a valid email address. 400 No user  <username>  exists. 400 Invalid volume name  <name> . It must be one of the listed\nvolume names returned in the machine configuration options. 400 Invalid or unavailable VPC  <VPC>  or subnet  <subnet> . 400 Weekly snapshot retention period must be between 1 and 52\nweeks. 404 An invalid maintenance window ID  <ID>  was specified. 400 No zone  <zone>  exists for region  <region> . 403 IP address  <address>  is not allowed to access this\nresource. 404 No last ping exists for group  <group> . 409 Cannot set HTTP link expiration time after snapshot deletion\ntime. 404 No job with the given ID exists in this group. 400 No machine configuration parameters exist for provider\n <provider> . 404 No maintenance window with ID  <ID>  exists in group\n <group> . 400 Maintenance window configurations must specify a start date\nbefore their end date. 400 Maximum number of users per group ( <number> ) in  <ID> \nexceeded while trying to add users. 400 Maximum number of users per organization ( <number> ) in\n <ID>  exceeded while trying to add users. 400 Maximum number of teams per group ( <number> ) in  <ID> \nexceeded while trying to add teams. 400 Maximum number of  Cloud Manager  users per team exceeded while trying\nto add users. Teams are limited to 250 users. 400 Maximum number of teams per organization exceeded while\ntrying to add team. Organizations are limited to 250 teams. 400 The metric threshold should only be specific for host metric\nalerts. 404 No alert configuration ID was found. 400 The required attribute  <attribute>  was not specified. 400 The attributes  <attribute>  and  <attribute>  must be\nspecified for authentication type  <type> . 400 Authentication mechanism  <mechanism>  requires username\nand password. 400 Maintenance window configurations must specify at least one\nalert type. 400 Maintenance window configurations must specify an end date. 400 Maintenance window configurations must specify a start date. 400 A metric threshold must be specified for host metric alerts. 400 At least one notification must be specified for an alert\nconfiguration. 400 Either the  <attribute>  attribute or the  <attribute> \nattribute must be specified. 400 Either the  <attribute>  attribute, the  <attribute> \nattribute, or the  <attribute>  attribute must be\nspecified. 400 The required attribute  <attribute>  was incorrectly\nspecified or omitted. 400 Username cannot be changed without specifying password. 400 The required query parameter  <parameter>  was not\nspecified. 400 Group notifications cannot specify an empty list of roles. 409 Changing the storage engine will require a resync, so a sync\nsource must be provided. 400 A threshold must be specified for member health alerts. 409 Multiple groups exist with the specified name. 400 Either the  <parameter>  query parameter or the\n <parameter>  query parameter but not both should be\nspecified. 409 A suitable checkpoint could not be found for the specified\npoint-in-time restore. 401 No current user. 403 The API is not supported for the Free Tier of Cloud Manager. 409 No group SSH key exists for group  <group> . 402 No payment information was found for group  <group> . 400 Could not retrieve availability zones from  <account> \naccount. 400 Could not retrieve available instance types from\n <account>  account. 400 Could not retrieve security groups from  <account> \naccount. 404 No SSH keys found in group  <group> . 400 The specified metric requires a nonzero delay for all\nnotifications. 404 Host  <host>  is not an SCCC config server. 404 Metric  <metric>  is neither a database nor a disk metric. 401 The currently logged in user does not have the global user\nadministrator. 401 The currently logged in user does not have the user\nadministrator role in group  <group> . 401 The current user is not in the group, or the group does not\nexist. 401 The currently logged in user does not have the administrator\nrole in organization  <organization> . 400 Only sharded clusters and replica sets can be patched. 401 The currently logged in user does not have the user\nadministrator role for any group, team, or organization\ncontaining user  <username> . 400 Notifications must have an internal of at least 5 minutes. 400 At least one notification is a type that is only available\nfor global alert configurations. 400 A log collection request job can only be restarted if it is\nin the  FAILED  state. 404 No organization with ID  <ID>  exists. 401 Account failed to authenticate with  <credentials> . 404 No provider configuration with ID  <ID>  exists for\nprovider  <provider> . 404 No provider configuration exists for provider  <provider> . 404 No provider  <provider>  exists. 404 Provider  <provider>  not currently supported. 404 No provision machine job with ID  <ID>  exists in group\n <group> . 409 Provisioned machine with ID  <ID>  could not terminate\nbecause a MongoDB process, Monitoring, or Backup\nis currently running on the machine. 404 No provisioned machine with ID  <ID>  exists in group\n <group> . 500 Unable to retrieve configuration options from the provider. 429 Resource  <resource>  is limited to  <number>  requests\nevery  <number>  minutes. 400 Rate limit of  <number>  invitations per  <number> \nminutes exceeded. 404 Cannot find resource  <resource> . 404 No restore job with ID  <ID>  exists in group  <group> . 404 No restore job with ID  <ID>  exists for cluster\n <cluster> . 400 Group-specific role  <role>  requires a group ID. 400 Global role  <role>  cannot be specified with a group ID. 400 Role  <role>  cannot be specified with an organization ID. 400 Role  <role>  requires an organization ID. 403 Roles specified for user. 404 No snapshot with ID  <ID>  exists for cluster\n <cluster> . 409 An SSH key with the name  <name>  already exists. 404 No SSH key with name  <name>  exists. 404 No SSH key with ID  <ID>  exists. 400 A threshold should only be present for member health alerts. 400 At most one group notification can be specified for an alert\nconfiguration. 400 Groups are limited to  <MAX_TAGS_PER_GROUP>  tags. 400 Mode  TOTAL  is no longer supported. 500 Unexpected error. 400 Threshold units cannot be converted to metric units. Automation agent version is less than the accepted minimum\nversion. 400 The specified delivery method is not supported. 403 Operation not supported for current configuration. 403 Operation not supported for current plan. 400 Notification type  <type>  is unsupported. 403 Setting the backup state to  <state>  is not supported. 409 Cluster checkpoint interval not supported by the Backup\nversion;  please upgrade . 409 Excluded namespaces are not supported by this Backup\nversion; please upgrade. 409 Included namespaces are not supported by this Backup\nversion;\n please upgrade . 409 A user with username  <username>  already exists. 404 No user with ID  <ID>  exists. 404 User  <username>  is not in group  <group> . 401 Current user is not authorized to perform this action. 404 No user with username  <username>  exists. 400 Volume encryption is not available on instances of type\n <type> . 400 Volume optimization is not available on instances of type\n <type> . 400 The specified password is not strong enough. 400 Webhook URL must be set in the group before adding webhook\nnotifications. 401 Cannot retrieve access list for user  <username> , which is not\ncurrently logged in. 404 IP address  <address>  not on access list for user\n <username> .",
            "code": [],
            "preview": "If you encounter an error when issuing a request to the Cloud Manager Administration API,\nCloud Manager returns one of the following error codes:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/federated-auth-azure-ad",
            "title": "Configure Federated Authentication from Azure AD",
            "headings": [
                "Limitations",
                "Prerequisites",
                "Procedures",
                "Add Domain users",
                "Add your custom domain to Azure AD.",
                "Create Azure AD (Azure Active Directory) Users.",
                "Configure Azure AD (Azure Active Directory) as an Identity Provider",
                "Add the MongoDB Cloud app from the gallery.",
                "Assign users to the application.",
                "Navigate to the SAML configuration page to begin configuring single sign-on.",
                "Set temporary values for the Identifier and Reply URL.",
                "Download the SAML signing certificate encoded in Base64.",
                "Optional: Add group claims to the SAML token.",
                "Copy the values of the Login URL and Azure AD Identifier fields.",
                "Add a non-gallery application to Azure AD (Azure Active Directory).",
                "Assign users to the application.",
                "Navigate to the SAML configuration page to begin configuring single sign-on.",
                "Set temporary values for the Identifier and Reply URL.",
                "Optional: Delete the Additional Claims.",
                "Edit the Unique User Identifier required claim.",
                "Add user claims to the SAML token.",
                "Optional: Add group claims to the SAML token.",
                "Verify that the SAML (Security Assertion Markup Language) signing certificate uses SHA-256.",
                "Download the SAML signing certificate encoded in Base64.",
                "Copy the values of the Login URL and Azure AD Identifier fields.",
                "Add Azure AD (Azure Active Directory) as an Identity Provider in Cloud Manager",
                "Open the Federation Management Console.",
                "Add Azure AD (Azure Active Directory) to Cloud Manager as an Identity Provider.",
                "Download the metadata file with details that recognize MongoDB as a Service Provider.",
                "Upload the metadata file to Azure (Microsoft Azure) to finish configuring Azure AD (Azure Active Directory) as an IdP (Identity Provider).",
                "Map your Domain",
                "Open the Federation Management Console.",
                "Enter domain mapping information.",
                "Choose how to verify your domain.",
                "Verify your domain.",
                "Associate Your Domain with Your Identity Provider",
                "Click Identity Providers in the left navigation.",
                "For the IdP (Identity Provider) you want to associate with your domain, click  next to Associated Domains.",
                "Select the domain you want to associate with the IdP (Identity Provider).",
                "Click Confirm.",
                "Test Your Domain Mapping",
                "In a private browser window, navigate to the Cloud Manager log in page.",
                "Enter a username (usually an email address) with your verified domain.",
                "Click Next.",
                "(Optional) Map an Organization",
                "Open the Federation Management Console.",
                "Connect an organization to the Federation Application.",
                "Apply an Identity Provider to the organization.",
                "Connect an organization to the Federation Application.",
                "(Optional) Configure Advanced Federated Authentication Options",
                "Sign in to Cloud Manager Using Your Login URL"
            ],
            "paragraphs": "This guide shows you how to configure federated authentication\nusing  Azure AD (Azure Active Directory)  as your  IdP (Identity Provider) . After integrating  Azure AD (Azure Active Directory)  and  Cloud Manager , you can use your\ncompany's credentials to log in to  Cloud Manager  and other MongoDB cloud\nservices. Cloud Manager  doesn't support single sign-on integration for database users. To use  Azure AD (Azure Active Directory)  as an  IdP (Identity Provider)  for  Cloud Manager , you must have: An  Azure (Microsoft Azure)  subscription. To obtain a subscription, visit the\n Microsoft Azure portal . An  Azure AD (Azure Active Directory)  tenant associated with your subscription. For\ninformation about setting up an  Azure AD (Azure Active Directory)  tenant, see the\n Azure AD Documentation . Global Administrator  privileges in your Azure AD tenant. A custom, routable domain name. If you haven't already, use the  Azure (Microsoft Azure)  console to add your custom\ndomain name to  Azure AD (Azure Active Directory)  and create users: Add your custom domain name to\n Azure AD (Azure Active Directory)  to create users that belong\nto your domain. After you add your domain, you must also add the\n Azure AD (Azure Active Directory)  DNS information in a  TXT \nrecord with your DNS provider and verify the configuration. To add your custom domain to\n Azure AD (Azure Active Directory) , see the\n Azure documentation . If they don't exist already, create users in  Azure AD (Azure Active Directory)  that you\nwant to grant database access to. Users must belong to the custom\ndomain you added to  Azure AD (Azure Active Directory) . To create  Azure AD (Azure Active Directory)  users, see the  Azure documentation . Use the  Azure (Microsoft Azure)  console to configure  Azure AD (Azure Active Directory)  as a  SAML (Security Assertion Markup Language)   IdP (Identity Provider) .\nYou can either add the MongoDB Cloud app from the Gallery or configure\nan application manually. To add the MongoDB Cloud app to your\n Azure AD (Azure Active Directory)  tenant, see the\n Azure documentation . MongoDB Cloud on the Azure Marketplace Assign users to the application. These users will have access to\n Cloud Manager  and other MongoDB cloud services when you complete the\ntutorial. To assign  Azure AD (Azure Active Directory)  users to an application, see the\n Azure documentation . To navigate to the  SAML (Security Assertion Markup Language)  configuration page, see the\n Azure documentation . To generate a valid  SAML (Security Assertion Markup Language)  signing certificate, you must assign\ntemporary values to the  Identifier  and  Reply URL  for your\n Azure AD (Azure Active Directory)  enterprise application. If\nyou download the certificate before setting these values, the\ndownloaded certificate won't be unique and you must download the\ncertificate again after setting these values. To set the temporary values: Click  Edit  in Section 1. Remove any existing default values and set the following temporary\nvalues: Setting Temporary Value Identifier (Entity ID) https://www.okta.com/saml2/service-provider/MongoDBCloud Reply URL (Assertion Consumer Service URL) . https://auth.mongodb.com/sso/saml2/ Click  Save . Refresh the browser page to ensure that the certificate is\nregenerated. The certificate's thumbprint and expiration date change\nfrom the values they held after the temporary Identifier and Reply\n URL (Uniform Resource Locator)  are updated for the first time. In the  SAML Signing Certificate  section, click\n Download  next to  Certificate (Base64) . You upload this signing certificate to the MongoDB\n Federation Management Console  later in the tutorial. Skip this step if you won't use\n role mapping . To use role mapping, add the following group claim to the  SAML (Security Assertion Markup Language) \ntoken that  Azure AD (Azure Active Directory)  sends to  Cloud Manager : Click  Add a group claim .\nAzure displays the  Group Claims  panel. In  Which groups associated with the user should be\nreturned in the claim? , click  Security groups .\nThe groups that you can select depend on the type of\ngroups you configured in your Azure environment. You might need to\nselect a different type of group to send the appropriate group\ninformation. From the  Source attribute  dropdown, select\n Group Id .\nIf you select  Group Id , Azure sends the security\ngroup's Object ID and not the human-readable group name. Depending\non your Azure environment, you may have the option to select a\ndifferent source attribute which sends the group name instead.\nWhen creating role mappings in  Cloud Manager , match the Azure group data\nsent in the  SAML (Security Assertion Markup Language)  response to the configured  MongoDB Atlas  role\nmapping name. Click  Customize the name of the group claim  in the\n Advanced options  section. Set  Name  to  memberOf . Leave  Namespace  blank. Clear  Emit groups as role claims . Click  Save . Paste these values into a text editor or another easily accessible\nlocation. You enter these values in the MongoDB\n Federation Management Console  later in the tutorial. Give the application a descriptive name, like  MongoDB-Cloud-Manager . To add a non-gallery application to  Azure AD (Azure Active Directory) , see the\n Azure documentation . Assign users to the application. These users will have access to\n Cloud Manager  and other MongoDB cloud services when you complete the\ntutorial. To assign  Azure AD (Azure Active Directory)  users to an application, see the\n Azure documentation . To navigate to the  SAML (Security Assertion Markup Language)  configuration page, see the\n Azure documentation . To generate a valid  SAML (Security Assertion Markup Language)  signing certificate, you must assign\ntemporary values to the  Identifier  and  Reply URL  for your\n Azure AD (Azure Active Directory)  enterprise application. If\nyou download the certificate before setting these values, the\ndownloaded certificate won't be unique and you must download the\ncertificate again after setting these values. To set the temporary values: Click  Edit  in Section 1. Remove any existing default values and set the following temporary\nvalues: Setting Temporary Value Identifier (Entity ID) https://www.okta.com/saml2/service-provider/MongoDBCloud Reply URL (Assertion Consumer Service URL) . https://auth.mongodb.com/sso/saml2/ Click  Save . Refresh the browser page to ensure that the certificate is\nregenerated. The certificate's thumbprint and expiration date change\nfrom the values they held after the temporary Identifier and Reply\n URL (Uniform Resource Locator)  are updated for the first time. To simplify the  SAML (Security Assertion Markup Language)  configuration, you can delete the default\n Additional claims : In the  User Attributes & Claims  section, click the\n Edit  icon. For each claim in the  Additional claims  section, expand\nthe  Context menu , then click  Delete . Use the following values: To edit the  Unique User Identifier  required claim, see the\n Azure documentation . Choose name identifier format :  Unspecified Source :  Attribute Source attribute :  user.userprincipalname Depending on your Active Directory configuration, the source\nattribute you use may be different. Use the source attribute\nthat contains a user's full email address. Add the following user claims to the  SAML (Security Assertion Markup Language)  token  Azure AD (Azure Active Directory)  sends\nto  Cloud Manager : To add user claims, see the  Azure documentation . The values in the  Name  column are case-sensitive. Enter them\nexactly as shown. You must leave the  Namespace  field empty for all user claims. Name Source Source Attribute firstName Attribute user.givenname lastName Attribute user.surname email Attribute user.userprincipalname Depending on your Active Directory configuration, the source\nattributes you use may be different. Use the source attributes\nthat contain a user's first name, last name, and full email\naddress for the appropriate claims. Skip this step if you won't use\n role mapping . To use role mapping, add the following group claim to the  SAML (Security Assertion Markup Language) \ntoken that  Azure AD (Azure Active Directory)  sends to  Cloud Manager : Click  Add a group claim .\nAzure displays the  Group Claims  panel. In  Which groups associated with the user should be\nreturned in the claim? , click  Security groups .\nThe groups that you can select depend on the type of\ngroups you configured in your Azure environment. You might need to\nselect a different type of group to send the appropriate group\ninformation. From the  Source attribute  dropdown, select\n Group Id .\nIf you select  Group Id , Azure sends the security\ngroup's Object ID and not the human-readable group name. Depending\non your Azure environment, you may have the option to select a\ndifferent source attribute which sends the group name instead.\nWhen creating role mappings in  Cloud Manager , match the Azure group data\nsent in the  SAML (Security Assertion Markup Language)  response to the configured  MongoDB Atlas  role\nmapping name. Click  Customize the name of the group claim  in the\n Advanced options  section. Set  Name  to  memberOf . Leave  Namespace  blank. Clear  Emit groups as role claims . Click  Save . To verify that the  SAML (Security Assertion Markup Language)  signing certificate uses the  SHA-256 \nsigning algorithm, see the  Azure documentation . In the  SAML Signing Certificate  section, click\n Download  next to  Certificate (Base64) . You upload this signing certificate to the MongoDB\n Federation Management Console  later in the tutorial. Paste these values into a text editor or another easily accessible\nlocation. You enter these values in the MongoDB\n Federation Management Console  later in the tutorial. Use the  Federation Management Console  and the  Azure (Microsoft Azure) \nconsole to add  Azure AD (Azure Active Directory)  as an  IdP (Identity Provider) : Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Add Identity Providers If you do not have any Identity Providers configured yet, click\n Setup Identity Provider . Otherwise, On the\n Identity Providers  screen, click\n Add Identity Provider . Enter or select the following  SAML (Security Assertion Markup Language)  Protocol Settings. All fields\nare required: Field Description Configuration Name Enter a descriptive name, such as  Azure AD . IdP Issuer URI Paste the  Azure AD Identifier  you copied from\n Azure (Microsoft Azure)  earlier in the tutorial. IdP Single Sign-On URL Paste the  Login URL  you copied from  Azure (Microsoft Azure) \nearlier in the tutorial. IdP Signature Certificate Upload the  Base64 -encoded  SAML (Security Assertion Markup Language)  signing certificate\nyou downloaded from  Azure (Microsoft Azure)  earlier in the tutorial. You can either: Upload the certificate from your computer, or Paste the contents of the certificate into a text box. Request Binding Select  HTTP POST . Response Signature Algorithm Select  SHA-256 . Click  Next . Click  Download metadata . You upload this file to\n Azure AD (Azure Active Directory)  in the next step. Click  Finish . To upload the file, see the screenshot in step 3 of\n Enable single sign-on for an app \nin the  Azure (Microsoft Azure)  documentation. Click  Upload metadata file \non the SSO configuration page, as shown in the screenshot in the\nlinked  Azure (Microsoft Azure)  documentation. Optionally, add a RelayState URL to your  IdP (Identity Provider)  to send users to a\nURL you choose and avoid unnecessary redirects after login.\nYou can use: Destination RelayState URL MongoDB  MongoDB Cloud Manager The  Login URL  that was generated for your identity\nprovider configuration in the  MongoDB Cloud Manager \n Federation Management App . MongoDB Support Portal MongoDB University MongoDB Community Forums MongoDB Feedback Engine MongoDB JIRA Mapping your domain to the  IdP (Identity Provider)  lets  Cloud Manager  know that users from your\ndomain should be directed to the  Login URL  for\nyour identity provider configuration. When users visit the  Cloud Manager  login page, they enter their email address.\nIf the email domain is associated with an IdP, they are sent to the\nLogin URL for that IdP. Use the  Federation Management Console  to map your domain\nto the  IdP (Identity Provider) : You can map a single domain to multiple identity providers. If you\ndo, users who log in using the MongoDB Cloud console are\nautomatically redirected to the first matching  IdP (Identity Provider)  mapped to the\ndomain. To log in using an alternative identity provider, users must either: Initiate the MongoDB Cloud login through the desired  IdP (Identity Provider) , or Log in using the  Login URL  associated with the desired\n IdP (Identity Provider) . Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  Add a Domain . On the  Domains  screen, click  Add Domain . Enter the following information for your domain mapping: Field Description Display Name Name to easily identify the domain. Domain Name Domain name  to\nmap. Click  Next . Select the appropriate tab based on whether you are verifying your\ndomain by uploading an  HTML (Hypertext Markup Language)  file or creating a  DNS (Domain Name System)  TXT record: You can choose the verification method once. It cannot be\nmodified. To select a different verification method, delete and\nrecreate the domain mapping. Upload an  HTML (Hypertext Markup Language)  file containing a verification key to verify\nthat you own your domain. Click  HTML File Upload . Click  Next . Download the  mongodb-site-verification.html  file\nthat  Cloud Manager  provides. Upload the  HTML (Hypertext Markup Language)  file to a web site on your domain. You\nmust be able to access the file at\n <https://host.domain>/mongodb-site-verification.html . Click  Finish . Create a  DNS (Domain Name System)  TXT record with your domain provider to verify\nthat you own your domain. Each  DNS (Domain Name System)  record associates a\nspecific  Cloud Manager  organization with a specific domain. Click  DNS Record . Click  Next . Copy the provided TXT record. The TXT record has the\nfollowing form: Log in to your domain name provider (such as GoDaddy.com or\nnetworksolutions.com). Add the TXT record that  Cloud Manager  provides to your domain. Return to  Cloud Manager  and click  Finish . The  Domains  screen displays both unverified and verified\ndomains you've mapped to your  IdP (Identity Provider) . To verify your domain, click the\ntarget domain's  Verify  button.  Cloud Manager  shows whether\nthe verification succeeded in a banner at the top of the screen. After successfully verifying your domain, use the\n Federation Management Console  to associate the domain with\n Azure AD (Azure Active Directory) : Use the  Federation Management Console  to test the\nintegration between your domain and  Azure AD (Azure Active Directory) : Before you begin testing, copy and save the\n Bypass SAML Mode   URL (Uniform Resource Locator)  for your  IdP (Identity Provider) . Use this\nURL to bypass federated authentication in the event that you are\nlocked out of your  Cloud Manager  organization. While testing, keep your session logged in to the\n Federation Management Console  to further ensure against\nlockouts. To learn more about  Bypass SAML Mode , see\n Bypass SAML Mode . If your verified domain is  mongodb.com , enter\n alice@mongodb.com . If you mapped your domain correctly, you're redirected to your  IdP (Identity Provider)  to\nauthenticate. If authenticating with your  IdP (Identity Provider)  succeeds, you're\nredirected back to  Cloud Manager . You can bypass the  Cloud Manager  log in page by navigating directly to\nyour  IdP (Identity Provider) 's  Login URL . The  Login URL \ntakes you directly to your  IdP (Identity Provider)  to authenticate. Use the  Federation Management Console  to assign your\ndomain's users access to specific  Cloud Manager  organizations: Log in to  Cloud Manager . Use the dropdown at the top-left of  Cloud Manager  to select the\norganization for which you want to manage federation\nsettings. Click  Settings  in the left navigation pane. In  Manage Federation Settings , click\n Visit Federation Management App . Click  View Organizations . Cloud Manager  displays all organizations where you are an\n Organization Owner . Organizations which are not already connected to the Federation\nApplication have  Connect  button in the\n Actions  column. Click the desired organization's  Connect  button. From the  Organizations  screen in the management console: Click the  Name  of the organization you want to map to\nan  IdP (Identity Provider) . On the  Identity Provider  screen, click\n Apply Identity Provider . Cloud Manager  directs you to the  Identity Providers  screen\nwhich shows all  IdPs (Identity Providers)  you have linked to  Cloud Manager . For the  IdP (Identity Provider)  you want to apply to the organization, click\n Modify . At the bottom of the  Edit Identity Provider  form,\nselect the organizations to which this  IdP (Identity Provider)  applies. Click  Next . Click  Finish . Click  Organizations  in the left navigation. In the list of  Organizations , ensure that your desired\norganization(s) now have the expected\n Identity Provider . You can configure the following advanced options for federated\nauthentication for greater control over your federated users and\nauthentication flow: Bypass SAML Mode The following advanced options for federated authentication require\nyou to  map an organization . Assign a Default User Role for an Organization Restrict Access to an Organization by Domain Restrict User Membership to the Federation All users you assigned to the  Azure (Microsoft Azure)  application can log in to\n Cloud Manager  using their  Azure AD (Azure Active Directory)  credentials on the\n Login URL . Users have access to the organizations you\nmapped to your  IdP (Identity Provider) . If you selected a default organization role, new users who log in to\n Cloud Manager  using the  Login URL  have the role you specified. You can map a single domain to multiple identity providers. If you\ndo, users who log in using the MongoDB Cloud console are\nautomatically redirected to the first matching  IdP (Identity Provider)  mapped to the\ndomain. To log in using an alternative identity provider, users must either: Initiate the MongoDB Cloud login through the desired  IdP (Identity Provider) , or Log in using the  Login URL  associated with the desired\n IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/salesforce/exk1rw00vux0h1iFz297/sso/saml"
                },
                {
                    "lang": "none",
                    "value": "https://university.mongodb.com"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_communityforums_3/0oa3bqf5mlIQvkbmF297/aln3bqgadajdHoymn297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_uservoice_1/0oa27cs0zouYPwgj0297/aln27cvudlhBT7grX297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/mongodbexternal_mongodbjira_1/exk1s832qkFO3Rqox297/sso/saml"
                },
                {
                    "lang": "ini",
                    "value": "mongodb-site-verification=<32-character string>"
                }
            ],
            "preview": "This guide shows you how to configure federated authentication\nusing Azure AD (Azure Active Directory) as your IdP (Identity Provider).",
            "tags": null,
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api",
            "title": "Cloud Manager Administration API Resources",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following resources: Root Deployments Agents Measurements and Alerts Projects and Users Programmatic API Keys Organizations and Teams Invoices Backup and Restore Automation Federated Authentication Configuration Log Collection Jobs Administration Feature Control Policies Live Migration from Ops Manager to Atlas",
            "code": [],
            "preview": "The Cloud Manager API exposes the following resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/mongodb-agent-external-configuration",
            "title": "Configure How the MongoDB Agent Manages Config Files and Passwords",
            "headings": [
                "Store MongoDB Process Configuration Files in Memory",
                "Considerations",
                "Impacts Availability of MongoDB Deployments",
                "Limits Importing Existing MongoDB Deployments",
                "Private Key Format",
                "Remove Passwords from the MongoDB Agent Configuration File"
            ],
            "paragraphs": "To meet advanced auditing or compliance needs, you may need to do one\nor both of the following actions: Store the  mongod  or  mongos  (collectively, the MongoDB process)\nconfiguration in memory to avoid writing passwords to disk. Remove MongoDB Agent passwords from the MongoDB Agent configuration\nfile and read the passwords passed in the shell command. MongoDB  configuration files \nmay contain credentials such as: By default, the MongoDB Agent writes MongoDB process configuration files\nto disk. However, you can store the configuration files in memory\nby setting  enableLocalConfigurationServer  to  true \nin your\n MongoDB Agent configuration file .\nChanging this setting results in the following actions: When the MongoDB Agent uses an in-memory MongoDB configuration, the MongoDB\nprocess requests the full configuration file from its local\nMongoDB Agent. The Agent requests the configuration file using the  URL (Uniform Resource Locator) \nin the  __rest  expansion directive. net.tls.certificateKeyFilePassword net.tls.clusterPassword security.kmip.clientCertificatePassword security.ldap.bind.queryPassword The MongoDB Agent caches your MongoDB process configuration in memory. The MongoDB configuration file on disk contains only a\n directive  that points to the full\nconfiguration file. If you use  Ops Manager  version 4.2 or versions 4.4.0 - 4.4.6, you may encounter\nerrors when setting  enableLocalConfigurationServer  to  true .\nTo avoid this, see  Store Configuration Files in Memory for Existing Clusters . When this feature is enabled, the MongoDB Agent doesn't store the MongoDB\nprocess configuration on disk. If the  Cloud Manager  app server\nis unavailable and the MongoDB Agent attempts to restart, then the\nMongoDB Agent stops running because it doesn't have the necessary\nconfiguration information. If a MongoDB process crashes while the\nMongoDB Agent isn't running, then the MongoDB Agent can't restart the\nprocess. You can't  import \nMongoDB processes that store configuration files in memory. When the\nMongoDB Agent stores its configuration in memory, MongoDB\nredacts any credentials after it starts. Therefore, MongoDB\ncan't retrieve the credentials needed to import the process. The encrypted private key for the  .pem  certificate file\nmust be in  PKCS #8 \n PBES2  format. You can set the MongoDB Agent to read its passwords as shell command\nflags rather than read from its configuration file. To use this\nfeature, add the following settings to the MongoDB Agent's\nconfiguration file: mmsApiKeyExec",
            "code": [],
            "preview": "To meet advanced auditing or compliance needs, you may need to do one\nor both of the following actions:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/monitoring",
            "title": "Database Commands Used by Monitoring",
            "headings": [],
            "paragraphs": "The Monitoring uses a set of MongoDB diagnostic, administrative, and\nother  database commands  to report on the status\nof your MongoDB deployment. The agent uses these commands: _isSelf buildInfo collStats  on the following  local database  collections, which support replication\noperations: local.oplog.rs connPoolStats dbStats  The Monitoring collects storage statistics for a\ngiven database at 20 minute intervals. find  on the following  config database \ncollections, which support sharding operations: config.chunks config.collections config.databases config.lockpings config.mongos config.settings config.shards find  on the following  local database \ncollections, which support replication operations: local.system.replset find  on the  system.profile <<database>.system.profile> \ncollection. Only if  database profiling \nis enabled. Database profiling is disabled by default. findOne  on the\n local.oplog.rs  collection. Only for MongoDB v2.6 and earlier. getCmdLineOpts getLog  issued with: A value of  global . Only if you have enabled  log collection . A value of  startupWarnings . getParameter  issued with a value of  * getShardVersion hostInfo listDatabases netstat ping profile . Only if  database profiling  is enabled. Database profiling is disabled by\ndefault. replSetGetStatus serverStatus",
            "code": [],
            "preview": "The Monitoring uses a set of MongoDB diagnostic, administrative, and\nother database commands to report on the status\nof your MongoDB deployment. The agent uses these commands:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/cluster-configuration-process-options",
            "title": "MongoDB Settings and Automation Support",
            "headings": [],
            "paragraphs": "The  processes.<args>  object in an\n automation configuration file \nspecifies the configuration options for each MongoDB instance. The\nsupported settings depend on the version of MongoDB. The  processes.args2_6  object accepts most MongoDB settings and parameters for MongoDB versions 2.6 and later. Format this object using  YAML (Yet Another Markup Language) . To review examples of the MongoDB configuration  YAML (Yet Another Markup Language) ,\nsee the  Configuration File Options \nin the MongoDB manual. Automation doesn't validate these MongoDB settings. If you provide\nan incorrect value, it could result in issues, downtime, or both.\nUpon import, Automation will reject deployments with unsupported\nsettings, such as  __exec  and\n __rest . Specific security-related settings, such as LDAP settings, TLS\nsettings related to the Certificate Authority, and Authentication\nsettings, are managed at the project level and may be overridden\nupon import into Automation.",
            "code": [],
            "preview": "The processes.<args> object in an\nautomation configuration file\nspecifies the configuration options for each MongoDB instance. The\nsupported settings depend on the version of MongoDB.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/supported-browsers",
            "title": "Supported Browsers",
            "headings": [],
            "paragraphs": "To use  Cloud Manager : Change your display resolution to a minimum of 1280 \u2715 960 pixels\n( SXGA- (Super eXtended Graphics Array) ).  Cloud Manager  might not\ndisplay correctly if your browser resolution is less than 1000\npixels. Use one of the following supported browsers with Javascript enabled: Supported Web Browser Supported Version(s) Google Chrome latest stable Mozilla Firefox latest stable Microsoft Edge latest stable Apple Safari latest stable",
            "code": [],
            "preview": "To use Cloud Manager:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "security/manage-idps",
            "title": "Manage Identity Providers",
            "headings": [
                "Federation Management Access",
                "Procedure",
                "Configure An External Identity Provider Application",
                "Apply Your Identity Provider to Cloud Manager",
                "Open the Management Console",
                "Navigate to the Settings page for your organization.",
                "In Setup Federated Login, click Visit Federation Management App.",
                "From the Management Console:",
                "Configure Your Identity Provider with Cloud Manager Metadata",
                "Next Steps"
            ],
            "paragraphs": "The following procedure walks you through linking an  IdP (Identity Provider)  to  Cloud Manager . MongoDB Federated Authentication links your credentials across many\nMongoDB systems.  MongoDB Cloud Manager  implements authentication using the\nFederated Identity Management model. Using the  FIM (Federated Identity Management)  model: This goes beyond  SSO (Single Sign-On)  as your  IdP (Identity Provider)  manages your credentials, not\nMongoDB. Your users can use  Cloud Manager  without needing to remember\nanother username and password. Your company manages your credentials using an Identity Provider\n( IdP (Identity Provider) ). With its  IdP (Identity Provider) , your company can enable you to authenticate\nwith other services across the web. You configure  Cloud Manager  to authenticate using data passed from\nyour  IdP (Identity Provider) . You can manage federated authentication from the  Federation\nManagement Console . You can access the console as long as you are an\n Organization Owner  in one or more organizations that are\ndelegating federation settings to the instance. Depending on your Identity Provider, some circular logic may apply\nwhen linking it to a Service Provider like  Cloud Manager . To link your  IdP (Identity Provider) \nto  Cloud Manager : To simplify setup,  Cloud Manager  prompts you to enter placeholder values for\nthe IdP and  Cloud Manager  configurations. You will replace these values later\nin the procedure. Your IdP needs values from  Cloud Manager  and Cloud Manager  needs values from your IdP. To configure Federated Authentication, you must have an external\n SAML (Security Assertion Markup Language)   IdP (Identity Provider)  application. In the  SAML (Security Assertion Markup Language)   IdP (Identity Provider) , you must: Once you have completed the initial setup for your  IdP (Identity Provider)  application,\nyou link the  IdP (Identity Provider)  to  Cloud Manager  to federate your users' logins. Create a new application for  Cloud Manager . Configure initial  SAML (Security Assertion Markup Language)  values for the new application: Set placeholder values for the following fields: SP Entity ID or Issuer Audience URI Assertion Consumer Service (ACS) URL Set valid values for the following fields: Field Value Signature Algorithm The signature algorithm is the algorithm used to encrypt\nthe  IdP (Identity Provider)  signature.  Cloud Manager  supports the following signature\nalgorithm values: SHA-1 SHA-256 Name ID A valid email address. Name ID  is both your email address\nand username. Name ID Format urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified Create attributes with Attribute Names for the following Attribute\nValues: firstName lastName The names of these attributes are case sensitive. Type these\nattribute names as shown in\n camelCase . Save these values. You can configure Federated Authentication in  Cloud Manager  from the\n Federation Management Console . Use this console to: This procedure assumes you already have an external  IdP (Identity Provider) . To learn\nhow to configure an  IdP (Identity Provider) , see  Configure An External Identity Provider Application . Configure  Identity Providers  to authenticate users\nbelonging to specified organizations. Connect  Cloud Manager   Organizations  to your  IdP (Identity Provider) . Verify and associate  Domains  with your  IdP (Identity Provider)  to force\nusers to authenticate using that IdP. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. Click  Add Identity Providers If you do not have any Identity Providers configured yet, click\n Setup Identity Provider . Otherwise, On the\n Identity Providers  screen, click\n Add Identity Provider . Enter or select the following  SAML (Security Assertion Markup Language)  Protocol Settings. All fields\nare required: Field Description Configuration Name Name of this  IdP (Identity Provider)  configuration. IdP Issuer URI Identifier for the issuer of the\n SAML Assertion . Specify a placeholder value for this field. Obtain the real value for\nthis field from your  IdP (Identity Provider)  once you have supplied it with the  Cloud Manager \nmetadata. IdP Single Sign-On URL URL of the receiver of the  SAML (Security Assertion Markup Language)  AuthNRequest. Specify a placeholder value for this field. Obtain the real value for\nthis field from your  IdP (Identity Provider)  once you have supplied it with the  Cloud Manager \nmetadata. IdP Signature Certificate PEM (Privacy-Enhanced Mail) -encoded public key certificate of the  IdP (Identity Provider) . You can\nobtain this value from your  IdP (Identity Provider) . You can either: Upload the certificate from your computer, or Paste the contents of the certificate into a text box. Request Binding SAML (Security Assertion Markup Language)  Authentication Request Protocol binding used to send\nthe AuthNRequest. Can be either: HTTP POST HTTP REDIRECT Response Signature Algorithm Response algorithm used to sign the  SAML (Security Assertion Markup Language)  AuthNRequest. Can\nbe either: SHA-256 SHA-1 Click  Next . Having set up your  IdP (Identity Provider)  in  Cloud Manager , you can provide the required\n Cloud Manager  metadata to your  IdP (Identity Provider) . On the  Identity Provider  screen in  Cloud Manager , click\n Download metadata  to download the metadata required\nby your  IdP (Identity Provider) .  Cloud Manager  provides the data as an  .xml  file. Cloud Manager  provides the  Assertion Consumer Service URL \nand  Audience URI  if you wish to manually copy and\nsave these values. These values are included in the metadata\ndownload. Upload the metadata to your  IdP (Identity Provider) . You now have the necessary information to replace the\nplaceholder  IdP Issuer URI  and\n IdP Single Sign-On URL  values set when you set up the\ninitial  IdP (Identity Provider)  mapping in  Cloud Manager . In  Cloud Manager , modify the placeholder values set for\n IdP Issuer URI  and  IdP Single Sign-On URL  for\nthe linked  IdP (Identity Provider)  with the proper values from your  IdP (Identity Provider) . Optionally, add a RelayState URL to your  IdP (Identity Provider)  to send users to a\nURL you choose and avoid unnecessary redirects after login.\nYou can use: Destination RelayState URL MongoDB  MongoDB Cloud Manager The  Login URL  that was generated for your identity\nprovider configuration in the  MongoDB Cloud Manager \n Federation Management App . MongoDB Support Portal MongoDB University MongoDB Community Forums MongoDB Feedback Engine MongoDB JIRA Return to  Cloud Manager  and click  Finish . Once you link your  IdP (Identity Provider)  to  Cloud Manager , it shows as\n Inactive  in the\n Federation Management Console  until you\n map at least one domain  to the\n IdP (Identity Provider) . After you successfully linked your  IdP (Identity Provider)  to  Cloud Manager , you must\n map one or more domains  to your\n IdP (Identity Provider) .  Cloud Manager  authenticates users from these domains through your  IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/salesforce/exk1rw00vux0h1iFz297/sso/saml"
                },
                {
                    "lang": "none",
                    "value": "https://university.mongodb.com"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_communityforums_3/0oa3bqf5mlIQvkbmF297/aln3bqgadajdHoymn297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/home/mongodbexternal_uservoice_1/0oa27cs0zouYPwgj0297/aln27cvudlhBT7grX297"
                },
                {
                    "lang": "none",
                    "value": "https://auth.mongodb.com/app/mongodbexternal_mongodbjira_1/exk1s832qkFO3Rqox297/sso/saml"
                }
            ],
            "preview": "The following procedure walks you through linking an IdP (Identity Provider) to Cloud Manager.",
            "tags": "connect",
            "facets": {
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/health-score",
            "title": "Health Check Solutions",
            "headings": [
                "Host has decreasing available disk space",
                "Host has excessive disk utilization",
                "Host has startup warnings",
                "Limits Startup Warning",
                "NUMA Enabled Startup Warning",
                "Readahead",
                "Transparent Huge Pages + Defrag",
                "Host is unreachable",
                "MongoDB version outdated",
                "Replica set has an even number of votes",
                "Replica set has less than three data-bearing nodes",
                "Replica set has mixed version nodes",
                "Replica set has more than one arbiter",
                "Shared cluster has mixed version nodes",
                "Too many queued operations",
                "Too much replication lag"
            ],
            "paragraphs": "This page lists issues that can be raised by  a Cloud Manager  health check and\nprovides their solutions. Cloud Manager  considers any disk on any host as needing more disk capacity if\nit estimates that the disk will be full in two weeks or less. To remedy this problem, move your database to disk(s) with greater\ncapacity. Cloud Manager  considers any disk on any host as having excessive disk\nutilization if it is actively storing or retrieving data for a\nprolonged period of time. To remedy this problem, move your database to disk(s) with greater\nthroughput. Process and user limits with low default values can cause a number of\nissues in the course of normal MongoDB operation. For further\ninformation and recommendations, see\n UNIX ulimit Settings  in the MongoDB\nManual. Running MongoDB on a system with NUMA can cause a number of operational\nproblems, including slow performance for periods of time and high\nsystem process usage. For further information and recommendations, see\n MongoDB and NUMA Hardware \nin the MongoDB Manual. Please see the readahead information\n in this section \nof the MongoDB Manual for information and recommendations about the\n Readahead  startup warning. For information and recommendations about the\n Transparent Huge Pages and Defrag  startup warning, see\n Disable Transparent Huge Pages (THP) . The MongoDB Agent connects to each MongoDB process in your deployment to\ncollect diagnostic data. If your MongoDB Agent cannot connect to a process, consider the\nfollowing possible resolutions: Reason Resolution Host no longer exists. Remove host from  Cloud Manager . Monitoring cannot reach host. See\n Remedies for a Host Down Alert \nfor possible resolutions. For MongoDB deployments managed by  Cloud Manager ,  Cloud Manager  supports safe automatic\nupgrade and downgrade operations between releases of MongoDB while\nmaximizing the availability of your deployment.  Cloud Manager  supports upgrade\nand downgrade operations for sharded clusters, replica sets, and\nstandalone MongoDB instances. Configure Available MongoDB Versions \ndescribes how to choose which versions of MongoDB are available to\n Cloud Manager . If  Cloud Manager  doesn't manage your deployment, manually change the version of\nMongoDB. The  MongoDB Manual  provides upgrade tutorials\nwith each release. For example, see\n Upgrade MongoDB to 4.2  for\nupgrading to MongoDB 4.2 from an earlier version. For managed deployments: For more information and precautions, see  Change the Version of MongoDB . Click  Deployment , then the  Processes  tab. Click the  Topology  view. On the line listing the cluster, replica set, or process, click\n Modify . In the  Version  field, select the version. Then click\n Apply . Click  Review & Deploy . Click  Confirm & Deploy . An even number of voting members in a replica set can lead to election\nissues in the event of a primary node failure. You should consider\nadding an additional voting node to your replica sets to ensure an odd\nnumber of votes. You can add an arbiter to your replica set to allow an uneven number of\nmembers without the overhead of a member that replicates data. If your deployment is  not  managed by  Cloud Manager , follow the MongoDB\nManual's instructions to\n manually add an arbiter to your replica set . For managed deployments: Click  Deployment , then the  Processes  tab. Click the  Topology  view. On the line listing the replica set, click  Modify . Add and configure the new member: Under  Member Options ,\nclick  Add  and select  Arbiter . Click  Apply . Click  Review & Deploy .  Cloud Manager  displays your proposed\nchanges. Click  Confirm & Deploy . We recommend that your replica set includes at least three data-bearing nodes to ensure high availability. For factors that affect high availability, see the MongoDB Manual's pages on If your deployment is  not  managed by  Cloud Manager , follow the MongoDB\nManual's instructions to\n manually add a node to your replica set . For managed deployments: high availability elections failover Click  Deployment , then the  Processes  tab. Click the  Topology  view. On the line listing the replica set, click  Modify . Add and configure the new member: Add the member by increasing the\nnumber of members in the  MongoDs Per Replica Set  field. Click  Apply . Click  Review & Deploy .  Cloud Manager  displays your proposed\nchanges. Click  Confirm & Deploy . Because of potential incompatibilities, it is recommended you upgrade\noutdated versions of MongoDB instances to the most recent in your\ncluster. If your deployment is  not  managed by  Cloud Manager , you will need to\nmanually change the version of MongoDB. The\n MongoDB Manual  provides upgrade tutorials with each\nrelease. For example, see\n Upgrade MongoDB to 4.2  for\nupgrading to MongoDB 4.2 from an earlier version. For managed deployments: For more information and precautions, see\n Change the Version of MongoDB . Click  Deployment , then the  Processes  tab. Click the  Topology  view. On the line listing the replica set, click  Modify . In the  Version  field, select the version, and click\n Apply . Click  Review & Deploy . Click  Confirm & Deploy . An arbiter is added to a replica set with an even number of members to\nadd a vote in elections for primary. Arbiters always have exactly one\nvote, and thus allow replica sets to have an uneven number of members,\nwithout the overhead of a member that replicates data. Only one arbiter\nis required to break election ties. If your deployment is  not  managed by  Cloud Manager , follow the MongoDB\nManual's instructions to\n manually remove a member from your replica set . For managed deployments: For more information on deployment architectures, see\n Replica Set Deployment Architectures \nin the MongoDB Manual. Click  Deployment , then the  Processes  tab. Click the  Topology  view. For the arbiter to be removed, click the ellipsis icon and select\n Remove from Replica Set . Click  Remove  to confirm. Click  Review & Deploy .  Cloud Manager  displays your proposed\nchanges. Click  Confirm & Deploy . The  components of the sharded cluster \nrun different versions of MongoDB. To avoid compatibility issues, use the same version of MongoDB for all\nthe  mongos  and  mongod  processes that make up your sharded cluster.\nThis includes all the  mongod  processes used for the cluster's\n config servers  and  shards . To change the version of a  mongod  or  mongos  process,\nsee  Change the Version of MongoDB . Queued operations are operations that are waiting to be processed. This\nmay occur when you have reached your hardware capacity or if you have\npoorly performing queries. If you have access to  Cloud Manager  Premium, you can track long running\noperations using the  Cloud Manager  Profiler. To enable the profiler tool in\n Cloud Manager : If you don\u2019t have access to  Cloud Manager  Premium, you can still get access to\nprofiling data for statistics about performance and database\noperations. To read more about profiling databases, see\n Profile Databases . Click  Deployment , then the  Processes  tab. Click the  Topology  view. On the line listing the process, click the  Metrics  button. Click the  Profiler  tab and follow instructions to enable\nthe profiler. Replication lag is a delay between an operation on the primary and the\napplication of that operation from the oplog to the secondary.\nReplication lag can be a significant issue and can seriously affect\nMongoDB replica set deployments. Excessive replication lag makes\n\"lagged\" members ineligible to quickly become primary and increases the\npossibility that distributed read operations will be inconsistent. To learn how to troubleshoot replication lag, please see\n Check the Replication Lag  in the\nMongoDB Manual.",
            "code": [],
            "preview": "This page lists issues that can be raised by a Cloud Manager health check and\nprovides their solutions.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/deployment-advanced-options",
            "title": "Advanced Options for MongoDB Deployments",
            "headings": [
                "Procedure",
                "Navigate to the Deployment page for your project.",
                "Navigate to the Processes tab for your deployment.",
                "Click MODIFY next to the deployment that you wish to edit.",
                "Scroll to Advanced Configuration Options and click Add Option.",
                "Select the desired option and click Add.",
                "Audit Log",
                "Basis Tech",
                "Kerberos",
                "Net",
                "Numactl",
                "Operation Profiling",
                "Process Management",
                "Replication",
                "Security",
                "Sharding",
                "Storage",
                "System Log",
                "TLS",
                "Set Parameter"
            ],
            "paragraphs": "The following  mongod  and  mongos  configuration\noptions are available through the  Cloud Manager \n Advanced Configuration Options  field when you deploy\nMongoDB. You select advanced options when deploying: The  Cloud Manager   Advanced Configuration Options  map to the MongoDB\nconfiguration options and parameters described as follows. replica sets sharded clusters standalone instances If a MongoDB option isn't listed on this page, you may use\n setParameter  to add the setting.\nSettings added in this way apply to MongoDB instances that  Cloud Manager \nmanages when those instances start up. To edit Advanced Options, complete the following steps. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. You can add these  audit log parameters  with a  setParameter \noption in the  Advanced Configuration Options  section. To encrypt the audit log, before you start MongoDB instances that\n Cloud Manager  manages, add the  auditEncryptKeyWithKMIPGet  and  auditEncryptionHeaderMetadataFile  parameters in the\n Advanced Configuration Options  section. Cloud Manager  Interface MongoDB Option auditEncryptionKeyIdentifier auditLog.auditEncryptionKeyIdentifier compressionMode auditLog.compressionMode auditDestination auditLog.destination auditFilter auditLog.filter auditFormat auditLog.format localAuditKeyFile auditLog.localAuditKeyFile auditPath auditLog.path Cloud Manager  Interface MongoDB Option basisTechRootDirectory basisTech.rootDirectory Cloud Manager  Interface MongoDB Option kerberosKeytab kerberos.keytab Cloud Manager  Interface MongoDB Option bind_ip net.bindIp httpinterface net.http.enabled ipv6 net.ipv6 jsonp net.http.JSONPEnabled maxConns net.maxIncomingConnections rest net.http.RESTInterfaceEnabled tlsClusterFile net.tls.clusterFile tlsClusterPassword net.tls.clusterPassword tlsCRLFile net.tls.CRLFile tlsDisabledProtocols net.tls.disabledProtocols tlsLogVersions net.tls.logVersions Cloud Manager  Interface MongoDB Option numCores numactl.numCores Cloud Manager  Interface MongoDB Option profile operationProfiling.mode slowms operationProfiling.slowOpThresholdMs slowOpSampleRate operationProfiling.slowOpSampleRate Cloud Manager  Interface MongoDB Option pidfilepath processManagement.pidFilePath Cloud Manager  Interface MongoDB Option enableMajorityReadConcern replication.enableMajorityReadConcern oplogSize replication.oplogSizeMB Cloud Manager  doesn't support transitioning from  local key encryption \nto  KMIP (Key Management Interoperability)  server-based encryption. Cloud Manager  Interface MongoDB Option clusterAuthMode security.clusterAuthMode enableEncryption security.enableEncryption encryptionCipherMode security.encryptionCipherMode encryptionKeyFile security.encryptionKeyFile javascriptEnabled security.javascriptEnabled kmipClientCertificateFile security.kmip.clientCertificateFile kmipClientCertificatePassword security.kmip.clientCertificatePassword kmipKeyIdentifier security.kmip.keyIdentifier kmipPort security.kmip.port kmipServerCAFile security.kmip.serverCAFile kmipServerName security.kmip.serverName saslauthdSocketPath security.sasl.saslauthdSocketPath saslHostname security.sasl.hostName Cloud Manager  Interface MongoDB Option autoSplit sharding.autoSplit chunkSize sharding.chunkSize Cloud Manager  Interface MongoDB Option directoryperdb storage.directoryPerDB engine storage.engine inMemorySizeGB storage.inMemory.engineConfig.inMemorySizeGB journal storage.journal.enabled journalCommitInterval storage.journal.commitIntervalMs nssize storage.nsSize prealloc storage.preallocDataFiles quota storage.quota.enforced quotaFiles storage.quota.maxFilesPerDB repairpath storage.repairPath smallfiles storage.smallFiles syncdelay storage.syncPeriodSecs wiredTigerCacheSizeGB storage.wiredTiger.engineConfig.cacheSizeGB wiredTigerCollectionBlockCompressor storage.wiredTiger.collectionConfig.blockCompressor wiredTigerCollectionConfigString storage.wiredTiger.collectionConfig.configString wiredTigerDirectoryForIndexes storage.wiredTiger.engineConfig.directoryForIndexes wiredTigerEngineConfigString storage.wiredTiger.engineConfig.configString wiredTigerIndexConfigString storage.wiredTiger.indexConfig.configString wiredTigerIndexPrefixCompression storage.wiredTiger.indexConfig.prefixCompression wiredTigerJournalCompressor storage.wiredTiger.engineConfig.journalCompressor wiredTigerStatisticsLogDelaySecs storage.wiredTiger.engineConfig.statisticsLogDelaySecs Cloud Manager  Interface MongoDB Option logappend systemLog.logAppend logRotate systemLog.logRotate quiet systemLog.quiet syslogDestination systemLog.destination syslogFacility systemLog.syslogFacility timeStampFormat systemLog.timeStampFormat verbosity systemLog.verbosity Cloud Manager  Interface MongoDB Option tlsCertificateKeyFile net.tls.certificateKeyFile tlsCertificateKeyFilePassword net.tls.certificateKeyFilePassword tlsFIPSMode net.tls.FIPSMode tlsMode net.tls.mode For supported MongoDB versions and MongoDB Agent versions, you can set\ncertain  setParameter  parameters without a  rolling restart .\nTo determine whether you can set a   setParameter  parameter during\nruntime or upon startup,  retrieve details \non that parameter. For complex  setParameter  parameters, you must set\nthe parameter values in the same format as in the process configuration\nfile or in the  --setParameter  command line option. If you delete or remove a parameter, MongoDB Agent keeps the parameter's\ncurrent value until you make another change to that parameter. To reset\nthe parameter to its default value, you must manually set the value or\ntrigger a rolling restart. If you attempt to set a parameter that MongoDB Agent can't set at startup,\nMongoDB Agent triggers a  rolling restart  and fails to start up a\n mongod  instance. Cloud Manager  does not check to see if the parameters you provide are\nvalid. Check the\n MongoDB Server Manual  for\naccepted parameters and values. Cloud Manager  Interface MongoDB Option [setParameter] setParameter.name You can add any value from\n Server Parameters  as a\n setParameter . If you set the  watchdogPeriodSeconds \nparameter, MongoDB Agent triggers a rolling restart.",
            "code": [],
            "preview": "The following mongod and mongos configuration\noptions are available through the Cloud Manager\nAdvanced Configuration Options field when you deploy\nMongoDB. You select advanced options when deploying:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/glossary",
            "title": "Glossary",
            "headings": [],
            "paragraphs": "A lightweight program that provides an interface between your MongoDB processes and mms. A unique identifier that authenticates a project's\n MongoDB Agents  to  Cloud Manager . A project can have multiple agent  API (Application Programming Interface)  keys. Manage Agent API Keys A method to enable access to a MongoDB database. This is separate\nfrom authorization, which grants you permission to use certain\nactions on a MongoDB database. Configure MongoDB Authentication and Authorization The assisted management of MongoDB processes through the  Cloud Manager \ninterface. The  MongoDB Agents  installed on\nyour MongoDB hosts allow you to deploy, configure, and update\nMongoDB processes directly from  Cloud Manager . Automation The lightweight component that had automated common management\ntasks. The Automation Agent runs on every server that ran a\n mongod  or  mongos . This has been replaced with the  MongoDB Agent . The lightweight component that had run within your data center and\nbacked up MongoDB processes via the MongoDB wire protocol. No direct\nfile system access was needed. This has been replaced with the  MongoDB Agent . The collection of jobs needed to restore a  sharded cluster :\none job for each shard and one job for the  config server . Replica set restore jobs do not use batches. A point in time between snapshots to which you can restore a sharded\ncluster.  Cloud Manager  must stop the  balancer  each time it creates a\ncheckpoint.  Cloud Manager  doesn't require checkpoints and disables\ncheckpoints by default. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. Checkpoints In  Cloud Manager ,  cluster  can refer to either a  replica set  or\n sharded cluster . A backup of the state of your MongoDB deployment at a point in time\nbetween  stored snapshots .  Cloud Manager  builds a custom\nsnapshot by applying oplog data to a stored snapshot. Restore Overview A process that eliminates redundant data. This data can be additional\ncopies of database or file system documents or redundant data within\nthose documents at the block level when written to a storage medium\nlike spinning or solid state disks. Only unique documents or blocks\nare written to a storage medium. This process usually applies to\nbackups or data archiving. Each recipient in an email system may have their own copy of an\nemail sent to the whole company. With deduplication, all copies of\nthis except one are replaced with pointers to a single stored copy\nbefore backing up the email system. This effectively reduces the\namount of storage capacity needed to back up this one email by 99\npercent. Usually refers to all the MongoDB processes that run within  a Cloud Manager \n project .  Deployment  can also refer to a specific set of\nMongoDB processes, such as a specific  sharded cluster  or\n replica set . Data that has been updated in the WiredTiger cache but not flushed to\ndisk. A database or collection that  Cloud Manager  will not back up, as designated\nby its  namespace . Namespaces Filter A distinct set of MongoDB processes and  Cloud Manager  users. Synonymous with\n project . Projects A physical machine, virtual machine, or container that serves one or\nmore MongoDB processes. The MongoDB operation that replicates data from an existing\n replica set  member to a new member.  Cloud Manager  uses initial\nsync when  starting a new backup . Replica Set Data Synchronization  in the MongoDB manual A string that contains the information necessary to connect from\n Cloud Manager  to  Atlas  during a Live Migration from an  Cloud Manager  deployment\nto a deployment in  Atlas . When you are ready to live migrate data from an\n Cloud Manager  deployment, you generate a link-token in  Atlas \nand then enter it in your  Cloud Manager  organization's settings. You use the\nsame link-token to migrate each deployment in your  Cloud Manager \norganization sequentially, one at a time. You can generate multiple link-tokens in  Atlas . Use\none unique link-token for each  Cloud Manager  organization. Workflow for Live Migration Migrate from  Cloud Manager  to Atlas A dedicated server with its own specially-configured MongoDB Agent configured for live migration.\nYou run the Live Migration (push) process on the migration host to migrate\nyour MongoDB deployment to  Atlas . Provision a Migration Host for MongoDB Agent Migrate from  Cloud Manager  to Atlas A lightweight  agent  that can monitor, manage, and back up\nyour MongoDB databases. MongoDB Agent The real-time reporting, visualization, and alerting of the state of\nyour MongoDB processes. Monitoring The lightweight component that had run within your data center and\nmonitored your MongoDB processes via the MongoDB wire protocol. No\ndirect file system access was needed. This has been replaced with the  MongoDB Agent . The combination of the database name and collection name: Compressed batch of entries for the tailed  oplog  of a\nbacked-up shard or replica set. The  MongoDB Agent  creates an\noplog slice and sends it to  Cloud Manager , which stores it in the\n Oplog Store Database . The database where  Ops Manager  stores  oplog slices \nbefore applying them to a deployment's backup. A data transmission that the  MongoDB Agent  sends to  Cloud Manager  to\nconfirm that the Agent and its MongoDB processes are running and\nreachable. A database restoration that captures the state of your data at a\nmoment in-between  snapshots . Point-in-time\nrestores take longer to perform than snapshot restores. Restore Overview An instance of MongoDB running on a given host and port. The MongoDB\ndatabase process is  mongod . MongoDB also uses the\n mongos  process to route operations in the\n sharded clusters . MongoDB Package Components A distinct set of MongoDB processes and  Cloud Manager  users. Synonymous with\n group . Projects A unique identifier that authenticates  a Cloud Manager  user through the\n Cloud Manager Administration API . The key belongs to\nthe user, as opposed to the  agent API key , which belongs to\nthe project. A feature provided by  Cloud Manager  in which  Cloud Manager  quickly and securely makes\na given snapshot accessible over a MongoDB connection string. You can\nuse the connection string with standard MongoDB tools such as\n mongosh  or mongodump to access the snapshot for read-only\noperations. Queryable backups start up quickly regardless of the snapshot's total\ndata size. They are uniquely useful for restoring a small subset of\ndata, such as a document that was accidentally deleted, or reading\nout a single collection with mongodump. Query a Backup Snapshot The maximum tolerable age of backup files that must be recovered from\nstorage for normal operations to resume after a failure or disaster\noccurs. The maximum tolerable length of time that a system can be offline\nafter a failure or disaster occurs. The permissions granted to  a Cloud Manager  or MongoDB user. Cloud Manager  Roles  for  Cloud Manager  user roles Built-in Roles  in the\nMongoDB manual for MongoDB user roles A technique used to maintain cluster availability during maintenance\nperiods by updating nodes in a replica set one-by-one, always\nmaintaining a primary node, until all nodes are updated. How does  Cloud Manager  perform maintenance on cluster nodes? A physical or virtual machine that serves one or more MongoDB\nprocesses. Single backup of your data that  Cloud Manager  captures at a specific\ninterval and stores. The  Snapshot Frequency and Retention Policy  determines the interval\nfor taking snapshots and how long to store them. You can\n query specific backups . custom snapshot The schedule for how often to take  snapshots  and\nhow long to store them. Snapshot Frequency and Retention Policy The location where your  snapshots  are stored. The database storage engine manages how data is stored on disk.\nMongoDB versions 3.0 and later offer multiple storage engines. Storage MongoDB Storage FAQ  in the MongoDB\nmanual",
            "code": [
                {
                    "lang": "javascript",
                    "value": "\"database-name.collection-name\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/mongodb-agent-settings",
            "title": "MongoDB Agent Settings",
            "headings": [
                "Configuration File & Settings Locations",
                "MongoDB Agent Settings",
                "Logging Settings",
                "Connection Settings",
                "HTTP Proxy Settings",
                "Configuration Backup Settings",
                "Cloud Manager TLS (Transport Layer Security) Settings",
                "Push Live Migration Settings",
                "Externally Sourced Configuration Settings",
                "Automation Settings",
                "MongoDB Kerberos Settings",
                "Monitoring Settings",
                "Log Settings",
                "Custom Settings",
                "Connection Settings",
                "HTTP Proxy Settings",
                "MongoDB Kerberos Settings",
                "MongoDB TLS Settings",
                "Cloud Manager Server TLS Settings",
                "Backup Settings",
                "Log Settings",
                "Custom Settings",
                "Connection Settings",
                "HTTP Proxy Settings",
                "MongoDB Kerberos Settings",
                "MongoDB TLS Settings",
                "Cloud Manager Server TLS Settings"
            ],
            "paragraphs": "This page describes possible settings for the MongoDB Agent. These\nvalues are set after first launching  Cloud Manager  and not through manual\nediting of these files. If you edit authentication or  TLS (Transport Layer Security)  settings through\n Settings  or  Deployments  in the  Cloud Manager \ninterface, those changes overwrite any manual changes in this\nconfiguration file. You can configure additional\n Monitoring settings  and\n Backup settings  through the\n Cloud Manager  Console. The location of the MongoDB Agent configuration file is\n C:\\MMSData\\Automation\\automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /etc/mongodb-mms/automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /etc/mongodb-mms/automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /path/to/install/local.config . The following settings are required. All other settings are set to\ndefault values. Type : string Required . Specifies the ID of your  Cloud Manager  project. In  Cloud Manager , click\n Deployments , then  Agents  and then select\nthe appropriate operating system under  Downloads &\nSettings . When the  Install Agent Instructions  box appears,\nthese values can be copied directly from this box by clicking\n . This setting is usually set when the MongoDB Agent is\ninstalled and is required to bind the server to a\nproject. Type : string Required . Specifies the  Cloud Manager  agent  API (Application Programming Interface)  key of your  Cloud Manager  project. This setting is usually set when the MongoDB Agent is\ninstalled and is required to bind the server to a\nproject. You can use an Agent API key that you have already generated for the\nproject. Otherwise, you can generate a new Agent API key. A project can\nhave more than one Agent API key, and any of the project's agents can\nuse any of the keys. For more information, see\n Manage Agent API Keys . To generate an Agent API key, go to the  Agent API Keys \ntab. To navigate to the tab, from the  Deployment  view,\nclick the  Agents  tab and then the  Agent API\nKeys  tab. When you generate an Agent API Key,  Cloud Manager  displays it  one time\nonly . You must copy this key. Treat it like a password; store\nit in a secure place.  Cloud Manager  never displays the full key again. To enable the MongoDB Agent to request the Agent API Key from\na shell command, set the  mmsApiKeyExec  option in\nthe configuration file rather than setting the\n mmsApiKey  option. Type : string Specifies the URL of the  Cloud Manager . This value is set by default and should not be modified. Type : string Specifies the path to which  Cloud Manager  should write the MongoDB Agent's\nlog. The default path depends on your platform. The MongoDB Agent uses the\ndefault filename  automation-agent.log  whether or not the\ndeployment uses Automation. Automatic rotation of your MongoDB Agent logs only occurs when an update to the log file is made.\nTo manually rotate your MongoDB Agent logs,\nsee  Manually Rotate the MongoDB Agent Logs  for more information. Platform Default Path Linux /var/log/mongodb-mms-automation/automation-agent.log Windows C:\\MMSAutomation\\log\\mongodb-mms-automation\\automation-agent.log Type : string Specifies the level of logging granularity. Choose from the following severity levels, from most to least\namount of information: By default,  logLevel  is  INFO . Each level includes the log items included in the succeeding levels. DEBUG INFO WARN ERROR FATAL If you choose  DEBUG , the MongoDB Agent logs all\nmessages, including  INFO ,  WARN ,  ERROR \nand  FATAL . If you choose  FATAL , the MongoDB Agent only logs\n FATAL  messages. Type : integer Specifies the maximum number of rotated log files to retain. By default, the value of  maxLogFiles  is set to  10 . You\ncan change the value to retain a different number of rotated log files. Type : float Specifies the number of hours after which the logs are rotated. On UNIX- and Linux-based systems you can manually rotate the\nMongoDB Agent logs. Issue a  kill  command with the\n SIGUSR1  signal for the Agent process: On Windows-based systems, you can manually restart the\nMongoDB Agent with a Service restart: This rotates the MongoDB Agent logs. Click the  Start  menu. Search for  services . Find the MongoDB Agent. Right-click on the Agent and click  Restart . Type : integer Specifies the maximum size, in bytes, of a log file before the logs\nare rotated. If unspecified, the MongoDB Agent does not rotate\nlogs based on file size. By default, the value of  maxLogFileSize  is set to  268435456  bytes. You\ncan change the value to assign a different maximum size for a log file. Type : integer Specifies the maximum number of rotated log files to keep\nuncompressed. MongoDB Agent automatically compresses any additional\nretained log files up to the  maxLogFiles  value. By default, the value of  maxUncompressedLogFiles  is set\nto  2 . You can change the value to compress a different number of\nrotated log files. Type : integer Specifies the number of seconds to wait before a connection times\nout. By default, connections time out after 40 seconds. However, The\nMongoDB Agent may frequently time out of connections for one or more\nof the following reasons: MongoDB recommends gradually increasing the value of the\n dialTimeoutSeconds  MongoDB Agent configuration setting\nto prevent frequent premature connection timeouts. High network latency High server load Large  TLS (Transport Layer Security)  keys Lack of  TLS (Transport Layer Security)  accelerator Insufficient CPU speed Increasing this value also increases the time required to deploy\nconfiguration changes to the MongoDB Agent. Experiment with\nsmall, incremental increases until you determine the optimum\nvalue for your deployment. Type : integer Specifies the number of seconds the MongoDB Agent waits before it\nstops trying to establish a connection to a MongoDB process. By\ndefault, the MongoDB Agent abandons attempts to establish a\nconnection after 10 seconds. Type : string Specifies the  URL (Uniform Resource Locator)  of an  HTTP (Hypertext Transfer Protocol)  proxy server the MongoDB Agent can\nuse. Type : string Specifies the path to the  Cloud Manager   configuration  backup file. This file\ndescribes the desired state of the deployment. If you don't specify the  mmsConfigBackup  setting, the\nMongoDB Agent writes the\n mongodb-mms-automation-cluster-backup.json  file to a temporary\nfolder on the operating system. If you set  enableLocalConfigurationServer  to  true ,\nthe MongoDB Agent doesn't write the  mmsConfigBackup  file. Specify the settings that the MongoDB Agent uses when communicating\nwith  Cloud Manager  using  TLS (Transport Layer Security) . Type : string Specifies the  absolute  path that contains the trusted  Certificate Authority \ncertificates in  PEM  format. This certificate verifies that the\nMongoDB Agent is talking to the designated  Cloud Manager  instance. Add the  Certificate Authority  for the  downloads.mongodb.com  certificate\nto this  .pem  file if you: To learn how to download  TLS (Transport Layer Security)  certificates from another web\nsite, see the\n OpenSSL Cookbook entry . Need your MongoDB Agents to download their MongoDB installers\nfrom the Internet, Use TLS to encrypt connections, and Signed your certificates with a private  Certificate Authority . (You set\nthe  httpsCAFile  option.) When  Cloud Manager  starts, it caches the  Certificate Authority  you provided. If you\nchange your  Certificate Authority  certificate, restart  Cloud Manager . Type : boolean Deprecated. Use  tlsRequireValidMMSServerCertificates \ninstead. Type : boolean Specifies if the MongoDB Agent should validate  TLS (Transport Layer Security)  certificates\npresented by  Cloud Manager . Setting this option to  false  disables certificate\nverification and makes connections between the MongoDB Agent\nand  Cloud Manager  susceptible to  man-in-the-middle \nattacks. Setting this option to  false  is only recommended for\ntesting purposes. Type : boolean Optional . Specifies whether the MongoDB Agent on the  migration host \nis configured to run the  Live Migration  process from a source  Cloud Manager  deployment\nto a target cluster in  Atlas . This option defaults to  false , which prevents using the MongoDB Agent\non this host for Live Migration to  Atlas . To enable the Live Migration process,  provision a migration host  and set\n agentFeatureCloudMigrationEnabled  to  true . Type : string Optional . Path to the  oplog  files. If specified, this setting\nbuffers the initial sync  oplog  window to disk.\nProvision enough storage in the specified directory for\nthe  oplog  buffering. Type : boolean Specifies whether the MongoDB Agent stores MongoDB process\nconfiguration files on disk or cached in memory. This option defaults to  false , which stores the\nconfiguration files on disk. Setting this option to  true  caches\nthe configuration in memory. If you set this option to  true , the MongoDB Agent doesn't write\nthe  mmsConfigBackup  file. Don't set this option to  true  if your MongoDB databases are running\n FCV  4.2 or earlier. Setting this option to  true  impacts the availability of your\ndeployment. When this feature is enabled, the MongoDB Agent doesn't store the MongoDB\nprocess configuration on disk. If the  Cloud Manager  app server\nis unavailable and the MongoDB Agent attempts to restart, then the\nMongoDB Agent stops running because it doesn't have the necessary\nconfiguration information. If a MongoDB process crashes while the\nMongoDB Agent isn't running, then the MongoDB Agent can't restart the\nprocess. Configure How the MongoDB Agent Manages Config Files and Passwords Type : boolean Flag that indicates whether the MongoDB Agent retains unused MongoDB\nversion binaries that it downloads. By default,\n keepUnusedMongodbVersions  is false. Type : integer Specifies the port to serve the MongoDB process configuration to\nwhen using the local configuration server. To set this option,\n enableLocalConfigurationServer  must be  true . If unspecified, the MongoDB Agent chooses an available port\nautomatically. Type : string Specifies a shell command to call the  Cloud Manager  agent  API (Application Programming Interface)  key of your\n Cloud Manager  project. The following configuration settings are used for authentication in\nautomated clusters. Specify these settings if Automation authenticates to hosts\nusing Kerberos. To configure Kerberos, see\n Configure the MongoDB Agent for Kerberos . Type : string Specifies an  absolute  path to an non-system-standard location for\nthe Kerberos configuration file. Cloud Manager  creates a Kerberos Credential (Ticket) Cache for each agent\nautomatically when Kerberos is enabled. If you want to override the\nlocation of the\n Kerberos Credential Cache ,\nyou must set the  KRB5CCNAME  environment variable to the desired\nfile name and path before running the agent. Type  string Specifies the  KRB5CC  environment variable that the MongoDB\nAgent sets for the Backup process. Used only to authenticate the\nBackup to your MongoDB deployment when the MongoDB Agent\nstarts the Backup function. Type  string Specifies the  KRB5CC  environment variable that the MongoDB\nAgent sets for the Monitoring function. Used only to authenticate\nMonitoring to your MongoDB deployment when the MongoDB\nAgent starts the Monitoring function. Use the  Cloud Manager  interface to configure Monitoring settings. In the navigation, click  Deployment . Click the  Agents  tab. Click  Downloads & Settings . In the  Agent Log Settings  section, click\n  next to  Monitoring Log Settings . Edit the Monitoring log settings: Setting Default Value Console Suggested Value Linux Log File Path /var/log/mongodb-mms-automation/monitoring-agent.log Windows Log File Path %SystemDrive%\\MMSAutomation\\log\\mongodb-mms-automation\\monitoring-agent.log Rotate Logs YES Size Threshold (MB) 1000 Time Threshold (Hours) 24 Max Uncompressed Files 5 Max Percent of Disk 2 Total Number of Log Files 0 Click  Save . You can configure the following Monitoring settings: In the navigation, click  Deployment . Click the  Agents  tab. Click  Downloads & Settings . In the  Custom Configuration  section, next to\n Edit Custom Configurations , click  . Enter the Monitoring configuration setting and value. Click  Save and Close . Type : string Specifies the ID of your  Cloud Manager  project. Find the project ID on the\n Project Settings  page ( Settings  >\n Project Settings ). Type : string Specifies the  Cloud Manager  agent API key of your  Cloud Manager  project. Cloud Manager  configures this setting when you install the MongoDB Agent. If\nyou need to configure Monitoring separately, include this setting. You can use an Agent API key that you have already generated for the\nproject. Otherwise, you can generate a new Agent API key. A project can\nhave more than one Agent API key, and any of the project's agents can\nuse any of the keys. For more information, see\n Manage Agent API Keys . To generate an Agent API key, go to the  Agent API Keys \ntab. To navigate to the tab, from the  Deployment  view,\nclick the  Agents  tab and then the  Agent API\nKeys  tab. When you generate an Agent API Key,  Cloud Manager  displays it  one time\nonly . You must copy this key. Treat it like a password; store\nit in a secure place.  Cloud Manager  never displays the full key again. Type : string Specifies the  URL (Uniform Resource Locator)  of the  Cloud Manager . Type : string Specifies the  URL (Uniform Resource Locator)  of an  HTTP (Hypertext Transfer Protocol)  proxy server that Monitoring can\nuse. Specify these settings if Monitoring authenticates to hosts\nusing Kerberos. To configure Kerberos, see\n Configure the MongoDB Agent for Kerberos . The same\nprocedures and requirements apply, only use a different  UPN (User Principal Name)  for\nMonitoring. Cloud Manager  creates a Kerberos Credential (Ticket) Cache for each agent\nautomatically when Kerberos is enabled. If you want to override the\nlocation of the\n Kerberos Credential Cache ,\nyou must set the  KRB5CCNAME  environment variable to the desired\nfile name and path before running the agent. Type : string Specifies the Kerberos principal that Monitoring uses. Type : string Specifies the  absolute  path to Kerberos principal's  keytab \nfile. Type : string Specifies the  absolute  path to an non-system-standard location for\nthe Kerberos configuration file. Type : string Specifies the service name with the  gssapiServiceName \nsetting. By default, MongoDB uses   mongodb   as its service name. Specify these settings when Monitoring connects to MongoDB deployments\nusing  TLS (Transport Layer Security) . To learn more, see\n Configure MongoDB Agent to Use TLS . Type : boolean Specifies whether or not to encrypt  all  connections to MongoDB\ndeployments using  TLS (Transport Layer Security) . Setting this to  true  overrides any\nper-host  TLS (Transport Layer Security)  settings configured in the  Cloud Manager  interface. Type : string Specifies the  absolute  path to the private key, client\ncertificate, and optional intermediate certificates in  PEM (Privacy-Enhanced Mail) \nformat. Monitoring uses the client certificate to connect to any\nconfigured MongoDB deployment that uses  TLS (Transport Layer Security)  and requires client\ncertificates. (The deployment runs with the\n --tlsCAFile  setting.) If you want to connect to a MongoDB deployment that uses both\n TLS (Transport Layer Security)  and certificate validation using  mongosh : You must set these settings in your  Custom Settings : Type : string Specifies the password needed to decrypt the private key in the\n sslClientCertificate  file. Include this setting if you encrypted\nthe client certificate  PEM (Privacy-Enhanced Mail)  file. Type : string Specifies the  absolute  path that contains the trusted  Certificate Authority \ncertificates in  PEM (Privacy-Enhanced Mail)  format. These certificates verify the server\ncertificate returned from any MongoDB deployments running with  TLS (Transport Layer Security) . Type : boolean Specifies whether Monitoring should validate the  TLS (Transport Layer Security)  certificates\npresented by the MongoDB databases. By default,  Cloud Manager  sets  sslRequireValidServerCertificates  to\n true . You need a valid trusted certificate to connect to MongoDB\ninstances using  TLS (Transport Layer Security) . If MongoDB Agent manages Monitoring, you can't set this option to\n false . If you configure Monitoring manually, you  can  set\n sslRequireValidServerCertificates  to  false . If you set  sslRequireValidServerCertificates  to\n false , don't set  sslTrustedServerCertificates .  Cloud Manager \nwon't verify the certificates. Changing this setting to  false  disables certificate verification\nand makes connections between Monitoring and MongoDB deployments\nsusceptible to  man-in-the-middle  attacks. Change this setting to\n false  only for testing purposes. Specify the settings Monitoring uses when communicating with  Cloud Manager \nusing  TLS (Transport Layer Security) . Type : string Specifies the  absolute  path that contains the trusted  Certificate Authority \ncertificates in  PEM (Privacy-Enhanced Mail)  format. Monitoring uses this certificate to\nverify that the agent can communicate with the designated  Cloud Manager \ninstance. By default, Monitoring uses the trusted root   Certificate Authority s\n installed on the host. If the agent cannot find the trusted root  Certificate Authority s, configure\nthese settings manually. Use the  Cloud Manager  interface to configure Backup settings. In the navigation, click  Deployment . Click the  Agents  tab. Click  Downloads & Settings . In the  Agent Log Settings  section, click\n  next to  Backup Log Settings . Edit the Backup log settings: Setting Default Value Console Suggested Value Linux Log File Path /var/log/mongodb-mms-automation/backup-agent.log Windows Log File Path %SystemDrive%\\MMSAutomation\\log\\mongodb-mms-automation\\backup-agent.log Rotate Logs YES Size Threshold (MB) 1000 Time Threshold (Hours) 24 Max Uncompressed Files 5 Max Percent of Disk 2 Total Number of Log Files 0 Click  Save . You can configure the following Backup settings: In the navigation, click  Deployment . Click the  Agents  tab. Click  Downloads & Settings . In the  Custom Configuration  section, next to\n Edit Custom Configurations , click  . Enter a Backup configuration setting and value. Click  Save and Close . Type : string Specifies the ID of your  Cloud Manager  project. Find the project ID on the\n Project Settings  page ( Settings  >\n Project Settings ). Type : string Specifies the MongoDB Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. Cloud Manager  configures this setting when you install the MongoDB Agent. If\nyou need to configure Backup separately, include this setting. You can use an Agent API key that you have already generated for the\nproject. Otherwise, you can generate a new Agent API key. A project can\nhave more than one Agent API key, and any of the project's agents can\nuse any of the keys. For more information, see\n Manage Agent API Keys . To generate an Agent API key, go to the  Agent API Keys \ntab. To navigate to the tab, from the  Deployment  view,\nclick the  Agents  tab and then the  Agent API\nKeys  tab. When you generate an Agent API Key,  Cloud Manager  displays it  one time\nonly . You must copy this key. Treat it like a password; store\nit in a secure place.  Cloud Manager  never displays the full key again. Type : string Specifies the hostname and port of the  Cloud Manager  used by the Backup agent. Don't include the protocol ( http://  or  https:// ) in the\n mothership  setting. Type : integer Specifies the length of time in seconds Backup waits for the\n Cloud Manager  to respond. If the MongoDB Agent doesn't get a\nresponse, it resets and retries the connection to the  Cloud Manager .\nThis value defaults to  90  seconds. Type : integer Specifies the length of time, in milliseconds, that a socket between\nBackup and  Cloud Manager  can remain idle before  Cloud Manager  breaks the\nconnection. If omitted, defaults to  180000  milliseconds ( 3 \nminutes). Type : boolean Specifies whether or not communication with the  Cloud Manager  web server\nuses Secure  HTTP (Hypertext Transfer Protocol) . Type : string Specifies the  URL (Uniform Resource Locator)  of an  HTTP (Hypertext Transfer Protocol)  proxy that Backup can use. To configure Kerberos, see\n Configure the MongoDB Agent for Kerberos . The same\nprocedures and requirements apply, only use a different  UPN (User Principal Name)  for\nBackup. Cloud Manager  creates a Kerberos Credential (Ticket) Cache for each agent\nautomatically when Kerberos is enabled. If you want to override the\nlocation of the\n Kerberos Credential Cache ,\nyou must set the  KRB5CCNAME  environment variable to the desired\nfile name and path before running the agent. Type : string Specifies the Kerberos principal that Backup uses. Type : string Specifies the  absolute  path to Kerberos principal's keytab file. Type : string Specifies the  absolute  path to an non-system-standard location for\nthe Kerberos configuration file. Type : string Specifies the service name with the  gsapiServiceName \nsetting. By default, MongoDB uses   mongodb   as its service name. Specify these settings when Backup connects to MongoDB deployments\nusing  TLS (Transport Layer Security) . To learn more, see\n Configure MongoDB Agent to Use TLS . Type : string Specifies the path to the private key, client certificate, and\noptional intermediate certificates in  PEM (Privacy-Enhanced Mail)  format. Backup\nuses the client certificate when connecting to a MongoDB deployment\nthat uses  TLS (Transport Layer Security)  and requires client certificates. (The deployment\nruns with the\n --tlsCAFile  setting.) Type : string Specifies the password needed to decrypt the private key in the\n sslClientCertificate  file. Include this setting if you\nencrypted the client certificate  PEM (Privacy-Enhanced Mail)  file. Type : string Specifies the path that contains the trusted CA certificates in\n PEM (Privacy-Enhanced Mail)  format. These certificates verify the server certificate\nreturned from any MongoDB deployments running with  TLS (Transport Layer Security) . Type : boolean Specifies if Backup should validate  TLS (Transport Layer Security)  certificates\npresented by the MongoDB deployments. Changing this setting to  false  disables certificate\nverification and makes connections between Backup and MongoDB\ndeployments susceptible to  man-in-the-middle  attacks. Change\nthis setting to  false  only for testing purposes. Specify the settings Backup use when communicating with  Cloud Manager  using\n TLS (Transport Layer Security) . Specifies the  absolute  path that contains the trusted  Certificate Authority \ncertificates in  PEM (Privacy-Enhanced Mail)  format. Backup uses this certificate to\nverify that the MongoDB Agent can communicate with the designated\n Cloud Manager  instance. By default, Backup uses the trusted root   Certificate Authority s\n installed on the system. If Backup cannot find the trusted root  Certificate Authority s, configure\nthese settings manually. If  Cloud Manager  use a self-signed  TLS (Transport Layer Security)  certificate, provide a value for\nthis setting.",
            "code": [
                {
                    "lang": "ini",
                    "value": "mmsGroupId=8zvbo2s2asigxvmpnkq5yexf"
                },
                {
                    "lang": "ini",
                    "value": "mmsApiKey=8zvbo2s2asigxvmpnkq5yexf"
                },
                {
                    "lang": "ini",
                    "value": "mmsBaseUrl=https://api-agents.mongodb.com"
                },
                {
                    "lang": "ini",
                    "value": "logFile=/path/to/mongodb-mms-automation/automation-agent.log"
                },
                {
                    "lang": "ini",
                    "value": "logLevel=ROUTINE"
                },
                {
                    "lang": "ini",
                    "value": "maxLogFiles=15"
                },
                {
                    "lang": "sh",
                    "value": "kill -SIGUSR1 <AgentID>"
                },
                {
                    "lang": "ini",
                    "value": "maxLogFileSize=536870912"
                },
                {
                    "lang": "ini",
                    "value": "maxUncompressedLogFiles=10"
                },
                {
                    "lang": "ini",
                    "value": "dialTimeoutSeconds=40"
                },
                {
                    "lang": "ini",
                    "value": "serverSelectionTimeoutSeconds=10"
                },
                {
                    "lang": "ini",
                    "value": "httpProxy=http://proxy.example.com:8080"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/path/to/mms-cluster-config-backup.json"
                },
                {
                    "lang": "ini",
                    "value": "httpsCAFile=/path/to/ca.pem"
                },
                {
                    "lang": "ini",
                    "value": "tlsRequireValidMMSServerCertificates=true"
                },
                {
                    "lang": "ini",
                    "value": "enableLocalConfigurationServer=false"
                },
                {
                    "lang": "ini",
                    "value": "keepUnusedMongodbVersions=false"
                },
                {
                    "lang": "ini",
                    "value": "localConfigurationServerPort=20128"
                },
                {
                    "lang": "ini",
                    "value": "mmsApiKeyExec=echo $myKey"
                },
                {
                    "lang": "ini",
                    "value": "krb5ConfigLocation=/path/to/krb_custom.conf"
                },
                {
                    "lang": "ini",
                    "value": "backupAgentKrb5CCName=/path/to/credentials_cache_file"
                },
                {
                    "lang": "ini",
                    "value": "monitoringAgentKrb5CCName=/path/to/credentials_cache_file"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=8zvbo2s2asigxvmpnkq5yexf"
                },
                {
                    "lang": "ini",
                    "value": "mmsApiKey=rgdte4w7wwbnds9nceuodx9mcte2zqem"
                },
                {
                    "lang": "ini",
                    "value": "mmsBaseUrl=http://example.com:8080"
                },
                {
                    "lang": "ini",
                    "value": "httpProxy=http://proxy.example.com:8080"
                },
                {
                    "lang": "ini",
                    "value": "krb5Principal=monitoring/myhost@EXAMPLE.COM"
                },
                {
                    "lang": "ini",
                    "value": "krb5Keytab=/path/to/mms-monitoring.keytab"
                },
                {
                    "lang": "ini",
                    "value": "krb5ConfigLocation=/path/to/krb_custom.conf"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --tls --tlsCertificateKeyFile /path/to/client.pem --tlsCAFile /path/to/ca.pem example.net:27017"
                },
                {
                    "lang": "ini",
                    "value": "sslTrustedServerCertificates=/path/to/ca.pem\nsslClientCertificate=/path/to/client.pem"
                },
                {
                    "lang": "ini",
                    "value": "sslClientCertificatePassword=password"
                },
                {
                    "lang": "ini",
                    "value": "sslTrustedServerCertificates=/path/to/ca.pem"
                },
                {
                    "lang": "ini",
                    "value": "sslRequireValidServerCertificates=true"
                },
                {
                    "lang": "ini",
                    "value": "httpsCAFile=/path/to/mms-certs.pem"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=8zvbo2s2asigxvmpnkq5yexf"
                },
                {
                    "lang": "ini",
                    "value": "mmsApiKey=rgdte4w7wwbnds9nceuodx9mcte2zqem"
                },
                {
                    "lang": "ini",
                    "value": "mothership=example.com:8080"
                },
                {
                    "lang": "ini",
                    "value": "httpProxy=http://proxy.example.com:8080"
                },
                {
                    "lang": "ini",
                    "value": "krb5Principal=backup/myhost@EXAMPLE.COM"
                },
                {
                    "lang": "ini",
                    "value": "krb5Keytab=/path/to/mms-backup.keytab"
                },
                {
                    "lang": "ini",
                    "value": "krb5ConfigLocation=/path/to/krb_custom.conf"
                },
                {
                    "lang": "ini",
                    "value": "sslTrustedServerCertificates=/path/to/mongodb-certs.pem"
                },
                {
                    "lang": "ini",
                    "value": "sslTrustedMMSBackupServerCertificate=/path/to/mms-certs.pem"
                }
            ],
            "preview": "Type: string",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/monitoring-metrics-per-plan",
            "title": "Monitoring Metrics Per Cloud Manager Plan",
            "headings": [
                "Overview",
                "Monitoring Metrics Per Plan",
                "Cloud Manager Billing"
            ],
            "paragraphs": "Cloud Manager  offers three plans, as described in the features list on\n https://www.mongodb.com/cloud/cloud-manager . Each plan\nprovides the monitoring metrics described here. Beginning with Monitoring Agent version 5.0.0,  Cloud Manager Premium \nuses 10-second granularity for monitoring metrics. Cloud Manager  gathers metric data at a given granularity, depending on your  Cloud Manager \nplan.  Cloud Manager  stores metrics data at increasing granularity levels. For each\nincreasing granularity level,  Cloud Manager  computes the metrics data based on the\naverages from the previous granularity level. The length of retention depends\non the granularity. The following table shows monitoring metrics for each  Cloud Manager  plan. For  all plans , chunk counts are stored for sharded clusters with fewer than\n1000 sharded collections. Cloud Manager  Plan Monitoring Data Storage Granularity Database-Specific Statistics Retention Rate for MongoDB Logs Premium Data gathered at a 10-second granularity and retained at the following\ngranularities for the following periods of time: You must run Monitoring\nversion 5.0.0 to store data at 10-second granularity. Earlier versions\nof the agent store data at 1-minute granularity. 10 seconds 24 hours 1 min 14 days 5 min 14 days 1 hour 12 months (52 weeks) 1 day forever All database-specific stats are retained. MongoDB log data retained at a maximum rate of 2000 lines per minute. Standard Data gathered at a 1-minute granularity and retained at the following\ngranularities for the following periods of time: 1 min 48 hours 5 min 48 hours 1 hour 63 days 1 day forever All database-specific stats are retained. MongoDB log data retained at a maximum rate of 2000 lines per 2 minutes. Free Tier Data gathered at a 5-minute granularity and retained for 24 hours. For hosts with greater than 1000 databases, only the following database-specific\nstats are retained: file size, data size, storage size, index size. MongoDB log data retained at a maximum rate of 2000 lines per 3 minutes. In the event of higher than expected load, monitoring data for all\nplans may be throttled. For information on your account's billing, see  Process Payment for  Cloud Manager .",
            "code": [],
            "preview": "Cloud Manager offers three plans, as described in the features list on\nhttps://www.mongodb.com/cloud/cloud-manager. Each plan\nprovides the monitoring metrics described here.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/required-access-mongodb-agent",
            "title": "Required Access for MongoDB Agent",
            "headings": [
                "Considerations",
                "Automation",
                "Backup",
                "Monitoring",
                "Authentication Mechanisms"
            ],
            "paragraphs": "If your MongoDB deployment enforces access control, the  Cloud Manager \nMongoDB Agent must authenticate to MongoDB as a\n user with the proper access . To authenticate, create a user with the appropriate roles in MongoDB.\nThe following tutorials include instructions and examples for creating\nthe MongoDB Agent user in your MongoDB deployment: MongoDB user roles are separate from  Cloud Manager \n user roles . These roles and their\nprivileges are described in the MongoDB manual beginning with the\n Authorization  page. The instructions on this page are for deployments that do not use Automation. If you use Automation,  Cloud Manager  manages authentication for you and the following instructions do not apply. Configure MongoDB Agent for Authentication . Configure MongoDB Agent for LDAP . Configure the MongoDB Agent for Kerberos . Configure the MongoDB Agent for X.509 Authentication . To authenticate to sharded clusters, create shard-local users on  each \nshard  and  create cluster-wide users: Create shard-local users by connecting directly to the replica set\nfor each shard. Create cluster-wide users while connected to the  mongos : these\ncredentials persist to the config servers. Every  mongod  and  mongos  process in your  Cloud Manager  deployment\nmust use the same username and roles for the MongoDB Agent user. To automate MongoDB instances, the MongoDB Agent must authenticate\non the  admin  database as a MongoDB user with the following roles: Connect to the  mongod  or  mongos  instance as a user with access to\n create database users .\nSee  db.createUser() method \npage in the MongoDB Manual. clusterAdmin readWriteAnyDatabase userAdminAnyDatabase dbAdminAnyDatabase backup restore To backup MongoDB instances, the MongoDB Agent must authenticate on the\nlisted database as a MongoDB user with the required roles. MongoDB Database Version MongoDB  FCV (Feature Compatibility Version) Required Role Database 4.2.x or later 4.2 or later clusterAdmin admin 3.0.0 through 4.2.x 4.0 or earlier backup admin 2.6.x clusterAdmin readAnyDatabase userAdminAnyDatabase readWrite admin 2.6.x readWrite local To monitor MongoDB instances, the MongoDB Agent must authenticate on the\n admin  database as a MongoDB user with the\n clusterMonitor  role. Monitoring includes gathering  dbStats  and\n database profiling  information. To authenticate, create the user in MongoDB with the appropriate\naccess. The authentication method that the MongoDB deployment uses\ndetermines which options to set when creating the user as well as\ndetermining any additional MongoDB Agent configuration: For SCRAM authentication, see\n Configure MongoDB Agent for Authentication . For LDAP authentication, see\n Configure MongoDB Agent for LDAP . For Kerberos authentication, see\n Configure the MongoDB Agent for Kerberos . For X.509 authentication, see\n Configure the MongoDB Agent for X.509 Authentication .",
            "code": [],
            "preview": "If your MongoDB deployment enforces access control, the Cloud Manager\nMongoDB Agent must authenticate to MongoDB as a\nuser with the proper access.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alert-types",
            "title": "Alert Event Types",
            "headings": [
                "Agent",
                "Automation Configuration",
                "Backup",
                "BI Connector",
                "Billing",
                "Cluster",
                "Data Explorer Accessed",
                "Host",
                "Organization",
                "Project",
                "Replica Set",
                "Support Case",
                "Team",
                "User"
            ],
            "paragraphs": "Alert Type Alert Message Scopes Automation is down Project, Global Automation is up Project, Global Backup has too many conf call failures Project, Global Backup is down Project, Global Backup is up Project, Global Backup does not have the latest version Project, Global Backup has the latest version Project, Global Monitoring is down Project, Global Monitoring is up Project, Global Monitoring does not have the latest version Project, Global Monitoring has the latest version Project, Global New agent Project, Global Alert Type Alert Message Scopes Deployment configuration published Project, Global Alert Type Alert Message Scopes Backup has possibly inconsistent cluster snapshots Project, Global Excluded namespaces were modified for cluster Project, Global Checkpoint interval updated for cluster Project, Global Backup authentication credentials updated for cluster Project, Global Snapshot schedule updated for cluster Project, Global Cluster backup state is now Project, Global Cluster storage engine has been updated Project, Global Cluster snapshot has been deleted Project, Global Clustershot expiry has been updated. Project, Global Backup configuration is consistent Project, Global Backup has a good clustershot Project, Global Inconsistent backup configuration has been detected Project, Global Backup initial sync finished Project, Global Backup initial sync started Project, Global Backup oplog is behind Project, Global Backup oplog is current Project, Global A restore has been requested Project, Global Backup has been resynced Project, Global Backup requires a resync Project, Global Excluded namespaces were modified for replica set Project, Global Backup authentication credentials updated for replica set Project, Global A master key rotation has been requested for a replica set. Project, Global Snapshot schedule updated for replica set Project, Global Replica set backup state is now Project, Global Replica set storage engine has been updated Project, Global Snapshot has been deleted Project, Global Snapshot expiry has been updated. Project, Global Backup sync is pending Project, Global Backup sync has been initiated Project, Global Alert Type Alert Message Scopes BI Connector is down Project, Global BI Connector is up Project, Global Alert Type Alert Message Scopes Account downgraded Project, Organization, Global Account upgraded Project, Organization, Global Credit card charge has failed Project, Organization, Global Credit card was successfully charged Project, Organization, Global Invoice has been paid by check Project, Organization, Global Credit card is about to expire Project, Global Credit card is current Project, Global Credit issued Project, Organization, Global Daily amount billed ($) is above threshold Project, Global Daily amount billed ($) is below threshold Project, Global Discount applied Project, Organization, Global Invoice address added Project, Organization, Global Invoice address changed Project, Organization, Global Invoice closed Project, Organization, Global Payment forgiven Project, Organization, Global Monthly bill has exceeded the limit you set Project, Global Monthly pending invoice ($) total is below threshold Project, Global Prepaid plan added Project, Organization, Global Promo Credit issued Project, Organization, Global Refund issued Project, Organization, Global Organization has one or more pending invoices that are more than\none month old Organization Invoice has been paid by wire transfer Project, Organization, Global Alert Type Alert Message Scopes Cluster is missing an active mongos Project, Global Cluster has an active mongos Project, Global Shard added Project, Global Shard removed Project, Global Disk Backup Alert Type Alert Message Scopes User performed a Data Explorer read-only operation Project, Global User performed a Data Explorer CRUD operation, which modifies data Project, Global Alert Type Alert Message Scopes A cloud provider snapshot restore has been requested Organization Alert Type Alert Message Scopes Host added Project, Global Host added to replica set Project, Global Attempted to kill operation Project, Global Attempted to kill session Project, Global Database profiling disabled Project, Global Database profiling enabled Project, Global Host removed Project, Global Host disabled Project, Global Host disabled and hidden Project, Global Host hidden Project, Global Host is down Project, Global Host has been downgraded Project, Global Host is exposed to the public Internet Project, Global Host IP address changed Project, Global Host is locked down Project, Global Host is now primary Project, Global Host is now secondary Project, Global Host is now a standalone Project, Global Host has recovered Project, Global Host is recovering Project, Global Host has restarted Project, Global Host experienced a rollback Project, Global Authentication or  TLS (Transport Layer Security)  is disabled. Project, Global Host's SSL certificate is current Project, Global Host's SSL certificate will expire within 30 days Project, Global Host is up Project, Global Host has been upgraded Project, Global Inside metric threshold Project, Global Host is new Project, Global Outside metric threshold Project, Global Host paused Project, Global Host removed from replica set Project, Global Host resumed Project, Global Host undeleted Project, Global Host does not have the latest version Project, Global Host version changed Project, Global Host has the latest version Project, Global Alert Type Alert Message Scopes Organization users have two-factor authentication enabled Organization, Global Organization has been reactivated Organization, Global Organization has been suspended by an administrator Organization, Global API key has been added Organization API key has been deleted Organization Credit card is about to expire Organization, Global Credit card was added Organization, Global Credit card is current Organization, Global Credit card information was updated Organization, Global Amount billed yesterday is above the limit you set Organization, Global Daily amount billed is below the limit you set Organization, Global MongoDB Production Support Employees restricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization (You may grant a 24 hour bypass to the access\nrestriction at the Atlas cluster level) Organization, Global MongoDB Production Support Employees unrestricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization Organization, Global Current bill for any single project is above the limit you set Organization, Global Project charges ($) are below threshold Organization, Global Current bill for organization is over the limit you set Organization, Global Current bill is below the limit you set Organization, Global Organization has been locked due to unpaid charges for more than\n%d days Organization IP Access List for Public API Not Required Organization, Global Require IP Access List for Public API Enabled Organization, Global Organization has been renamed Organization, Global Organization has been suspended due to unpaid charges for more\nthan %d days Organization Organization has been granted temporary access Organization, Global Two-factor Authentication Optional Organization, Global Two-factor Authentication Required Organization, Global Organization users do not have two-factor authentication enabled Organization, Global Alert Type Alert Message Scopes Users have two-factor authentication enabled Project, Global Service suspended due to unpaid invoice(s) more than 30 days old Project, Global Service restored because all invoices are paid in full Project, Global Users do not have two-factor authentication enabled Project, Global Alert Type Alert Message Scopes Replica set has an updated configuration Project, Global Replica set has enough healthy members Project, Global Replica set member added Project, Global Replica set member removed Project, Global Replica set elected multiple primaries Project, Global Replica set has no primary Project, Global Replica set elected one primary Project, Global Replica set elected a new primary Project, Global Replica set has too few healthy members Project, Global Replica set has too many election events Project, Global Replica set has too many unhealthy members Project, Global Alert Type Alert Message Scopes Case created. Project, Global Alert Type Alert Message Scopes Team added to project Organization, Project, Global Team created Organization, Global Team deleted Organization, Global Team name changed Organization, Global Team removed from project Organization, Project, Global Team roles modified in project Organization, Project, Global Team updated Organization, Global User added to team Organization, Global Alert Type Alert Message Scopes User was invited to project Project, Global User was invited to organization Organization, Global Request to join project was approved Project, Global Request to join project was denied Project, Global User joined the project Project, Global User joined the organization Organization, Global User joined the team Organization, Global User left the project Project, Global User left the organization Organization, Global User left the team Organization, Global User requested to join project Project, Global User had their role changed Project, Organization, Global",
            "code": [],
            "preview": "Disk Backup",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/cluster-configuration",
            "title": "Automation Configuration",
            "headings": [
                "Overview",
                "Configuration Version",
                "Download Base",
                "MongoDB Versions Specifications",
                "Automation",
                "Monitoring",
                "Backup",
                "MongoDB Instances",
                "Cluster Wide",
                "Replica Sets",
                "Sharded Clusters",
                "Cluster Balancer",
                "Authentication",
                "LDAP",
                "SSL",
                "MongoDB Roles",
                "Kerberos",
                "Indexes"
            ],
            "paragraphs": "The Automation uses an automation configuration to determine the\ndesired state of a MongoDB deployment and to effect changes as needed.\nIf you modify the deployment through the  Cloud Manager  web interface, you never\nneed manipulate this configuration. If you are using the Automation without  Cloud Manager , you can construct and\ndistribute the configuration manually. Optional fields are marked as such. A field that takes a  <number>  as its value can take integers and\nfloating point numbers. This lists the version of the automation configuration. Name Type Necessity Description version integer Required Revision of this automation configuration file. Cloud Manager  downloads automatic versions and runs starting scripts in the directory set in  options.downloadBase . Name Type Necessity Description options object Required Path for automatic downloads of new versions. options.downloadBase string Required Directory on Linux and UNIX platforms for\nautomatic version downloads and startup scripts. The  mongoDbVersions[n]  array defines specification objects for\nthe MongoDB instances found in the  processes  array. Each\nMongoDB instance in the  processes  array must have a\nspecification object in this array. Name Type Necessity Description mongoDbVersions[n] array of objects Required Specification objects for the MongoDB instances found in the\n processes  array. Each MongoDB instance in  processes  must\nhave a specification object in  mongoDbVersions[n] . mongoDbVersions[n].name string Required Name of the specification object. The specification object is\nattached to a MongoDB instance through the instance's\n processes.version  parameter in this configuration. mongoDbVersions[n].builds[k] array of objects Required Builds available for this MongoDB instance. mongoDbVersions[n].builds[k].platform string Required Platform for this MongoDB instance. mongoDbVersions[n].builds[k].url string Required URL (Uniform Resource Locator)  from which to download MongoDB for this instance. mongoDbVersions[n].builds[k].gitVersion string Required Commit identifier that identifies the state of the code used\nto build the MongoDB process. The MongoDB  buildInfo  command returns the gitVersion\nidentifier. mongoDbVersions[n].builds[k].modules array Required List of modules for this version. Corresponds to the  modules \nparameter that the  buildInfo  command returns. mongoDbVersions[n].builds[k].architecture string Required Processor's architecture.  Cloud Manager  accepts  amd64  or\n ppc64le . mongoDbVersions[n].builds[k].bits integer Deprecated Processor's bus width. Don't remove or make modifications to\nthis parameter. mongoDbVersions[n].builds[k].win2008plus Boolean Optional Set to  true  if this is a Windows build that requires either\nWindows 7 later or Windows Server 2008 R2 or later. mongoDbVersions[n].builds[k].winVCRedistUrl string Optional URL (Uniform Resource Locator)  from which the required version of the Microsoft Visual\nC++ redistributable can be downloaded. mongoDbVersions[n].builds[k].winVCRedistOptions array of strings Optional String values that list the command-line options to be specified\nwhen running the Microsoft Visual C++ redistributable installer.\nEach command-line option is a separate string in the array. mongoDbVersions[n].builds[k].winVCRedistDll string Optional Name of the Microsoft Visual C++ runtime DLL file that the agent\nchecks to determine if a new version of the Microsoft Visual C++\nredistributable is needed. mongoDbVersions[n].builds[k].winVCRedistVersion string Optional Minimum version of the Microsoft Visual C++ runtime DLL that\nmust be present to skip over the installation of the Microsoft\nVisual C++ redistributable. agentVersion  specifies the version of the MongoDB Agent. While you can update the MongoDB Agent version through this\nconfiguration property, you should use the\n Update Agent Versions \nendpoint to ensure your versions are up to date. Name Type Necessity Description agentVersion object Optional Version of the MongoDB Agent to run. If the running version\ndoes not match this setting, the MongoDB Agent downloads the\nspecified version, shuts itself down, and starts the new\nversion. agentVersion.name string Optional Desired version of the MongoDB Agent. agentVersion.directoryUrl string Optional URL (Uniform Resource Locator)  from which to download the MongoDB Agent. The  monitoringVersions  array specifies the version of the\nMonitoring Agent.  Cloud Manager  has made this parameter obsolete. To update the\nmonitoring log settings, use the  Update Monitoring Configuration Settings \nendpoint. Name Type Necessity Description monitoringVersions array of objects Optional Objects that define version information for each Monitoring\nAgent. monitoringVersions.name string Required Version of the Monitoring Agent. MongoDB Compatibility Matrix This property is read-only. Any modifications made to this\nproperty are not reflected when updating the Monitoring Agent\nthrough the  API (Application Programming Interface) . To update the Monitoring Agent version, use  this endpoint . monitoringVersions.hostname string Required FQDN (fully qualified domain name)  of the host that runs the Monitoring Agent. If the\nMonitoring Agent is not running on the host,  Cloud Manager  installs the\nagent from the location specified in\n monitoringVersions.urls . monitoringVersions.urls object Required Platform- and build-specific  URL (Uniform Resource Locator) s from which to download\nthe Monitoring Agent. monitoringVersions.urls.<platform> object Required Label that identifies an operating system and its version. The\nfield contains an object with key-value pairs, where each key is\neither the name of a build or  default  and each value is a\n URL (Uniform Resource Locator)  for downloading the Monitoring Agent. The object must\ninclude the  default  key set to the default download  URL (Uniform Resource Locator) \nfor the platform. monitoringVersions.baseUrl string Required Base  URL (Uniform Resource Locator)  used for the  mmsbaseurl  setting. monitoringVersions.logPath string Optional Directory where the agent stores its logs. The\ndefault is to store logs in  /dev/null . monitoringVersions.logRotate object Optional Enables log rotation for the MongoDB logs for a\nprocess. monitoringVersions.logRotate.sizeThresholdMB number Required Maximum size in MB for an individual log file before rotation. monitoringVersions.logRotate.timeThresholdHrs integer Required Maximum time in hours for an individual log file before\nrotation. monitoringVersions.logRotate.numUncompressed integer Optional Maximum number of total log files to leave uncompressed,\nincluding the current log file. The default is  5 . In earlier\nversions of  Cloud Manager , this field was named  maxUncompressed . The\nearlier name is still recognized, though the new version is\npreferred. monitoringVersions.logRotate.percentOfDiskspace number Optional Maximum percentage of total disk space all log\nfiles should take up before deletion. The default is  .02 . monitoringVersions.logRotate.numTotal integer Optional Total number of log files. If a number is not\nspecified, the total number of log files defaults to  0  and\nis determined by other  monitoringVersions.logRotate \nsettings. The  backupVersions  array specifies the version of the Backup Agent.\n Cloud Manager  has made this parameter obsolete. To update the backup log\nsettings, use the  Update Backup Configuration Settings  endpoint. Name Type Necessity Description backupVersions[n] array of objects Optional Objects that define version information for each\nBackup Agent. backupVersions[n].name string Required Version of the Backup Agent. MongoDB Compatibility Matrix This property is read-only. Any modifications made to this\nproperty are not reflected when updating the Backup Agent\nthrough the  API (Application Programming Interface) . To update the Backup Agent version, see\n this endpoint . backupVersions[n].hostname string Required FQDN (fully qualified domain name)  of the host that runs the Backup Agent. If the Backup\nAgent is not running on the host,  Cloud Manager  installs the agent from\nthe location specified in  backupVersions[n].urls . backupVersions[n].urls object Required Platform- and build-specific  URL (Uniform Resource Locator) s from which to download the\nBackup Agent. backupVersions[n].urls.<platform> object Required Label that identifies an operating system and its version. The\nfield contains an object with key-value pairs, where each key is\neither the name of a build or  default  and each value is a\n URL (Uniform Resource Locator)  for downloading the Backup Agent. The object must include\nthe  default  key set to the default download  URL (Uniform Resource Locator)  for the\nplatform. backupVersions[n].baseUrl string Required Base  URL (Uniform Resource Locator)  used for the  mothership  and  https  settings\nin the  Custom Settings . For example, for\n \"baseUrl\"=https://cloud.mongodb.com , the backup\nconfiguration fields would have these values:\n mothership=api-backup.mongodb.com  and  https\"=true . backupVersions[n].logPath string Optional Directory where the agent stores its logs. The default is to\nstore logs in  /dev/null . backupVersions[n].logRotate object Optional Enables log rotation for the MongoDB logs for a process. backupVersions[n].logRotate.sizeThresholdMB number Required Maximum size in MB for an individual log file before\nrotation. backupVersions[n].logRotate.timeThresholdHrs integer Required Maximum time in hours for an individual log file before\nrotation. backupVersions[n].logRotate.numUncompressed integer Optional Maximum number of total log files to leave uncompressed,\nincluding the current log file. The default is  5 . backupVersions[n].logRotate.percentOfDiskspace number Optional Maximum percentage of total disk space all log files should\ntake up before deletion. The default is  .02 . backupVersions[n].logRotate.numTotal integer Optional If a number is not specified, the total number of log files\ndefaults to  0  and is determined by other\n backupVersion.logRotate  settings. The  processes  array determines the configuration of your MongoDB\ninstances. Using this array, you can: Restore an instance. Start an  initial sync \nprocess on one or more MongoDB instances. Name Type Necessity Description processes array Required Contains objects that define the  mongos  and  mongod  instances\nthat  Cloud Manager  monitors. Each object defines a different instance. processes[n].args2_6 object Required MongoDB configuration object for MongoDB versions 2.6 and later. The  processes.args2_6  object accepts most MongoDB\nsettings and parameters for MongoDB versions 2.6 and later.\nTo learn more, see  MongoDB Settings and Automation Support . processes[n].alias string Optional Hostname alias (often a  DNS (Domain Name System)  CNAME) for the host on which the\nprocess runs. If an alias is specified, the MongoDB Agent prefers\nthis alias over the hostname specified in  processes.hostname \nwhen connecting to the host. You can also specify this alias in\n replicaSets.host  and  sharding.configServer . processes[n].authSchemaVersion integer Required Schema version of the user credentials for MongoDB database\nusers. This should match all other elements of the  processes \narray that belong to the same cluster. Cloud Manager  accepts  3  and  5  for this parameter. MongoDB 3.x and 4.x clusters default to  5 . MongoDB 2.6 clusters default to   3 . Upgrade to SCRAM-SHA-1 \nin the MongoDB 3.0 release notes. processes[n].backupRestoreUrl string Optional Delivery  URL (Uniform Resource Locator)  for the restore.  Cloud Manager  sets this when creating a\nrestore. To cancel an in-progress restore operation, set this\noption to  CANCEL . Automate Backup Restoration through the API . processes[n].cluster string Conditional Name of the sharded cluster. Set this value to the same value in\nthe  sharding.name  parameter in the  sharding  array for\nthe  mongos . Required  for a  mongos . Not needed  for a  mongod . defaultRWConcern.defaultReadConcern.level string Optional Consistency and isolation properties set for the data read from\nreplica sets and replica set shards.  MongoDB Atlas  accepts the following values: \"available\" \"local\" \"majority\" defaultRWConcern.defaultWriteConcern.j boolean Optional Flag that indicates whether the write acknowledgement must be\nwritten to the\n on-disk journal . defaultRWConcern.defaultWriteConcern.w string Optional Desired number of mongod instances that must acknowledge a write\noperation in a replica sets and replica set shards.  MongoDB Atlas  accepts the\n following values : Any number 0 or greater \"majority\" defaultRWConcern.defaultWriteConcern.wtimeout number Optional Desired time limit for the write concern \nexpressed in milliseconds. Set this value when you set\n defaultRWConcern.defaultWriteConcern.w  to a value greater\nthan  1 . processes[n].disabled Boolean Optional Flag that indicates if this process should be shut down. Set to\n true  to shut down the process. processes[n].featureCompatibilityVersion string Required Version of MongoDB with which this process has feature\ncompatibility. Changing this value can enable or disable certain\nfeatures that persist data incompatible with MongoDB versions\nearlier or later than the  featureCompatibilityVersion  you\nchoose. Cloud Manager  accepts  3.2 ,  3.6 ,  4.0  and\n 4.2  as parameter values. If you have an\nexisting deployment,  Cloud Manager  only accepts a\n featureCompatibilityVersion  equal to or one release older\nthan the MongoDB version you deployed. To learn which of\nthese parameter values is supported for each MongoDB version,\nand which features each of these values enable or disable,\nsee  setFeatureCompatibilityVersion  in the\nMongoDB Manual. Cloud Manager  sets this parameter to match the MongoDB version for new\ndeployments. Cloud Manager  doesn't automatically increment this parameter when you\nupgrade a host from one MongoDB version to the next. setFeatureCompatibilityVersion processes[n].hostname string Required Name of the host that serves this process. This defaults to\n localhost . processes[n].lastCompact string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last reclaimed free space on a\ncluster's disks. During certain operations, MongoDB might move\nor delete data but it doesn't free the currently unused space.  Cloud Manager \nreclaims the disk space in a rolling fashion across members of\nthe replica set or shards. To reclaim this space: To remove any ambiguity as to when you intend to reclaim the\nspace on the cluster's disks, specify a time zone with your\n ISO 8601  timestamp. For example, to set\n processes.lastCompact \nto 28 January 2021 at  2:43:52 PM US Central Standard Time, use\n \"processes.lastCompact\" : \"2021-01-28T14:43:52-06:00\" Immediately, set this value to the current time as an\n ISO 8601  timestamp. Later, set this value to a future  ISO 8601  timestamp.  Cloud Manager \nreclaims the space after the current time passes the provided\ntimestamp. processes[n].lastRestart string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last restarted this process. If you\nset this parameter to the current timestamp,  Cloud Manager  forces a\nrestart of this process after you upload this configuration.\nIf you set this parameter for multiple processes in the same\ncluster, the  Cloud Manager  restarts the selected processes in a rolling\nfashion across members of the replica set or shards. processes[n].lastResync string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the last\n initial sync \nprocess that  Cloud Manager  performed on the node. To trigger the init sync process on the node immediately, set\nthis value to the current time as an  ISO 8601  timestamp. If you set this parameter: Use this parameter with caution. During\n initial sync ,\nAutomation removes the entire contents of the node's\n dbPath  directory. On the secondary node, the MongoDB Agent checks whether the\nspecified timestamp is later than the time of the last resync,\nand if confirmed, starts init sync on this node. To set  processes.lastResync  on the secondary node to 28\nMay 2021 at 2:43:52 PM US CentralStandard Time, use: \"processes.lastResync\" : \"2021-05-28T14:43:52-06:00\" . If the MongoDB Agent confirms that this timestamp is later\nthan the recorded time of the last resync, it starts init\nsync on the node. On the primary node, the MongoDB Agent waits until you ask the\nprimary node to become the secondary with the\n rs.stepDown()  method, and then starts init sync on\nthis node. On all of the nodes in the same cluster, including the\nprimary, the MongoDB Agent checks whether the specified\ntimestamp is later than the time of the last resync, and if\nconfirmed, starts init sync on the secondary nodes in a\nrolling fashion. The MongoDB Agent waits until you ask the\nprimary node to become the secondary with the\n rs.stepDown()  method, and then starts init sync on\nthis node. Initial Sync processes[n].lastKmipMasterKeyRotation string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last rotated the master  KMIP (Key Management Interoperability)  key. If\nyou set this parameter to the current timestamp,  Cloud Manager  rotate the key after you upload this configuration. processes[n].logRotate object Optional MongoDB configuration object for rotating the MongoDB logs of a\nprocess. processes[n].logRotate.\nnumTotal integer Optional Total number of log files that  Cloud Manager  retains. If you don't set\nthis value, the total number of log files defaults to  0 .\n Cloud Manager  bases rotation on your other  processes.logRotate \nsettings. processes[n].logRotate.\nnumUncompressed integer Optional Maximum number of total log files to leave uncompressed,\nincluding the current log file. The default is  5 . processes[n].logRotate.\npercentOfDiskspace number Optional Maximum percentage of total disk space that  Cloud Manager  can use to\nstore the log files expressed as decimal. If this limit is\nexceeded,  Cloud Manager  deletes compressed log files until it meets this\nlimit.  Cloud Manager  deletes the oldest log files first. The default is  0.02 . processes[n].logRotate.\nsizeThresholdMB number Required Maximum size in MB for an individual log file before  Cloud Manager \nrotates it.  Cloud Manager  rotates the log file immediately if it meets\nthe value given in either this  sizeThresholdMB  or the\n processes.logRotate.timeThresholdHrs  limit. processes[n].logRotate.\ntimeThresholdHrs integer Required Maximum duration in hours for an individual log file before the\nnext rotation. The time is since the last rotation. Cloud Manager  rotates the log file once the file meets either this\n timeThresholdHrs  or the\n processes.logRotate.sizeThresholdMB  limit. processes[n].manualMode Boolean Optional Flag that indicates if MongoDB Agent automates this process. This defaults to  false . Set to  true  to disable Automation on this process. The\nMongoDB Agent takes no further actions on this process. Set to  false  to enable Automation on this process. The\nMongoDB Agent automates actions on this process. processes[n].name string Required Unique name to identify the instance. processes[n].numCores integer Optional Number of cores that  Cloud Manager  should bind to this process. The\nMongoDB Agent distributes processes across the cores as evenly as\npossible. processes[n].processType string Required Type of MongoDB process being run.  Cloud Manager  accepts  mongod  or\n mongos  for this parameter. processes[n].version string Required Name of the  mongoDbVersions  specification used with this\ninstance. clusterWideConfigurations  specifies the parameters to set across a\nreplica set or sharded cluster without requiring a  rolling restart . Name Type Necessity Description replicaSetID/clusterName object Optional The change stream options to apply to the replica set or sharded\ncluster. MongoDB Agent only checks if this configuration is in a\nvalid  JSON (Javascript Object Notation)  format but doesn't check the values for correctness. changeStreamOptions.preAndPostImages.expireAfterSeconds number Required Retention policy of change stream pre- and post-images in\nseconds. If you omit the value, the cluster retains the\npre- and post-images until it removes the corresponding change\nstream events from the oplog. If you remove this value, MongoDB Agent only removes this\nparameter from its automation configuration, but not from the\nserver. changeStreamOptions . The  replicaSets  array defines each replica set's configuration.\nThis field is required for deployments with replica sets. Name Type Necessity Description replicaSets array Optional Configuration of each\n replica set . The MongoDB Agent uses the values in this\narray to create valid  replica set configuration\ndocuments . The agent\nregularly checks that replica sets are configured correctly.\nIf a problem occurs, the agent reconfigures the replica set\naccording to its configuration document. The array can\ncontain the following top-level fields from a replica set\nconfiguration document:  _id ;  version ; and\n members . replSetGetConfig replicaSets[n]._id string Required The name of the replica set. replicaSets[n].protocolVersion string Optional Protocol version \nof the replica set. replicaSets[n].members array Optional Objects that define each member of the replica set. The\n members.host  field must specify the host replSetGetConfig . replSetGetConfig . replicaSets[n].members[m]._id integer Optional Any positive integer that indicates the member of the replica\nset. replicaSets[n].members[m].host string Optional Hostname, and port number when applicable, that serves this\nreplica set member. replicaSets[n].members[m].arbiterOnly boolean Optional Flag that indicates whether this replica set member acts as an\narbiter. replicaSets[n].members[m].buildIndexes boolean Optional Flag that indicates whether the  mongod  process builds indexes\non this replica set member. replicaSets[n].members[m].hidden boolean Optional Flag that indicates whether the replica set allows this member to\naccept read operations. replicaSets[n].members[m].priority number Optional Relative eligibility for  Cloud Manager  to select this replica set member\nas a primary. Larger number increase eligibility. This value can\nbe between 0 and 1000, inclusive for data-bearing nodes.\nArbiters can have values of 0 or 1. replicaSets[n].members[m].tags object Optional List of user-defined labels and their values applied to this\nreplica set member. replicaSets[n].members[m].secondaryDelaySecs integer Optional Amount of time in seconds that this replica set memberr should\nlag behind the primary. replicaSets[n].members[m].votes number Optional Quantity of votes this replica set member can cast for a replica\nset election. All data bearing nodes can have 0 or 1 votes.\nArbiters always have 1 vote. replicaSets[n].force object Optional Instructions to the MongoDB Agent to force a replica set to use\nthe  Configuration Version  specified in\n replicaSets.force.CurrentVersion . With this object, the MongoDB Agent can force a replica set to\naccept a new configuration to recover from a state in which a\nminority of its members are available. replicaSets[n].force.currentVersion integer Optional Configuration Version  that the\nMongoDB Agent forces the replica set to use. Set to  -1  to\nforce a replica set to accept a new configuration. Forcing a replica set reconfiguration might lead to a\n rollback  of majority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have\nquestions about the potential impacts of this operation. The  sharding  array defines the configuration of each sharded\ncluster. This parameter is required for deployments with sharded\nclusters. Name Type Necessity Description sharding array of objects Optional Objects that define the configuration of each\n sharded cluster . Each object in the array contains the\nspecifications for one cluster. The MongoDB Agent regularly\nchecks each cluster's state against the specifications. If the\nspecification and cluster don't match, the agent will change the\nconfiguration of the cluster, which might cause the balancer to\nmigrate chunks. sharding.managedSharding boolean Conditional Flag that indicates whether  Cloud Manager  Automation manages all\n sharded collections \nand  tags  in the deployment sharding.name string Conditional Name of the cluster. This must correspond with the value in\n processes.cluster  for a  mongos . sharding.configServerReplica string Conditional Name of the  config server replica set . You can add this array parameter if your config server runs as a replica set. If you run legacy mirrored config servers that\ndon't run as a replica set, use  sharding.configServer . sharding.configServer array of strings Conditional Names of the config server hosts. The host names match the names\nused in each host's  processes.name  parameter. If your sharded cluster runs MongoDB 3.4 or later, use\n sharding.configServerReplica . sharding.collections array of objects Conditional Objects that define the sharded  collections \nand their  shard keys . sharding.collections._id string Conditional namespace  of the sharded collection. The namespace\nis the combination of the database name and the name of the\ncollection. For example,  testdb.testcoll . sharding.collections.key array of arrays Conditional Collection's  shard keys . It contains: One array if your cluster uses one shard key. Multiple arrays if your cluster uses a compound shard key. sharding.collections.unique boolean Conditional Flag that indicates whether MongoDB\n enforces uniqueness for the shard key . sharding.shards array of objects Conditional Cluster's  shards . sharding.shards._id string Conditional Name of the shard. sharding.shards.rs string Conditional Name of the shard's replica set. This is specified in the\n replicaSets._id  parameter. sharding.shards.tags array of strings Conditional Zones assigned to this shard. You can add this array parameter if you use\n zoned sharding . sharding.tags array of objects Conditional Definition of zones for\n zoned sharding . Each object in\nthis array defines a zone and configures the shard key range\nfor that zone. sharding.tags.ns string Conditional Namespace  of the collection that uses zoned\nsharding. The namespace combines the database name and the name\nof the collection. testdb.testcoll sharding.tags.min array Conditional Minimum value of the shard key range. Specify the field name, field type, and value in a document of the\nfollowing form. fieldType  must be one of the following: value  must be passed in as a string value. To use a compound shard key, specify each field in a separate document, as\nshown in the example after this table. For more information on shard keys, see\n Shard Keys  in the MongoDB manual. string integer long double decimal date timestamp oid minKey maxKey sharding.tags.max array Conditional Maximum value of the shard key range. Specify the field name, field type, and value in a document of the\nfollowing form. fieldType  must be one of the following: value  must be passed in as a string value. To use a compound shard key, specify each field in a separate document, as\nshown in the example after this table. For more information on shard keys, see\n Shard Keys  in the MongoDB manual. string integer long double decimal date timestamp oid minKey maxKey sharding.tags.tag string Conditional Name of the  zone  associated\nwith the shard key range specified by  sharding.tags.min  and\n sharding.tags.max . The following example configuration defines a compound shard key\nrange with a min value of  { a : 1, b : ab }  and a max value of\n { a : 100, b : fg } . The example defines the range on the\n testdb.test1  collection and assigns it to zone  zone1 . The  balancer  object is optional and defines balancer settings for each cluster. Name Type Necessity Description balancer object Optional Parameters named according to clusters, each parameter\ncontaining an object with the desired balancer settings for the\ncluster. The object uses the  stopped  and  activeWindow \nparameters, as described in the procedure to schedule the\nbalancing window in\n this tutorial \nin the MongoDB manual. Cloud Manager  doesn't require the  auth  object. This object defines\n authentication-related  settings. Name Type Necessity Description auth object Optional Defines  authentication-related \nsettings. If you omit this parameter, skip the rest of this section. auth.authoritativeSet boolean Conditional Sets whether or not  Cloud Manager  enforces a consistent set of managed\nMongoDB users and roles in all managed deployments in the\nproject. auth.authoritativeSet  defaults to  false . Required if  \"auth\" : true . If  \"auth.authoritativeSet\" : true , then  Cloud Manager \n enforces consistent users and roles . If  \"auth.authoritativeSet\" : false , then  Cloud Manager \n doesn't enforce consistent users and roles . auth.autoUser string Conditional Username that the Automation uses when connecting to an\ninstance. Required if  \"auth\" : true . auth.autoPwd string Conditional Password that the Automation uses when connecting to an\ninstance. Required if  \"auth\" : true . auth.disabled boolean Optional Flag indicating if auth is disabled. If not specified,\n disabled  defaults to  false . auth.deploymentAuthMechanisms array of strings Conditional Lists the supported authentication mechanisms for the processes\nin the deployment. Required if  \"auth\" : true . Specify: Value Authentication Mechanism MONGODB-CR SCRAM-SHA-1 SCRAM-SHA-256 SCRAM-SHA-256 MONGODB-X509 x.509 Client Certificate PLAIN LDAP GSSAPI Kerberos auth.autoAuthMechanisms array of strings Conditional Sets the authentication mechanism used by the Automation.\nIf not specified,  disabled  defaults to  false . Required if  \"auth\" : true . Specify: This parameter contains more than one element only when\nit's configured for both SCRAM-SHA-1 and SCRAM-SHA-256. Value Authentication Mechanism MONGODB-CR SCRAM-SHA-1 SCRAM-SHA-256 SCRAM-SHA-256 MONGODB-X509 x.509 Client Certificate PLAIN LDAP GSSAPI Kerberos auth.key string Conditional Contents of the key file that  Cloud Manager  uses to authenticate to the\nMongoDB processes. Required if  \"auth\" : true  and  \"auth.disabled\" : false . If you change the  auth.key  value, you must change the\n auth.keyfile  value. auth.keyfile string Conditional Path and name of the key file that  Cloud Manager  uses to authenticate to\nthe MongoDB processes. Required if  \"auth\" : true  and  \"auth.disabled\" : false . If you change the  auth.keyfile  value, you must change the\n auth.key  value. string Optional New password that the Automation uses when connecting to an\ninstance. To rotate passwords without losing the connection: Set  auth.newAutoPwd  and leave  auth.autoPwd  with its\ncurrent password. Wait for the goal state. auth.newAutoPwd  copies over the  auth.autoPwd \npassword automatically. You can set this option only when you include SCRAM-SHA-1\nor SCRAM-SHA-256 as one of the authentication\nmechanisms for the Automation in  auth.autoAuthMechanisms . auth.newKey string Optional Contents of a new key file that you want  Cloud Manager  to use to\nauthenticate to the MongoDB processes. When you set this option,  Cloud Manager  rotates the key that the\napplication uses to authenticate to the MongoDB processes in\nyour deployment. When all MongoDB Agents use the new key,  Cloud Manager \nreplaces the value of  auth.key  with the new key that you\nprovided in  auth.newKey  and removes  auth.newKey  from the\nautomation configuration. auth.usersDeleted array of objects Optional Objects that define the authenticated users to be deleted from\nspecified databases or from all databases. This array must\ncontain  auth.usersDeleted.user  and\n auth.usersDeleted.dbs . auth.usersDeleted[n].user string Optional Username of user that  Cloud Manager  should delete. auth.usersDeleted[n].dbs array of strings Optional List the names of the databases from which  Cloud Manager  should delete\nthe authenticated user. auth.usersWanted array of objects Optional Contains objects that define authenticated users to\nadd to specified databases. Each object must have the\n auth.usersWanted[n].db ,  auth.usersWanted[n].user , and\n auth.usersWanted[n].roles  parameters, and then have exactly one\nof the following parameters:  auth.usersWanted[n].pwd ,\n auth.usersWanted[n].initPwd , or\n auth.usersWanted[n].userSource . auth.usersWanted[n].db string Conditional Database to which to add the user. auth.usersWanted[n].user string Conditional Name of the user that  Cloud Manager  should add. auth.usersWanted[n].roles array Conditional List of the  roles  to be assigned to the user\nfrom the user's database, which is specified in\n auth.usersWanted[n].db . auth.usersWanted[n].pwd string Conditional 32-character hex  SCRAM-SHA-1  hash of the password\ncurrently assigned to the user. Cloud Manager  doesn't use this parameter to set or change a password. Required if: \"auth\" : true , \"auth.deploymentAuthMechanisms\" : \"MONGODB-CR\" , and \"auth.usersWanted[n].initPwd\"  is unset. auth.usersWanted[n].initPwd string Conditional Cleartext password that you want to assign to the user. Required if: \"auth\" : true , \"auth.deploymentAuthMechanisms\" : \"MONGODB-CR\" , and \"auth.usersWanted[n].pwd\"  is unset. auth.usersWanted[n].userSource string Deprecated No longer supported. auth.usersWanted[n].otherDBRoles object Optional If you assign the user's database  \"auth.usersWanted[n].db\" :\n\"admin\" , then you can use this object to assign the user roles\nfrom other databases as well. The object contains key-value\npairs where the key is the name of the database and the value is\nan array of string values that list the roles be assigned from\nthat database. auth.usersWanted[n].authenticationRestrictions array of documents Optional Authentication restrictions that the host enforces on the\nuser. If a user inherits multiple roles with incompatible authentications\nrestrictions, that user becomes unusable. For example, if a user\ninherits one role in which the  clientSource  field is  [198.51.100.0] \nand another role in which the  clientSource  field is  [203.0.113.0] ,\nthe server is unable to authenticate the user. For more information about authentication in MongoDB, see\n Authentication . auth.usersWanted[n].authenticationRestrictions[k].clientSource array of strings Conditional If present when authenticating a user, the host verifies that\nthe given list contains the client's IP address  CIDR (Classless Inter-Domain Routing)  range. If\nthe client's IP address is not present, the host does not\nauthenticate the user. auth.usersWanted[n].authenticationRestrictions[k].serverAddress array of strings Conditional Comma-separated array of IP addresses to which the client can\nconnect. If present, the host verifies that  Cloud Manager  accepted the\nclient's connection from an IP address in the given array. If\nthe connection was accepted from an unrecognized IP address, the\nhost doesn't authenticate the user. The  ldap  object enables  LDAP (Lightweight Directory Access Protocol)  authorization. This\nobject is optional. To learn more, see  Enable LDAP Authentication for your  Cloud Manager  Project . Name Type Necessity Description ldap object Optional Object that contains the settings to enable and configure  LDAP (Lightweight Directory Access Protocol) \nauthorization. ldap.servers string Conditional Comma-separated string that contains one or more  LDAP (Lightweight Directory Access Protocol)  servers\nin  <host>:<port>  format to execute queries against. You can\nuse  setParameter  to configure this setting on a running\nsystem. For  LDAP (Lightweight Directory Access Protocol)  authorization, you must specify this setting. ldap.timeoutMS long Optional Amount of time in milliseconds that MongoDB waits for an  LDAP (Lightweight Directory Access Protocol) \nserver to respond to a request before timing out. You can use\n setParameter  to configure this setting on a running system.\nBy default, MongoDB times out after ten seconds. ldap.bindMethod string Optional Human-readable string that indicates whether to use simple\nauthentication or an  SASL (Simple Authentication and Security Layer)  protocol to authenticate itself. You\ncan specify  simple  or  sasl . By default, MongoDB uses\nsimple authentication. ldap.bindSaslMechanisms string Optional String that contains a comma-separated list of  SASL (Simple Authentication and Security Layer)  mechanisms\nfor MongoDB to attempt authentication against the  LDAP (Lightweight Directory Access Protocol) \nserver while binding. By default, MongoDB uses  DIGEST-MD5  to\nbind. ldap.bindQueryUser string Conditional LDAP (Lightweight Directory Access Protocol)  entity domain name that MongoDB binds as when it connects\nto an  LDAP (Lightweight Directory Access Protocol)  server. You can use  setParameter  to configure\nthis setting on a running system. For MongoDB to bind with\nauthentication credentials, you must specify this setting. ldap.bindQueryPassword string Conditional Password that MongoDB binds with when it connects to an  LDAP (Lightweight Directory Access Protocol) \nserver. You can use  setParameter  to configure this setting\non a running system. For MongoDB to bind with a password, you\nmust specify this setting. ldap.userCacheInvalidationPeriod integer Optional Interval that MongoDB waits between user cache flushes. When the\nexternal user cache is flushed, the next operation that an\n LDAP (Lightweight Directory Access Protocol)  authorized user makes requires a reaquisition of roles.\nIf you specify a high value, you might decrease the load on\nyour  LDAP (Lightweight Directory Access Protocol)  servers and increase the amount of time needed to\nsynchronize MongoDB roles with  LDAP (Lightweight Directory Access Protocol)  group membership. By\ndefault, MongoDB waits 30 seconds between cache flushes. ldap.authzQueryTemplate string Conditional RFC 4516  formatted  URL (Uniform Resource Locator)  of the  LDAP (Lightweight Directory Access Protocol)  query to\nexecute to obtain  LDAP (Lightweight Directory Access Protocol)  groups relative to the  ldap.server \nsetting. In this  URL (Uniform Resource Locator) , the placeholder token string  {USER} \nis replaced with the acquired user domain name. You can use\n setParameter  to configure this setting on a running system.\nFor  LDAP (Lightweight Directory Access Protocol)  authorization, you must specify this setting. ldap.userToDNMapping array Optional JSON (Javascript Object Notation) -formatted array that contains the ordered transformations\nthat MongoDB applies to authenticate MongoDB user names to match\ntheir domain names. You can specify this setting if you use an\nalternate authentication method, or if the user name passed to\nMongoDB for authentication doesn't match the  LDAP (Lightweight Directory Access Protocol)  domain name.\nYou can use  setParameter  to configure this setting on a\nrunning system. By default, MongoDB uses user names as the\ndomain names for automatic  LDAP (Lightweight Directory Access Protocol)  authorization. The  ssl  object enables  TLS (Transport Layer Security)  for encrypting connections. This\nobject is optional. Name Type Necessity Description ssl object Optional Enables  TLS (Transport Layer Security)  for encrypting connections. To use  TLS (Transport Layer Security) , choose a\npackage that supports  TLS (Transport Layer Security) . All platforms that support\n MongoDB Enterprise  also support\n TLS (Transport Layer Security) . ssl.clientCertificateMode string Conditional Indicates whether connections to  Cloud Manager  require a  TLS (Transport Layer Security) \ncertificate. The values are  OPTIONAL  and  REQUIRE . ssl.CAFilePath string Conditional Absolute file path to the certificate used to authenticate\nthrough  TLS (Transport Layer Security)  on a Linux or UNIX host. Cloud Manager  requires either  ssl.CAFilePath  or  ssa.CAFilePathWindows  if: You're using  TLS (Transport Layer Security)  or X.509 authentication, and The CA file is not in your operating system's root certificates. ssl.CAFilePathWindows string Conditional Absolute file path to the certificate used to authenticate\nthrough  TLS (Transport Layer Security)  on a Windows host. Cloud Manager  requires either  ssl.CAFilePath  or  ssa.CAFilePathWindows  if: You're using  TLS (Transport Layer Security)  or X.509 authentication, and The CA file is not in your operating system's root certificates. ssl.autoPEMKeyFilePath string Conditional Absolute file path to the client private key (PEM) file that\nauthenticates the  TLS (Transport Layer Security)  connection on a Linux or UNIX\nhost. Cloud Manager  requires either  ssl.autoPEMKeyFilePath  or  ssa.autoPEMKeyFilePathWindows \nif you're using  TLS (Transport Layer Security)  or X.509 authentication. ssl.autoPEMKeyFilePathWindows string Conditional Absolute file path to the client private key (PEM) file that\nauthenticates the  TLS (Transport Layer Security)  connection on a Windows host. Cloud Manager  requires either  ssl.autoPEMKeyFilePath  or  ssa.autoPEMKeyFilePathWindows \nif you're using  TLS (Transport Layer Security)  or X.509 authentication. ssl.autoPEMKeyFilePwd string Conditional Password for the private key (PEM) file specified in\n ssl.autoPEMKeyFilePath  or  ssa.autoPEMKeyFilePathWindows .  Cloud Manager \nrequires this password if the PEM file is encrypted. The  roles  array is optional and describes user-defined roles. Name Type Necessity Description roles array of objects Optional Roles and privileges that MongoDB has assigned to a cluster's\nuser-defined roles. Each object describes a different\nuser-defined role. Objects in this array contain the same fields\nas documents in the  system roles collection , except for the  _id \nfield. roles[n].role string Conditional Name of the user-defined role. roles[n].db string Conditional Database to which the user-defined role belongs. roles[n].privileges array of documents Conditional Privileges  this role can perform. roles[n].privileges[k].resource string Conditional Specifies the resources upon which the privilege  actions \napply. roles[n].privileges[k].actions string Conditional Actions permitted on the resource. Privilege Actions roles[n].roles array of documents Conditional Roles from which this role  inherits \nprivileges. roles[n].authenticationRestrictions array of documents Optional Authentication restrictions that the MongoDB server enforces on\nthis role. If a user inherits multiple roles with incompatible authentications\nrestrictions, that user becomes unusable. For example, if a user\ninherits one role in which the  clientSource  field is  [198.51.100.0] \nand another role in which the  clientSource  field is  [203.0.113.0] ,\nthe server is unable to authenticate the user. For more information about authentication in MongoDB, see\n Authentication . roles[n].authenticationRestrictions[k].clientSource array of strings Conditional If present, when authenticating a user, the MongoDB server\nverifies that the client's IP address is either in the given\nlist or belongs to a  CIDR (Classless Inter-Domain Routing)  range in the list. If the client's\nIP address is not present, the MongoDB server does not\nauthenticate the user. roles[n].authenticationRestrictions[k].serverAddress array of strings Conditional Comma-separated array of IP addresses to which the client can\nconnect. If present, the MongoDB server verifies that it\naccepted the client's connection from an IP address in the given\narray. If the MongoDB server accepts a connection from an\nunrecognized IP address, the MongoDB server does not\nauthenticate the user. The  kerberos  object is optional and defines a kerberos service name used in authentication. Name Type Necessity Description kerberos object Optional Key-value pair that defines the kerberos service name\nagents use to authenticate via kerberos. kerberos.serviceName string Required Label that sets: The service name that the agents use to authenticate to a\n mongod  or  mongos  via Kerberos. The  saslServiceName  option in the\n MongoDB Server Parameters . The  indexConfigs  array is optional and defines indexes to be built for specific replica sets. Name Type Necessity Description indexConfigs array of objects Optional Specific indexes to be built for specific replica sets. indexConfigs.key array of arrays Required Keys in the index. This \"array of arrays\" contains a single\narray if the index has just one key. indexConfigs.rsName string Required Replica set on which MongoDB builds the index. indexConfigs.dbName string Required Database that MongoDB indexes. indexConfigs.collectionName string Required Collection that MongoDB indexes. indexConfigs.collation object Optional Language-specific rules to use when sorting and matching\nstrings if the index uses\n collation . If you include the  indexConfigs.collation  object, you must\ninclude the  indexConfigs.collation.locale  parameter. All\nother parameters are optional. If you don't include the  indexConfigs.collation  object, the\nindex can't include collation. indexConfigs.collation.locale string Required Locale that the  ICU  defines. The MongoDB Server Manual lists the supported locales in its\n Collation Locales and Default Parameters section . To specify simple binary comparison, set this value to\n simple . indexConfigs.collation.caseLevel boolean Optional Flag that indicates how the index uses case comparison. If you set this parameter to  true , the index uses case\ncomparison. This parameter applies only if you set\n indexConfigs.collation.strength  to  1  or  2 . Collation indexConfigs.collation.caseFirst string Optional Sort order of case differences during tertiary level\ncomparisons. The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.strength number Optional Level of comparison to perform. Corresponds to\n ICU Comparison Levels . The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.numericOrdering boolean Optional Flag that indicates how to compare numeric strings. The default is  false . Value Collation Method Example true numeric strings compared as numbers 10  >  2 . false numeric strings compared as strings 10  <  2 . Collation indexConfigs.collation.alternate string Optional Setting that determines how collation should consider whitespace\nand punctuation as base characters during comparisons. The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.maxVariable string Optional Characters the index can ignore. This parameter applies only if\n indexConfigs.collation.alternate  is set to  shifted . The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.normalization boolean Optional Flag that indicates if the text should be normalized. If you set this parameter to  true , collation: Checks if text requires  normalization . Performs normalization Collation Collation indexConfigs.collation.backwards boolean Optional Flag that indicates how the index should handle diacritic\nstrings. Collation indexConfigs.options document Required Index options that the  MongoDB Go Driver \nsupports.",
            "code": [
                {
                    "lang": "json",
                    "value": "\"version\" : \"<integer>\""
                },
                {
                    "lang": "json",
                    "value": "\"options\" : {\n  \"downloadBase\" : \"<string>\",\n}"
                },
                {
                    "lang": "json",
                    "value": "\"mongoDbVersions[n]\" : [\n  {\n   \"name\" : \"<string>\",\n    \"builds\" : [\n      {\n       \"platform\" : \"<string>\",\n        \"url\" : \"<string>\",\n        \"gitVersion\" : \"<string>\",\n        \"modules\" : [ \"<string>\", ... ],\n        \"architecture\" : \"<string>\",\n        \"bits\" : \"<integer>\",\n        \"win2008plus\" : \"<Boolean>\",\n        \"winVCRedistUrl\" : \"<string>\",\n        \"winVCRedistOptions\" : [ \"<string>\", ... ],\n        \"winVCRedistDll\" : \"<string>\",\n        \"winVCRedistVersion\" : \"<string>\"\n      },\n      ...\n    ],\n  },\n  ...\n]"
                },
                {
                    "lang": "json",
                    "value": "\"agentVersion\" : {\n  \"name\" : \"<string>\",\n  \"directoryUrl\" : \"<string>\"\n}"
                },
                {
                    "lang": "json",
                    "value": "\"monitoringVersions\" : [\n  {\n    \"name\" : \"<string>\",\n    \"hostname\" : \"<string>\",\n    \"urls\" : {\n      \"<platform1>\" : {\n        \"<build1>\" : \"<string>\",\n        ...,\n        \"default\" : \"<string>\"\n      },\n      ...\n    },\n    \"baseUrl\" : \"<string>\",\n    \"logPath\" : \"<string>\",\n    \"logRotate\" : {\n      \"sizeThresholdMB\" : <number>,\n      \"timeThresholdHrs\" : <integer>,\n      \"numUncompressed\": <integer>,\n      \"percentOfDiskspace\" : <number>,\n      \"numTotal\" : <integer>\n    }\n  },\n  ...\n]"
                },
                {
                    "lang": "json",
                    "value": "\"backupVersions[n]\" : [\n  {\n   \"name\" : \"<string>\",\n    \"hostname\" : \"<string>\",\n    \"urls\" : {\n     \"<platform1>\" : {\n       \"<build1>\" : \"<string>\",\n        ...,\n        \"default\" : \"<string>\"\n      },\n      ...\n    },\n    \"baseUrl\" : \"<string>\",\n    \"logPath\" : \"<string>\",\n    \"logRotate\" : {\n     \"sizeThresholdMB\" : \"<number>\",\n      \"timeThresholdHrs\" : \"<integer>\",\n      \"numUncompressed\": \"<integer>\",\n      \"percentOfDiskspace\" : \"<number>\",\n      \"numTotal\" : \"<integer>\"\n    }\n  },\n  ...\n]"
                },
                {
                    "lang": "yaml",
                    "value": "\"processes\": [{\n  \"<args>\": {},\n  \"alias\": \"<string>\",\n  \"authSchemaVersion\": \"<integer>\",\n  \"backupRestoreUrl\": \"<string>\",\n  \"cluster\": \"<string>\",\n  \"defaultRWConcern\": {\n    \"defaultReadConcern\": {\n      \"level\": \"<string>\"\n    },\n    \"defaultWriteConcern\": {\n      \"j\": \"<boolean>\",\n      \"w\": \"<string>\",\n      \"wtimeout\": \"<integer>\"\n    }\n  }\n  \"disabled\": \"<Boolean>\",\n  \"featureCompatibilityVersion\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"lastCompact\" : \"<dateInIso8601Format>\",\n  \"lastRestart\" : \"<dateInIso8601Format>\",\n  \"lastResync\" : \"<dateInIso8601Format>\",\n  \"lastKmipMasterKeyRotation\" : \"<dateInIso8601Format>\",\n  \"logRotate\": {\n    \"sizeThresholdMB\": \"<number>\",\n    \"timeThresholdHrs\": \"<integer>\",\n    \"numUncompressed\": \"<integer>\",\n    \"percentOfDiskspace\": \"<number>\",\n    \"numTotal\": \"<integer>\"\n  },\n  \"manualMode\": \"<Boolean>\",\n  \"name\": \"<string>\",\n  \"numCores\": \"<integer>\",\n  \"processType\": \"<string>\",\n  \"version\": \"<string>\"\n}]"
                },
                {
                    "lang": "json",
                    "value": "\"clusterWideConfigurations\" : {\n  \"<replicaSetID/clusterName>\": {\n    \"changeStreamOptions\": {\n      \"preAndPostImages\": {\n        \"expireAfterSeconds\": <integer>\n      }\n    }\n  }\n}"
                },
                {
                    "lang": "json",
                    "value": "\"replicaSets\":\n[\n  {\n    \"_id\": \"<string>\",\n    \"protocolVersion\": \"<string>\",\n    \"members\":\n    [\n      {\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      },{\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      },{\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      }\n    ],\n    \"force\":\n    {\n      \"currentVersion\": \"<integer>\"\n    }\n  }\n]"
                },
                {
                    "lang": "json",
                    "value": "\"sharding\" : [\n  {\n    \"managedSharding\" : <boolean>,\n    \"name\" : \"<string>\",\n    \"configServerReplica\" : \"<string>\",\n    \"collections\" : [\n      {\n        \"_id\" : \"<string>\",\n        \"key\" : [\n          [ \"shard key\" ],\n          [ \"shard key\" ],\n          ...\n        ],\n        \"unique\" : <boolean>\n      },\n      ...\n    ],\n    \"shards\" : [\n      {\n        \"_id\" : \"<string>\",\n        \"rs\" : \"<string>\",\n        \"tags\" : [ \"<string>\", ... ]\n      },\n      ...\n    ],\n    \"tags\" : [\n      {\n        \"ns\" : \"<string>\",\n        \"min\" : [\n          {\n            \"parameter\" : \"<string>\",\n            \"parameterType\" : \"<string>\",\n            \"value\" : \"<string>\"\n          }\n        ],\n        \"max\" : [\n          {\n            \"parameter\" : \"<string>\",\n            \"parameterType\" : \"<string>\",\n            \"value\" : \"<string>\"\n          }\n        ],\n        \"tag\" : \"<string>\"\n      },\n      ...\n    ]\n  },\n  ...\n]"
                },
                {
                    "lang": "cfg",
                    "value": "{\n  \"field\" : <string>,\n  \"fieldType\" : <string>,\n  \"value\" : <string>\n}"
                },
                {
                    "lang": "cfg",
                    "value": "{\n  \"field\" : <string>,\n  \"fieldType\" : <string>,\n  \"value\" : <string>\n}"
                },
                {
                    "lang": "json",
                    "value": "\"tags\" : [\n  {\n    \"ns\" : \"testdb.test1\",\n    \"min\" : [\n      {\n        \"parameter\" : \"a\",\n        \"parameterType\" : \"integer\",\n        \"value\" : \"1\"\n      },\n      {\n        \"parameter\" : \"b\",\n        \"parameterType\" : \"string\",\n        \"value\" : \"ab\"\n      }\n    ],\n    \"max\" : [\n      {\n        \"parameter\" : \"a\",\n        \"parameterType\" : \"integer\",\n        \"value\" : \"100\"\n      },\n      {\n        \"parameter\" : \"b\",\n        \"parameterType\" : \"string\",\n        \"value\" : \"fg\"\n      }\n    ],\n    \"tag\" : \"zone1\"\n  }\n]"
                },
                {
                    "lang": "json",
                    "value": "\"balancer\": {\n  \"<clusterName1>\": {},\n  \"<clusterName2>\": {},\n  ...\n}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"auth\": {\n    \"authoritativeSet\": \"<boolean>\",\n    \"autoUser\": \"<string>\",\n    \"autoPwd\": \"<string>\",\n    \"disabled\": \"<boolean>\",\n    \"deploymentAuthMechanisms\": [\"<string>\", \"<string>\"],\n    \"autoAuthMechanisms\": [\"<string>\"],\n    \"key\": \"<string>\",\n    \"keyfile\": \"<string>\",\n    \"newAutoPwd\": \"<string>\",\n    \"newKey\": \"<string>\",\n    \"usersDeleted\": [{\n      \"user\": \"<string>\",\n      \"dbs\": [\"<string>\", \"<string>\"]\n    }],\n    \"usersWanted\": [{\n      \"authenticationRestrictions\": [{\n        \"clientSource\": [\"(IP | CIDR range)\", \"(IP | CIDR range)\"],\n        \"serverAddress\": [\"(IP | CIDR range)\", \"(IP | CIDR range)\"]\n      }],\n      \"db\": \"<string>\",\n      \"initPwd\": \"<string>\",\n      \"otherDBRoles\": {\n        \"<string>\": [\"<string>\", \"<string>\"]\n      },\n      \"roles\": [{\n        \"db\": \"<string>\",\n        \"role\": \"<string>\"\n      }],\n      \"pwd\": \"<string>\",\n      \"user\": \"<string>\"\n    }]\n  }\n}"
                },
                {
                    "lang": "json",
                    "value": " \"ldap\": {\n   \"servers\": \"<host>:<port>, <host>:<port>\",\n   \"timeoutMS\": \"<time>\",\n   \"bindMethod\": \"<sasl/simple>\",\n   \"bindSaslMechanisms\": \"<sasl-mechanism>, <sasl-mechanism>\",\n   \"bindQueryUser\": <ldap-dn>\",\n   \"bindQueryPassword\": \"<password>\",\n   \"userCacheInvalidationPeriod\": \"<interval>\",\n   \"authzQueryTemplate\": \"<rfc-4516-url>\",\n   \"userToDNMapping\": [\n             {\n                     \"match\": \"<ECMAScript-regex>\",\n                     \"<substition/ldapQuery>\": \"<DN-string/RFC4516-encoded-LDAP-query>\"\n             }\n   ]\n}"
                },
                {
                    "lang": "json",
                    "value": "\"ssl\" : {\n  \"CAFilePath\" : \"<string>\"\n}"
                },
                {
                    "lang": "json",
                    "value": "\"roles\" : [\n  {\n    \"role\" : \"<string>\",\n    \"db\" : \"<string>\",\n    \"privileges\" : [\n      {\n        \"resource\" : { ... },\n        \"actions\" : [ \"<string>\", ... ]\n      },\n      ...\n    ],\n    \"roles\" : [\n      {\n        \"role\" : \"<string>\",\n        \"db\" : \"<string>\"\n      }\n    ]\n    \"authenticationRestrictions\" : [\n     {\n      \"clientSource\": [(\"<IP>\" | \"<CIDR range>\"), ...],\n      \"serverAddress\": [(\"<IP>\" | \"<CIDR range>\"), ...]\n    }, ...\n  ]\n  },\n  ...\n]"
                },
                {
                    "lang": "json",
                    "value": "\"kerberos\": {\n  \"serviceName\": \"<string>\"\n}"
                },
                {
                    "lang": "json",
                    "value": "\"indexConfigs\": [{\n  \"key\": [\n    [\"<string>\", \"<value>\"]\n  ],\n  \"rsName\": \"<string>\",\n  \"dbName\": \"<string>\",\n  \"collectionName\": \"<string>\",\n  \"collation\": {\n    \"locale\": \"<string>\",\n    \"caseLevel\": <boolean>,\n    \"caseFirst\": \"<string>\",\n    \"strength\": <number>,\n    \"numericOrdering\": <boolean>,\n    \"alternate\": \"<string>\",\n    \"maxVariable\": \"<string>\",\n    \"normalization\": <boolean>,\n    \"backwards\": <boolean>\n  },\n  \"options\": {\n    \"<key>\": \"<value>\"\n  }\n}]"
                }
            ],
            "preview": "The Automation uses an automation configuration to determine the\ndesired state of a MongoDB deployment and to effect changes as needed.\nIf you modify the deployment through the Cloud Manager web interface, you never\nneed manipulate this configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/firewall-configuration",
            "title": "Firewall Configuration",
            "headings": [
                "Accessible Ports",
                "Required Outbound Access",
                "IP (Internet Protocol) Addresses for GET and POST",
                "Domain for Download of MongoDB Binaries",
                "Domain for MongoDB Agent Downloads and Updates",
                "Required Inbound Access",
                "IP (Internet Protocol) Addresses for Alert Webhooks",
                "Required Ports within Your Network"
            ],
            "paragraphs": "The  Cloud Manager  must be able to connect to users and MongoDB\nAgents over  HTTP (Hypertext Transfer Protocol)  or  HTTPS (Hypertext Transfer Protocol Secure) . MongoDB Agents must be able to\nconnect to MongoDB client MongoDB databases. Though  Cloud Manager  only requires open  HTTP (Hypertext Transfer Protocol)  (or  HTTPS (Hypertext Transfer Protocol Secure) ) and MongoDB\nnetwork ports to connect with users and to databases, what ports are\nopened on a firewall depend upon what capabilities are enabled:\nencryption, authentication and monitoring. This page defines which systems need to connect to which ports on\nother systems. Cloud Manager  requires access on the following ports and\n IP (Internet Protocol)  addresses. The MongoDB Agents connect to  Cloud Manager  on port  443 . Whether you\nprovision your hosts on a cloud service provider or on your own\nnetwork, configure your network infrastructure to allow outbound\nconnections on port  443 . If you wish to restrict outbound access on port  443  to specific\n IP (Internet Protocol)  addresses, you must add the following addresses and\ndomains to your access list. Add the following  IP (Internet Protocol)  addresses to your access list: This allows the MongoDB Agents to  GET  and  POST  to the\nfollowing hosts: api-agents.mongodb.com api-backup.mongodb.com api-backup.us-east-1.mongodb.com queryable-backup.us-east-1.mongodb.com restore-backup.us-east-1.mongodb.com real-time-api-agents.mongodb.com The MongoDB Agents require outbound access to the following\ndomains, depending on your MongoDB edition, for downloading MongoDB\nbinaries: MongoDB Edition Access List Domain IP (Internet Protocol)  Ranges Service Provider Community fastdl.mongodb.org IP ranges for CloudFront . The  IP (Internet Protocol)  ranges for CloudFront change frequently. Amazon CloudFront Enterprise downloads.mongodb.com Custom Build of MongoDB URL accessible to the MongoDB Agents If you restrict outbound access, you must grant your MongoDB Agents\naccess to the following domain to download and update the\nMongoDB Agent. Access List Domain IP (Internet Protocol)  Ranges Service Provider s3.amazonaws.com IP ranges for AWS . The  IP (Internet Protocol)  ranges for AWS change frequently. AWS (Amazon Web Services) You have the option to configure alerts to be delivered via webhook.\nThis sends an  HTTP (Hypertext Transfer Protocol)   POST  request to an endpoint for\nprogrammatic processing. If you want to successfully deliver a webhook to the specified\nendpoint, the endpoint must accept incoming  HTTP (Hypertext Transfer Protocol)   POST  requests\nfrom the following  IP (Internet Protocol)  addresses: All MongoDB processes in a deployment must be accessible to all\nMongoDB Agents managing processes in that deployment. Therefore, all\nMongoDB ports must be open to every host within your network that\nserve a MongoDB Agent. If you are running MongoDB processes on  27000 ,  27017  and\n 27020 , then those three ports must be open from all hosts\nthat are serving a MongoDB Agent.",
            "code": [
                {
                    "lang": "ini",
                    "value": "3.93.83.52\n3.94.56.171\n3.214.160.189\n18.210.185.2\n18.210.245.203\n18.232.30.107\n18.235.209.93\n34.192.82.120\n34.194.131.15\n34.194.251.66\n34.195.55.18\n34.195.194.204\n34.200.195.130\n34.203.104.26\n34.227.138.166\n34.230.213.36\n34.233.152.179\n34.233.179.140\n35.172.148.213\n35.172.245.18\n44.211.4.85\n44.216.169.184\n52.86.156.12\n54.147.76.65\n54.204.237.208"
                },
                {
                    "lang": "ini",
                    "value": "3.92.113.229\n3.208.110.31\n3.211.96.35\n3.212.79.116\n3.214.203.147\n3.215.10.168\n3.215.143.88\n18.214.178.145\n18.235.30.157\n18.235.48.235\n18.235.145.62\n34.193.91.42\n34.193.242.51\n34.196.151.229\n34.200.66.236\n34.235.52.68\n34.236.228.98\n34.237.40.31\n35.153.40.82\n35.169.184.216\n35.171.106.60\n35.174.179.65\n35.174.230.146\n35.175.93.3\n35.175.94.38\n35.175.95.59\n50.19.91.100\n52.71.233.234\n52.73.214.87\n52.87.98.128\n54.145.247.111\n54.163.55.77\n100.26.2.217\n107.20.0.247\n107.20.107.166"
                }
            ],
            "preview": "The Cloud Manager must be able to connect to users and MongoDB\nAgents over HTTP (Hypertext Transfer Protocol) or HTTPS (Hypertext Transfer Protocol Secure). MongoDB Agents must be able to\nconnect to MongoDB client MongoDB databases.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/mongodb-compatibility",
            "title": "MongoDB Compatibility Matrix",
            "headings": [
                "MongoDB Versions Compatible with Cloud Manager",
                "Backup Considerations for MongoDB Versions",
                "Agent Compatibility",
                "Monitoring Compatibility",
                "Automation PowerPC Compatibility",
                "MongoDB Deployment Types"
            ],
            "paragraphs": "This page describes compatibility between  Cloud Manager  features and MongoDB. Cloud Manager  doesn't support Backup, Monitoring, or Automation\nfor versions earlier than MongoDB 3.6. Cloud Manager  can automate deployments running MongoDB versions 3.6 or later. Cloud Manager  can monitor deployments running MongoDB versions 3.6 or later. Cloud Manager  can back up deployments running MongoDB versions 3.6 or later. To learn more about backup considerations specific to MongoDB\n4.4 and later and 4.2 and earlier, see  Backup Considerations . To learn more about MongoDB versioning, see  MongoDB Versioning \nin the MongoDB Manual. To monitor a deployment running MongoDB 3.6 or later release series,\nyou must use Monitoring Agent version 2.7.0 or later. To manage PowerPC Linux-based hosts, you must use\n Automation Agent 3.2.7.1927  or later. Using  Cloud Manager , you can configure all MongoDB deployment types: sharded\nclusters, replica sets, and standalones. The shards in a sharded cluster  must  be replica sets. That is, a\nshard cannot be a standalone  mongod . If you must run a shard\nas a single  mongod  (which provides  no  redundancy or\nfailover), run the shard as a single-member replica set. You may not upgrade a sharded MongoDB deployment to version 3.4 if\nthe deployment uses mirrored  mongod  instances as config\nservers. To allow the sharded deployment to be upgraded, see\n Convert Config Servers to a Replica Set . The\nconversion requires that the sharded deployment run MongoDB version\n3.2.4 or later. Deployments running previous versions must upgrade\nto version 3.2.4 before an upgrade to version 3.4.",
            "code": [],
            "preview": "This page describes compatibility between Cloud Manager features and MongoDB.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/required-permissions-aws-user",
            "title": "AWS IAM Policy",
            "headings": [
                "Overview",
                "Example Policy",
                "Policy Settings"
            ],
            "paragraphs": "When  Cloud Manager  deploys and manages MongoDB instances on AWS infrastructure,  Cloud Manager \naccesses AWS by way of a user's access keys. The user associated with the\nkeys must have an attached IAM policy with the following permissions. For\ninformation on attaching the policy, see\n Provision Servers . For an overview of AWS IAM policies, see Amazon's  IAM policy documentation . The following table explains why each setting is required.  Cloud Manager  uses\npermissions provided by the customer only for CRUD actions on the resources\n Cloud Manager  creates for the customer. Additionally,  Cloud Manager  performs only  Read \nactions for resources the customer selects (VPC, subnet, etc) and for\nconnected resources (network ACL, route table, etc). Setting Allows  Cloud Manager  to: ec2:AttachVolume Add an EBS volume to a provisioned server. ec2:AuthorizeSecurityGroupIngress Manage the security group rules  Cloud Manager  needs to ensure a valid networking state. ec2:CreateKeyPair SSH into a machine in order to provision it. ec2:CreateSecurityGroup Auto-generate security groups in the provisioning wizard. ec2:CreateTags Tag the EC2 instances. ec2:CreateVolume Create the EBS volumes. ec2:DeleteKeyPair Remove the key pair  Cloud Manager  created. ec2:DeleteSecurityGroup Remove the security group  Cloud Manager  created. ec2:DeleteTags Remove tags  Cloud Manager  created. ec2:DeleteVolume Removes resources  Cloud Manager  created. ec2:DescribeAccountAttributes Determine if the AWS account has access to EC2-Classic. ec2:DescribeAvailabilityZones Display the availability zones users can select when they provision new servers. ec2:DescribeInstanceAttribute Access attributes of an EC2 instance. ec2:DescribeInstanceStatus Access the status of an EC2 instance. ec2:DescribeInstances Access available EC2 instances. ec2:DescribeKeyPairs Validate the key pair  Cloud Manager  created. ec2:DescribeRegions Display the regions users can select when they provision new servers. ec2:DescribeSecurityGroups Display the security groups users can select when they provision new servers. ec2:DescribeSubnets Display the subnets users can select when they provision new servers. ec2:DescribeTags List tags for instances associated with  Cloud Manager . ec2:DescribeVpcs Display the VPCs users can select when they provision new servers. ec2:DescribeVpcAttribute Access VPC attributes. ec2:DescribeVolumeStatus Validate the readiness of an attached or detached volume. ec2:DescribeVolumes Ensure your MongoDB server has the correct volumes attached. ec2:DescribeVolumeAttribute Access information on EBS volumes. ec2:ImportKeyPair Associate a key pair with an EC2 instance. ec2:RunInstances Run the EC2 instance. ec2:StartInstances Start the EC2 instance. ec2:StopInstances Stop the EC2 instance. ec2:RebootInstances Reboot the EC2 instance. ec2:TerminateInstances Terminate the EC2 instance.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"iam:*AccessKey*\", \"iam:GetUser\"],\n      \"Resource\": [\"*\"]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:AttachVolume\",\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"ec2:CreateKeyPair\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateVolume\",\n        \"ec2:DeleteKeyPair\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:DeleteTags\",\n        \"ec2:DeleteVolume\",\n        \"ec2:DescribeAccountAttributes\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeInstanceAttribute\",\n        \"ec2:DescribeInstanceStatus\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeKeyPairs\",\n        \"ec2:DescribeRegions\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcAttribute\",\n        \"ec2:DescribeVolumeStatus\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeVolumeAttribute\",\n        \"ec2:ImportKeyPair\",\n        \"ec2:RunInstances\",\n        \"ec2:StartInstances\",\n        \"ec2:StopInstances\",\n        \"ec2:RebootInstances\",\n        \"ec2:TerminateInstances\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}"
                }
            ],
            "preview": "When Cloud Manager deploys and manages MongoDB instances on AWS infrastructure, Cloud Manager\naccesses AWS by way of a user's access keys. The user associated with the\nkeys must have an attached IAM policy with the following permissions. For\ninformation on attaching the policy, see\nProvision Servers.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/user-roles",
            "title": "Cloud Manager Roles",
            "headings": [
                "Organization Roles",
                "Project Roles"
            ],
            "paragraphs": "Cloud Manager  roles allow you to grant users different levels of access to\n Cloud Manager . You can grant a user the privileges needed to perform a specific\nset of tasks and no more. To assign user roles, see  Edit a User's or Team's Role in a Project . You can't\nassign your own roles. Organization Role Privileges An  Cloud Manager  user with this organization role can: Grants root access to the organization. Grants  Project Owner  access to all projects in\nthe organization, even if added to a project with a\nnon-Owner role. Use any privilege granted to any organization role. Administer organization settings. Add, edit, or delete users to the organization. Delete the organization. An  Cloud Manager  user with this organization role can: Create projects in the organization. Use any privilege granted to the\n Organization Member  role. An  Cloud Manager  user with this organization role can grant read-only\naccess to everything in the organization, including all projects\nin the organization. An  Cloud Manager  user with this organization role can grant read-only\naccess to the organization (settings, users, and billing) and\nthe projects to which they belong. Within a project, an   Organization Member 's project\nrole sets their project privileges. A  Project User Admin  or\n Owner  can add a new  Cloud Manager  user to a\nproject. This also adds this new  Cloud Manager  user to that project's\norganization. An  Cloud Manager  user with this organization role can: Administer billing information for the organization. Use any privilege granted to the from the\n Organization Member  role. The following roles grant privileges within a project. Project Role Privileges An  Cloud Manager  user with this project role can view most project\ncomponents, including all: This user can't modify or delete anything. Activity Operational data Cloud Manager  Users Cloud Manager  User roles. An  Cloud Manager  user with this project role can: Add an existing  Cloud Manager  user to a project. If the added user\ndoes not currently belong to the organization, the user will\nbe added to the organization as well. Invite a new  Cloud Manager  user to a project. After the  Cloud Manager  user\naccepts the invite,  Cloud Manager  also adds this user to the\norganization. Remove an existing project invitation. Deny a user's request to join a project. This can deny\nthe user access to the project depending on the user's role in\nthe organization. Remove a user from a project. Modify a user's role within a project. An  Cloud Manager  user with this project role can: Use the  Data Explorer . With the  Data Explorer , the  Cloud Manager  user\nwith this role can: View, create, and drop databases, collections, and indexes. View, modify, and delete documents. Use any privilege granted to the  Project Read Only \nrole. Kill an operation in the\n Real Time Performance Panel . View the sample query field values in the\n Monitor and Improve Slow Queries . An  Cloud Manager  user with this project role can: Use the  Data Explorer . With the\n Data Explorer , the  Cloud Manager  user with\nthis role can: View and create databases and collections. View, modify, and delete documents. View indexes. View the sample query field values in the\n Monitor and Improve Slow Queries . An  Cloud Manager  user with this project role can: View databases, collections, and indexes in the\n Data Explorer View the sample query field values in the\n Monitor and Improve Slow Queries . An  Cloud Manager  user with this project role can: Use any privilege granted to the  Project Read Only \nrole. Administer alerts (create, modify, delete, enable/disable,\nacknowledge/unacknowledge). Manage hosts (add, edit, delete). Download Monitoring. An  Cloud Manager  user with this project role can: Use any privilege granted to the  Project Read Only \nrole. Manage  backups ,\nincluding: Starting, stopping, and terminating backups. Requesting restores. Viewing and editing the namespaces filter. Viewing and editing host passwords. Modifying backup settings. Generating SSH keys. Downloading the MongoDB Agent. An  Cloud Manager  user with this project role can: Use any privilege granted to the  Project Read Only \nrole. View deployments. Provision machines. Edit configuration files. Download the MongoDB Agent. An  Cloud Manager  user with this project role can: Use any privilege granted to any of the other project roles. Configure the  Backup \nservice. A user with  Organization Owner  role has\n Project Owner  access for all projects in the\norganization, even if added to a project with a non-Owner\nrole.",
            "code": [],
            "preview": "Cloud Manager roles allow you to grant users different levels of access to\nCloud Manager. You can grant a user the privileges needed to perform a specific\nset of tasks and no more.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/resilient-application",
            "title": "Build a Resilient Application with MongoDB",
            "headings": [
                "Install the Latest Drivers",
                "Connection Strings",
                "Retryable Writes and Reads",
                "Retryable Writes",
                "Retryable Reads",
                "Write and Read Concern",
                "Write Concern",
                "Read Concern",
                "Error Handling",
                "Planning for Network Errors",
                "Resilient Example Application"
            ],
            "paragraphs": "To write application code that takes advantage of the capabilities of\nMongoDB and gracefully handles replica set elections, you should: Install the latest drivers. Use a connection string that specifies all hosts. Use retryable writes and retryable reads. Use a  majority  write concern and a read concern that makes sense\nfor your application. Handle errors in your application. First, install the latest drivers for your language from\n MongoDB Drivers . Drivers connect and relay\nqueries from your application to your database. Using the latest\ndrivers enables the latest MongoDB features. Then, in your application, import the dependency: If you are using  Maven , add the\nfollowing to your  pom.xml  dependencies list: If you are using  Gradle , add the\nfollowing to your  build.gradle  dependencies list: Use a  connection string  that\nspecifies all the hosts in your deployment to connect your\napplication to your database. If your deployment performs a\n replica set election  and a new\nprimary is elected, a connection string that specifies all hosts in\nyour deployment discovers the new primary without application logic. You can specify all the hosts in your deployment using either: The connection string can also specify options, notably\n retryWrites \nand  writeConcern . Use your connection string to instantiate a MongoDB client in your\napplication: the  Standard Connection String Format , or the  DNS Seedlist Connection Format . For help formatting your connection string, see\n Connect to a Deployment Using a MongoDB Driver . Starting in MongoDB version 3.6 and with\n 4.2-compatible drivers , MongoDB retries both writes\nand reads once by default. Use  retryable writes  to retry\ncertain write operations a single time if they fail. Retrying writes exactly once is the best strategy for handling\ntransient network errors and replica set elections in which the\napplication temporarily can't find a healthy primary node. If the\nretry succeeds, the operation as a whole succeeds and no error is\nreturned. If the operation fails, it is likely due to: When an operation fails, your application needs to\n handle the error  itself. A lasting network error, or An invalid command. For more information on enabling retryable writes, see\n Enabling Retryable Writes . Read operations are automatically retried a single time if they fail\nstarting in MongoDB version 3.6 and with\n 4.2-compatible drivers .\nYou don't need to configure your application to retry reads. You can tune the consistency and availability of your application using\nwrite concerns and read concerns. Stricter concerns imply that database\noperations wait for stronger data consistency guarantees, whereas\nloosening consistency requirements provides higher availability. If your application handles monetary balances, consistency is\nextremely important. You might use  majority  write and read\nconcerns to ensure you never read from stale data or data that might\nbe rolled back. Alternatively, if your application records temperature data from\nhundreds of sensors every second, you may not be concerned if you\nread data that does not include the most recent readouts. You can\nloosen consistency requirements to provide faster access to that\ndata. You can set the\n write concern level \nof your replica set through the connection string URI. Use a\n majority  write concern to ensure your data is successfully written\nto your database and persisted. This is the recommended default and\nsufficient for most use cases. When you use a write concern that requires acknowledgement, such as\n majority , you may also specify a maximum time limit for writes\nto achieve that level of acknowledgement: Whether or not you use a time limit and the value you use depends on\nyour application context. The  wtimeoutMS  connection string parameter for all writes, or The  wtimeout  option\nfor a single write operation. For more information on setting write concern levels, see\n Write Concern Options . If you do not specify a time limit for writes and the level of write\nconcern is unachievable, the write operation will never complete. You can set the\n read concern level \nof your replica set through the connection string URI. The\nideal read concern depends on\nyour application requirements, but the default is sufficient for most\nuse cases. No connection string parameter is required to use default\nread concerns. Specifying a read concern can improve guarantees around the data your\napplication receives from your database. For more information on setting read concern levels, see\n Read Concern Options . The specific combination of write and read concern your application\nuses affects order-of-operation guarantees. This is called\ncausal consistency. For more information on causal consistency\nguarantees, see  Causal Consistency and Read and Write Concerns . Invalid commands, network outages, and network errors that are not\nhandled by  retryable writes  return errors.\nRefer to your driver's  API (Application Programming Interface)  documentation for error details. For example, if an application tries to insert a document with a\nduplicate  _id , your driver returns an error that includes: Without proper error handling, an error might block your application from\nprocessing requests until it is restarted. Your application should handle errors without crashing or side\neffects. In the previous example of an application inserting a\nduplicate  _id , that application could handle errors as follows: The insert operation in this example throws a \"duplicate key\"\nerror the second time it's invoked because the  _id  field must be\nunique. The application catches the error, the client is notified, and the app\ncontinues to run. The insert operation fails, however, and it is\nup to you to decide whether to show the user a message, retry the\noperation, or do something else. You should always log errors. Common strategies for further processing\nerrors include: You must select the best strategies for your application context. Return the error to the client with an error message. This is a good\nstrategy when you cannot resolve the error and need to inform a user\nthat an action can't be completed. Write to a backup database. This is a good strategy when you can't\nresolve the error but don't want to risk losing the request data. Retry the operation beyond the\n single default retry . This is a good\nstrategy when you can solve the cause of an error programmatically,\nthen retry it. In the example of a duplicate key error, you should log the error\nbut not retry the operation because it will never succeed. Instead,\nyou could write to a fallback database and review the contents of\nthat database at a later time to ensure that no information is lost.\nThe user doesn't need to do anything else and the data is recorded,\nso you can choose not to send an error message to the client. Returning an error can be desirable behavior when an operation\nwould otherwise never complete and block your application from\nexecuting new operations. You can use the\n maxTimeMS \nmethod to place a time limit on individual operations, returning an\nerror for your application to handle if that time limit is exceeded. The time limit you place on each operation depends on the context of\nthat operation. If your application reads and displays simple product information\nfrom an  inventory  collection, you can be reasonably confident\nthat those read operations only take a moment. An unusually\nlong-running query is a good indicator that there is a lasting\nnetwork problem. Setting  maxTimeMS  on that operation to 5000, or\n5 seconds, means that your application receives feedback as soon as\nyou are confident there is a network problem. The following example application brings together the recommendations\nfor building resilient applications. The application is a simple user records\n API (Application Programming Interface)  that exposes two endpoints on  http://localhost:3000 : Method Endpoint Description GET /users Gets a list of user names from a  users  collection. POST /users Requires a  name  in the request body. Adds a new user to a\n users  collection. The following server application uses\n NanoHTTPD  and\n json \nwhich you need to add to your project as dependencies before you\ncan run it. The following server application uses\n Express ,\nwhich you need to add to your project as a dependency\nbefore you can run it.",
            "code": [
                {
                    "lang": "xml",
                    "value": "<dependencies>\n    <dependency>\n        <groupId>org.mongodb</groupId>\n        <artifactId>mongodb-driver-sync</artifactId>\n        <version>4.0.1</version>\n    </dependency>\n</dependencies>"
                },
                {
                    "lang": "groovy",
                    "value": "dependencies {\n  compile 'org.mongodb:mongodb-driver-sync:4.0.1'\n}"
                },
                {
                    "lang": "javascript",
                    "value": "// Latest 'mongodb' version installed with npm\nconst MongoClient = require('mongodb').MongoClient;"
                },
                {
                    "lang": "java",
                    "value": "// Create a variable for your connection string\nString uri = \"mongodb://[<username>:<password>@]hostname0<:port>[,hostname1:<port1>][,hostname2:<port2>][...][,hostnameN:<portN>]\";\n\n// Instantiate the MongoDB client with the URI\nMongoClient client = MongoClients.create(uri);"
                },
                {
                    "lang": "javascript",
                    "value": "// Create a variable for your connection string\nconst uri = \"mongodb://[<username>:<password>@]hostname0<:port>[,hostname1:<port1>][,hostname2:<port2>][...][,hostnameN:<portN>]\";\n\n// Instantiate the MongoDB client with the URI\nconst client = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n});"
                },
                {
                    "lang": "none",
                    "value": "Unable to insert due to an error: com.mongodb.MongoWriteException:\nE11000 duplicate key error collection: <db>.<collection> ..."
                },
                {
                    "lang": "json",
                    "value": "{\n    \"name\": : \"MongoError\",\n    \"message\": \"E11000 duplicate key error collection on: <db>.<collection> ... \",\n    ...\n}"
                },
                {
                    "lang": "java",
                    "value": "// Declare a logger instance from java.util.logging.Logger\nprivate static final Logger LOGGER = ...\n...\ntry {\n    InsertOneResult result = collection.insertOne(new Document()\n        .append(\"_id\", 1)\n        .append(\"body\", \"I'm a goofball trying to insert a duplicate _id\"));\n\n    // Everything is OK\n    LOGGER.info(\"Inserted document id: \" + result.getInsertedId());\n\n// Refer to the API documentation for specific exceptions to catch\n} catch (MongoException me) {\n    // Report the error\n    LOGGER.severe(\"Failed due to an error: \" + me);\n}"
                },
                {
                    "lang": "javascript",
                    "value": "...\ncollection.insertOne({\n    _id: 1,\n    body: \"I'm a goofball trying to insert a duplicate _id\"\n})\n.then(result => {\n    response.sendStatus(200) // send \"OK\" message to the client\n},\nerr => {\n    response.sendStatus(400); // send \"Bad Request\" message to the client\n});"
                },
                {
                    "lang": "java",
                    "value": "// File: App.java\n\nimport java.util.Map;\nimport java.util.logging.Logger;\n\nimport org.bson.Document;\nimport org.json.JSONArray;\n\nimport com.mongodb.MongoException;\nimport com.mongodb.client.MongoClient;\nimport com.mongodb.client.MongoClients;\nimport com.mongodb.client.MongoCollection;\nimport com.mongodb.client.MongoDatabase;\n\nimport fi.iki.elonen.NanoHTTPD;\n\npublic class App extends NanoHTTPD {\n    private static final Logger LOGGER = Logger.getLogger(App.class.getName());\n\n    static int port = 3000;\n    static MongoClient client = null;\n\n    public App() throws Exception {\n        super(port);\n\n        // Replace the uri string with your MongoDB deployment's connection string\n        String uri = \"mongodb://<username>:<password>@hostname0:27017,hostname1:27017,hostname2:27017/?retryWrites=true&w=majority\";\n        client = MongoClients.create(uri);\n\n        start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);\n        LOGGER.info(\"\\nStarted the server: http://localhost:\" + port + \"/ \\n\");\n    }\n\n    public static void main(String[] args) {\n        try {\n            new App();\n        } catch (Exception e) {\n            LOGGER.severe(\"Couldn't start server:\\n\" + e);\n        }\n    }\n\n    @Override\n    public Response serve(IHTTPSession session) {\n        StringBuilder msg = new StringBuilder();\n        Map<String, String> params = session.getParms();\n\n        Method reqMethod = session.getMethod();\n        String uri = session.getUri();\n\n        if (Method.GET == reqMethod) {\n            if (uri.equals(\"/\")) {\n                msg.append(\"Welcome to my API!\");\n            } else if (uri.equals(\"/users\")) {\n                msg.append(listUsers(client));\n            } else {\n                msg.append(\"Unrecognized URI: \").append(uri);\n            }\n        } else if (Method.POST == reqMethod) {\n            try {\n                String name = params.get(\"name\");\n                if (name == null) {\n                    throw new Exception(\"Unable to process POST request: 'name' parameter required\");\n                } else {\n                    insertUser(client, name);\n                    msg.append(\"User successfully added!\");\n                }\n            } catch (Exception e) {\n                msg.append(e);\n            }\n        }\n\n        return newFixedLengthResponse(msg.toString());\n    }\n\n    static String listUsers(MongoClient client) {\n        MongoDatabase database = client.getDatabase(\"test\");\n        MongoCollection<Document> collection = database.getCollection(\"users\");\n\n        final JSONArray jsonResults = new JSONArray();\n        collection.find().forEach((result) -> jsonResults.put(result.toJson()));\n\n        return jsonResults.toString();\n    }\n\n    static String insertUser(MongoClient client, String name) throws MongoException {\n        MongoDatabase database = client.getDatabase(\"test\");\n        MongoCollection<Document> collection = database.getCollection(\"users\");\n\n        collection.insertOne(new Document().append(\"name\", name));\n        return \"Successfully inserted user: \" + name;\n    }\n}"
                },
                {
                    "lang": "javascript",
                    "value": "const express = require('express');\nconst bodyParser = require('body-parser');\n\n// Use the latest drivers by installing & importing them\nconst MongoClient = require('mongodb').MongoClient;\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// Use a connection string that lists all hosts\n// with retryable writes & majority write concern\nconst uri = \"mongodb://<username>:<password>@hostname0:27017,hostname1:27017,hostname2:27017/?retryWrites=true&w=majority\";\n\nconst client = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n});\n\n// ----- API routes ----- //\napp.get('/', (req, res) => res.send('Welcome to my API!'));\n\napp.get('/users', (req, res) => {\n    const collection = client.db(\"test\").collection(\"users\");\n\n    collection\n    .find({})\n    // In this example, 'maxTimeMS' throws an error after 5 seconds,\n    // alerting the application to a lasting network outage\n    .maxTimeMS(5000)\n    .toArray((err, data) => {\n        if (err) {\n            // Handle errors in your application\n            // In this example, by sending the client a message\n            res.send(\"The request has timed out. Please check your connection and try again.\");\n        }\n        return res.json(data);\n    });\n});\n\napp.post('/users', (req, res) => {\n    const collection = client.db(\"test\").collection(\"users\");\n    collection.insertOne({ name: req.body.name })\n    .then(result => {\n        res.send(\"User successfully added!\");\n    }, err => {\n        // Handle errors in your application\n        // In this example, by sending the client a message\n        res.send(\"An application error has occurred. Please try again.\");\n    })\n});\n// ----- End of API routes ----- //\n\napp.listen(3000, () => {\n    console.log(`Listening on port 3000.`);\n    client.connect(err => {\n        if (err) {\n            console.log(\"Not connected: \", err);\n            process.exit(0);\n        }\n        console.log('Connected.');\n    });\n});"
                }
            ],
            "preview": "To write application code that takes advantage of the capabilities of\nMongoDB and gracefully handles replica set elections, you should:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/disk-io-utilization",
            "title": "Fix IOPS Issues",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "System and disk alert  conditions can\nindicate IOPS issues. System: CPU (User) % is  measures the CPU usage of the\nprocesses on the node, normalized by the number of CPUs. This value is\nscaled to a range of 0-100%. A few common events may trigger these alerts: Unoptimized queries A one-time event, such as an  index build . Consider the following resolutions: Optimize your queries . Use the  MongoDB Atlas   Performance Advisor  to view slow queries and suggested\n indexes . Review  Indexing Strategies  for\npossible further indexing improvements. A temporary spike in disk utilization may result when creating new\nindexes. Analyze Query Performance \nto review how your queries are using your indexes. Use a faster disk drive with more hardware resources. Move operations from disks with large workloads to different disks. To observe high disk utilization, open the\n Hardware Metrics  section of the  Metrics  tab and\nfind the following metrics: To learn more, see\n View Deployment Metrics . Graph Indicator Disk IOPS IOPS (Input/Output Operations per Second)  value greater than the provisioned  IOPS (Input/Output Operations per Second)  value Normalized System CPU High  IOWait  curve IOWait measures the percentage of time the CPU runs idle waiting\nfor an I/O operation to complete.",
            "code": [],
            "preview": "System and disk alert conditions can\nindicate IOPS issues.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/query-targeting",
            "title": "Fix Query Issues",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "Query Targeting  alerts indicate inefficient query or queries. You can configure the following alert conditions in the project-level\n alert settings  page to trigger alerts. Query Targeting: Scanned / Returned  occurs if the\nnumber of index keys examined to fulfill a query relative to the actual\nnumber of returned documents meets or is above a certain threshold. Query Targeting: Scanned Objects / Returned \noccurs if the number of documents examined to fulfill a query relative\nto the actual number of returned documents meets or is above a certain\nthreshold. No index that supports a given query or queries. Existing index can only partially support a query or queries. The  Performance Advisor  provides the\neasiest and quickest way to create an index. The Performance Advisor\nmonitors queries that MongoDB considers slow and recommends indexes to\nimprove performance. Click  Create Index  on a slow query for instructions on how\nto create the recommended index. In addition, you can use the following resources to determine which\nquery generated the alert: It is possible to receive a Query Targeting alert for an\ninefficient query without receiving index suggestions from the\nPerformance Advisor if the query exceeds the slow query threshold and\nthe ratio of scanned to returned documents is greater than the\nthreshold specified in the alert. The  Real-Time Performance Panel \nmonitors and displays current network traffic and database operations\non machines hosting MongoDB in your  MongoDB Atlas  clusters. The  MongoDB logs  maintain an account of\nactivity,\nincluding queries, for each  mongod  instance in your  MongoDB Atlas \nclusters. The  cursor.explain() \ncommand for  mongosh  provides performance details for\nall queries. The  Data Profiler \nrecords operations that  MongoDB Atlas  considers slow when compared to\naverage execution time for all operations on your cluster. Enabling the Database Profiler incurs a performance overhead. To learn more about query performance, see: MongoDB Indexing Strategies Analyze Query Plan Cloud Manager  provides two methods to visualize query targeting: Query Targeting\n metrics , which highlight high ratios\nof objects scanned to objects returned. The  Profiler , which describes specific\ninefficient queries executed on the cluster.",
            "code": [],
            "preview": "Query Targeting alerts indicate inefficient query or queries.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/host-down",
            "title": "Fix Down Host",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "At time  T , the Monitoring on host  X  had not detected a\n mongod  process running on host  Y  port  Z  for  A \nminutes. You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Host is down . The  mongod  process could not be reached because of a\nnetwork issue. The  mongod  process is not running. The host is powered off. Verify network communication between the host running the Monitoring\nand the host that is listed as down. One way to do this is through\n mongosh : If connecting from  mongosh  fails, try a basic\nping test: Verify the  mongod  process is running: If the process was installed from  deb  or  rpm  package, query\nthe service manager for the status: Alternatively, you can use  ps : The  Host is down  alert should not be used to detect all\noccurrences of a host reboot. The alert is triggered only if the\nhost is seen as down at the instant that the Monitoring runs the\ncheck. The interval between checks can vary from 1 to 3 minutes. Keep your host powered on and the  mongod  process running.\nWork to prevent any network issues. View the following chart to monitor your progress: To learn more, see\n View Deployment Metrics . Network Monitor network metrics to track network performance.",
            "code": [
                {
                    "lang": "sh",
                    "value": "mongosh <hostname>:<port>"
                },
                {
                    "lang": "sh",
                    "value": "ping <hostname>"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongod status"
                },
                {
                    "lang": "sh",
                    "value": "ps aux | grep mongo"
                }
            ],
            "preview": "At time T, the Monitoring on host X had not detected a\nmongod process running on host Y port Z for A\nminutes.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/host-exposed",
            "title": "Fix Exposed Host",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "The MongoDB instance running on  host X  in  rsY  is exposed to the\npublic Internet. You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Host is exposed to the public Internet . The  mongod  or  mongos  process was reached\nbecause it is not behind a firewall and does not have authentication\nenabled. Install and configure a firewall between the public Internet and your\nMongoDB instance. To review which ports need to be available to your  Cloud Manager  deployment,\nsee  Firewall Configuration . Enable authentication for the instance. You can choose from the\nfollowing options: Enable Username and Password Authentication for your  Cloud Manager  Project Enable LDAP Authentication for your  Cloud Manager  Project Enable Kerberos Authentication for your  Cloud Manager  Project Enable x.509 Authentication for your  Cloud Manager  Project mongod  or  mongos  process behind a firewall and\nenable authentication. View the following chart to monitor your progress: To learn more, see\n View Deployment Metrics . Connections Monitor connections to determine whether the current connection\nlimits are sufficient.",
            "code": [],
            "preview": "The MongoDB instance running on host X in rsY is exposed to the\npublic Internet.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts",
            "title": "Review Alert Conditions",
            "headings": [
                "Host Alerts",
                "Host Types",
                "Host Alert Conditions",
                "Change in Host Status",
                "Advisor",
                "Asserts",
                "Average Execution Time",
                "Document Metrics",
                "Query Targeting",
                "Opcounter",
                "Opcounter - Repl",
                "Memory",
                "Security",
                "Swap",
                "WiredTiger Cache",
                "B-tree",
                "Effective Lock %",
                "Background Flush Average",
                "Connections",
                "Queues",
                "Page Faults",
                "Cursors",
                "Network",
                "Replication Oplog",
                "Operations Scan and Order",
                "DB Storage",
                "Journaling",
                "WiredTiger Storage Engine",
                "System and Disk Alerts",
                "Replica Set Alerts",
                "Sharded Cluster Alerts",
                "Agent Alerts",
                "Backup Alerts",
                "BI Connector Alerts",
                "User Alerts",
                "Project Alerts",
                "Billing Alerts",
                "Federation Alerts"
            ],
            "paragraphs": "To set a condition: Cloud Manager  triggers an alert when the condition is  true  on the\nspecified target MongoDB instance. To set a metric: Cloud Manager  triggers an alert when the metric threshold is met on the\nspecified target MongoDB instance. For each  alert  you create,\nyou must set a target and a condition or metric. The  target  points to what\nchanged: the  Cloud Manager  component. If your  condition  becomes true or a  metric \nfalls below or rises above your set threshold,  Cloud Manager  triggers an\nalert. To learn more, see  Alerts Workflow . Select a  Target  from the list. Select a condition in the  condition/metric  list. Select a  Target  type from the list. Filter the  Target  type or select  Any . Select on a metric in the  condition/metric  list. Select if this metric should be  Below  or\n Above  the threshold. Type a threshold value. All thresholds are numbers. Select the unit of measure for the threshold. When setting an alert for a host, select the  host type  that\napplies to this alert and the  condition  that triggers this\nalert. For  host type , set an alert for all or one of the\nfollowing types of MongoDB processes: Set Host Type to: Alert Includes Any type All the types described in this table. Standalone Any  mongod  instance that is  neither  part of a replica\nset or sharded cluster  nor  used as a config server. Primary All replica set  primaries . Secondary All replica set  secondaries . Arbiter All replica set  arbiters . Mongos All  mongos  instances. Conf All  mongod  instances used as  config servers . You can set an alert for when MongoDB instance changes. Host status\nconditions include: Condition Alert Trigger Host added Cloud Manager  starts monitoring or managing a  mongod  or\n mongos  process for the first time. Host removed Cloud Manager  stops monitoring or managing a  mongod  or\n mongos  process for the first time. Host added to replica set Specified type of  mongod  process is added to a\n replica set . Host removed from replica set Specified type of  mongod  process is removed from\na  replica set . Host has restarted Cloud Manager  detects that a host has been restarted. Restarts in Last Hour is Cloud Manager  detects that the number of times a host restarted within\nthe previous hour exceeds the specified threshold. Host experienced a rollback Cloud Manager  detects that a  mongod  on a host triggered a\nrollback. The following host types can't experience rollbacks: arbiters mongos Rollbacks During Replica Set Failover Host is recovering A  secondary  enters the  RECOVERING  state. To\nlearn more about the  RECOVERING  state, see\n Replica Set Member States . Host does not have the latest version Revision of MongoDB running on a host is two or more\nrevisions behind the current stable release of MongoDB. To learn more about MongoDB version numbering, see\n MongoDB Version Numbers \nin the MongoDB manual. If the current stable release is MongoDB 4.0.9, a host\nrunning MongoDB 4.0.8 would not trigger an alert but a host\nrunning MongoDB version 4.0.7 would trigger an alert. Host's SSL certificate will expire within 30 days SSL certificate for a MongoDB instance is 30 days from\nexpiration.  Cloud Manager  resends the alert every 24 hours until\nresolved or acknowledged. If you do not resolve or acknowledge\nthe alert and the certificate expires,  Cloud Manager  continues to send\nthe alert. If the certificate expires, the Monitoring can\nno longer connect to the MongoDB instance. Host is exposed to the public Internet The host is exposed to the public Internet. When configured,\n Cloud Manager  tries to make a socket connection to your hosts. If\n Cloud Manager  is able to connect,  Cloud Manager  triggers the alert because the\nhost is not behind a firewall and does not have authentication\nenabled. Cloud Manager  runs this check once each day. This is a weak security validation and should not replace\nother auditing or intrusion detection system procedures. Host is down Cloud Manager  does not receive a ping from a host for more than 9\nminutes. Under normal operation, the Monitoring connects\nto each monitored host about once per minute.  Cloud Manager  waits 9\nminutes before triggering the alert to minimize false\npositives, as would occur during a host restart. If the host continues to be unreachable, the Monitoring\neventually reduces ping frequency to every 5 minutes for a\n mongod  and every 20 minutes for a\n mongos . If a  mongod  or\n mongos  again becomes reachable,  Cloud Manager  recognizes\nthe process within 5 minutes. If  Cloud Manager  Automation does not manage a  mongos \nprocess and that process remains unreachable for 30 days,\n Cloud Manager  removes the process from the  Deployment  tab.\nHowever, if you restart the  mongos  process,  Cloud Manager \ndetects it within 2 minutes. To resolve this alert, see  Fix Down Host . If you need to trigger the Monitoring to check\nimmediately, you can restart the agent. You may set the  Host Has Index Suggestions  alert to receive\nan alert if  Performance Advisor  has index\nsuggestions for the host. If the  query targeting ratio  for\na host consistently exceeds 10,000 for a period of 10 minutes,\nPerformance Advisor checks the host for inefficient queries and\npossible indexes to improve performance. If Performance Advisor\ndetermines that the host would benefit from one or more indexes,\nthis alert triggers and directs you to create the suggested indexes. This alert does not trigger for projects where Performance Advisor is\ndisabled. You may set alerts for how many assertion errors per second the\ninstance has created. Assert metrics include: MongoDB reports on opscounters using the  asserts  document that\nthe\n serverStatus \ncommand returns. Metric Alert Trigger Asserts: Regular is Rate of regular asserts meets your specified threshold. Asserts: Warning is Rate of warnings meets your specified threshold. Asserts: Msg is Rate of message asserts meets your specified threshold.\nMessage asserts are internal server errors. Stack traces are\nlogged for these. Asserts: User is Rate of asserts users create meets your specified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how long operations take to complete. Execution\ntime metrics include: The following metrics apply only to deployments running MongoDB\nversion 3.4 or later. Metric Alert Trigger Average Execution Time: Commands is Average execution time for command operations meets your\nspecified threshold. Average Execution Time: Reads is Average execution time for read operations meets your\nspecified threshold. Average Execution Time: Writes is Average execution time for write operations meets your\nspecified threshold. You may set alerts for how many MongoDB documents are processed per\nsecond. Document processing metrics include: Metric Alert Trigger Document Metrics: Deleted is Average rate per second of documents deleted meets your\nspecified threshold. Document Metrics: Inserted is Average rate per second of documents inserted meets your\nspecified threshold. Document Metrics: Returned is Average rate per second of documents returned meets your\nspecified threshold. Document Metrics: Update is Average rate per second of documents updated meets your\nspecified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how fast MongoDB scans items during queries and\nhow many items are scanned compared to documents returned. Query\nexecution time metrics include: MongoDB measures query performance based on the  explain  command. Average rate per second to scan index items during queries\nand query-plan evaluations meets your specified threshold. Average rate per second to scan documents meets your\nspecified threshold. Ratio of index items scanned to documents returned meets the\nspecified threshold. Ratio of documents scanned to documents returned meets the\nspecified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how many database operations are completed per\nsecond. Operation metrics include: MongoDB reports on opscounters using the  opscounters  document that the\n serverStatus  command returns. Condition Alert Trigger Opcounter: Cmd is Average rate of commands performed per second meets your\nspecified threshold. Opcounter: Delete is Average rate of deletes performed per second meets your\nspecified threshold. Opcounter: Getmores is Average rate of getMores performed per second meets your\nspecified threshold. On a primary, this number can be high even\nif the query count is low. The secondaries \"getMore\" from the\nprimary as part of replication. Opcounter: Insert is Average rate of inserts performed per second meets your\nspecified threshold. Opcounter: Query is Average rate of queries performed per second meets your\nspecified threshold. Opcounter: Update is Average rate of updates performed per second meets your\nspecified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how many database operations per second are\nreplicated to a MongoDB  secondaries . Replication operation metrics include: MongoDB reports on opscounters using the  opscountersRepl \ndocument of that the  serverStatus  command returns. Metric Alert Trigger Opcounter: Repl Cmd is Average rate of replicated commands applied per second meets\nyour threshold. Opcounter: Repl Delete is Average rate of replicated deletes applied per second meets your\nthreshold. Opcounter: Repl Insert is Average rate of replicated inserts applied per second meets your\nthreshold. Opcounter: Repl Update is Average rate of replicated updates applied per second meets your\nthreshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how much memory a MongoDB instance uses. Set\nthis threshold in bits, kilobits, megabits, gigabits, bytes, kilobytes,\nmegabytes, gigabytes, terabytes or petabytes. Memory metrics include: MongoDB reports on memory using the  mem  document that the\n serverStatus  command returns. Metric Alert Trigger Memory: Resident is Resident memory size for the  ~bin.mongod  process\nmeets your specified threshold. Over time on a dedicated\ndatabase host, the resident memory may approach the amount of\nRAM on the host. Memory: Virtual is Virtual memory size for the  ~bin.mongod  process\nmeets your specified threshold. You can use this alert to flag\nexcessive memory outside of memory mapping. Memory: Mapped is Mapped memory size for the  ~bin.mongod  process\nmeets your specified threshold. As MongoDB memory-maps all the\ndata files, the size of mapped memory should approach total\ndatabase size. Memory: Computed is Virtual memory size for the  ~bin.mongod  process\nthat is not accounted for by memory-mapping meets your specified\nthreshold. If this number is very high (multiple gigabytes), it\nindicates that excessive memory is being used outside of memory\nmapping. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. Security metrics include: Metric Alert Trigger Host has security recommendations Authentication or  TLS (Transport Layer Security)  is disabled. Swap metrics include: Metric Alert Trigger Swap Usage: Used is The total amount swap space in use has reached the specified\nthreshold. Swap Usage: Max Used is Maximum total amount of swap space in use\nreaches the specified threshold. Swap Usage: Free is The amount of available swap space has dropped below the\nspecified threshold. Swap Usage: Max Free is Maximum amount of available swap space\ndrops below the specified threshold. You may set alerts for how much WiredTiger cache a MongoDB instance\nuses. Set this threshold in bits, kilobits, megabits, gigabits, bytes,\nkilobytes, megabytes, gigabytes, terabytes or petabytes. WiredTiger cache metrics include: MongoDB reports on memory using the  cache  document that the\n serverStatus  command returns. Metric Alert Trigger Cache: Bytes Read Into Cache is Average rate of bytes per second read into WiredTiger's\ncache meets your specified threshold. Cache: Bytes Written From Cache is Average rate of bytes per second written from WiredTiger's\ncache meets your specified threshold. Cache: Dirty Bytes is Number of tracked  dirty bytes  currently in the\nWiredTiger cache. Cache: Used Bytes is Number of bytes currently in the WiredTiger cache. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for how many btree operations on the MongoDB\ninstance are completed per second. B-Tree metrics include: These metrics only triggers alerts on deployments running MongoDB\nversions 2.2 through 2.6. Metric Alert Trigger B-tree: accesses is Number of accesses to B-tree indexes meets your specified\nthreshold. B-tree: hits is Number of times a B-tree page was in memory meets your\nspecified threshold. B-tree: misses is Number of times a B-tree page was  not  in memory meets your\nspecified threshold. B-tree: miss ratio is Ratio of misses to hits meets your specified threshold. You may set alerts for what percentage of time the MongoDB instance is\n write locked . Effective Lock percentage metrics\ninclude: This metric only triggers alerts on deployments running MongoDB\nversions 2.2 through 2.6. Metric Alert Trigger Effective Lock % is If the percent of total time the instance is  write locked  meets your specified threshold. You may set an alert for how long in milliseconds the average flush on\nthe MongoDB instance take to complete. A flush is the writing of data\nto disk from memory. Background flush average metrics include: This metric only triggers alerts on deployments running MMAPv1\nstorage engines for their MongoDB databases. MongoDB reports on average background flush time using the\n backgroundFlushing.average_ms  value that the\n serverStatus  command\nreturns. Metric Alert Trigger Background Flush Average is Average time for background flushes meets your specified\nthreshold. You may set alerts for the active connections to the MongoDB instance. Connection metrics include: MongoDB reports on memory using the  connections  document that\nthe  serverStatus  command\nreturns. Metric Alert Trigger Connections is Number of active host connections meets your specified\nthreshold. Connections % of configured limit is Percentage of active host connections to the total number of\npossible connections meets your specified threshold. The\ndefault value for MongoDB versions 2.6.0 and 3.0.0 is  65536 \nand the default value for MongoDB versions greater than ( > )\n3.0.0,  is  1000000 . You can override the default value two\nways: Use the  mongod   --maxConnns  to set\nthe maximum number of simultaneous connections for  mongod .\nTo learn more, see  mongod Core Options . Update the  net.maxIncomingConnections  field in the\nMongoDB configuration file. To learn more, see  net\nOptions . You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the operations waiting on locks. Queue metrics include: MongoDB reports on memory using the  globalLock.currentQueue \ndocument that the\n serverStatus \ncommand returns. Metric Alert Trigger Queues: Total is Number of operations waiting on a  lock  of any type\nmeets your specified threshold. Queues: Readers is Number of reader operations waiting on a  lock  of any\ntype meets your specified threshold. Queues: Writers is Number of writer operations waiting on a  lock  of any\ntype meets your specified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for page faults. Page Fault metrics include: The  Accesses Not In Memory: Total is  and\n Page Fault Exceptions Thrown: Total is  metrics only\ntrigger alerts on deployments running MongoDB versions 2.2 through\n2.6. MongoDB reports on memory using the  extra_info.page_faults \ndocument that the\n serverStatus  command\nreturns. MongoDB 2.2 through 2.6 reported on the\n Accesses Not In Memory: Total is  and\n Page Fault Exceptions Thrown: Total is  metrics using\nthe  recordStats  document that the\n serverStatus  command\nreturned. Metric Alert Trigger Accesses Not In Memory: Total is Rate of disk accesses meets your specified threshold.\nMongoDB must access data on disk if your  working set \ndoes not fit in memory. This metric is found on the host's\n Record Stats  chart. Page Fault Exceptions Thrown: Total is Rate of page fault exceptions thrown meets your specified\nthreshold. This metric is found on the host's  Record Stats \nchart. Page Faults is Rate of page faults (whether or not an exception is thrown)\nmeets your specified threshold. This metric is found on the\nhost's  Page Faults  chart. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the number of open and timed-out\n cursors  for a MongoDB process. Cursor metrics include: MongoDB reports on memory using the  metrics.cursor  document that\nthe  serverStatus  command\nreturns. Metric Alert Trigger Cursors: Client Cursors Size is Amount of memory the host uses to maintain cursors meets\nyour specified threshold. Cursors: Open is Number of cursors the host is maintaining for clients meets\nthe specified threshold. Cursors: Timed Out is Number of timed-out cursors the host is maintaining for\nclients meets your specified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the network throughput for a MongoDB process. Network metrics include: MongoDB reports on memory using the  network  document that the\n serverStatus  command returns. Metric Alert Trigger Network: Bytes In is Number of bytes sent  to  the database host meets your\nspecified threshold. Network: Bytes Out is Number of bytes sent  from  the database host meets your\nspecified threshold. Network: Num Requests is Number of requests sent  to  the database host meets your\nspecified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the replication oplogs for a MongoDB process. Replication oplog metrics include: MongoDB reports on the Replication Oplog using the  oplog \ndocument that the\n serverStatus  command\nreturns combined with results from\n rs.status()  and\n rs.conf() . Metric Alert Trigger Replication Headroom is Difference between the sync source's replication  oplog \nwindow and the  secondary's   replication\nlag  meets your specified\nthreshold. A secondary can go into  RECOVERING  if this value\ngoes to  0 . Replica Time is Approximate amount of time in milliseconds available in the\nprimary's replication  oplog  meets your specified\nthreshold. Oplog Data Per Hour is Average rate of gigabytes of oplog the primary generates per\nhour meets your specified threshold. Replication Lag is Approximate number of seconds the  secondary  is\nbehind the  primary  in write application. Only accurate\nif the lag is larger than 1-2 seconds, as the precision of this\nstatistic is limited. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the scan and order operations for a MongoDB\nprocess. Operations metrics include: MongoDB reports on the Replication Oplog using the\n metrics.operation.scanAndOrder  document that the\n serverStatus \ncommand returns. Metric Alert Trigger Operations: Scan and Order is Average rate per second over your specified threshold of\nqueries that return sorted results that cannot perform the sort\noperation using an index. You may set alerts for the amount of data storage used. Database\nstorage metrics include: Metric Alert Trigger DB Storage is Amount of on-disk storage space used by extents meets your\nspecified threshold. DB Data Size is Actual data size in the database meets your specified\nthreshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for the amount of journaling storage used.\nJournaling metrics include: Metric Alert Trigger Journaling Commits in Write Lock is Rate of commits that occurred while the database was in\n write lock  meets your specified threshold. Journaling MB is Average amount of data in megabytes  Cloud Manager  writes to the\nrecovery log per second meets your specified threshold. Journaling Write Data Files MB is Average rate of data in megabytes  Cloud Manager  writes to the\ndatabases datafiles per second meets your specified threshold.\nAs these writes are already journaled, they can occur lazily,\nand thus the number indicated here may be lower than the amount\nphysically written to disk. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for WiredTiger tickets. WiredTiger storage engine conditions include: MongoDB reports on WiredTiger using the\n wiredTiger.cache  and\n wiredTiger.concurrentTransactions  documents that the\n serverStatus  command returns. Metric Alert Trigger Tickets Available: Reads is Number of read tickets available to the WiredTiger storage\nengine meet your specified threshold. Tickets Available: Writes is Number of write tickets available to the WiredTiger storage\nengine meet your specified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts for compute and disk utilization. System resource\nconditions include: Metric Alert Trigger System: CPU (Steal) % is Applicable when the EC2 instance credit balance is exhausted. The percentage of time the CPU is in a state of \"involuntary\nwait\". CPU steal percentage is the percentage by which the CPU\nusage exceeds the guaranteed baseline CPU credit accumulation\nrate. This alert typically triggers when all credits have been\nconsumed on an  AWS burstable performance instance . System: Max CPU (Steal) % is Maximum percentage of time that the CPU is in a state of\n\"involuntary wait\" exceeds the specified threshold. System: CPU (User) % is CPU usage of the MongoDB process, scaled to a range of 0-100% by\ndividing by the number of CPUs. System: Max CPU (User) % is Maximum CPU usage of the MongoDB process,\nscaled to a range of 0-100% by dividing by the number of CPUs\nexceeds the specified threshold. System Memory: Used is Total system memory used for the  mongod  minus\nbuffers, cached, and free memory meets the specified threshold. System Memory: Max Used is Maximum system memory usage value meets\nthe specified threshold. System Memory: Available is Available system memory usage for the  ~bin.mongod  has\ndropped below the specified threshold. System Memory: Max Available is Maximum amount of available system memory\ndrops below the specified threshold. Disk space % used on Data Partition is Percentage of disk space used on any partition that contains\nthe MongoDB collection's data. Max disk space % used on Data Partition is Maximum percentage of disk space used on\nany partition that contains the MongoDB collection's data\nexceeds the specified threshold. Disk space % used on Index Partition is Percentage of disk space used on any partition that contains\nthe MongoDB index data. Max disk space % used on Index Partition is Maximum percentage of disk space used on\nany partition that contains the MongoDB index data exceeds the\nspecified threshold. Disk space % used on Journal Partition is Percentage of disk space used on the partition that contains\nthe MongoDB journal, if journaling is enabled. Max disk space % used on Journal Partition is Maximum percentage of disk space used on\nthe partition that contains the MongoDB journal exceeds the\nspecified threshold. System Network In is Number of bytes per second sent  to  the database host meets the\nspecified threshold. Max System Network In is Maximum number of bytes sent  to  MongoDB\nmeets the specified threshold. System Network Out is Number of bytes per second sent  from  the database host meets\nyour specified threshold. The  Cloud Manager  release on February 14, 2024 fixes an issue\nwhere  Cloud Manager  inaccurately reported this metric. This\nrelease resets this metric and the previous values no longer\nappear. Max System Network Out is Maximum number of bytes sent  from \nMongoDB meets the specified threshold. You can create charts for a selection of these metrics in  Cloud Manager . To learn more about creating charts for host metrics in\n Cloud Manager , see  View Deployment Metrics  and click the\n MongoDB Process Metrics  tab. From the  Cloud Manager  project's  Deployment  view, click the\n List  tab. Click the process for which you want to monitor. Click the  Status  tab. Scroll down to the list of available metrics and select the\ndesired metric(s) to chart. You may set alerts about the status of the  primary  and the\nnumber of healthy members in a  replica set . Replica set\nconditions include: Replica set metrics include: Condition Alert Trigger Replica set elected a new primary A set elects a new  primary . Each time  Cloud Manager  receives a\nping, it inspects the output of the replica set's\n rs.status()  method for\nthe status of each replica set member. From this output,  Cloud Manager \ndetermines which replica set member is the primary. If the\nprimary found in the ping data is different than the current\nprimary known to  Cloud Manager , this alert triggers. Receiving this alert does not always mean that the set elected a\n new  primary. This alert may also trigger when the same primary\nis re- elected. This can happen when  Cloud Manager  processes a ping in\nthe midst of an election. Replica set has no primary A replica set does not have a  primary . Specifically,\nwhen none of the members of a replica set have a status of\n PRIMARY , the alert triggers. For example, this condition may\narise when a set has an even number of voting members resulting\nin a tie. If the Monitoring collects data during an\n election for primary ,\nthis alert might send a false positive. To prevent such false\npositives, set the alert configuration's  after\nwaiting  interval (in the configuration's  Send to \nsection). For resolutions, see  Fix Lost Primary . Metric Alert Trigger Number of healthy members is A replica set has fewer healthy members than your specified\nthreshold. Number of unhealthy members is A replica set has more unhealthy members than your specified\nthreshold. Number of elections in last hour is > X Number of elections that have occurred in the last hour\nexceeded the user-specified value of  X . The value of  X \nis set when you create the alert. This alert may indicate that\nthe cluster's replication is not in a healthy state, as\nevidenced by constant elections. A replica set member is healthy if you run\n rs.status()  for that\nreplica set and the result returns  PRIMARY  or\n SECONDARY  for that member. Hidden secondaries and\narbiters are not counted. You may set an alert for a  mongos  missing from a\n sharded cluster . Sharded cluster conditions include: Condition Alert Trigger Cluster is missing an active mongos Cloud Manager  cannot reach  any   mongos  for the cluster. You may set alerts for agent status or versioning. Agent conditions\ninclude: Condition Alert Trigger Automation is down No Automation is detected for at least 1 minute. Under\nnormal operation, the Automation sends a ping to  Cloud Manager \nroughly once every 10 seconds. If  Cloud Manager  does not receive a ping\nfor at least 1 minute, this alert triggers. This alert triggers only if the Automation is managing a\nMongoDB process or agent module. Monitoring is down No Monitoring is detected for at least 7 minutes. Under\nnormal operation, the Monitoring sends a ping to  Cloud Manager \nroughly once per minute. If  Cloud Manager  does not receive a ping for at\nleast 7 minutes, this alert triggers. However, this alert never\ntriggers for a project that has no hosts configured. When the Monitoring is down,  Cloud Manager  triggers no other alerts\nfor any host. For example: if a host is down there is no Monitoring to send data to  Cloud Manager  that could trigger new alerts. Monitoring does not have the latest version Monitoring is not running the latest version of the\nsoftware. Backup is down Backup for a project with at least one active replica\nset or cluster is down for more than 1 hour. To resolve this alert: To see which host serves the Backup,\nclick  Deployment , then the  Servers  tab. Check the Backup log file on that host. Backup does not have the latest version Backup is not running the latest version of the\nsoftware. You may set alerts for backup oplog, resync and inconsistencies. Backup\nconditions include: Condition Alert Trigger Backup oplog is behind Most recent  oplog  data received by  Cloud Manager  is more\nthan 75 minutes old. To resolve this alert, see\n Fix Backup Oplog Issues . Backup requires a resync Replication process for a backup falls too far behind the\n oplog  to catch up. This occurs when the host overwrites\noplog entries that backup has not yet replicated. When this\nhappens, you must resync backup, as described in the procedure\n Resync a Backup . Also, check the corresponding Backup log. If you see a\n\"Failed Common Points\" test, one of the following may have\nhappened. A significant rollback event occurred on the backed-up replica\nset. oplog  for the\nbacked-up replica set was resized or deleted. High oplog churn caused the agent to lose the tail of the\noplog. Inconsistent backup configuration has been detected Cloud Manager  has detected that the configuration for a backup does not\nmatch the configuration of the MongoDB deployment it backs up. To resolve this alert, see  Fix Inconsistent Backup . Inconsistent cluster snapshot count is... Cloud Manager  fails a consecutive number of times to successfully take a\ncluster snapshot. This alert is triggered when the number of\nattempts meets your specified threshold. The alert text may contain the reason for the problem. Common\nproblems include: There was no reachable  mongos .\nTo resolve this issue, ensure that there is at least one\n mongos  showing on the  Cloud Manager \n Deployment  page. balancer  could not be\nstopped. To resolve this issue, check the log files for the\nfirst  config server \nto determine why the balancer will not stop. Could not insert a token in one or more\n shards . To resolve\nthis issue, ensure connectivity between the Backup and\nall shards. These alert conditions apply to use of the BI Connector with  Cloud Manager . Condition Alert Trigger The Automation has not detected the BI Connector process for at\nleast 9 minutes. When the Automation is down,  Cloud Manager  cannot\ntrigger alerts for the BI Connector. You may set alerts for user addition, removal and role changes. User\nconditions include: Condition Alert Trigger User joined the project A new user joins the project. User left the project A user leaves the project. User had their role changed A user's roles have been changed. You may set alerts for user approval and authentication configuration.\nProject conditions include: Condition Alert Trigger Users do not have two-factor authentication enabled Project has users who have not set up\n two-factor authentication . Security checkup alerts updated The project's security checkup alerts changed. You may set alerts for credit card expiration and billing amounts.\nBilling conditions include: Condition Alert Trigger Credit card is about to expire Credit card on file is about to expire. The alert is\ntriggered at the beginning of the month that the card\nexpires.  Cloud Manager  enables this alert configuration when a credit\ncard is added for the first time. Monthly pending invoice ($) total is Invoice for the end of the month meets your specified\nthreshold. Daily amount billed ($) is Amount for the current day meets your specified\nthreshold. You may set alerts for an organization's  IdP (Identity Provider)  certificate. Condition Alert Trigger Organization's IdP certificate is about to expire IdP (Identity Provider)  certificate associated with an organization for\nwhich you have the  Organization Owner  role\nexpires within 14 days.  MongoDB Cloud Manager  sends this alert until you\nacknowledge it. MongoDB Cloud Manager  creates this alert automatically when you\n map an organization to an IdP provider . If you remove the mapping,  MongoDB Cloud Manager \ndeletes all instances of this alert.",
            "code": [],
            "preview": "Average rate per second to scan index items during queries\nand query-plan evaluations meets your specified threshold.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/no-primary",
            "title": "Fix Lost Primary",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "At time  T , no  primary  was detected in replica set  ABC . You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Replica set has no primary . A network partition is preventing all members of the replica set from\ncommunicating with each other. There are not enough voting members in the replica set to keep a\nprimary. A simple majority is required to have a primary. This can\nhappen if too many hosts are down (or not responding) to replica set\nheartbeats. There is not an electable member when the primary goes down. Ensure a majority of votes are available in the replica set. If hosts\nhave been shut down permanently, ensure they are removed from the\nreplica set configuration. Use basic ping tests from one host to another to ensure they can\ncommunicate with each other. Make sure there is more than one data-bearing member with a priority\ngreater than 0. To learn more, see  Replica Set Elections  in the MongoDB manual. View the following charts to monitor whether the deployment is\nexhausting resources: To learn more, see\n View Deployment Metrics . Normalized System CPU Monitor CPU usage to determine whether data is retrieved from disk\ninstead of memory. Disk IOPs Monitor whether disk IOPS approaches the maximum provisioned IOPS.\nDetermine whether the deployment can handle future workloads. Connections Monitor connections to determine whether the current connection\nlimits are sufficient",
            "code": [],
            "preview": "At time T, no primary was detected in replica set ABC.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/system-cpu-usage",
            "title": "Fix CPU Usage Issues",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "System CPU  alerts indicate that the CPU usage of the MongoDB\nprocess has reached a specified threshold. This threshold is specified\nwhen the alert is created. You can configure the following alert conditions in the project-level\n alert settings  page to trigger alerts. Occurs when the percentage of time the CPU is in a state of\n\"involuntary wait\" exceeds the specified threshold. CPU\nsteal percentage is the percentage by which the CPU usage exceeds\nthe guaranteed baseline CPU credit accumulation rate. This alert typically triggers when all credits have been\nconsumed on an  AWS burstable performance instance . Occurs when the CPU usage of the MongoDB process, as normalized by\nthe number of CPUs, exceeds the specified threshold. Unoptimized queries  might lead to\n System CPU  alerts. Consider adding one or more  indexes  to improve\nquery performance. For details on calculating suggested indexes, see\n Calculate Suggested Indexes . Consider scaling your cluster with additional servers to reduce the CPU\nusage percentage utilized by the current workload. For example, you\ncould  convert a replica set to a sharded cluster . To learn more about\nsharded clusters, see  Sharding . View the  Normalized System CPU  chart to monitor CPU\nusage of all processes on the node, scaled to a range of 0-100% by\ndividing by the number of CPU cores. Monitor CPU usage to determine whether data is retrieved from disk\ninstead of memory. To learn more, see  View Cluster Metrics .",
            "code": [],
            "preview": "System CPU alerts indicate that the CPU usage of the MongoDB\nprocess has reached a specified threshold. This threshold is specified\nwhen the alert is created.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/inconsistent-backup",
            "title": "Fix Inconsistent Backup",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "Cloud Manager  has detected that the configuration for a backup does\nnot match the configuration of the MongoDB deployment. As some settings affect the on-disk format or the process of applying\noplog, the backup process encourages users to verify that their backup\nconfigurations are consistent with their deployed configurations. This\nalert triggers if no node in your deployment exactly matches your\nbackup configuration. You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Inconsistent backup configuration has been detected . The storage engine of a deployment has changed since backup was\nstarted. The MongoDB deployment has changed its startup options since backup\nwas started. The startup options that you should ensure match your\nbackup are: nssize directoryperdb smallfiles wiredTigerDirectoryForIndexes wiredTigerBlockCompressor Update the storage engine from the Backup dashboard. This triggers a\nresync of the backup. If the startup options are inconsistent, resync the backup manually\nfrom the Backup dashboard. Ensure the configuration for a backup matches the configuration of the\nMongoDB deployment it backs up. View the following chart to monitor your progress: To learn more, see\n View Deployment Metrics . Tickets Available Monitor the tickets available to see when read and write requests\nqueue.",
            "code": [],
            "preview": "Cloud Manager has detected that the configuration for a backup does\nnot match the configuration of the MongoDB deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/replication-lag",
            "title": "Fix Replication Lag",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "At time  T , the last write operation applied on the specified\n secondary  of replica set  ABC  was behind the most recent\noperation applied on the  primary . You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Replication Lag is . An idle replica set. The reported replication lag is actually just the\ntime since the last write. Replication lag is calculated between the\nlast operation time on the primary and the time of the last operation\nreceived by the secondary. If a replica set is only written to once\nevery 10 minutes, the replication lag will be 10 minutes just after\nthe write is made to the primary and just prior to the next write\nbeing replicated to the secondary. The secondary is under-provisioned, which means it needs more\nallocated resources, and cannot keep up with the primary\n(common if using secondaries for read scaling). There is insufficient bandwidth, or some other networking problem,\nbetween the primary and secondary. To learn more, see  Troubleshoot Replica Sets  in the MongoDB manual. Adjust the settings for this alert to only trigger if the replication\nlag persists for longer than 2 minutes. This will reduce the chances\nof a false positive. Resolve networking issues between the primary and secondary. Increase bandwidth between the primary and secondary. Move (or upgrade in place) the secondary to a machine that is\nidentically (or better) provisioned to the current primary. View the following charts to monitor your progress: To learn more, see\n View Deployment Metrics . Network Monitor network metrics to track network performance. Replication Headroom Monitor replication headroom to determine whether the secondary might fall off the oplog. Replication Lag Monitor replication lag to determine whether the secondary might fall off the oplog.",
            "code": [],
            "preview": "At time T, the last write operation applied on the specified\nsecondary of replica set ABC was behind the most recent\noperation applied on the primary.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/backup-oplog-is-behind",
            "title": "Fix Backup Oplog Issues",
            "headings": [
                "Alert Conditions",
                "Common Triggers",
                "Fix the Immediate Problem",
                "Implement a Long-Term Solution",
                "Monitor Your Progress"
            ],
            "paragraphs": "The  Cloud Manager  backup service has not received an oplog from the\nMongoDB Agent for at least an hour. You can configure alert conditions in the project-level\n alert settings  page to trigger alerts. To learn more about the alert condition, see\n Backup oplog is behind . MongoDB Agent is down. MongoDB Agent is overloaded. MongoDB Agent can't reach the replica set. MongoDB Agent can't reach or successfully send data to  Cloud Manager . MongoDB Agent is continuously restarting. Check the MongoDB Agent  logs  in  Cloud Manager  and\non the MongoDB Agent host to find out which of these occurred. Manage your  MongoDB Agent settings . View the {mdbagent+} status on the  Agents  tab to monitor\nyour progress. To learn more, see  View Agent Status .",
            "code": [],
            "preview": "The Cloud Manager backup service has not received an oplog from the\nMongoDB Agent for at least an hour.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/legal/cloud-manager-backup-changes",
            "title": "Cloud Manager Backup Agreement Overview",
            "headings": [
                "Who Needs this License?",
                "What Does this License Allow?",
                "How Can I Use MongoDB 4.2 Enterprise for Backups?",
                "Why Is MongoDB Offering this License?",
                "When Do I Need to Upgrade to MongoDB Enterprise?"
            ],
            "paragraphs": "This is a human-readable summary of some of the key terms of the full\nagreement. It has  no legal value . You should carefully review all\nterms of the\n actual license \nbefore agreeing. This  new license \nis available only to customers who: Are currently paying for a Cloud Manager Backup subscription but do\nnot have a MongoDB Enterprise Server subscription, and Want to upgrade to MongoDB 4.2 or later. The agreement grants you a\n license  to\ninstall and use the backup features of the MongoDB 4.2 Enterprise\nServer  only during the term of your Cloud Manager Backup\nsubscription . The license allows you to use the Enterprise backup features. It does\nnot grant you rights to use any other features of the MongoDB\nEnterprise Server. If you would like to access and use all of the features of the MongoDB\nEnterprise Server, please download the\n MongoDB Enterprise Advanced Datasheet \nfor more information or  contact us  for\npricing details. If you are paying for Cloud Manager Backup, you can: Upgrade to MongoDB 4.2 Enterprise or later; and Review and accept the terms of the new license in the Cloud Manager\nconsole. MongoDB is offering this upgrade path and license to customers who use\nCloud Manager Backup because: MongoDB enhanced the backup process of the core server. These enhancements are unavailable in the MongoDB Community Server. If you want to use MongoDB 4.2 for your clusters, you  must  follow\nthis  new upgrade path .\nYou cannot back up MongoDB 4.2 databases using Cloud Manager Backup\nwith MongoDB 4.2 Community Server.",
            "code": [],
            "preview": "This is a human-readable summary of some of the key terms of the full\nagreement. It has no legal value. You should carefully review all\nterms of the\nactual license\nbefore agreeing.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/legal/cloud-manager-backup-license",
            "title": "Cloud Manager Backup Agreement",
            "headings": [],
            "paragraphs": "This License Agreement (the \" Agreement \") establishes the terms on\nwhich  MongoDB, Inc.  (\" Company \") grants a license to Company\u2019s\nproprietary backup software solely in machine-readable, executable,\nobject-code form and related documentation (the \" Backup Software \")\nto you the licensee (\" You \" or \" Your \") solely on the condition\nthat You accept all of the terms in this Agreement. By clicking through\nany applicable acceptance screen, or otherwise accessing, installing, or\nusing the Backup Software, you are indicating your acceptance of this\nAgreement, and if you do not agree to the terms of this Agreement, you\nmay not access, install, or use the Backup Software. If You are an\nemployee or agent of a company (the \" Customer \"), You hereby agree\nthat You enter into this Agreement on behalf of the Customer and that\nYou have the authority to bind the Customer to the terms and conditions\nof this Agreement. If you enter, or have entered, into a separate\nagreement with Company for use of the MongoDB Enterprise database\nsoftware for other purposes (besides backup), the terms of that\nagreement will control with respect to the uses authorized therein. If You have any questions regarding this Agreement or the Backup Software, please direct all correspondence to: legal@mongodb.com. LICENSE.  Subject to Your full and ongoing compliance with all\nterms and conditions of this Agreement and subject to You having\npurchased a Cloud Manager Backup Subscription, Company hereby grants\nYou a limited, revocable, non-exclusive, non-transferable,\nnon-sublicensable license during the term of your Cloud Manager\nBackup Subscription to install and use the Backup Software in your\ninternal environment, and solely for the intended purpose of the\nBackup Software. For clarity, this license is limited to the backup\nsolution in the MongoDB Enterprise Server and does not include any\nother features of the MongoDB Enterprise Server. We may monitor your\nuse of, or use technological measures designed to prevent\nunauthorized or illegal use of, the MongoDB Enterprise Server\nsoftware to verify your compliance with this Agreement. RESTRICTIONS.  You will not, and will not allow any third party\nto: (i) modify, alter, tamper with, repair, or otherwise create\nderivative works of the Backup Software; (ii) sell, sublicense, rent,\nlease, distribute, market, or commercialize the Backup Software;\n(iii) decompile, disassemble, translate, reverse engineer or\notherwise attempt to derive source code from any portion of the\nBackup Software, except and solely to the extent that the foregoing\nrestriction is impermissible pursuant to applicable law or third\nparty license; (iv) remove, alter or obscure any proprietary notices\nof Company, its licensors or suppliers included in the Backup\nSoftware; or (v) publicly disseminate performance information about\nor analysis of the Backup Software, including benchmarking test\nresults. No third party may access, view or use the Backup Software\nunder this Agreement. NO FEES; OPERATING EXPENSES.  Subject to the terms of this\nAgreement, You and Company agree that no license fees or other fees\nshall be payable under this Agreement in exchange for the rights\ngranted and/or the use of the Backup Software or other materials\nprovided under this Agreement. FEEDBACK.  If you choose to provide us with suggestions, ideas for\nimprovement, recommendations or other feedback, we may use and modify\nyour feedback without any restriction or payment. OWNERSHIP.  The Backup Software, and all worldwide intellectual\nproperty rights and proprietary rights to the Backup Software, are\nthe exclusive property of Company and its licensors. Company and its\nlicensors reserve all rights in and to the Backup Software not\nexpressly granted to You in this Agreement, and no other licenses or\nrights are granted by implication, estoppel or otherwise. TERM.  This Agreement shall commence when you download the Backup\nSoftware and shall continue in force and effect until terminated by\neither party or, if earlier, termination of your MongoDB Cloud\nManager Backup Subscription. Either party may terminate this\nAgreement, with or without cause, immediately upon written notice to\nthe other party. Company may terminate this Agreement by posting a\nnotice on its website. This Agreement will terminate immediately and\nwithout notice in the event that you breach any term or condition of\nthis Agreement. Upon the expiration or any termination of this\nAgreement, the license and all rights granted to You under this\nAgreement will immediately terminate, and You shall promptly purge\nand destroy all copies of the Backup Software in Your possession.\nProvisions intended by their nature to survive termination of this\nAgreement survive termination. USAGE DATA.  The Backup Software may include features that provide\nus metadata about usage of the Backup Software, and you hereby\nconsent to our collection of such data, and to our storage,\nprocessing, and analysis of such data for our own internal business\npurposes. WARRANTY DISCLAIMER.  THE BACKUP SOFTWARE IS PROVIDED TO YOU \"AS\nIS\" AND WITH NO REPRESENTATION OR WARRANTY OF ANY KIND. EXCEPT TO THE\nEXTENT PROHIBITED BY LAW, COMPANY AND LICENSORS EXPRESSLY DISCLAIM\nANY AND ALL WARRANTIES AND REPRESENTATIONS OF ANY KIND WITH REGARD TO\nTHE BACKUP SOFTWARE OR THIS AGREEMENT, INCLUDING ANY WARRANTY OF\nNON-INFRINGEMENT, TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nFUNCTIONALITY OR MERCHANTABILITY, WHETHER EXPRESS, IMPLIED OR\nSTATUTORY. LIMITATION OF REMEDIES.  IN NO EVENT SHALL COMPANY BE LIABLE FOR\nANY INCIDENTAL, INDIRECT, SPECIAL, CONSEQUENTIAL OR PUNITIVE DAMAGES\nIN CONNECTION WITH THIS AGREEMENT, REGARDLESS OF THE NATURE OF THE\nCLAIM OR THEORY OF LIABILITY, INCLUDING, WITHOUT LIMITATION, LOST\nPROFITS, COSTS OF DELAY, ANY FAILURE OF DELIVERY, BUSINESS\nINTERRUPTION, COSTS OF LOST OR DAMAGED DATA OR DOCUMENTATION OR\nLIABILITIES TO THIRD PARTIES ARISING FROM ANY SOURCE, REGARDLESS OF\nWHETHER THE COMPANY HAS BEEN NOTIFIED OF THE POSSIBILITY OF SUCH\nDAMAGES. WITHOUT LIMITING THE FOREGOING, COMPANY\u2019S CUMULATIVE\nLIABILITY FOR ALL CLAIMS ARISING FROM OR RELATING TO THIS AGREEMENT,\nINCLUDING, WITHOUT LIMITATION, ANY CAUSE OF ACTION SOUNDING IN\nCONTRACT, TORT, OR STRICT LIABILITY, SHALL NOT EXCEED ONE HUNDRED\nDOLLARS (U.S. $100.00). THE FOREGOING LIMITATIONS WILL APPLY\nNOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED\nREMEDY PROVIDED HEREIN. ESSENTIAL BASIS OF AGREEMENT.  The Parties acknowledge and agree\nthat the disclaimers, exclusions and limitations of liability set\nforth in Section 9 form an essential basis of this Agreement, and\nthat, absent any of such disclaimers, exclusions or limitations of\nliability, the terms of this Agreement, including, without\nlimitation, the economic terms, would be substantially different. GENERAL.  This Agreement shall be governed by and interpreted in\naccordance with the laws of the State of New York, without regard to\nconflicts of law principles thereof or to the United Nations\nConvention on the International Sale of Goods. For purposes of all\nclaims brought under this agreement, each of the parties hereby\nirrevocably submits to the exclusive jurisdiction of the state and\nfederal courts located within the State of New York. Company may\nassign this Agreement, in whole or in part, at any time with or\nwithout notice to You. You may not assign this Agreement, or any part\nof it, to any other party. Any attempt by You to do so is null and\nvoid. If any provision of this Agreement is held to be unenforceable,\nthat provision will be enforced to the extent permissible by law and\nthe remaining provisions will remain in full force and effect. No\nwaiver under this Agreement shall be valid or binding unless set\nforth in writing and duly executed by the party against whom\nenforcement of such waiver is sought. Any such waiver shall\nconstitute a waiver only with respect to the specific matter\ndescribed therein and shall in no way impair the rights of the party\ngranting such waiver in any other respect or at any other time. Any\ndelay or forbearance by either party in exercising any right\nhereunder shall not be deemed a waiver of that right. This Agreement\nis the complete and exclusive statement of the agreement between us\nand supersedes any proposal or prior agreement, oral or written, and\nany other communications between You and Company in relation to the\nsubject matter of this Agreement.",
            "code": [],
            "preview": "This License Agreement (the \"Agreement\") establishes the terms on\nwhich MongoDB, Inc. (\"Company\") grants a license to Company\u2019s\nproprietary backup software solely in machine-readable, executable,\nobject-code form and related documentation (the \"Backup Software\")\nto you the licensee (\"You\" or \"Your\") solely on the condition\nthat You accept all of the terms in this Agreement. By clicking through\nany applicable acceptance screen, or otherwise accessing, installing, or\nusing the Backup Software, you are indicating your acceptance of this\nAgreement, and if you do not agree to the terms of this Agreement, you\nmay not access, install, or use the Backup Software. If You are an\nemployee or agent of a company (the \"Customer\"), You hereby agree\nthat You enter into this Agreement on behalf of the Customer and that\nYou have the authority to bind the Customer to the terms and conditions\nof this Agreement. If you enter, or have entered, into a separate\nagreement with Company for use of the MongoDB Enterprise database\nsoftware for other purposes (besides backup), the terms of that\nagreement will control with respect to the uses authorized therein.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/legal/cloud-licensing",
            "title": "Cloud Manager Licensing",
            "headings": [],
            "paragraphs": "Provides an explanation of the Cloud Manager Backup License. Provides the full text of the Cloud Manager Backup License.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alerts-get-all-alerts",
            "title": "Get All Alerts",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Measurement Types for Alerts",
                "Host Measurements",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Project identifier. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true Name Type Necessity Description status string Optional Specify a status to return only those alerts with\nthe specified status. Omit to return all alerts. Cloud Manager  accepts the following values: To return alerts with  TRACKING  status. If an alert's\n configuration  specifies a\nnotification delay,  Cloud Manager  assigns the alert the\n TRACKING  status until the delay period ends. After the\ndelay,  Cloud Manager  sets the status to  OPEN , if the condition\npersists. If an alert's configuration has multiple notifications,\neach with its own notification delay,  Cloud Manager  uses the\nsmallest delay value to determine when to move the alert\nfrom  TRACKING  to  OPEN . To return all open alerts. To return all closed alerts. This endpoint doesn't use HTTP request body parameters. Each  result  is one alert. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  until which the alert has been acknowledged. Cloud Manager  returns this value if the alert has been acknowledged. string Comment left by the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. string Username of the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. alertConfigId string Unique identifier for the alert configuration that triggered\nthis alert. clusterId string Unique identifier for the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" clusterName string Name of the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was opened. currentValue object Current value of the metric that triggered the alert. Cloud Manager  returns this value if\n \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . number Value of the metric. string Units for the value. Value depends on the type of metric. Cloud Manager  can return: A metric that measures memory consumption would have a byte\nmeasurement, while a metric that measures time would have a\ntime unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS eventTypeName string Name of the event that triggered the alert. Accepted values are: Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_DOWNGRADED HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_NOW_PRIMARY HOST_NOW_SECONDARY HOST_NOW_STANDALONE HOST_RECOVERED HOST_RECOVERING HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE HOST_UP HOST_UPGRADED INSIDE_METRIC_THRESHOLD NEW_HOST OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND VERSION_CHANGED VERSION_CURRENT ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP groupId string Unique identifier of the group for which this alert was opened. hostId string unique identifier for the host to which the metric pertains. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET hostnameAndPort string Hostname and port of each host to which the alert applies. This\ncan be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6) \naddress. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET id string Unique identifier for the alert. lastNotified string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last notification was sent for this\nalert.  Cloud Manager  returns this value if notifications have been sent. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the\nthreshold. Cloud Manager  returns this value if  \"eventTypeName\"  was set to\n OUTSIDE_METRIC_THRESHOLD . For possible values, see  Measurement Types for Alerts . replicaSetName string Name of the replica set. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: BACKUP HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET resolved string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was closed. Cloud Manager  returns this value if  \"status\" : \"CLOSED\" . status string Current state of the alert.  Cloud Manager  can return one of the\nfollowing: TRACKING The alert condition exists but has not persisted beyond the\ndefined notification delay. For details, see\n Request Query Parameters . OPEN CLOSED CANCELLED sourceTypeName string Type of host being backed up when  \"eventTypeName\" :\n\"BACKUP\" .  Cloud Manager  can return one of the following: REPLICA_SET SHARDED_CLUSTER CONFIG_SERVER tags string array Identifying labels set for this alert. typeName string Deprecated field. |mms| ignores it. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was last updated. The  alerts  resource returns measurement types in the  metricName \nfield. The field is present only if  eventTypeName  is set to\n OUTSIDE_METRIC_THRESHOLD . ASSERT_REGULAR ASSERT_WARNING ASSERT_MSG ASSERT_USER Rate of asserts for a MongoDB process found in the\n asserts  document that the\n serverStatus \ncommand generates. BACKGROUND_FLUSH_AVG Amount of data flushed in the background. CACHE_BYTES_READ_INTO CACHE_BYTES_WRITTEN_FROM CACHE_DIRTY_BYTES CACHE_USED_BYTES TICKETS_AVAILABLE_READS TICKETS_AVAILABLE_WRITE Amount of bytes in the  WiredTiger \nstorage engine cache and tickets found in the\n wiredTiger.cache  and\n wiredTiger.concurrentTransactions  documents\nthat the\n serverStatus \ncommand generates. CONNECTIONS Number of connections to a MongoDB process found in the\n connections  document that the\n serverStatus \ncommand generates. CURSORS_TOTAL_OPEN CURSORS_TOTAL_TIMED_OUT Number of  cursors  for a MongoDB\nprocess found in the  metrics.cursor  document\nthat the\n serverStatus \ncommand generates. EXTRA_INFO_PAGE_FAULTS GLOBAL_ACCESSES_NOT_IN_MEMORY GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN Numbers of  Memory Issues  and  Page Faults  for a MongoDB\nprocess. GLOBAL_LOCK_CURRENT_QUEUE_TOTAL GLOBAL_LOCK_CURRENT_QUEUE_READERS GLOBAL_LOCK_CURRENT_QUEUE_WRITERS Number of operations waiting on locks for the MongoDB process\nthat the\n serverStatus \ncommand generates.  Cloud Manager  computes these values based on the\ntype of storage engine. INDEX_COUNTERS_BTREE_ACCESSES INDEX_COUNTERS_BTREE_HITS INDEX_COUNTERS_BTREE_MISSES INDEX_COUNTERS_BTREE_MISS_RATIO Number of index btree operations. JOURNALING_COMMITS_IN_WRITE_LOCK JOURNALING_MB JOURNALING_WRITE_DATA_FILES_MB Number of journaling operations. MEMORY_RESIDENT MEMORY_VIRTUAL MEMORY_MAPPED COMPUTED_MEMORY Amount of memory for a MongoDB process found in the\n mem  document that the\n serverStatus  command collects. NETWORK_BYTES_IN NETWORK_BYTES_OUT NETWORK_NUM_REQUESTS Amount of throughput for MongoDB process found in the\n network  document that the\n serverStatus  command collects. OPLOG_RATE_GB_PER_HOUR OPLOG_MASTER_TIME OPLOG_MASTER_LAG_TIME_DIFF OPLOG_SLAVE_LAG_MASTER_TIME Durations and throughput of the MongoDB process'\n oplog . DB_STORAGE_TOTAL DB_DATA_SIZE_TOTAL On-disk storage space as collected from the MongoDB  dbStats \ncommand. OPCOUNTER_CMD OPCOUNTER_QUERY OPCOUNTER_UPDATE OPCOUNTER_DELETE OPCOUNTER_GETMORE OPCOUNTER_INSERT Rate of database operations on a MongoDB process since the\nprocess last started found in the  opcounters  document that the\n serverStatus  command collects. OPCOUNTER_REPL_CMD OPCOUNTER_REPL_UPDATE OPCOUNTER_REPL_DELETE OPCOUNTER_REPL_INSERT Rate of database operations on MongoDB\n secondaries  found in the\n opcountersRepl  document that the\n serverStatus \ncommand collects. DOCUMENT_METRICS_RETURNED DOCUMENT_METRICS_INSERTED DOCUMENT_METRICS_UPDATED DOCUMENT_METRICS_DELETED Average rate of documents returned, inserted, updated, or\ndeleted per second during a selected time period. OPERATIONS_SCAN_AND_ORDER Average rate for operations per second during a selected time\nperiod that perform a sort but cannot perform the sort using an\nindex. OP_EXECUTION_TIME_READS OP_EXECUTION_TIME_WRITES OP_EXECUTION_TIME_COMMANDS Average execution time in milliseconds per read, write, or\ncommand operation during a selected time period. Available to hosts running MongoDB 3.4 or later. RESTARTS_IN_LAST_HOUR Number of times the host restarted within the previous hour. SYSTEM_MEMORY_USED SYSTEM_MEMORY_FREE SYSTEM_MEMORY_AVAILABLE Physical memory usage, in bytes. SYSTEM_NETWORK_BYTES_IN SYSTEM_NETWORK_BYTES_OUT Network throughput in bytes per second. SWAP_USAGE_USED SWAP_USAGE_FREE Total amount swap space in use. QUERY_EXECUTOR_SCANNED Average rate per second to scan index items during\nqueries and query-plan evaluations found in the value of\n totalKeysExamined  from the\n explain  command. QUERY_EXECUTOR_SCANNED_OBJECTS Average rate of documents scanned per second during queries\nand query-plan evaluations found in the value of\n totalDocsExamined  from the\n explain  command. QUERY_TARGETING_SCANNED_PER_RETURNED Ratio of the number of index items scanned to the number of\ndocuments returned. QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED Ratio of the number of documents scanned to the number of\ndocuments returned. The following returns all  OPEN  alerts:",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/alerts"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alerts?status=OPEN&pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alerts?status=OPEN&pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"alertConfigId\" : \"5953c5f380eef53887615fd4\",\n    \"created\" : \"2019-07-18T23:43:50Z\",\n    \"eventTypeName\" : \"MONITORING_AGENT_DOWN\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"5d31043680eef5280d3664e0\",\n    \"lastNotified\" : \"2019-09-25T11:50:08Z\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alerts/5d31043680eef5280d3664e0\",\n      \"rel\" : \"self\"\n    } ],\n    \"status\" : \"OPEN\",\n    \"tags\" : [ ],\n    \"typeName\" : \"AGENT\",\n    \"updated\" : \"2019-07-18T23:43:50Z\"\n  } ],\n  \"totalCount\" : 1\n}"
                }
            ],
            "preview": "Each result is one alert.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/ops-manager-list",
            "title": "Agent",
            "headings": [
                "Automation Configuration",
                "Backup",
                "BI Connector",
                "Cluster",
                "Data Explorer Accessed",
                "Host",
                "Organization",
                "Project",
                "Replica Set",
                "Team",
                "User"
            ],
            "paragraphs": "Alert Type Alert Message Scopes Automation is down Project, Global Automation is up Project, Global Backup has too many conf call failures Project, Global Backup is down Project, Global Backup is up Project, Global Backup does not have the latest version Project, Global Backup has the latest version Project, Global Monitoring is down Project, Global Monitoring is up Project, Global Monitoring does not have the latest version Project, Global Monitoring has the latest version Project, Global New agent Project, Global Alert Type Alert Message Scopes Deployment configuration published Project, Global Alert Type Alert Message Scopes Backup has possibly inconsistent cluster snapshots Project, Global Excluded namespaces were modified for cluster Project, Global Checkpoint interval updated for cluster Project, Global Backup authentication credentials updated for cluster Project, Global Snapshot schedule updated for cluster Project, Global Cluster backup state is now Project, Global Cluster storage engine has been updated Project, Global Cluster snapshot has been deleted Project, Global Clustershot expiry has been updated. Project, Global Backup configuration is consistent Project, Global Backup has a good clustershot Project, Global Inconsistent backup configuration has been detected Project, Global Backup initial sync finished Project, Global Backup initial sync started Project, Global Backup oplog is behind Project, Global Backup oplog is current Project, Global A restore has been requested Project, Global Backup has been resynced Project, Global Backup requires a resync Project, Global Excluded namespaces were modified for replica set Project, Global Backup authentication credentials updated for replica set Project, Global A master key rotation has been requested for a replica set. Project, Global Snapshot schedule updated for replica set Project, Global Replica set backup state is now Project, Global Replica set storage engine has been updated Project, Global Snapshot has been deleted Project, Global Snapshot expiry has been updated. Project, Global Backup sync is pending Project, Global Backup sync has been initiated Project, Global Alert Type Alert Message Scopes BI Connector is down Project, Global BI Connector is up Project, Global Alert Message Scopes Cluster is missing an active mongos Project, Global Cluster has an active mongos Project, Global Shard added Project, Global Shard removed Project, Global Alert Type Alert Message Scopes User performed a Data Explorer read-only operation Project, Global User performed a Data Explorer CRUD operation, which modifies\ndata Project, Global Alert Type Alert Message Scopes Host added Project, Global Host added to replica set Project, Global Attempted to kill operation Project, Global Attempted to kill session Project, Global Database profiling disabled Project, Global Database profiling enabled Project, Global Host removed Project, Global Host disabled Project, Global Host disabled and hidden Project, Global Host hidden Project, Global Host is down Project, Global Host has been downgraded Project, Global Host IP address changed Project, Global Host is now primary Project, Global Host is now secondary Project, Global Host is now a standalone Project, Global Host has recovered Project, Global Host is recovering Project, Global Host has restarted Project, Global Host experienced a rollback Project, Global Authentication or   is disabled. Project, Global Host's SSL certificate is current Project, Global Host's SSL certificate will expire within 30 days Project, Global Host is up Project, Global Host has been upgraded Project, Global Inside metric threshold Project, Global Host is new Project, Global Outside metric threshold Project, Global Host paused Project, Global Host removed from replica set Project, Global Host resumed Project, Global Host undeleted Project, Global Host does not have the latest version Project, Global Host version changed Project, Global Host has the latest version Project, Global Alert Type Alert Message Scopes Organization users have two-factor authentication enabled Organization, Global API key has been added Organization API key has been deleted Organization MongoDB Production Support Employees restricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization (You may grant a 24 hour bypass to the access\nrestriction at the Atlas cluster level) Organization, Global MongoDB Production Support Employees unrestricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization Organization, Global IP Access List for Public API Not Required Organization, Global Require IP Access List for Public API Enabled Organization, Global Organization has been renamed Organization, Global Two-factor Authentication Optional Organization, Global Two-factor Authentication Required Organization, Global Organization users do not have two-factor authentication enabled Organization, Global Alert Type Alert Message Scopes Users have two-factor authentication enabled Project, Global Users do not have two-factor authentication enabled Project, Global Alert Message Scopes Replica set has an updated configuration Project, Global Replica set has enough healthy members Project, Global Replica set member added Project, Global Replica set member removed Project, Global Replica set elected multiple primaries Project, Global Replica set has no primary Project, Global Replica set elected one primary Project, Global Replica set elected a new primary Project, Global Replica set has too few healthy members Project, Global Replica set has too many election events Project, Global Replica set has too many unhealthy members Project, Global Alert Type Alert Message Scopes Team added to project Organization, Project, Global Team created Organization, Global Team deleted Organization, Global Team name changed Organization, Global Team removed from project Organization, Project, Global Team roles modified in project Organization, Project, Global Team updated Organization, Global User added to team Organization, Global Alert Type Alert Message Scopes User was invited to project Project, Global User was invited to organization Organization, Global Request to join project was approved Project, Global Request to join project was denied Project, Global User joined the project Project, Global User joined the organization Organization, Global User joined the team Organization, Global User left the project Project, Global User left the organization Organization, Global User left the team Organization, Global User requested to join project Project, Global User had their role changed Project, Organization, Global",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/databases-get-all-on-host",
            "title": "Get All Databases on One Host",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve all databases running on the specified host. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project that owns this MongoDB process. HOST-ID string (Required.)  Unique identifier of the host running the MongoDB process. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one database. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description databaseName string The name of the database. links array Links to the group that the database belongs to, the MongoDB host\nrunning the database, and database measurements. The relations between\nURLs are explained in the  Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b910306f21033a/hosts/fd5b59188dc13ad142493/databases\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"results\" : [ {\n    \"databaseName\" : \"local\",\n    \"links\" : []\n  }, {\n    \"databaseName\" : \"production\",\n    \"links\" : []\n  }, {\n    \"databaseName\" : \"test\",\n    \"links\" : []\n  }, ],\n  \"totalCount\" : 3\n}"
                }
            ],
            "preview": "Retrieve all databases running on the specified host.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/access-list-get-for-current-user",
            "title": "Get Access List for the Current User",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description USER-ID string (Required.)  User Unique identifier of the current user. To retrieve the ID\nof the current user, see\n Get All Users in One Project . The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one access list. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description cidrBlock string A CIDR-notated range of IP addresses. created date The date this IP address was added to the access list. ipAddress string An IP address in the access list. lastUsed date The date of the most recent request that originated from this IP\naddress. Note that this field is  only  updated when a resource that is\nprotected by the access list is accessed. lastUsedAddress string The address from which the last call to the API was issued. count number The total number of requests that originated from this IP address.\nNote that this field is  only  updated when a resource that is\nprotected by the access list is accessed. links array Links to related sub-resources. All links arrays in responses\ncontain at least one link called  self . The relations between\nURLs are explained in the  Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /users/{USER-ID}/accessList"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"results\" : [ {\n    \"cidrBlock\" : \"5.6.7.8/30\",\n    \"count\" : 482,\n    \"created\" : \"2014-04-23T16:17:44Z\",\n    \"lastUsed\" : \"2016-04-19T14:15:52Z\",\n    \"lastUsedAddress\" : \"5.6.7.7\",\n    \"links\" : []\n  }, {\n    \"cidrBlock\" : \"1.2.3.4/32\",\n    \"count\" : 9,\n    \"created\" : \"2016-02-19T14:46:14Z\",\n    \"ipAddress\" : \"1.2.3.4\",\n    \"lastUsed\" : \"2016-04-25T15:42:50Z\",\n    \"lastUsedAddress\" : \"1.2.3.4\",\n    \"links\" : []\n  } ],\n  \"totalCount\" : 2,\n  \"links\" : []\n}"
                }
            ],
            "preview": "Each result is one access list.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/root",
            "title": "Root",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  root  resource is the starting point for the  Cloud Manager  API. From\nhere, you can traverse the  links  to reach all other API resources. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. The response includes: Name Type Description appName string MongoDB Cloud build string The SHA that corresponds to the GitHub commit for the  Cloud Manager . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . throttling boolean The field is obsolete and has the value  false .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"appName\" : \"MongoDB Cloud\",\n  \"build\" : \"ec8b09b880be314981caa9d8fbefc3280056522e\",\n  \"links\" : [\n\n  ],\n  \"throttling\" : false\n}"
                }
            ],
            "preview": "The root resource is the starting point for the Cloud Manager API. From\nhere, you can traverse the links to reach all other API resources.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alerts-get-alert",
            "title": "Get One Alert",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Measurement Types for Alerts",
                "Host Measurements",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Project identifier. ALERT-ID string (Required.)  Alert identifier. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. The fields in the return document depend on the alert type: Name Type Description string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  until which the alert has been acknowledged. Cloud Manager  returns this value if the alert has been acknowledged. string Comment left by the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. string Username of the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. alertConfigId string Unique identifier for the alert configuration that triggered\nthis alert. clusterId string Unique identifier for the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" clusterName string Name of the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was opened. currentValue object Current value of the metric that triggered the alert. Cloud Manager  returns this value if\n \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . number Value of the metric. string Units for the value. Value depends on the type of metric. Cloud Manager  can return: A metric that measures memory consumption would have a byte\nmeasurement, while a metric that measures time would have a\ntime unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS eventTypeName string Name of the event that triggered the alert. Accepted values are: Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_DOWNGRADED HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_NOW_PRIMARY HOST_NOW_SECONDARY HOST_NOW_STANDALONE HOST_RECOVERED HOST_RECOVERING HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE HOST_UP HOST_UPGRADED INSIDE_METRIC_THRESHOLD NEW_HOST OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND VERSION_CHANGED VERSION_CURRENT ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP groupId string Unique identifier of the group for which this alert was opened. hostId string unique identifier for the host to which the metric pertains. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET hostnameAndPort string Hostname and port of each host to which the alert applies. This\ncan be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6) \naddress. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET id string Unique identifier for the alert. lastNotified string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last notification was sent for this\nalert.  Cloud Manager  returns this value if notifications have been sent. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the\nthreshold. Cloud Manager  returns this value if  \"eventTypeName\"  was set to\n OUTSIDE_METRIC_THRESHOLD . For possible values, see  Measurement Types for Alerts . replicaSetName string Name of the replica set. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: BACKUP HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET resolved string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was closed. Cloud Manager  returns this value if  \"status\" : \"CLOSED\" . status string Current state of the alert.  Cloud Manager  can return one of the\nfollowing: TRACKING The alert condition exists but has not persisted beyond the\ndefined notification delay. For details, see\n Request Query Parameters . OPEN CLOSED CANCELLED sourceTypeName string Type of host being backed up when  \"eventTypeName\" :\n\"BACKUP\" .  Cloud Manager  can return one of the following: REPLICA_SET SHARDED_CLUSTER CONFIG_SERVER tags string array Identifying labels set for this alert. typeName string Deprecated field. |mms| ignores it. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was last updated. The  alerts  resource returns measurement types in the  metricName  field.\nThe field is present only if  eventTypeName  is set to\n OUTSIDE_METRIC_THRESHOLD . ASSERT_REGULAR ASSERT_WARNING ASSERT_MSG ASSERT_USER Rate of asserts for a MongoDB process found in the\n asserts  document that the\n serverStatus \ncommand generates. BACKGROUND_FLUSH_AVG Amount of data flushed in the background. CACHE_BYTES_READ_INTO CACHE_BYTES_WRITTEN_FROM CACHE_DIRTY_BYTES CACHE_USED_BYTES TICKETS_AVAILABLE_READS TICKETS_AVAILABLE_WRITE Amount of bytes in the  WiredTiger \nstorage engine cache and tickets found in the\n wiredTiger.cache  and\n wiredTiger.concurrentTransactions  documents\nthat the\n serverStatus \ncommand generates. CONNECTIONS Number of connections to a MongoDB process found in the\n connections  document that the\n serverStatus \ncommand generates. CURSORS_TOTAL_OPEN CURSORS_TOTAL_TIMED_OUT Number of  cursors  for a MongoDB\nprocess found in the  metrics.cursor  document\nthat the\n serverStatus \ncommand generates. EXTRA_INFO_PAGE_FAULTS GLOBAL_ACCESSES_NOT_IN_MEMORY GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN Numbers of  Memory Issues  and  Page Faults  for a MongoDB\nprocess. GLOBAL_LOCK_CURRENT_QUEUE_TOTAL GLOBAL_LOCK_CURRENT_QUEUE_READERS GLOBAL_LOCK_CURRENT_QUEUE_WRITERS Number of operations waiting on locks for the MongoDB process\nthat the\n serverStatus \ncommand generates.  Cloud Manager  computes these values based on the\ntype of storage engine. INDEX_COUNTERS_BTREE_ACCESSES INDEX_COUNTERS_BTREE_HITS INDEX_COUNTERS_BTREE_MISSES INDEX_COUNTERS_BTREE_MISS_RATIO Number of index btree operations. JOURNALING_COMMITS_IN_WRITE_LOCK JOURNALING_MB JOURNALING_WRITE_DATA_FILES_MB Number of journaling operations. MEMORY_RESIDENT MEMORY_VIRTUAL MEMORY_MAPPED COMPUTED_MEMORY Amount of memory for a MongoDB process found in the\n mem  document that the\n serverStatus  command collects. NETWORK_BYTES_IN NETWORK_BYTES_OUT NETWORK_NUM_REQUESTS Amount of throughput for MongoDB process found in the\n network  document that the\n serverStatus  command collects. OPLOG_RATE_GB_PER_HOUR OPLOG_MASTER_TIME OPLOG_MASTER_LAG_TIME_DIFF OPLOG_SLAVE_LAG_MASTER_TIME Durations and throughput of the MongoDB process'\n oplog . DB_STORAGE_TOTAL DB_DATA_SIZE_TOTAL On-disk storage space as collected from the MongoDB  dbStats \ncommand. OPCOUNTER_CMD OPCOUNTER_QUERY OPCOUNTER_UPDATE OPCOUNTER_DELETE OPCOUNTER_GETMORE OPCOUNTER_INSERT Rate of database operations on a MongoDB process since the\nprocess last started found in the  opcounters  document that the\n serverStatus  command collects. OPCOUNTER_REPL_CMD OPCOUNTER_REPL_UPDATE OPCOUNTER_REPL_DELETE OPCOUNTER_REPL_INSERT Rate of database operations on MongoDB\n secondaries  found in the\n opcountersRepl  document that the\n serverStatus \ncommand collects. DOCUMENT_METRICS_RETURNED DOCUMENT_METRICS_INSERTED DOCUMENT_METRICS_UPDATED DOCUMENT_METRICS_DELETED Average rate of documents returned, inserted, updated, or\ndeleted per second during a selected time period. OPERATIONS_SCAN_AND_ORDER Average rate for operations per second during a selected time\nperiod that perform a sort but cannot perform the sort using an\nindex. OP_EXECUTION_TIME_READS OP_EXECUTION_TIME_WRITES OP_EXECUTION_TIME_COMMANDS Average execution time in milliseconds per read, write, or\ncommand operation during a selected time period. Available to hosts running MongoDB 3.4 or later. RESTARTS_IN_LAST_HOUR Number of times the host restarted within the previous hour. SYSTEM_MEMORY_USED SYSTEM_MEMORY_FREE SYSTEM_MEMORY_AVAILABLE Physical memory usage, in bytes. SYSTEM_NETWORK_BYTES_IN SYSTEM_NETWORK_BYTES_OUT Network throughput in bytes per second. SWAP_USAGE_USED SWAP_USAGE_FREE Total amount swap space in use. QUERY_EXECUTOR_SCANNED Average rate per second to scan index items during\nqueries and query-plan evaluations found in the value of\n totalKeysExamined  from the\n explain  command. QUERY_EXECUTOR_SCANNED_OBJECTS Average rate of documents scanned per second during queries\nand query-plan evaluations found in the value of\n totalDocsExamined  from the\n explain  command. QUERY_TARGETING_SCANNED_PER_RETURNED Ratio of the number of index items scanned to the number of\ndocuments returned. QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED Ratio of the number of documents scanned to the number of\ndocuments returned.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/alerts/{ALERT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alerts/{ALERT-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "none",
                    "value": "{\n  \"alertConfigId\" : \"5b43d04087d9d6357de591aa\",\n  \"created\" : \"2019-07-26T21:12:19Z\",\n  \"currentValue\" : {\n    \"number\" : 100,\n    \"units\" : \"RAW\"\n  },\n  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n  \"humanReadable\" : \"Project: testProj\n                     Organization: testOrg\n                     Alert acknowledged by user@example.com until 2019/10/17 19:48 GMT.\n                     Comment: N/A\n                     Connections has gone below 1000\n                     mycluster.example.com:27017\n                     Created: 2019/10/17 15:26 GMT\n                     Replica Set: cluster0-shard-0\n                     Type: Primary\n                     Current Value: 100\"\n  \"groupId\" : \"535683b3794d371327b\",\n  \"hostnameAndPort\" : \"mycluster.example.com:27017\",\n  \"id\" : \"533cb4b8e4b0f1820cdabc7f\",\n  \"lastNotified\" : \"2019-07-26T21:13:48Z\",\n  \"metricName\" : \"CONNECTIONS\",\n  \"replicaSetName\" : \"mycluster\",\n  \"resolved\" : \"2019-07-26T21:13:42Z\",\n  \"status\" : \"CLOSED\",\n  \"typeName\" : \"HOST_METRIC\",\n  \"updated\" : \"2019-07-26T21:13:42Z\",\n  \"links\" : [ ... ]\n}"
                }
            ],
            "preview": "The fields in the return document depend on the alert type:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-create",
            "title": "Create a Configuration for a Third-Party Service Integration",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Necessity Description {PROJECT-ID} Required Project identifier. {INTEGRATION-TYPE} Required Third-party service identifier. Accepted values are: PAGER_DUTY SLACK NEW_RELIC OPS_GENIE VICTOR_OPS WEBHOOK PROMETHEUS Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true The request body should be a single integration view (like a  JSON (Javascript Object Notation) \nconfiguration object) for a single third-party service to add to the\nproject. Always include a  type  property equal to the third-party\nservice  INTEGRATION_TYPE . Service Configuration Options PagerDuty You must provide the following fields when you configure a\nPagerDuty integration: Property Description type PAGER_DUTY serviceKey Your Service Key. All new PagerDuty keys use their  Events API v2 .\nIf you have an Events API v1 key, you can continue to use that key\nwith  Cloud Manager . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack You must provide the following fields when you reconfigure an\nexisting Slack integration: You may also include the following fields: Slack integrations now use the OAuth2 verification method\nand must be initially configured, or updated from a legacy\nintegration, through the  MongoDB Atlas   third-party\nservice integrations page . Legacy tokens will soon no longer be supported. Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. Property Description channelName The channel name to reconfigure. Opsgenie You must provide the following fields when you configure a\nOpsgenie integration: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps You must provide the following fields when you configure a\nVictorOps integration: You may also include the following fields: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field for your Routing Key. Webhook Settings You must provide the following fields when you configure\nwebhook settings: You may also include the following fields: Property Description type WEBHOOK url Your webhook URL. Property Description secret An optional field for your webhook secret. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Microsoft Teams You must provide the following fields when you configure a\nMicrosoft Teams integration: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus You must provide the following fields when you configure a\nPrometheus integration: You may also include the following fields: Property Description type PROMETHEUS username Your Prometheus username. password Your Prometheus password. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field for the password to your PEM file. tlsPemPath An optional field for the absolute path to your PEM\nfile. The response includes a  results  array which lists all third-party\nintegration configurations for the project as objects, and a\n totalCount  of the services integrated with the project. Each third-party integration configuration object includes a  type \nproperty equal to its own integration type ( \"type\": \"PAGER_DUTY\" \nfor the PagerDuty service). Additionally, each third-party service\nconfiguration object provides details specific to that service. The\nfollowing lists the properties returned for each third-party service\nconfiguration object: Service Result PagerDuty A returned PagerDuty integration configuration object\ncontains the following fields: Property Description type PAGER_DUTY serviceKey Your Service Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack A returned Slack integration configuration object\ncontains the following fields: Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. This field may not be present with a\nlegacy Slack integration. channelName The configured Slack channel name. An empty string if\nthe value is not set. Opsgenie A returned Opsgenie integration configuration object\ncontains the following fields: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps A returned VictorOps integration configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field returned if you have a Routing Key\nconfigured. Webhook Settings A returned webhook configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type WEBHOOK url Your webhook URL. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Property Description secret An optional field returned if your webhook is\nconfigured with a secret. Microsoft Teams A returned Microsoft Teams configuration object will\ncontain the following fields: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus A returned Prometheus configuration object will\ncontain the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type PROMETHEUS username Your Prometheus username. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field returned if you have a password for your PEM file. tlsPemPath An optional field returned if you have an absolute path to your PEM file.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK\" \\\n     --data '\n     {\n       \"type\": \"SLACK\",\n       \"apiToken\": \"1234567890\",\n       \"teamName\": \"My Team\"\n     }'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK?pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"serviceKey\": \"******7890\",\n      \"type\": \"PAGER_DUTY\"\n    },\n    {\n      \"apiToken\": \"******7890\",\n      \"channelName\": \"My Channel\",\n      \"teamName\": \"My Team\",\n      \"type\": \"SLACK\"\n    }\n  ],\n  \"totalCount\": 2\n}"
                }
            ],
            "preview": "The response includes a results array which lists all third-party\nintegration configurations for the project as objects, and a\ntotalCount of the services integrated with the project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/identity-provider-return-one",
            "title": "Return One Connected Identity Provider",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return one\n identity provider  for a federated authentication\nconfiguration. You must have the  Organization Owner  role for at least one\nconnected organization in the federation configuration to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. IDP-ID string Unique 20-hexadecimal digit string that identifies the  IdP (Identity Provider) . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description acsUrl string Assertion consumer service URL to which the  IdP (Identity Provider)  sends the SAML response. associatedDomains array List that contains the configured domains from which users can log in for\nthis  IdP (Identity Provider) . associatedOrgs array List that contains the organizations from which users can log in for this\n IdP (Identity Provider) . audienceUri string Identifier for the intended audience of the  SAML Assertion . displayName string Human-readable label that identifies the  IdP (Identity Provider) . issuerUri string Identifier for the issuer of the  SAML Assertion . oktaIdpId string Unique 20-hexadecimal digit string that identifies the  IdP (Identity Provider) . pemFileInfo array List that contains the file information, including: start date, and expiration date for the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. Name Type Description certificates array List that contains the start date and expiration date for the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. fileName string Label that identifies the file containing the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. requestBinding string SAML (Security Assertion Markup Language)  Authentication Request Protocol binding used to send the\nAuthNRequest.  Cloud Manager  supports the following binding values: HTTP POST HTTP REDIRECT responseSignatureAlgorithm string Algorithm used to encrypt the  IdP (Identity Provider)  signature.  Cloud Manager  supports the\nfollowing signature algorithm values: SHA-1 SHA-256 ssoDebugEnabled boolean Flag that indicates whether the  IdP (Identity Provider)  has SSO debugging enabled. ssoUrl string URL of the receiver of the  SAML (Security Assertion Markup Language)  AuthNRequest. status string Label that indicates whether the identity provider is active. The  IdP (Identity Provider)  is\n Inactive  until you map at least one domain to the\n IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID}\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"acsUrl\" : \"https://example.mongodb.com/sso/saml2/12345678901234567890\",\n \"associatedDomains\" : [ ],\n \"associatedOrgs\" : [ ],\n \"audienceUri\" : \"https://www.example.com/saml2/service-provider/abcdefghij1234567890\",\n \"displayName\" : \"Test\",\n \"issuerUri\" : \"urn:123456789000.us.provider.com\",\n \"oktaIdpId\" : \"1234567890abcdefghij\",\n \"pemFileInfo\" : {\n     \"certificates\" : [ {\n         \"notAfter\" : \"2035-09-29T15:03:55Z\",\n         \"notBefore\" : \"2022-01-20T15:03:55Z\"\n         } ],\n     \"fileName\" : \"file.pem\"\n     },\n \"requestBinding\" : \"HTTP-POST\",\n \"responseSignatureAlgorithm\" : \"SHA-256\",\n \"ssoDebugEnabled\" : true,\n \"ssoUrl\" : \"https://123456789000.us.provider.com/samlp/12345678901234567890123456789012\",\n \"status\" : \"INACTIVE\"\n }"
                }
            ],
            "preview": "The federationSettings resource allows you to return one\nidentity provider for a federated authentication\nconfiguration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows-get-one",
            "title": "Get One Maintenance Window",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve one maintenance window with an end date in the future. You can successfully call this endpoint with any assigned role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project. MW-ID string Unique identifier of the maintenance window you want to retrieve. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description id string Unique identifier of the maintenance window. groupId string Unique identifier of the project to which this maintenance window\napplies. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was last updated. startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. alertTypeNames array of strings Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP description string Description of the maintenance window. This field is returned\nonly if you provided a description of the maintenance window.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertTypeNames\" : [ \"AGENT\", \"BACKUP\" ],\n  \"created\" : \"2015-10-22T15:04:31Z\",\n  \"description\" : \"new description\",\n  \"endDate\" : \"2015-10-23T23:30:00Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"5628faffd4c606594adaa3b2\",\n  \"startDate\" : \"2015-10-23T22:00:00Z\",\n  \"updated\" : \"2015-10-22T15:04:31Z\",\n  \"links\" : []\n}"
                }
            ],
            "preview": "Retrieve one maintenance window with an end date in the future.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups",
            "title": "Projects",
            "headings": [
                "Endpoints",
                "Manage Project Endpoints",
                "Manage Users in One Project Endpoints",
                "Manage Invitations to One Project Endpoints",
                "Manage Teams in One Project Endpoints"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Method Endpoint Description GET /groups Get All Projects for the Current User GET /groups/{PROJECT-ID} Get One Project by Its ID GET /groups/byName/{GROUP-NAME} Get One Project by Its Name GET /groups/byAgentApiKey/{AGENT-API-KEY} Get One Project by Its Agent API Key POST /groups Create One Project PATCH /groups/{PROJECT-ID}/ Update One Project DELETE /groups/{PROJECT-ID} Delete One Project Method Endpoint Description GET /groups/{PROJECT-ID}/users Get All Users in One Project POST /groups/{PROJECT-ID}/users Add Users to One Project DELETE /groups/{PROJECT-ID}/users/{USER-ID} Remove One User from One Project PUT /groups/{PROJECT-ID}/users/{USER-ID}/roles Update Project Roles for One User Method Endpoint Description POST /groups/{GROUP-ID}/invites/{INVITATION-ID} Create One Invitation DELETE /groups/{GROUP-ID}/invites/{INVITATION-ID} Delete One Invitation GET /groups/{GROUP-ID}/invites Get All Invitations GET /groups/{GROUP-ID}/invites/{INVITATION-ID} Get One Invitation PATCH /groups/{GROUP-ID}/invites/{INVITATION-ID} Update One Invitation by ID PATCH /groups/{GROUP-ID}/invites Update One Invitation Method Endpoint Description GET /groups/{PROJECT-ID}/teams Get All Teams in One Project POST /groups/{PROJECT-ID}/teams Add a Team or Teams to One Project DELETE /groups/{PROJECT-ID}/teams/{TEAM-ID} Remove the specified  team  from\nthe specified  group .",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows-get-all",
            "title": "Get All Maintenance Windows",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve all maintenance windows with end dates in the future. You can successfully call this endpoint with any assigned role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Each  result  is one maintenance window. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description id string Unique identifier of the maintenance window. groupId string Unique identifier of the project to which this maintenance window\napplies. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was last updated. startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. alertTypeNames array of strings Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP description string Description of the maintenance window. This field is returned\nonly if you provided a description of the maintenance window.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/maintenanceWindows/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/maintenanceWindows\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"results\" : [ {\n    \"alertTypeNames\" : [ \"BACKUP\" ],\n    \"created\" : \"2015-10-22T15:04:31Z\",\n    \"description\" : \"new description\",\n    \"endDate\" : \"2015-10-23T23:30:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"5628faffd4c606594adaa3b2\",\n    \"startDate\" : \"2015-10-23T22:00:00Z\",\n    \"updated\" : \"2015-10-22T15:04:31Z\",\n    \"links\" : []\n  }, {\n    \"alertTypeNames\" : [ \"AGENT\", \"BACKUP\" ],\n    \"created\" : \"2015-10-22T15:40:09Z\",\n    \"endDate\" : \"2015-10-23T23:30:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"56290359d4c606594adaafe8\",\n    \"startDate\" : \"2015-10-23T22:00:00Z\",\n    \"updated\" : \"2015-10-22T15:40:09Z\",\n    \"links\" : []\n  } ],\n  \"links\" : [],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Retrieve all maintenance windows with end dates in the future.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup-configurations",
            "title": "Backup Configurations",
            "headings": [
                "Overview",
                "Endpoints"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. A backup configuration determines the settings used to back up a sharded\ncluster or replica set. The  backupConfigs  resource lets you view and\nupdate backup configurations. In certain cases, you can also create\nbackup configurations, as described in\n Update One Backup Configuration . The\n backupConfigs  resource supports only the  GET  and  PATCH \nmethods. To update or create a backup configuration, you must issue the request\nfrom an IP address on your user account's  access list . The  backupConfigs  resource accepts\n PATCH  requests only from IP addresses in the access list. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for\n Backup Configuration . Method Endpoint Description GET /groups/{PROJECT-ID}/backupConfigs Get all backup configurations for a project. GET /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID} Get a single backup configuration by cluster ID. PATCH /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID} Update a backup configuration.",
            "code": [],
            "preview": "A backup configuration determines the settings used to back up a sharded\ncluster or replica set. The backupConfigs resource lets you view and\nupdate backup configurations. In certain cases, you can also create\nbackup configurations, as described in\nUpdate One Backup Configuration. The\nbackupConfigs resource supports only the GET and PATCH\nmethods.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/disks-get-all",
            "title": "Get all Disk Partitions",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves all disk partitions on the specified host. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project where the disk partition resides. HOST-ID string (Required.)  Unique identifier of the host where the disk partition resides. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one disk. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description partitionName string The name of the disk partition. links array Links to related subresources. All  links  arrays in\nresponses contain at least one link called  self .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/disks"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b910306f21033a/hosts/814e70da8167883b9939608a12a/disks\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"results\" : [ {\n    \"links\" : [],\n    \"partitionName\" : \"xvdf\"\n  }, ... ],\n  \"links\" : [],\n  \"totalCount\" : 4\n}"
                }
            ],
            "preview": "Retrieves all disk partitions on the specified host.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alerts",
            "title": "Alerts",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  alerts  resource allows you to retrieve and acknowledge\n alerts . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for  alerts . Method Endpoint Description GET /groups/{PROJECT-ID}/alerts Get all alerts for a project. GET /groups/{PROJECT-ID}/alerts/{ALERT-ID} Get the specified alert for a project. PATCH /groups/{PROJECT-ID}/alerts/{ALERT-ID} Acknowledge or unacknowledge an alert.",
            "code": [],
            "preview": "The alerts resource allows you to retrieve and acknowledge\nalerts.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/alerts/cloud-manager-list",
            "title": "Agent",
            "headings": [
                "Automation Configuration",
                "Backup",
                "BI Connector",
                "Billing",
                "Cluster",
                "Data Explorer Accessed",
                "Host",
                "Organization",
                "Project",
                "Replica Set",
                "Support Case",
                "Team",
                "User"
            ],
            "paragraphs": "Alert Type Alert Message Scopes Automation is down Project, Global Automation is up Project, Global Backup has too many conf call failures Project, Global Backup is down Project, Global Backup is up Project, Global Backup does not have the latest version Project, Global Backup has the latest version Project, Global Monitoring is down Project, Global Monitoring is up Project, Global Monitoring does not have the latest version Project, Global Monitoring has the latest version Project, Global New agent Project, Global Alert Type Alert Message Scopes Deployment configuration published Project, Global Alert Type Alert Message Scopes Backup has possibly inconsistent cluster snapshots Project, Global Excluded namespaces were modified for cluster Project, Global Checkpoint interval updated for cluster Project, Global Backup authentication credentials updated for cluster Project, Global Snapshot schedule updated for cluster Project, Global Cluster backup state is now Project, Global Cluster storage engine has been updated Project, Global Cluster snapshot has been deleted Project, Global Clustershot expiry has been updated. Project, Global Backup configuration is consistent Project, Global Backup has a good clustershot Project, Global Inconsistent backup configuration has been detected Project, Global Backup initial sync finished Project, Global Backup initial sync started Project, Global Backup oplog is behind Project, Global Backup oplog is current Project, Global A restore has been requested Project, Global Backup has been resynced Project, Global Backup requires a resync Project, Global Excluded namespaces were modified for replica set Project, Global Backup authentication credentials updated for replica set Project, Global A master key rotation has been requested for a replica set. Project, Global Snapshot schedule updated for replica set Project, Global Replica set backup state is now Project, Global Replica set storage engine has been updated Project, Global Snapshot has been deleted Project, Global Snapshot expiry has been updated. Project, Global Backup sync is pending Project, Global Backup sync has been initiated Project, Global Alert Type Alert Message Scopes BI Connector is down Project, Global BI Connector is up Project, Global Alert Type Alert Message Scopes Account downgraded Project, Organization, Global Account upgraded Project, Organization, Global Credit card charge has failed Project, Organization, Global Credit card was successfully charged Project, Organization, Global Invoice has been paid by check Project, Organization, Global Credit card is about to expire Project, Global Credit card is current Project, Global Credit issued Project, Organization, Global Daily amount billed ($) is above threshold Project, Global Daily amount billed ($) is below threshold Project, Global Discount applied Project, Organization, Global Invoice address added Project, Organization, Global Invoice address changed Project, Organization, Global Invoice closed Project, Organization, Global Payment forgiven Project, Organization, Global Monthly bill has exceeded the limit you set Project, Global Monthly pending invoice ($) total is below threshold Project, Global Prepaid plan added Project, Organization, Global Promo Credit issued Project, Organization, Global Refund issued Project, Organization, Global Organization has one or more pending invoices that are more than\none month old Organization Invoice has been paid by wire transfer Project, Organization, Global Alert Type Alert Message Scopes Cluster is missing an active mongos Project, Global Cluster has an active mongos Project, Global Shard added Project, Global Shard removed Project, Global Disk Backup Alert Type Alert Message Scopes User performed a Data Explorer read-only operation Project, Global User performed a Data Explorer CRUD operation, which modifies data Project, Global Alert Type Alert Message Scopes A cloud provider snapshot restore has been requested Organization Alert Type Alert Message Scopes Host added Project, Global Host added to replica set Project, Global Attempted to kill operation Project, Global Attempted to kill session Project, Global Database profiling disabled Project, Global Database profiling enabled Project, Global Host removed Project, Global Host disabled Project, Global Host disabled and hidden Project, Global Host hidden Project, Global Host is down Project, Global Host has been downgraded Project, Global Host is exposed to the public Internet Project, Global Host IP address changed Project, Global Host is locked down Project, Global Host is now primary Project, Global Host is now secondary Project, Global Host is now a standalone Project, Global Host has recovered Project, Global Host is recovering Project, Global Host has restarted Project, Global Host experienced a rollback Project, Global Authentication or   is disabled. Project, Global Host's SSL certificate is current Project, Global Host's SSL certificate will expire within 30 days Project, Global Host is up Project, Global Host has been upgraded Project, Global Inside metric threshold Project, Global Host is new Project, Global Outside metric threshold Project, Global Host paused Project, Global Host removed from replica set Project, Global Host resumed Project, Global Host undeleted Project, Global Host does not have the latest version Project, Global Host version changed Project, Global Host has the latest version Project, Global Alert Type Alert Message Scopes Organization users have two-factor authentication enabled Organization, Global Organization has been reactivated Organization, Global Organization has been suspended by an administrator Organization, Global API key has been added Organization API key has been deleted Organization Credit card is about to expire Organization, Global Credit card was added Organization, Global Credit card is current Organization, Global Credit card information was updated Organization, Global Amount billed yesterday is above the limit you set Organization, Global Daily amount billed is below the limit you set Organization, Global MongoDB Production Support Employees restricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization (You may grant a 24 hour bypass to the access\nrestriction at the Atlas cluster level) Organization, Global MongoDB Production Support Employees unrestricted from accessing\nAtlas backend infrastructure for any Atlas cluster in this\norganization Organization, Global Current bill for any single project is above the limit you set Organization, Global Project charges ($) are below threshold Organization, Global Current bill for organization is over the limit you set Organization, Global Current bill is below the limit you set Organization, Global Organization has been locked due to unpaid charges for more than\n%d days Organization IP Access List for Public API Not Required Organization, Global Require IP Access List for Public API Enabled Organization, Global Organization has been renamed Organization, Global Organization has been suspended due to unpaid charges for more\nthan %d days Organization Organization has been granted temporary access Organization, Global Two-factor Authentication Optional Organization, Global Two-factor Authentication Required Organization, Global Organization users do not have two-factor authentication enabled Organization, Global Alert Type Alert Message Scopes Users have two-factor authentication enabled Project, Global Service suspended due to unpaid invoice(s) more than 30 days old Project, Global Service restored because all invoices are paid in full Project, Global Users do not have two-factor authentication enabled Project, Global Alert Type Alert Message Scopes Replica set has an updated configuration Project, Global Replica set has enough healthy members Project, Global Replica set member added Project, Global Replica set member removed Project, Global Replica set elected multiple primaries Project, Global Replica set has no primary Project, Global Replica set elected one primary Project, Global Replica set elected a new primary Project, Global Replica set has too few healthy members Project, Global Replica set has too many election events Project, Global Replica set has too many unhealthy members Project, Global Alert Type Alert Message Scopes Case created. Project, Global Alert Type Alert Message Scopes Team added to project Organization, Project, Global Team created Organization, Global Team deleted Organization, Global Team name changed Organization, Global Team removed from project Organization, Project, Global Team roles modified in project Organization, Project, Global Team updated Organization, Global User added to team Organization, Global Alert Type Alert Message Scopes User was invited to project Project, Global User was invited to organization Organization, Global Request to join project was approved Project, Global Request to join project was denied Project, Global User joined the project Project, Global User joined the organization Organization, Global User joined the team Organization, Global User left the project Project, Global User left the organization Organization, Global User left the team Organization, Global User requested to join project Project, Global User had their role changed Project, Organization, Global",
            "code": [],
            "preview": "Disk Backup",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/feature-control-policies",
            "title": "Feature Control Policies",
            "headings": [
                "Required Roles",
                "Endpoints"
            ],
            "paragraphs": "Feature Control Policies allow you to enable or disable certain MongoDB\nfeatures based on your site-specific needs. Use these resources to view\nand update Feature Control Policies via the API. Base URL:  https://cloud.mongodb.com/api/public/v1.0 To use these endpoints, grant the following roles to an Project\n API Key : Role Possible Action Project Owner Retrieve or update a feature control policy. Any authenticated user Retrieve the list of available policies for a project. Method Endpoint Description GET /groups/{PROJECT-ID}/controlledFeature Retrieve the Feature Control Policies for one Project. PUT /groups/{PROJECT-ID}/controlledFeature Update the Feature Control Policies for one Project. GET /groups/availablePolicies Retrieve the available Feature Control Policies.",
            "code": [],
            "preview": "Feature Control Policies allow you to enable or disable certain MongoDB\nfeatures based on your site-specific needs. Use these resources to view\nand update Feature Control Policies via the API.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alerts-acknowledge-alert",
            "title": "Acknowledge One Alert",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier for the Project in which this alert is set. ALERT-ID string Required Unique identifier for the Alert. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Field Type Necessity Description string Conditional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  until which the alert should be acknowledged. To acknowledge an alert \"forever\", set the field value to a\nlarge number of years in the future. Recommend setting to 100\nyears in the future. To unacknowledge an acknowledged alert, remove this parameter\nfrom your request. string Optional Text description of the reason for this acknowledgement. Cloud Manager  displays the comment next to the message that the\nalert has been acknowledged. The fields in the return document depend on the alert type: Name Type Description string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  until which the alert has been acknowledged. Cloud Manager  returns this value if the alert has been acknowledged. string Comment left by the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. string Username of the user who acknowledged the alert. Cloud Manager  returns this value if the alert has been acknowledged. alertConfigId string Unique identifier for the alert configuration that triggered\nthis alert. clusterId string Unique identifier for the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" clusterName string Name of the cluster to which this alert applies. Cloud Manager  returns this value if\n \"eventTypeName\" : \"SHARDED_CLUSTER\" created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was opened. currentValue object Current value of the metric that triggered the alert. Cloud Manager  returns this value if\n \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . number Value of the metric. string Units for the value. Value depends on the type of metric. Cloud Manager  can return: A metric that measures memory consumption would have a byte\nmeasurement, while a metric that measures time would have a\ntime unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS eventTypeName string Name of the event that triggered the alert. Accepted values are: Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_DOWNGRADED HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_NOW_PRIMARY HOST_NOW_SECONDARY HOST_NOW_STANDALONE HOST_RECOVERED HOST_RECOVERING HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE HOST_UP HOST_UPGRADED INSIDE_METRIC_THRESHOLD NEW_HOST OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND VERSION_CHANGED VERSION_CURRENT ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP groupId string Unique identifier of the group for which this alert was opened. hostId string unique identifier for the host to which the metric pertains. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET hostnameAndPort string Hostname and port of each host to which the alert applies. This\ncan be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6) \naddress. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET id string Unique identifier for the alert. lastNotified string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last notification was sent for this\nalert.  Cloud Manager  returns this value if notifications have been sent. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the\nthreshold. Cloud Manager  returns this value if  \"eventTypeName\"  was set to\n OUTSIDE_METRIC_THRESHOLD . For possible values, see  Measurement Types for Alerts . replicaSetName string Name of the replica set. Cloud Manager  returns this value if  \"eventTypeName\"  was set to one\nof the following: BACKUP HOST_DOWN OUTSIDE_METRIC_THRESHOLD REPLICA_SET resolved string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was closed. Cloud Manager  returns this value if  \"status\" : \"CLOSED\" . status string Current state of the alert.  Cloud Manager  can return one of the\nfollowing: TRACKING The alert condition exists but has not persisted beyond the\ndefined notification delay. For details, see\n Request Query Parameters . OPEN CLOSED CANCELLED sourceTypeName string Type of host being backed up when  \"eventTypeName\" :\n\"BACKUP\" .  Cloud Manager  can return one of the following: REPLICA_SET SHARDED_CLUSTER CONFIG_SERVER tags string array Identifying labels set for this alert. typeName string Deprecated field. |mms| ignores it. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was last updated.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/alerts/{ALERT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alerts/{ALERT-CONFIG-ID}\"\n     --data '\n       {\n         \"acknowledgedUntil\": \"2016-04-15T00:00:00-0400\",\n         \"acknowledgementComment\": \"This is normal. Please ignore.\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"{ALERT-CONFIG-ID}\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n  \"status\" : \"OPEN\",\n  \"acknowledgedUntil\" : \"2014-04-15T04:00:00Z\",\n  \"acknowledgementComment\" : \"This is normal. Please ignore.\",\n  \"acknowledgingUsername\" : \"someuser@example.com\",\n  \"created\" : \"2014-04-03T20:28:14Z\",\n  \"updated\" : \"2014-04-03T20:33:14Z\",\n  \"lastNotified\" : \"2014-04-03T20:33:23Z\",\n  \"metricName\": \"ASSERTS_REGULAR\",\n  \"currentValue\" : {\n    \"number\" : 0.0,\n    \"units\" : \"RAW\"\n  },\n  \"links\" : []\n}"
                }
            ],
            "preview": "The fields in the return document depend on the alert type:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/events",
            "title": "Events",
            "headings": [
                "Endpoints",
                "Organization Event Endpoints",
                "Project Event Endpoints"
            ],
            "paragraphs": "The  events  resource allows you to retrieve events. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for events. Only users with the  Organization Member  role can request\nthese endpoints. Method Endpoint Description GET /orgs/{ORG-ID}/events Get all events for an organization. GET /orgs/{ORG-ID}/events/{EVENT-ID} Get one specific event for an organization. Only users with the  Project Read Only  role can request\nthese endpoints. Method Endpoint Description GET /groups/{PROJECT-ID}/events Get all events for a project. GET /groups/{PROJECT-ID}/events/{EVENT-ID} Get one specific event for a project.",
            "code": [],
            "preview": "The events resource allows you to retrieve events.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agents",
            "title": "Agents",
            "headings": [
                "Endpoints",
                "Agents",
                "Agents API Keys"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for Agents: Method Endpoint Description GET /groups/{PROJECT-ID}/agents Return list of links to Agent resources in one  Cloud Manager \n project . GET /groups/{PROJECT-ID}/agents/{TYPE} Return list of Agents of a specified type in one  Cloud Manager \n project . The following endpoints are available for Agent API Keys: Method Endpoint Description POST /groups/{PROJECT-ID}/agentapikeys Create one Agent API Key in one  Cloud Manager   project . GET /groups/{PROJECT-ID}/agentapikeys Return list of all Agent API Keys in one  Cloud Manager   project . DELETE /groups/{PROJECT-ID}/agentapikeys/{API-AGENT-KEY-ID} Remove one Agent API Key in one  Cloud Manager   project .",
            "code": [],
            "preview": "The following endpoints are available for Agents:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-api-keys",
            "title": "Organization Programmatic API Keys",
            "headings": [
                "Permissions",
                "Endpoints"
            ],
            "paragraphs": "Use the  /orgs/{ORG-ID}/apiKeys  resource to view, create, or delete\n Programmatic |api| Keys  within the specified\n Cloud Manager   organization . Base URL:  https://cloud.mongodb.com/api/public/v1.0 To use these endpoints, grant the following roles to an Project  API (Application Programming Interface)  Key or user in your Organization: Role Possible Action Any role in the Organization Retrieve Organization  API (Application Programming Interface)  Keys Organization Owner  or\n Organization User Admin Create, update, or delete a Organization  API (Application Programming Interface)  Key Method Endpoint Description GET /orgs/{ORG-ID}/apiKeys Get all  API (Application Programming Interface)  Keys for the organization identified with\n {ORG-ID} . GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID} Get one  API (Application Programming Interface)  Key for the organization identified with\n {ORG-ID} . POST /orgs/{ORG-ID}/apiKeys Create an  API (Application Programming Interface)  Key for the organization identified with\n {ORG-ID} . PATCH /orgs/{ORG-ID}/apiKeys/{API-KEY-ID} Update one  API (Application Programming Interface)  Key for the organization identified with\n {ORG-ID} . DELETE /orgs/{ORG-ID}/apiKeys/{API-KEY-ID} Delete the  API (Application Programming Interface)  Key with ID  {API-KEY-ID} .",
            "code": [],
            "preview": "Use the /orgs/{ORG-ID}/apiKeys resource to view, create, or delete\nProgrammatic |api| Keys within the specified\nCloud Manager organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows-create-one",
            "title": "Create One Maintenance Window",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Create one maintenance window.  Cloud Manager  turns off alert notifications for\ncertain alert types for a period of time you specify to allow\nmaintenance to occur. You can successfully call this endpoint with any of the following\nassigned roles: Organization Owner Project Owner Project Monitoring Admin Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description alertTypeNames array of strings Required Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP startDate string Required Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Required Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. description string Optional Description of the maintenance window. Name Type Description id string Unique identifier of the maintenance window. groupId string Unique identifier of the project to which this maintenance window\napplies. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was last updated. startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. alertTypeNames array of strings Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP description string Description of the maintenance window. This field is returned\nonly if you provided a description of the maintenance window.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/maintenanceWindows/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/maintenanceWindows\" \\\n     --data '\n       {\n         \"startDate\" :\"2015-10-23T22:00:00Z\",\n         \"endDate\" : \"2015-10-23T23:30:00Z\",\n         \"alertTypeNames\" : [ \"HOST\", \"REPLICA_SET\" ],\n         \"description\" : \"new description\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertTypeNames\" : [ \"REPLICA_SET\" ],\n  \"created\" : \"2015-10-22T20:49:35Z\",\n  \"description\" : \"my description\",\n  \"endDate\" : \"2015-10-23T23:30:00Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"56294bdfd4c643eef5176b73\",\n  \"startDate\" : \"2015-10-23T22:00:00Z\",\n  \"updated\" : \"2015-10-22T20:49:35Z\",\n  \"links\" : []\n}"
                }
            ],
            "preview": "Create one maintenance window. Cloud Manager turns off alert notifications for\ncertain alert types for a period of time you specify to allow\nmaintenance to occur.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/access-list-add-entries",
            "title": "Add Entries to an Access List",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description USER-ID string (Required.)  Unique identifier of the current user. To retrieve the ID of the\ncurrent user, see\n Get All Users in One Project . The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true The request body must be an array of access list entities, even if there\nis only one. The only field that you need to specify for each request\nobject is the  IP-ADDRESS . If an IP address is already in the access list, it will be ignored. If you specify a single IP address with the  /32  subnet mask,  Cloud Manager \ndoes not store the  /32 , as the  /32  does not change the address. An address of  12.34.56.78  is the same as  12.34.56.78/32 . Parameter Type Description ipAddress string (Required.)  The IP address or  CIDR (Classless Inter-Domain Routing)  block that you want to add\nto the specified user's access list. Each  result  is one access list. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description cidrBlock string A CIDR-notated range of IP addresses. created date The date this IP address was added to the access list. ipAddress string An IP address in the access list. lastUsed date The date of the most recent request that originated from this IP\naddress. Note that this field is  only  updated when a resource that is\nprotected by the access list is accessed. lastUsedAddress string The address from which the last call to the API was issued. count number The total number of requests that originated from this IP address.\nNote that this field is  only  updated when a resource that is\nprotected by the access list is accessed. links array Links to related sub-resources. All links arrays in responses\ncontain at least one link called  self . The relations between\nURLs are explained in the  Web Linking Specification .",
            "code": [
                {
                    "lang": "none",
                    "value": "POST /users/{USER-ID}/accessList"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList\" --data '\n       [\n         {\n           \"ipAddress\" : \"192.0.1.15\",\n           \"comment\" : \"IP address for Application Server A\"\n         },\n         {\n           \"cidrBlock\" : \"192.0.2.0/24\",\n           \"comment\" : \"CIDR block for Application Server B - D\"\n         }\n       ]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"totalCount\" : 3,\n  \"results\" : [ {\n    \"cidrBlock\" : \"12.34.56.78/32\",\n    \"ipAddress\" : \"12.34.56.78\",\n    \"created\" : \"2014-04-23T16:17:44Z\",\n    \"lastUsed\" : \"2016-08-17T19:34:05Z\",\n    \"lastUsedAddress\" : \"12.34.56.78\",\n    \"count\" : 0,\n    \"links\" : []\n  }, {\n    \"cidrBlock\" : \"76.54.32.10/32\",\n    \"ipAddress\" : \"76.54.32.10\",\n    \"created\" : \"2016-08-17T19:34:05Z\",\n    \"count\" : 0,\n    \"links\" : []\n  }, {\n    \"cidrBlock\" : \"2.3.4.5/32\",\n    \"ipAddress\" : \"2.3.4.5\",\n    \"created\" : \"2016-08-17T19:34:05Z\",\n    \"count\" : 0,\n    \"links\" : []\n  } ],\n  \"links\" : []\n}"
                }
            ],
            "preview": "Each result is one access list.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-get-matchers-field-names",
            "title": "Get All Alert Configuration Matchers Field Names",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get all field names that the  matchers.fieldName  parameter accepts\nwhen you  create \nor  update \nan Alert Configuration. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You can successfully call this endpoint with any assigned role. This endpoint doesn't use HTTP request path parameters. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. The response returns an array of strings that the  matchers.fieldName \nparameter accepts when you  create  or\n update \nan Alert Configuration.",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /alertConfigs/matchers/fieldNames"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/alertConfigs/matchers/fieldNames\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "[\n    \"TYPE_NAME\",\n    \"HOSTNAME\",\n    \"PORT\",\n    \"HOSTNAME_AND_PORT\",\n    \"REPLICA_SET_NAME\",\n    \"SHARD_NAME\",\n    \"CLUSTER_NAME\"\n]"
                }
            ],
            "preview": "Get all field names that the matchers.fieldName parameter accepts\nwhen you create\nor update\nan Alert Configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-mapping-return-one",
            "title": "Return One Connected Organization",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return one\n connected organization  for a\nfederated authentication configuration. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint does not use HTTP request body parameters. Name Type Description domainAllowList array List that contains the approved domains from which organization\nusers can log in. domainRestrictionEnabled boolean Flag that indicates whether domain restriction is enabled for\nthe connected organization. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false . identityProviderId string Unique 20-hexadecimal digit string that identifies the identity\nprovider associated with the connected organization. orgId string Unique 24-hexadecimal digit string that identifies the\nconnected organization. postAuthRoleGrants array List that contains the default  roles \ngranted to users who authenticate through the  IdP (Identity Provider)  in a\nconnected organization. roleMappings array List that contains the role mappings configured in this\norganization. userConflicts array List that contains the usernames that don't match any domain on\nthe allowed list. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://<OpsManagerHost>:<Port>/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"domainAllowList\": [],\n \"domainRestrictionEnabled\": false,\n \"identityProviderId\": null,\n \"orgId\": \"5f86fb11e0079069c9ec3132\",\n \"postAuthRoleGrants\": [],\n \"roleMappings\": [],\n \"userConflicts\": null\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return one\nconnected organization for a\nfederated authentication configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/clusters",
            "title": "Clusters",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "MongoDB supports two types of clusters:  replica sets  and  sharded clusters .\nA sharded cluster can contain replica sets within it: each shard can be a\nreplica set and the config server can also be a replica set. These\nrelationships are reflected in the way  Cloud Manager  models clusters, and it\nmight lead to unexpected results from the  clusters  resource. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Consider a deployment with one sharded cluster containing four\nshards, and each shard is a three-node replica set. In this scenario, the  clusters  resource will return five\nentities: However, if each shard in this fictitious deployment were a\nstandalone  mongod  instead of a replica set, then the\n clusters  resource returns only one entity representing the\nsharded cluster. One that represents the sharded cluster, and Four that represent the replica sets (shards). Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  clusters . Method Endpoint Description GET /clusters Get details for all clusters in all projects available to the\nprogrammatic key making the request. GET /groups/{PROJECT-ID}/clusters Retrieve details for all clusters in one project. GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID} Retrieve details for one cluster in one project. PATCH /groups/{PROJECT-ID}/clusters/{CLUSTER-ID} Update one cluster in one project.",
            "code": [],
            "preview": "MongoDB supports two types of clusters: replica sets and sharded clusters.\nA sharded cluster can contain replica sets within it: each shard can be a\nreplica set and the config server can also be a replica set. These\nrelationships are reflected in the way Cloud Manager models clusters, and it\nmight lead to unexpected results from the clusters resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-update-config",
            "title": "Update an Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 To update just the enabled/disabled state for the alert\nconfiguration, see\n Enable/Disable Alert Configuration \ninstead. All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. ALERT-CONFIG-ID string Unique identifier for this alert configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description enabled boolean If omitted, the configuration is disabled. string The type of event that triggers an alert. Values include: To review the full list of events that generate alerts and their\ndescriptions, see  Alert Types . Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ADD_HOST_AUDIT ADD_HOST_TO_REPLICA_SET_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DELETE_HOST_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_RECOVERING HOST_RESTARTED HOST_ROLLBACK HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT REMOVE_HOST_FROM_REPLICA_SET_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY PRIMARY_ELECTED TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_GROUP JOINED_ORG JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP USER_ROLES_CHANGED_AUDIT matchers.fieldName string Name of the field in the target object to match on. All other types of alerts do not support matchers. Host alerts support these fields: HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME TYPE_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME matchers.operator string Operator to test the field's value. Accepted values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string Value to test with the specified operator. If  matchers.fieldName  is set to  TYPE_NAME , you can match on\nthe following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS matchers object array Rules to apply when matching an object against this alert\nconfiguration. Only entities that match  all  these rules\nare checked for an alert condition. You can filter using the  matchers  array only when the\n eventTypeName  specifies an event for a host, replica\nset, or sharded cluster. metricThreshold.metricName string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. metricThreshold.mode string Set to  AVERAGE  to compute the average of this metric. metricThreshold.operator string Operator to apply when checking the current metric value\nagainst the threshold value. Accepted values are: GREATER_THAN LESS_THAN metricThreshold.threshold number Threshold value outside of which an alert is triggered. metricThreshold.units string Units for the threshold value. Depends on the type of\nmetric. Accepted values are: A metric that measures memory consumption would have a\nbyte measurement, while a metric that measures time would\nhave a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold object Threshold that will cause an alert to be triggered.\nRequired if  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . notifications.apiToken string Slack API token or Bot token.\nRequired if  \"notifications.typeName\" : \"SLACK\" .\nIf the token later becomes invalid,  Cloud Manager  sends an email to\nthe Project owner and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.channelName string Slack channel name.\nRequired if  \"notifications.typeName\" : \"SLACK\" . notifications.datadogApiKey string DataDog API Key. Found in the DataDog dashboard.\nRequired if  \"notifications.typeName\" : \"DATADOG\" . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.delayMin number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. notifications.emailAddress string Email address to which to send notification.\nRequired if  \"notifications.typeName\" : \"EMAIL\" . notifications.emailEnabled boolean Determines if email notifications should be sent.\nRequired if: \"notifications.typeName\" : \"GROUP\" \"notifications.typeName\" : \"USER\" notifications.intervalMin number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. notifications.webhookSecret string A value used to authenticate with the Webhook that accepts\nand forwards the notification. You can explicitly declare a\nsecret only in a request that has both: You can configure a  webhookSecret  for a default\n webhookURL  only either on the\n Integrations \npage, or with the  Integrations API . To explicitly declare a  webhookURL  without a\n webhookSecret , omit this field. A  notifications.typeName  of  WEBHOOK An explicitly declared  notifications.webhookURL After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. notifications.webhookUrl string URL (Uniform Resource Locator)  for the webhook that triggers this notification. If you\ndo not explicitly declare a  webhookUrl , your request will\nuse the default  webhookUrl  set either on the\n Integrations \npage, or with the  Integrations API . After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. notifications.microsoftTeamsWebhookUrl string Microsoft Teams channel incoming webhook URL.\nRequired if  \"notifications.typeName\" : \"MICROSOFT_TEAMS\" . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. notifications.mobileNumber string Mobile number to send SMS messages to.\nRequired if  \"notifications.typeName\" : \"SMS\" . notifications.notificationToken string A HipChat API token.\nRequired if  \"notifications.typeName\" : \"HIP_CHAT\" .\nIf the token later becomes invalid,  Cloud Manager  sends an email to\nthe Project owner and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.role string One or more  project roles  that receive\nthe configured alert. Accepted values include: If you include this field,  Cloud Manager  sends alerts only to\nusers assigned the roles you specify in the array. If you\nomit this field,  Cloud Manager  sends alerts to users assigned\nany role. Configurable for  GROUP  notifications types. Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin notifications.roomName string HipChat room name.\nRequired if  \"notifications.typeName\" : \"HIP_CHAT\" . notifications.serviceKey string PagerDuty integration key.\nRequired if  \"notifications.typeName\" : \"PAGER_DUTY\" . notifications.smsEnabled boolean Flag indicating SMS notifications must be sent.\nRequired if: \"notifications.typeName\" : \"GROUP\" \"notifications.typeName\" : \"USER\" notifications.teamId string Unique identifier of a team. notifications.typeName string Type of alert notification. Accepted values are: EMAIL GROUP  (Project) HIPCHAT ORG PAGER_DUTY SLACK SMS TEAM USER WEBHOOK MICROSOFT_TEAMS notifications.username string Name of  a Cloud Manager  user to which to send notifications.\nSpecify a user in the Project that owns the alert\nconfiguration.\nRequired if  \"notifications.typeName\" : \"USER\" . object array Notifications to send when an alert condition is\ndetected. threshold.operator string Operator to apply when checking the current metric value\nagainst the threshold value. GREATER_THAN LESS_THAN threshold.threshold number Threshold value outside of which an alert is triggered. threshold object Threshold that will cause an alert to be triggered.\nRequired if: \"eventTypeName\" : \"TOO_FEW_HEALTHY_MEMBERS\" \"eventTypeName\" : TOO_MANY_UNHEALTHY_MEMBERS The response includes the alert configuration details: Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was created. enabled boolean Flag indicating this alert configuration enabled. eventTypeName string Type of event that triggers an alert. groupId string Unique identifier of the Project that owns this alert\nconfiguration. id string Unique identifier of the alert configuration. links array of objects One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . matchers array of objects Rules to apply when matching an object against this alert\nconfiguration. string Name of the field in the target object that you wanted this\nconfiguration to match. string Comparison operator to apply when checking the current metric\nvalue against  matcher.[n].value . string Value to match or exceed using  matchers.[n].operator . metricThreshold object Value and means of comparison that triggers an alert. string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. string Average value of this metric. string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value of  metricThreshold.metricName  that, when exceeded,\ntriggers an alert. string Units of capacity or time that define the scope of the\n metricThreshold.threshold . notifications array of objects One or more targets for  Cloud Manager  to send notifications when\nan alert condition is detected. string Slack API token token.  Cloud Manager  returns this value if you\nset  notifications.[n].typeName  to  SLACK . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Slack channel name.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SLACK . string DataDog API Key.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  DATADOG . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. string Email address to which to send notification.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  EMAIL . boolean Flag indicating email notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  ORG ,  GROUP , or  USER . number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. string Microsoft Teams channel incoming webhook URL.\n Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  MICROSOFT_TEAMS . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. string Mobile number to which alert notifications are sent.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SMS . string HipChat API token.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  HIP_CHAT . If the token later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string OpsGenie Alert API \nkey.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  OPS_GENIE . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Region that indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n OPS_GENIE . array of strings Cloud Manager  role in current Project or Organization.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n ORG  or  GROUP . string HipChat room name.  Cloud Manager  returns this value if\n \"notifications.typeName\" : \"HIP_CHAT . string PagerDuty service key.  Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  PAGER_DUTY . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . boolean Flag indicating text notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName  to\n ORG ,  GROUP , or  USER . string Unique identifier of the team that receives this\nnotification. string Label for the team that receives this notification. string Means by which you want  Cloud Manager  to send you notification of an\nalert. string Name of  a Cloud Manager  user to which to send notifications.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  USER . string VictorOps  API (Application Programming Interface)  key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string VictorOps routing key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string A value used to authenticate with the Webhook that accepts\nand forwards the notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookSecret  to a non-empty\nstring You set a default  webhookSecret  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. string URL (Uniform Resource Locator)  for the webhook that triggers this notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookURL  to a non-empty string You set a default  webhookUrl  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. threshold object Threshold that triggers an alert.  Cloud Manager  returns this value\nif  eventTypeName  is any value other than\n OUTSIDE_METRIC_THRESHOLD . string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value that, when exceeded,  Cloud Manager  triggers an alert. string Units of capacity or time that define the scope of the\n threshold.threshold . typeName string This field is deprecated and is ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was last\nupdated.",
            "code": [
                {
                    "lang": "none",
                    "value": "PUT /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}\" \\\n     --data '\n       {\n         \"eventTypeName\" : \"RESYNC_REQUIRED\",\n         \"enabled\" : true,\n         \"matchers\" : [ {\n           \"fieldName\" : \"REPLICA_SET_NAME\",\n           \"operator\" : \"EQUALS\",\n           \"value\" : \"rs1\"\n         } ],\n         \"notifications\" : [ {\n           \"typeName\" : \"EMAIL\",\n           \"emailAddress\" : \"sos@example.com\",\n           \"intervalMin\" : 60,\n           \"delayMin\" : 5\n         }, {\n           \"typeName\" : \"GROUP\",\n           \"intervalMin\" : 120,\n           \"delayMin\" : 60,\n           \"smsEnabled\" : true,\n           \"emailEnabled\" : false\n         } ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2014-04-23T14:52:29Z\",\n  \"enabled\" : false,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{ALERT-CONFIG-ID}\",\n  \"links\" : [],\n  \"matchers\" : [ {\n    \"fieldName\" : \"REPLICA_SET_NAME\",\n    \"operator\" : \"EQUALS\",\n    \"value\" : \"rs1\"\n  } ],\n  \"notifications\" : [ {\n    \"delayMin\" : 5,\n    \"emailAddress\" : \"sos@example.com\",\n    \"intervalMin\" : 60,\n    \"typeName\" : \"EMAIL\"\n  }, {\n    \"delayMin\" : 60,\n    \"emailEnabled\" : false,\n    \"intervalMin\" : 120,\n    \"smsEnabled\" : true,\n    \"typeName\" : \"GROUP\"\n  } ],\n  \"updated\" : \"2014-04-23T14:56:25Z\"\n}"
                }
            ],
            "preview": "The response includes the alert configuration details:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-discovery",
            "title": "Return the Latest Targets for Prometheus",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/prometheus/v1.0 Name Type Necessity Description {PROJECT-ID} string Required Unique 24-hexadecimal digit string that identifies your project. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. The response includes an array of your latest  targets  from\nwhich to scrape and a document containing their  labels . Name Type Description targets array Each  host  and  port  from which to scrape metrics. labels document Document that contains the label and value that differentiates\nyour metrics. labels.group_id string Unique hexadecimal digit string that identifies the project. labels.group_name string Human-readable label that identifies the project. labels.org_id string Unique hexadecimal digit string that identifies the organization.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/discovery"
                },
                {
                    "lang": "sh",
                    "value": "# Sets the `Authorization` header on every scrape request with the\n# configured username and password.\n# The URL that Prometheus fetches the targets from.\n\ncurl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/prometheus/v1.0/groups/{PROJECT-ID}/discovery\""
                },
                {
                    "lang": "json",
                    "value": "[\n  {\n      \"targets\":[\n        \"mongodbd-prometheus:9216\"\n      ],\n      \"labels\":{\n        \"group_id\":\"{PROJECT-ID}\",\n        \"group_name\":\"CM-Testing\",\n        \"org_id\":\"{ORG-ID}\"\n      }\n  }\n]"
                }
            ],
            "preview": "The response includes an array of your latest targets from\nwhich to scrape and a document containing their labels.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/access-list-delete-entry",
            "title": "Delete One Entry from One Access List",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 You cannot remove your current IP address from the access list. Parameter Type Description USER-ID string (Required.)  Unique identifier of the current user. To retrieve the ID of the\ncurrent user, see\n Get All Users in One Project . ACCESS-LIST-ENTRY string The IP or  CIDR (Classless Inter-Domain Routing)  address.\nIf the entry includes a subnet mask, such as  192.0.2.0/24 ,\nuse the URL-encoded value  %2F  for the forward slash  / . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /users/{USER-ID}/accessList/{ACCESS-LIST-ENTRY}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList/192.0.2.0%2F24\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows",
            "title": "Maintenance Windows",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  maintenanceWindows  resource turns off alert notifications for\nspecified alert types for a period of time to allow maintenance to\noccur. The following endpoints are available for  maintenanceWindows . Method Endpoint Description GET /groups/{PROJECT-ID}/maintenanceWindows/ Retrieve all maintenance windows with end dates in the future. GET /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID} Retrieve one maintenance window with an end date in the future. POST /groups/{PROJECT-ID}/maintenanceWindows Create one maintenance window. PATCH /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID} Update one maintenance window with an end date in the future. DELETE /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID} Delete one maintenance window with an end date in the future.",
            "code": [],
            "preview": "The maintenanceWindows resource turns off alert notifications for\nspecified alert types for a period of time to allow maintenance to\noccur.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measurements",
            "title": "Measurements",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Retrieves measurements the Monitoring and Automations have\ncollected for your MongoDB processes, databases, and disks.\nMonitorings collect process and database measurements using\nMongoDB diagnostic commands, including\n serverStatus  and\n dbStats . Automations\ncollect measurements for hosts that run managed  mongod \nand  mongos  processes. Requests to this resource are subject to rate limiting. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for measurements. Method Endpoint Description GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements Get Host, Process, and System Measurements GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/disks/{PARTITION-NAME}/measurements Get Disk Partition Measurements GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases/{DATABASE-NAME}/measurements Get Database Measurements GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements Get a List of Measurement Types All of the given endpoints return specific measurement types.\nTo learn about what  Cloud Manager  measures, see  Measurement Types .",
            "code": [],
            "preview": "Retrieves measurements the Monitoring and Automations have\ncollected for your MongoDB processes, databases, and disks.\nMonitorings collect process and database measurements using\nMongoDB diagnostic commands, including\nserverStatus and\ndbStats. Automations\ncollect measurements for hosts that run managed mongod\nand mongos processes.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-delete",
            "title": "Delete a Configuration for a Third-Party Service Integration",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Necessity Description {PROJECT-ID} Required Project identifier. {INTEGRATION-TYPE} Required Third-party service identifier. Accepted\nvalues are: PAGER_DUTY SLACK NEW_RELIC OPS_GENIE VICTOR_OPS WEBHOOK PROMETHEUS Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/PAGER_DUTY\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/disk-get-one",
            "title": "Get a Disk Partition",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves a disk partition. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project where the disk partition resides. HOST-ID string (Required.)  Unique identifier of the host where the disk partition resides. PARTITION-NAME string (Required.)  The name of the disk partition that you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description partitionName string The name of the disk partition. links array Links to related subresources. All  links  arrays in\nresponses contain at least one link called  self .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/disks/{PARTITION-NAME}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/533c5895b910306f21033a/hosts/814e70da8167883b9939608a12a/disks/xvdf\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"partitionName\" : \"xvdf\"\n}"
                }
            ],
            "preview": "Retrieves a disk partition.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations",
            "title": "Alert Configurations",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for  alert\nconfiguration . An  alert\nconfiguration  defines the\nconditions that trigger an alert and the methods of notification. Method Endpoint Description GET /api/atlas/v1.0/alertConfigs/matchers/fieldNames Get all field names that the  matchers.fieldName  parameter\naccepts when you\n create \nor  update \nan Alert Configuration. GET /groups/{PROJECT-ID}/alertConfigs Get all alert configurations for a project. POST /groups/{PROJECT-ID}/alertConfigs Create an alert configuration GET /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID} Get an alert configuration. PUT /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID} Update an alert configuration. PATCH /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID} Enable/disable an alert configuration. DELETE /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID} Delete an alert configuration. GET /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}/alerts Get all open alerts for an alert configuration.",
            "code": [],
            "preview": "The following lists the endpoints available for alert\nconfiguration. An alert\nconfiguration defines the\nconditions that trigger an alert and the methods of notification.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations",
            "title": "Organizations",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  orgs  resource provides access to return, update, or remove\n MongoDB Cloud Manager   organizations . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /orgs Return the list of all organizations to which the authenticated\nuser belongs. GET /orgs/{ORG-ID} Return information about the organization associated with\n {ORG-ID} . GET /orgs/{ORG-ID}/groups Return all projects in the organization associated with\n {ORG-ID} . GET /orgs/{ORG-ID}/users Return all users in the specified organization. DELETE /orgs/{ORG-ID}/users/{USER-ID} Remove the user associated with  {USER-ID}  in the organization associated with  {ORG-ID} . PUT /orgs/{ORG-ID}/users/{USER-ID}/roles Update organization roles for one user. PATCH /orgs/{ORG-ID} Update one organization. DELETE /orgs/{ORG-ID} Remove the organization associated with  {ORG-ID} . POST /orgs/{ORG-ID}/invites/{INVITATION-ID} Create one invitation. DELETE /orgs/{ORG-ID}/invites/{INVITATION-ID} Remove one invitation. GET /orgs/{ORG-ID}/invites Return the list of all invitations. GET /orgs/{ORG-ID}/invites/{INVITATION-ID} Return one invitation. PATCH /orgs/{ORG-ID}/invites/{INVITATION-ID} Update one invitation by ID. PATCH /orgs/{ORG-ID}/invites Update one invitation.",
            "code": [],
            "preview": "The orgs resource provides access to return, update, or remove\nMongoDB Cloud Manager organizations.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-get-federation-settings",
            "title": "Return the Federation Configuration for One Organization",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return the\n federated authentication configuration  for one organization. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description ORG-ID string Unique 24-hexadecimal digit string that identifies the\norganization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint does not use HTTP request body parameters. Name Type Description federatedDomains array of strings List that contains the domains associated with the organization's\nidentity provider. hasRoleMappings boolean Flag that indicates whether this organization has role mappings\nconfigured. To learn more about role mapping, see\n Manage Mapping  Cloud Manager  Roles to IdP Groups . id string Unique 24-hexadecimal digit string that identifies this\nfederation. identityProviderId string Unique 20-hexadecimal digit string that identifies the identity\nprovider connected to this organization. identityProviderStatus string Value that indicates whether the identity provider is active.\n Cloud Manager  returns  ACTIVE  if the identity provider is active\nand  INACTIVE  if the identity provider is inactive.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/federationSettings"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/federationSettings\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"federatedDomains\": [\n    \"example.com\"\n  ],\n  \"hasRoleMappings\": false,\n  \"id\": \"5e8cc670a16506712e0b1e95\",\n  \"identityProviderId\": \"0oa8i0grsgbwDiIyw453\",\n  \"identityProviderStatus\": \"INACTIVE\"\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return the\nfederated authentication configuration for one organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots",
            "title": "Snapshots",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "This resource allows you to view metadata of, change the expiration date\nfor, and remove existing snapshots. A snapshot is a complete copy of the\ndata in a  mongod  instance at a point in time. You can retrieve snapshot metadata for the whole  cluster  or  replica set , or for a single  config server  in\na cluster. To restore the snapshot data, you must create a\n restore job . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for snapshots. Method Endpoint Description GET /groups/{groupId}/clusters/{clusterId}/snapshots Get All Snapshots for a Cluster GET /groups/{groupId}/clusters/{clusterId}/snapshots/{snapshotId} Get one snapshot for a cluster. PATCH /groups/{groupId}/clusters/{clusterId}/snapshots/{snapshotId} Change expiration date for one snapshot. DELETE /groups/{groupId}/clusters/{clusterId}/snapshots/{snapshotId} Remove one snapshot. To delete a snapshot, you must issue the request from an IP\naddress on your user account's\n access list . As of MongoDB 3.4, mirrored config server deployments (also known\nas  SCCC (Sync Cluster Connection Config) ) are no longer\nsupported. The following API methods work with\n SCCC (Sync Cluster Connection Config)  config servers only.\nTo learn how to convert your config servers from\n SCCC (Sync Cluster Connection Config)  to a replica set\n(also known as  CSRS (Config Server Replica Set) ), see\n Upgrade Config Servers to Replica Set \nin the MongoDB Server Manual. Method Endpoint Description GET /groups/{groupId}/hosts/{hostId}/snapshots Get all snapshots for a  config server . GET /groups/{groupId}/hosts/{hostId}/snapshots/{snapshotId} Get one snapshot for a config server.",
            "code": [],
            "preview": "This resource allows you to view metadata of, change the expiration date\nfor, and remove existing snapshots. A snapshot is a complete copy of the\ndata in a mongod instance at a point in time.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/role-mapping-return-one",
            "title": "Return One Role Mapping",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return one\n role mapping  from the specified\norganization in the specified federation. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. ROLE-MAPPING-ID string Unique 24-hexadecimal digit string that identifies the role\nmapping. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint does not use HTTP request body parameters. Name Type Description externalGroupName string Unique human-readable label that identifies the identity\nprovider group associated with the role mapping. id string Unique 24-hexadecimal digit string that identifies the role\nmapping. roleAssignments array List that contains the unique identifiers for the projects and\norganizations associated with each role. roleAssignments.groupId string Unique 24-hexadecimal digit string that identifies the project\nin which the role applies. roleAssignments.orgId string Unique 24-hexadecimal digit string that identifies the\norganization in which the role applies. roleAssignments.role string Human readable label that identifies the role.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://<OpsManagerHost>:<Port>/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID}\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"externalGroupName\": \"autocomplete-highlight\",\n \"id\": \"61d88e15e6cc044270a36fce\",\n \"roleAssignments\": [\n     {\n         \"groupId\": null,\n         \"orgId\": \"5f86fb11e0079069c9ec3132\",\n         \"role\": \"ORG_OWNER\"\n     },\n     {\n         \"groupId\": \"5f86fb2ff9c4e56d39502559\",\n         \"orgId\": null,\n         \"role\": \"GROUP_OWNER\"\n     }\n ]\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return one\nrole mapping from the specified\norganization in the specified federation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-get-all",
            "title": "Get All Configurations for Third-Party Service Integrations",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Necessity Description {PROJECT-ID} Required Project identifier. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. The response includes a  results  array which lists all third-party\nintegration configurations for the project as objects, and a\n totalCount  of the services integrated with the project. Each third-party integration configuration object includes a  type \nproperty equal to its own integration type (e.g.  \"type\":\n\"PAGER_DUTY\"  for the PagerDuty service). Additionally, each\nthird-party service configuration object provides details specific to\nthat service. The following lists the properties returned for each\nthird-party service configuration object: Service Result PagerDuty A returned PagerDuty integration configuration object\ncontains the following fields: Property Description type PAGER_DUTY serviceKey Your Service Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack A returned Slack integration configuration object\ncontains the following fields: Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. This field may not be present with a\nlegacy Slack integration. channelName The configured Slack channel name. An empty string if\nthe value is not set. Opsgenie A returned Opsgenie integration configuration object\ncontains the following fields: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps A returned VictorOps integration configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field returned if you have a Routing Key\nconfigured. Webhook Settings A returned webhook configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type WEBHOOK url Your webhook URL. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Property Description secret An optional field returned if your webhook is\nconfigured with a secret. Microsoft Teams A returned Microsoft Teams configuration object will\ncontain the following fields: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus A returned Prometheus configuration object will\ncontain the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type PROMETHEUS username Your Prometheus username. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field returned if you have a password for your PEM file. tlsPemPath An optional field returned if you have an absolute path to your PEM file.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /api/public/v1.0/groups/{GROUP-ID}/integrations"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations?pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"serviceKey\": \"******7890\",\n      \"type\": \"PAGER_DUTY\"\n    },\n    {\n      \"apiToken\": \"******7890\",\n      \"channelName\": \"My Channel\",\n      \"teamName\": \"My Team\",\n      \"type\": \"SLACK\"\n    },\n  ],\n  \"totalCount\": 2\n }"
                }
            ],
            "preview": "The response includes a results array which lists all third-party\nintegration configurations for the project as objects, and a\ntotalCount of the services integrated with the project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-get-one",
            "title": "Get the Configuration of a Third-Party Service Integration",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Necessity Description {PROJECT-ID} Required Project identifier. {INTEGRATION-TYPE} Required Third-party service identifier. Accepted\nvalues are: PAGER_DUTY SLACK NEW_RELIC OPS_GENIE VICTOR_OPS WEBHOOK PROMETHEUS Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. The response returns the specified third-party integration\nconfiguration object if that service has been configured. If it has not\nbeen configured, the response will return an\n INTEGRATION_NOT_CONFIGURED  error. Each third-party integration configuration object includes a  type \nproperty equal to its own integration type (like  \"type\":\n\"PAGER_DUTY\" ). Additionally, each third-party service configuration\nobject provides details specific to that service. The following lists\nthe properties returned for each third-party service configuration\nobject: Service Result PagerDuty A returned PagerDuty integration configuration object\ncontains the following fields: Property Description type PAGER_DUTY serviceKey Your Service Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack A returned Slack integration configuration object\ncontains the following fields: Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. This field may not be present with a\nlegacy Slack integration. channelName The configured Slack channel name. An empty string if\nthe value is not set. Opsgenie A returned Opsgenie integration configuration object\ncontains the following fields: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps A returned VictorOps integration configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field returned if you have a Routing Key\nconfigured. Webhook Settings A returned webhook configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type WEBHOOK url Your webhook URL. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Property Description secret An optional field returned if your webhook is\nconfigured with a secret. Microsoft Teams A returned Microsoft Teams configuration object will\ncontain the following fields: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus A returned Prometheus configuration object will\ncontain the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type PROMETHEUS username Your Prometheus username. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field returned if you have a password for your PEM file. tlsPemPath An optional field returned if you have an absolute path to your PEM file.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/PAGER_DUTY\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"serviceKey\": \"******7890\",\n  \"type\": \"PAGER_DUTY\"\n}"
                }
            ],
            "preview": "The response returns the specified third-party integration\nconfiguration object if that service has been configured. If it has not\nbeen configured, the response will return an\nINTEGRATION_NOT_CONFIGURED error.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/performance-advisor",
            "title": "Performance Advisor",
            "headings": [],
            "paragraphs": "Use the following resources to retrieve existing and suggested indexes\nfor a deployment, as well as the namespaces on which slow queries were\nrun and the queries that were slow.  For more information, see\n Monitor and Improve Slow Queries . To view field values in a sample query in the Performance\nAdvisor, you must be a user with at least one of the following\nproject roles: Users without one of these roles see redacted data rather than the\nfield values. For more information about slow queries, see  Monitor and Improve Slow Queries . Project Owner Project Data Access Admin Project Data Access Read/Write Project Data Access Read Only Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/namespaces Retrieves the namespaces for all collections or specified\ncollections experiencing slow queries on a specified host. GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/slowQueryLogs Get slow queries as determined by the\n Performance Advisor . GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/suggestedIndexes Get suggested indexes as determined by the\n Performance Advisor .",
            "code": [],
            "preview": "Use the following resources to retrieve existing and suggested indexes\nfor a deployment, as well as the namespaces on which slow queries were\nrun and the queries that were slow.  For more information, see\nMonitor and Improve Slow Queries.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/disks",
            "title": "Disks",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Retrieves the disks and disk partitions on which MongoDB runs. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  hosts . Method Endpoint Description GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/disks Retrieves all disk partitions on the specified host. GET /groups/{PROJECT-ID}/hosts/HOST-ID/disks/{PARTITION-NAME} Retrieves a single disk parition.",
            "code": [],
            "preview": "Retrieves the disks and disk partitions on which MongoDB runs.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/federation-delete-one",
            "title": "Remove One Federation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to remove one federation\nand all associated data, including the identity providers and domains\nthat the federation describes. Requests to this resource fail if there is more than one connected\norganization in the federation. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role in the last\nconnected organization to call this endpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /federationSettings/{FEDERATION-SETTINGS-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}\""
                }
            ],
            "preview": "The federationSettings resource allows you to remove one federation\nand all associated data, including the identity providers and domains\nthat the federation describes.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collection",
            "title": "Log Collection Jobs",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "You can use the  Cloud Manager   API (Application Programming Interface)  to download  Cloud Manager  deployment logs. Once a\nlog collection request has been made,  Cloud Manager  downloads the logs in a\nbackground job. Use the following endpoints to create, modify, and\nretrieve  Cloud Manager  log collection jobs. To use the Log Collection resources, you must be  a Cloud Manager  user with\nthe  Global Monitoring Admin  project role. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for the log collection jobs\nresource. Method Endpoint Description GET /groups/{PROJECT-ID}/logCollectionJobs Retrieves all available log collection jobs in the specified\nproject. GET /groups/{PROJECT-ID}/logCollectionJobs/{JOB-ID} Retrieves a single log collection job as specified by the\n jobId . GET /groups/{PROJECT-ID}/logCollectionJobs/{JOB-ID}/download Downloads the logs from a single log collection job. POST /groups/{PROJECT-ID}/logCollectionJobs Create a new log collection job for a given resource. PATCH /groups/{PROJECT-ID}/logCollectionJobs/{JOB-ID} Extend the expiry date of a specified log collection job. PUT /groups/{PROJECT-ID}/logCollectionJobs/{JOB-ID}/retry Retry a failed log collection job. DELETE /groups/{PROJECT-ID}/logCollectionJobs/{JOB-ID} Delete a specified log collection job.",
            "code": [],
            "preview": "You can use the Cloud Manager API (Application Programming Interface) to download Cloud Manager deployment logs. Once a\nlog collection request has been made, Cloud Manager downloads the logs in a\nbackground job. Use the following endpoints to create, modify, and\nretrieve Cloud Manager log collection jobs.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config",
            "title": "Automation Configuration Resource",
            "headings": [
                "Additional Copies of the Automation Configuration",
                "Automation Configuration Parameters",
                "Endpoints"
            ],
            "paragraphs": "The API provides the  automationConfig  resource to let you manage your project\u2019s\n automation configuration .\nThe configuration defines the various MongoDB clusters, replica sets\nand standalones in the deployment and defines how each process runs.\nAutomation builds the deployment according to the goals specified. Each\nMongoDB Agent using Automation is responsible for the MongoDB processes\nthat run on its host. The configuration also specifies settings for the\ndeployment's MongoDB Agents. When a running MongoDB process matches its defined configuration, the\nprocess is in \"goal state\". When all processes on all hosts are in goal\nstate, the deployment itself is in goal state. To update the automation configuration, you must issue the request from\nan IP address on your user account's\n access list . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. The MongoDB Agent stores a copy of the configuration in the\n mms-cluster-config-backup.json  file. Automation stores the most\nrecent version of configuration  with which Automation was able to\nreach goal state . If an Agent is not able to process configuration\nchanges, it continues to store an older version of the configuration. The Automation Configuration contains a large amount of information\nabout your  Cloud Manager  instance, agents, clusters, and security. With this\ncomplexity, these parameters can be found as their own\n reference page . To review an example of a complete automation configuration file, see\n Example Automation Configuration . The following lists the endpoints available for the automation\nconfiguration resource. Method Endpoint Description GET /groups/{PROJECT-ID}/automationConfig Retrieve the current automation configuration PUT /groups/{PROJECT-ID}/automationConfig Replace the current automation configuration POST /groups/{PROJECT-ID}/automationConfig/updateAgentVersions Update the MongoDB Agent GET /groups/{PROJECT-ID}/automationConfig/backupAgentConfig Retrieve the current backup log settings PUT /groups/{PROJECT-ID}/automationConfig/backupAgentConfig Update the current backup log settings GET /groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig Retrieve the current monitoring log settings PUT /groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig Update the current monitoring log settings",
            "code": [],
            "preview": "The API provides the automationConfig resource to let you manage your project\u2019s\nautomation configuration.\nThe configuration defines the various MongoDB clusters, replica sets\nand standalones in the deployment and defines how each process runs.\nAutomation builds the deployment according to the goals specified. Each\nMongoDB Agent using Automation is responsible for the MongoDB processes\nthat run on its host. The configuration also specifies settings for the\ndeployment's MongoDB Agents.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agents-get-all",
            "title": "Get Links to Agent Resources for a Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example",
                "Request",
                "Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get links to Monitoring, Backup, and Automation Agent resources for a project. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\nAgent API Key. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Relation Description self Me http://mms.mongodb.com/group The project the agents belong to http://mms.mongodb.com/monitoringAgents Links to all Monitoring Agents. http://mms.mongodb.com/backupAgents Links to all Backup Agents. http://mms.mongodb.com/automationAgents Links to all Automation Agents.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/agents"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\":[\n    {\n      \"href\":\"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents\",\n      \"rel\":\"self\"\n    },\n    {\n      \"href\":\"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\":\"http://mms.mongodb.com/group\"\n    },\n    {\n      \"href\":\"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents/MONITORING\",\n      \"rel\":\"http://mms.mongodb.com/monitoringAgents\"\n    },\n    {\n      \"href\":\"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents/BACKUP\",\n      \"rel\":\"http://mms.mongodb.com/backupAgents\"\n    },\n    {\n      \"href\":\"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents/AUTOMATION\",\n      \"rel\":\"http://mms.mongodb.com/automationAgents\"\n    }\n  ]\n}"
                }
            ],
            "preview": "Get links to Monitoring, Backup, and Automation Agent resources for a project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invoices",
            "title": "Invoices",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Use the  invoices  resource to view invoices for a  Cloud Manager \n organization . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /api/public/v1.0/orgs/{ORG-ID}/invoices/ Get all invoices for the  Cloud Manager  organization identified by\n {ORG-ID} . GET /api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID} Get the invoice identified by  {INVOICE-ID}  for the  Cloud Manager \norganization identified by  {ORG-ID} . GET /api/public/v1.0/orgs/{ORG-ID}/invoices/pending Get the pending invoice for the  Cloud Manager  organization\nidentified by  {ORG-ID} .",
            "code": [],
            "preview": "Use the invoices resource to view invoices for a Cloud Manager\norganization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings-update",
            "title": "Update a Configuration for a Third-Party Service Integration",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Necessity Description {PROJECT-ID} Required Project identifier. {INTEGRATION-TYPE} Required Third-party service identifier. Accepted values are: PAGER_DUTY SLACK NEW_RELIC OPS_GENIE VICTOR_OPS WEBHOOK PROMETHEUS Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true The request body should be a single integration view (like a  JSON (Javascript Object Notation) \nconfiguration object) for a single third-party service. If a\nconfiguration of the same  type  already exists, the request will\nupdate the changed fields. If a configuration of the same  type  does\nnot exist, it will be added. Always include a  type  property equal\nto the third-party service  INTEGRATION_TYPE . Service Configuration Options PagerDuty You must provide the following fields when you configure a\nPagerDuty integration: Property Description type PAGER_DUTY serviceKey Your Service Key. All new PagerDuty keys use their  Events API v2 .\nIf you have an Events API v1 key, you can continue to use that key\nwith  Cloud Manager . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack You must provide the following fields when you reconfigure an\nexisting Slack integration: You may also include the following fields: Slack integrations now use the OAuth2 verification method\nand must be initially configured, or updated from a legacy\nintegration, through the  MongoDB Atlas   third-party\nservice integrations page . Legacy tokens will soon no longer be supported. Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. Property Description channelName The channel name to reconfigure. Opsgenie You must provide the following fields when you configure a\nOpsgenie integration: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps You must provide the following fields when you configure a\nVictorOps integration: You may also include the following fields: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field for your Routing Key. Webhook Settings You must provide the following fields when you configure\nwebhook settings: You may also include the following fields: Property Description type WEBHOOK url Your webhook URL. Property Description secret An optional field for your webhook secret. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Microsoft Teams You must provide the following fields when you configure a\nMicrosoft Teams integration: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus You must provide the following fields when you configure a\nPrometheus integration: You may also include the following fields: Property Description type PROMETHEUS username Your Prometheus username. password Your Prometheus password. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field for the password to your PEM file. tlsPemPath An optional field for the absolute path to your PEM\nfile. The response includes a  results  array which lists all third-party\nintegration configurations for the project as objects, and a\n totalCount  of the services integrated with the project. Each third-party integration configuration object includes a  type \nproperty equal to its own integration type ( \"type\":\n\"PAGER_DUTY\"  for the PagerDuty service). Additionally, each\nthird-party service configuration object provides details specific to\nthat service. The following lists the properties returned for each\nthird-party service configuration object: Service Result PagerDuty A returned PagerDuty integration configuration object\ncontains the following fields: Property Description type PAGER_DUTY serviceKey Your Service Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Slack A returned Slack integration configuration object\ncontains the following fields: Property Description type SLACK apiToken Your API Token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . teamName Your team name. This field may not be present with a\nlegacy Slack integration. channelName The configured Slack channel name. An empty string if\nthe value is not set. Opsgenie A returned Opsgenie integration configuration object\ncontains the following fields: Property Description type OPS_GENIE apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . region Indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use, either  US  or\n EU . Opsgenie defaults to  US . VictorOps A returned VictorOps integration configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type VICTOR_OPS apiKey Your API Key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . Property Description routingKey An optional field returned if you have a Routing Key\nconfigured. Webhook Settings A returned webhook configuration object\ncontains the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type WEBHOOK url Your webhook URL. After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. Property Description secret An optional field returned if your webhook is\nconfigured with a secret. Microsoft Teams A returned Microsoft Teams configuration object will\ncontain the following fields: Property Description type MICROSOFT_TEAMS microsoftTeamsWebhookUrl Your Microsoft Teams incoming webhook URL. When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. Prometheus A returned Prometheus configuration object will\ncontain the following fields: The configuration object may also contain the following\nfields, depending on your configuration: Property Description type PROMETHEUS username Your Prometheus username. listenAddress The IP address and port your Prometheus instance will reach out to. serviceDiscovery Indicates which service discovery method is\nused, either  file  or  http . scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . enabled Whether your cluster has Prometheus enabled. Property Description tlsPemPassword An optional field returned if you have a password for your PEM file. tlsPemPath An optional field returned if you have an absolute path to your PEM file.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK\" \\\n     --data '\n       {\n         \"type\": \"SLACK\",\n         \"apiToken\": \"1234567890\",\n         \"teamName\": \"My Team\"\n       }'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/integrations/SLACK?pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"serviceKey\": \"******7890\",\n      \"type\": \"PAGER_DUTY\"\n    },\n    {\n      \"apiToken\": \"******7890\",\n      \"channelName\": \"My Channel\",\n      \"teamName\": \"My Team\",\n      \"type\": \"SLACK\"\n    }\n  ],\n  \"totalCount\": 2\n }"
                }
            ],
            "preview": "The response includes a results array which lists all third-party\nintegration configurations for the project as objects, and a\ntotalCount of the services integrated with the project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/role-mapping-delete-one",
            "title": "Remove One Role Mapping",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return one\n role mapping \nfrom the specified organization in the specified federation. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. ROLE-MAPPING-ID string Unique 24-hexadecimal digit string that identifies the role\nmapping. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint does not use HTTP request body parameters. This endpoint does not return a response body. This endpoint does not return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://<OpsManagerHost>:<Port>/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID}\""
                }
            ],
            "preview": "The federationSettings resource allows you to return one\nrole mapping\nfrom the specified organization in the specified federation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/project-api-keys",
            "title": "Organization API Keys on Projects",
            "headings": [
                "Permissions",
                "Endpoints"
            ],
            "paragraphs": "Use the following resources to view, create and assign, or unassign\nOrganization  programmatic API Keys  within\nthe specified  Cloud Manager   project . Base URL:  https://cloud.mongodb.com/api/public/v1.0 To use these endpoints, grant the following roles to an Project  API (Application Programming Interface) \nKey or user in your Organization: Role Possible Action Any role in the Project Retrieve Project  API (Application Programming Interface)  Keys Project Owner  or  Project User Admin Create, update, or delete a Project  API (Application Programming Interface)  Key Project Owner  or  Project User Admin Assign or unassign an Organization  API (Application Programming Interface)  Key to a Project Method Endpoint Description GET /groups/{PROJECT-ID}/apiKeys Get All Organization  API (Application Programming Interface)  Keys Assigned to One Project with ID\n {GROUP_ID} . PATCH /groups/{PROJECT-ID}/apiKeys/{API-KEY-ID} Modify Roles of One Organization  API (Application Programming Interface)  Key with ID\n {API-KEY-ID}  assigned to One Project with ID\n {PROJECT-ID} . POST /groups/{PROJECT-ID}/apiKeys Create and Assign One Organization  API (Application Programming Interface)  Key with ID\n {API-KEY-ID}  to One Project with ID  {PROJECT-ID} . PATCH /groups/{PROJECT-ID}/apiKeys/{API-KEY-ID} Assign One Existing Organization  API (Application Programming Interface)  Key with ID\n {API-KEY-ID}  to One Project with ID  {PROJECT-ID} . DELETE /groups/{PROJECT-ID}/apiKeys/{API-KEY-ID} Unassign One Organization  API (Application Programming Interface)  Key with ID  {API-KEY-ID} \nfrom One Project.",
            "code": [],
            "preview": "Use the following resources to view, create and assign, or unassign\nOrganization programmatic API Keys within\nthe specified Cloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/database-get-by-name",
            "title": "Get a Database by Name",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Retrieve a single database by name. Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project that owns this MongoDB process. HOST-ID string (Required.)  Unique identifier of the host running the MongoDB process. DATABASE-NAME string (Required.)  The name of the MongoDB database. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description databaseName string The name of the database. links array Links to the group that the database belongs to, the MongoDB host\nrunning the database, and database measurements. The relations between\nURLs are explained in the  Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases/{DATABASE-NAME}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/644d5895b911306f21034b/hosts/gd5b59198ec14bd142494/databases/test\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"databaseName\" : \"test\",\n  \"links\" : []\n}"
                }
            ],
            "preview": "Retrieve a single database by name.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/federation-configuration",
            "title": "Federated Authentication Configuration",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Use the following endpoints to return, add, edit, and remove\nfederation-related features such as  role mappings  and  connected organization  configurations. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /orgs/{ORG-ID}/federationSettings Return the federated authentication configuration for one\norganization. GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs Return all connected organizations for a federated\nauthentication configuration. GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID} Return one connected organization for a federated authentication\nconfiguration. PATCH /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID} Update one connected organization for a federated authentication\nconfiguration. DELETE /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID} Remove one organization from the specified federation. GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings Return all role mappings from the specified organization in the\nspecified federation. GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID} Return one role mapping from the specified organization in the\nspecified federation. GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders Return all identity providers for a federated authentication\nconfiguration. GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID} Return one identity provider for a federated authentication\nconfiguration. GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID}/metadata.xml Return the contents of the SAML metadata XML file for the specified\nidentity provider in the specified federation. DELETE /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings/{ROLE-MAPPING-ID} Remove one role mapping from the specified organization in the\nspecified federation. DELETE /federationSettings/{FEDERATION-SETTINGS-ID} Remove one federation and all associated data, including the\nidentity providers and domains that the federation describes.",
            "code": [],
            "preview": "Use the following endpoints to return, add, edit, and remove\nfederation-related features such as role mappings and connected organization configurations.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-mapping-remove-one",
            "title": "Remove One Organization from One Federation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to remove one\n connected organization  from the\nspecified federation. Requests to this endpoint fail if you attempt to remove the last\norganization from the specified federation. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}\""
                }
            ],
            "preview": "The federationSettings resource allows you to remove one\nconnected organization from the\nspecified federation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/third-party-integration-settings",
            "title": "Third-Party Integration Settings",
            "headings": [
                "Cloud Manager Endpoints",
                "Prometheus Endpoints"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. The following endpoints are available for managing\n third-party service integrations . Each project can have only one configuration per\n {INTEGRATION-TYPE} . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /groups/{GROUP-ID}/integrations Get all third-party integration configurations for the project\nassociated with  {GROUP-ID} . GET /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE} Get a specific third-party integration configuration for\n {INTEGRATION-TYPE}  for the project associated with\n {GROUP-ID} . POST /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE} Add a new third-party integration configuration for\n {INTEGRATION-TYPE}  to the project associated with\n {GROUP-ID} . PUT /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE} Replace the third-party integration configuration for\n {INTEGRATION-TYPE}  with a new configuration, or add a new\nconfiguration if there is no configuration for\n {INTEGRATION-TYPE} , to the project associated with\n {GROUP-ID} . DELETE /groups/{GROUP-ID}/integrations/{INTEGRATION-TYPE} Remove the third-party integration configuration for\n {INTEGRATION-TYPE}  from the project associated with\n {GROUP-ID} . The following endpoints are available for managing the\nPrometheus integration. Base URL:  https://cloud.mongodb.com/prometheus/v1.0 Method Endpoint Description GET /groups/{GROUP-ID}/discovery Returns the latest targets for the project associated with\n {GROUP-ID} .",
            "code": [],
            "preview": "The following endpoints are available for managing\nthird-party service integrations.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-delete-config",
            "title": "Delete an Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. ALERT-CONFIG-ID string Unique identifier for this alert configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --include \\\n     --request DELETE 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}'"
                }
            ],
            "preview": "All request path parameters are required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/databases",
            "title": "Databases",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  databases . Method Endpoint Description GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases Retrieve all MongodDB processes running on the specified host. GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases/{DATABASE-NAME} Retrieve a single MongoDB process from the specified host by name.",
            "code": [],
            "preview": "The following endpoints are available for databases.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-get-open-alerts",
            "title": "Get Open Alerts for Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. ALERT-CONFIG-ID string Unique identifier for this alert configuration. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one alert configuration. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Alert details vary. An alert may only include a subset of these\nelements. Name Type Description acknowledgedUntil string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when through which the alert has been\nacknowledged. Populated if the alert has been acknowledged. acknowledgingUsername string Username of the user who acknowledged the alert. Populated if\nthe alert has been acknowledged. acknowledgementComment string Comment user who acknowledged the alert left. Populated\nif the alert has been acknowledged. alertConfigId string Unique identifier of the alert configuration that triggered\nthis alert. clusterId string Unique identifier of the cluster to which this alert applies.\nPopulated for  BACKUP ,  REPLICA_SET , and  CLUSTER \nalerts. clusterName string Name the cluster to which this alert applies.\nPopulated for  BACKUP ,  REPLICA_SET , and  CLUSTER \nalerts. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was opened. currentValue object Current value of the metric that triggered the alert. Populated\nfor  HOST_METRIC  alerts. currentValue.number number Value of the metric. currentValue.units string Units for the value. Depends on the type of metric. A metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Accepted values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS eventTypeName string Name of the event that triggered the alert. Values include: To review the full list of events that generate alerts and their\ndescriptions, see  Alert Types . Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ADD_HOST_AUDIT ADD_HOST_TO_REPLICA_SET_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DELETE_HOST_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_RECOVERING HOST_RESTARTED HOST_ROLLBACK HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT REMOVE_HOST_FROM_REPLICA_SET_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY PRIMARY_ELECTED TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_GROUP JOINED_ORG JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP USER_ROLES_CHANGED_AUDIT groupId string Unique identifier of the project that this alert was opened for. hostId string Unique identifier of the host to which the metric pertains.\nPopulated for  HOST ,  HOST_METRIC , and  REPLICA_SET \nalerts. hostnameAndPort string Hostname and port of each host to which the alert applies.\nPopulated for  HOST ,  HOST_METRIC , and  REPLICA_SET \nalerts. id string Unique identifier for the alert. lastNotified string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last notification was sent for this\nalert. Populated if notifications have been sent. metricName string Name of the measurement whose value went outside the threshold.\nPopulated if  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . For accepted values, see  Measurement Types for Alerts \non this page. replicaSetName string Name of the replica set.\nPopulated for  HOST ,  HOST_METRIC ,  BACKUP , and\n REPLICA_SET  alerts. resolved string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was closed. Populated if\n \"status\" : \"CLOSED\" . sourceTypeName string For  BACKUP  alerts, the type of server being backed\nup. Accepted values are: REPLICA_SET SHARDED_CLUSTER CONFIG_SERVER status string Current state of the alert. Accepted values are: TRACKING The alert condition exists but has not persisted beyond the defined\nnotification delay. For details, see  Request Query Parameters . OPEN CLOSED CANCELLED typeName string This field is deprecated and will be ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the alert was last updated.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}/alerts"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}/alerts\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"results\" : [ {\n    \"acknowledgedUntil\" : \"2014-05-01T14:00:00Z\",\n    \"alertConfigId\":\"{ALERT-CONFIG-ID}\",\n    \"created\" : \"2014-04-22T15:57:13.562Z\",\n    \"currentValue\" : {\n      \"number\" : 0.0,\n      \"units\" : \"RAW\"\n    },\n    \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"53569159300495c7702ee3a3\",\n    \"lastNotified\" : \"2014-04-22T15:57:24.126Z\",\n    \"links\" : [],\n    \"metricName\" : \"ASSERT_REGULAR\",\n    \"status\" : \"OPEN\",\n    \"updated\" : \"2014-04-22T20:14:11.388Z\"\n  }, {\n    \"alertConfigId\":\"{ALERT-CONFIG-ID}\",\n    \"created\" : \"2014-04-22T19:59:10.657Z\",\n    \"currentValue\" : {\n      \"number\" : 0.0,\n      \"units\" : \"RAW\"\n    },\n    \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"5356ca0e300495c770333340\",\n    \"lastNotified\" : \"2014-04-22T20:14:19.313Z\",\n    \"links\" : [],\n    \"metricName\" : \"ASSERT_REGULAR\",\n    \"status\" : \"OPEN\",\n    \"updated\" : \"2014-04-22T20:14:11.388Z\"\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Each result is one alert configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-mappings-return-all",
            "title": "Return All Connected Organizations",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return all\n connected organizations  for a\nfederated authentication configuration. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role for at least one\nconnected organization in the federation configuration to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint does not use HTTP request body parameters. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array of objects One object for each item detailed in the\n results Embedded Document  section. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . totalCount integer Count of the total number of items in the result set. It may\nbe greater than the number of objects in the  results \narray if the entire result set is paginated. Each document in the  result  array contains the federated\nauthentication configuration for each connected organization. Name Type Description domainAllowList array List that contains the approved domains from which organization\nusers can log in. domainRestrictionEnabled boolean Flag that indicates whether domain restriction is enabled for\nthe connected organization. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false . identityProviderId string Unique 20-hexadecimal digit string that identifies the identity\nprovider associated with the connected organization. orgId string Unique 24-hexadecimal digit string that identifies the\nconnected organization. postAuthRoleGrants array List that contains the default  roles \ngranted to users who authenticate through the  IdP (Identity Provider)  in a\nconnected organization. roleMappings array List that contains the role mappings configured in this\norganization. userConflicts array List that contains the usernames that don't match any domain on\nthe allowed list. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://<OpsManagerHost>:<Port>/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n     {\n         \"href\": \"https://<OpsManagerHost>:<Port>/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs?pageNum=1&itemsPerPage=100\",\n         \"rel\": \"self\"\n     }\n ],\n \"results\": [\n     {\n         \"domainAllowList\": [],\n         \"domainRestrictionEnabled\": false,\n         \"identityProviderId\": null,\n         \"orgId\": \"5f86fb11e0079069c9ec3132\",\n         \"postAuthRoleGrants\": [],\n         \"roleMappings\": [],\n         \"userConflicts\": null\n     }\n ],\n \"totalCount\": 1\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return all\nconnected organizations for a\nfederated authentication configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restore-jobs",
            "title": "Restore Jobs",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  restoreJobs  resource allows you to manage restore jobs. A\nrestore job is essentially one request to retrieve one of your existing\nsnapshots to restore one  mongod  to one previous state. To initiate\none restore job, you must issue the request from an IP address on your\nuser account's  access list . Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for restore jobs. Method Endpoint Description GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs Get All Restore Jobs for One Cluster GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?batchid={BATCH-ID} Get All Restore Jobs for One Batch for One Cluster GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID} Get One Restore Job for One Cluster POST /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs Create One Restore Job for One Cluster As of MongoDB 3.4, mirrored config server deployments (also known as\n SCCC (Sync Cluster Connection Config) ) are no longer\nsupported. The following API methods work with  SCCC (Sync\nCluster Connection Config)  config servers only. To learn how to\nconvert your config servers from  SCCC (Sync Cluster Connection\nConfig)  to a replica set (also known as  CSRS (Config Server\nReplica Set) ), see  Upgrade Config Servers to Replica Set  in the MongoDB\nServer Manual. Method Endpoint Description GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs Get All Restore Jobs for One Legacy Mirrored Config Server GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID} Get One Restore Job for One Legacy Mirrored Config Server POST /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs Create One Restore Job for One Legacy Mirrored Config Server",
            "code": [],
            "preview": "The restoreJobs resource allows you to manage restore jobs. A\nrestore job is essentially one request to retrieve one of your existing\nsnapshots to restore one mongod to one previous state. To initiate\none restore job, you must issue the request from an IP address on your\nuser account's access list.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-get-config",
            "title": "Get an Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. ALERT-CONFIG-ID string Unique identifier for this alert configuration. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was created. enabled boolean Flag indicating this alert configuration enabled. eventTypeName string Type of event that triggers an alert. groupId string Unique identifier of the Project that owns this alert\nconfiguration. id string Unique identifier of the alert configuration. links array of objects One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . matchers array of objects Rules to apply when matching an object against this alert\nconfiguration. string Name of the field in the target object that you wanted this\nconfiguration to match. string Comparison operator to apply when checking the current metric\nvalue against  matcher.[n].value . string Value to match or exceed using  matchers.[n].operator . metricThreshold object Value and means of comparison that triggers an alert. string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. string Average value of this metric. string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value of  metricThreshold.metricName  that, when exceeded,\ntriggers an alert. string Units of capacity or time that define the scope of the\n metricThreshold.threshold . notifications array of objects One or more targets for  Cloud Manager  to send notifications when\nan alert condition is detected. string Slack API token token.  Cloud Manager  returns this value if you\nset  notifications.[n].typeName  to  SLACK . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Slack channel name.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SLACK . string DataDog API Key.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  DATADOG . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. string Email address to which to send notification.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  EMAIL . boolean Flag indicating email notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  ORG ,  GROUP , or  USER . number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. string Microsoft Teams channel incoming webhook URL.\n Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  MICROSOFT_TEAMS . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. string Mobile number to which alert notifications are sent.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SMS . string HipChat API token.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  HIP_CHAT . If the token later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string OpsGenie Alert API \nkey.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  OPS_GENIE . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Region that indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n OPS_GENIE . array of strings Cloud Manager  role in current Project or Organization.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n ORG  or  GROUP . string HipChat room name.  Cloud Manager  returns this value if\n \"notifications.typeName\" : \"HIP_CHAT . string PagerDuty service key.  Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  PAGER_DUTY . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . boolean Flag indicating text notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName  to\n ORG ,  GROUP , or  USER . string Unique identifier of the team that receives this\nnotification. string Label for the team that receives this notification. string Means by which you want  Cloud Manager  to send you notification of an\nalert. string Name of  a Cloud Manager  user to which to send notifications.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  USER . string VictorOps  API (Application Programming Interface)  key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string VictorOps routing key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string A value used to authenticate with the Webhook that accepts\nand forwards the notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookSecret  to a non-empty\nstring You set a default  webhookSecret  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. string URL (Uniform Resource Locator)  for the webhook that triggers this notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookURL  to a non-empty string You set a default  webhookUrl  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. threshold object Threshold that triggers an alert.  Cloud Manager  returns this value\nif  eventTypeName  is any value other than\n OUTSIDE_METRIC_THRESHOLD . string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value that, when exceeded,  Cloud Manager  triggers an alert. string Units of capacity or time that define the scope of the\n threshold.threshold . typeName string This field is deprecated and is ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was last\nupdated.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2014-04-03T20:26:50Z\",\n  \"enabled\" : true,\n  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{ALERT-CONFIG-ID}\",\n  \"matchers\" : [ {\n    \"field\" : \"hostnameAndPort\",\n    \"operator\" : \"EQUALS\",\n    \"value\" : \"mongo.example.com:27017\"\n  } ],\n  \"links\" : [],\n  \"metricThreshold\" : {\n    \"metricName\" : \"ASSERT_REGULAR\",\n    \"mode\" : \"AVERAGE\",\n    \"operator\" : \"LESS_THAN\",\n    \"threshold\" : 99.0,\n    \"units\" : \"RAW\"\n  },\n  \"notifications\" : [ {\n    \"delayMin\" : 0,\n    \"intervalMin\" : 5,\n    \"mobileNumber\" : \"2343454567\",\n    \"typeName\" : \"SMS\"\n  } ],\n  \"updated\" : \"2014-04-03T20:26:50Z\"\n}"
                }
            ],
            "preview": "All request path parameters are required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows-update-one",
            "title": "Update One Maintenance Window",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Update one maintenance window with an end date in the future. You can successfully call this endpoint with any of the following\nassigned roles: Organization Owner Project Owner Project Monitoring Admin Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project. MW-ID string Unique identifier of the maintenance window you want to update. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false THe request body must include at least one of the following fields: Body Parameter Type Necessity Description alertTypeNames array of strings Required Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP startDate string Required Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Required Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. description string Optional Description of the maintenance window. Name Type Description id string Unique identifier of the maintenance window. groupId string Unique identifier of the project to which this maintenance window\napplies. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window was last updated. startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window starts. endDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the maintenance window ends. alertTypeNames array of strings Alert types to silence during maintenance window. For example:\n HOST ,  REPLICA_SET ,  CLUSTER ,  AGENT ,  BACKUP description string Description of the maintenance window. This field is returned\nonly if you provided a description of the maintenance window.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}\" \\\n     --data '\n       {\n         \"alertTypeNames\" : [ \"HOST\", \"REPLICA_SET\" ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "none",
                    "value": "{\n  \"alertTypeNames\" : [ \"HOST\", \"REPLICA_SET\" ],\n  \"created\" : \"2015-10-22T20:49:35Z\",\n  \"description\" : \"my description\",\n  \"endDate\" : \"2015-10-23T23:30:00Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"56294bdfd4c643eef5176b73\",\n  \"startDate\" : \"2015-10-23T22:00:00Z\",\n  \"updated\" : \"2015-10-22T20:49:35Z\",\n  \"links\" : []\n}"
                }
            ],
            "preview": "Update one maintenance window with an end date in the future.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-create-config",
            "title": "Create an Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description enabled boolean If omitted, the configuration is disabled. string The type of event that triggers an alert. Values include: To review the full list of events that generate alerts and their\ndescriptions, see  Alert Types . Agent Automation Configuration Backup BI Connector Billing Cluster Data Explorer Accessed Disk Backup Host Organization Project Replica Set Support Case Team User AUTOMATION_AGENT_DOWN AUTOMATION_AGENT_UP BACKUP_AGENT_CONF_CALL_FAILURE BACKUP_AGENT_DOWN BACKUP_AGENT_UP BACKUP_AGENT_VERSION_BEHIND BACKUP_AGENT_VERSION_CURRENT MONITORING_AGENT_DOWN MONITORING_AGENT_UP MONITORING_AGENT_VERSION_BEHIND MONITORING_AGENT_VERSION_CURRENT NEW_AGENT AUTOMATION_CONFIG_PUBLISHED_AUDIT BAD_CLUSTERSHOTS CLUSTER_BLACKLIST_UPDATED_AUDIT CLUSTER_CHECKKPOINT_UPDATED_AUDIT CLUSTER_CREDENTIAL_UPDATED_AUDIT CLUSTER_SNAPSHOT_SCHEDULE_UPDATED_AUDIT CLUSTER_STATE_CHANGED_AUDIT CLUSTER_STORAGE_ENGINE_UPDATED_AUDIT CLUSTERSHOT_DELETED_AUDIT CLUSTERSHOT_EXPIRY_UPDATED_AUDIT CONSISTENT_BACKUP_CONFIGURATION GOOD_CLUSTERSHOT INCONSISTENT_BACKUP_CONFIGURATION INITIAL_SYNC_FINISHED_AUDIT INITIAL_SYNC_STARTED_AUDIT OPLOG_BEHIND OPLOG_CURRENT RESTORE_REQUESTED_AUDIT RESYNC_PERFORMED RESYNC_REQUIRED RS_BLACKLIST_UPDATED_AUDIT RS_CREDENTIAL_UPDATED_AUDIT RS_ROTATE_MASTER_KEY_AUDIT RS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT RS_STATE_CHANGED_AUDIT RS_STORAGE_ENGINE_UPDATED_AUDIT SNAPSHOT_DELETED_AUDIT SNAPSHOT_EXPIRY_UPDATED_AUDIT SYNC_PENDING_AUDIT SYNC_REQUIRED_AUDIT BI_CONNECTOR_DOWN BI_CONNECTOR_UP ACCOUNT_DOWNGRADED ACCOUNT_UPGRADED CHARGE_FAILED CHARGE_SUCCEEDED CHECK_PAYMENT_RECEIVED CREDIT_CARD_ABOUT_TO_EXPIRE CREDIT_CARD_CURRENT CREDIT_ISSUED DAILY_BILL_OVER_THRESHOLD DAILY_BILL_UNDER_THRESHOLD DISCOUNT_APPLIED INVOICE_ADDRESS_ADDED INVOICE_ADDRESS_CHANGED INVOICE_CLOSED PAYMENT_FORGIVEN PENDING_INVOICE_OVER_THRESHOLD PENDING_INVOICE_UNDER_THRESHOLD PREPAID_PLAN_ACTIVATED PROMO_CODE_APPLIED REFUND_ISSUED STALE_PENDING_INVOICES WIRE_TRANSFER_PAYMENT_RECEIVED CLUSTER_MONGOS_IS_MISSING CLUSTER_MONGOS_IS_PRESENT SHARD_ADDED SHARD_REMOVED DATA_EXPLORER DATA_EXPLORER_CRUD CPS_RESTORE_REQUESTED_AUDIT ADD_HOST_AUDIT ADD_HOST_TO_REPLICA_SET_AUDIT ATTEMPT_KILLOP_AUDIT ATTEMPT_KILLSESSION_AUDIT DB_PROFILER_DISABLE_AUDIT DB_PROFILER_ENABLE_AUDIT DELETE_HOST_AUDIT DISABLE_HOST_AUDIT HIDE_AND_DISABLE_HOST_AUDIT HIDE_HOST_AUDIT HOST_DOWN HOST_EXPOSED HOST_IP_CHANGED_AUDIT HOST_LOCKED_DOWN HOST_RECOVERING HOST_RESTARTED HOST_ROLLBACK HOST_SECURITY_CHECKUP_NOT_MET HOST_SSL_CERTIFICATE_CURRENT HOST_SSL_CERTIFICATE_STALE OUTSIDE_METRIC_THRESHOLD PAUSE_HOST_AUDIT REMOVE_HOST_FROM_REPLICA_SET_AUDIT RESUME_HOST_AUDIT UNDELETE_HOST_AUDIT VERSION_BEHIND ALL_ORG_USERS_HAVE_MFA ORG_ACTIVATED ORG_ADMIN_SUSPENDED ORG_API_KEY_ADDED ORG_API_KEY_DELETED ORG_CREDIT_CARD_ABOUT_TO_EXPIRE ORG_CREDIT_CARD_ADDED ORG_CREDIT_CARD_CURRENT ORG_CREDIT_CARD_UPDATED ORG_DAILY_BILL_OVER_THRESHOLD ORG_DAILY_BILL_UNDER_THRESHOLD ORG_EMPLOYEE_ACCESS_RESTRICTED ORG_EMPLOYEE_ACCESS_UNRESTRICTED ORG_GROUP_CHARGES_OVER_THRESHOLD ORG_GROUP_CHARGES_UNDER_THRESHOLD ORG_INVOICE_OVER_THRESHOLD ORG_INVOICE_UNDER_THRESHOLD ORG_LOCKED ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED ORG_PUBLIC_API_ACCESS_LIST_REQUIRED ORG_RENAMED ORG_SUSPENDED ORG_TEMPORARILY_ACTIVATED ORG_TWO_FACTOR_AUTH_OPTIONAL ORG_TWO_FACTOR_AUTH_REQUIRED ORG_USERS_WITHOUT_MFA ALL_USERS_HAVE_MULTI_FACTOR_AUTH DELINQUENT PAID_IN_FULL USERS_WITHOUT_MULTI_FACTOR_AUTH CONFIGURATION_CHANGED ENOUGH_HEALTHY_MEMBERS MEMBER_ADDED MEMBER_REMOVED MULTIPLE_PRIMARIES NO_PRIMARY ONE_PRIMARY PRIMARY_ELECTED TOO_FEW_HEALTHY_MEMBERS TOO_MANY_ELECTIONS TOO_MANY_UNHEALTHY_MEMBERS CASE_CREATED TEAM_ADDED_TO_GROUP TEAM_CREATED TEAM_DELETED TEAM_NAME_CHANGED TEAM_REMOVED_FROM_GROUP TEAM_ROLES_MODIFIED TEAM_UPDATED USER_ADDED_TO_TEAM INVITED_TO_GROUP INVITED_TO_ORG JOIN_GROUP_REQUEST_APPROVED_AUDIT JOIN_GROUP_REQUEST_DENIED_AUDIT JOINED_GROUP JOINED_ORG JOINED_TEAM REMOVED_FROM_GROUP REMOVED_FROM_ORG REMOVED_FROM_TEAM REQUESTED_TO_JOIN_GROUP USER_ROLES_CHANGED_AUDIT matchers.fieldName string Name of the field in the target object to match on. All other types of alerts do not support matchers. Host alerts support these fields: HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME TYPE_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME matchers.operator string Operator to test the field's value. Accepted values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string Value to test with the specified operator. If  matchers.fieldName  is set to  TYPE_NAME , you can match on\nthe following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS matchers object array Rules to apply when matching an object against this alert\nconfiguration. Only entities that match  all  these rules\nare checked for an alert condition. You can filter using the  matchers  array only when the\n eventTypeName  specifies an event for a host, replica\nset, or sharded cluster. metricThreshold.metricName string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. metricThreshold.mode string Set to  AVERAGE  to compute the average of this metric. metricThreshold.operator string Operator to apply when checking the current metric value\nagainst the threshold value. Accepted values are: GREATER_THAN LESS_THAN metricThreshold.threshold number Threshold value outside of which an alert is triggered. metricThreshold.units string Units for the threshold value. Depends on the type of\nmetric. Accepted values are: A metric that measures memory consumption would have a\nbyte measurement, while a metric that measures time would\nhave a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold object Threshold that will cause an alert to be triggered.\nRequired if  \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\" . notifications.apiToken string Slack API token or Bot token.\nRequired if  \"notifications.typeName\" : \"SLACK\" .\nIf the token later becomes invalid,  Cloud Manager  sends an email to\nthe Project owner and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.channelName string Slack channel name.\nRequired if  \"notifications.typeName\" : \"SLACK\" . notifications.datadogApiKey string DataDog API Key. Found in the DataDog dashboard.\nRequired if  \"notifications.typeName\" : \"DATADOG\" . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.delayMin number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. notifications.emailAddress string Email address to which to send notification.\nRequired if  \"notifications.typeName\" : \"EMAIL\" . notifications.emailEnabled boolean Determines if email notifications should be sent.\nRequired if: \"notifications.typeName\" : \"GROUP\" \"notifications.typeName\" : \"USER\" notifications.intervalMin number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. notifications.webhookSecret string A value used to authenticate with the Webhook that accepts\nand forwards the notification. You can explicitly declare a\nsecret only in a request that has both: You can configure a  webhookSecret  for a default\n webhookURL  only either on the\n Integrations \npage, or with the  Integrations API . To explicitly declare a  webhookURL  without a\n webhookSecret , omit this field. A  notifications.typeName  of  WEBHOOK An explicitly declared  notifications.webhookURL After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. notifications.webhookUrl string URL (Uniform Resource Locator)  for the webhook that triggers this notification. If you\ndo not explicitly declare a  webhookUrl , your request will\nuse the default  webhookUrl  set either on the\n Integrations \npage, or with the  Integrations API . After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. notifications.microsoftTeamsWebhookUrl string Microsoft Teams channel incoming webhook URL.\nRequired if  \"notifications.typeName\" : \"MICROSOFT_TEAMS\" . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. notifications.mobileNumber string Mobile number to send SMS messages to.\nRequired if  \"notifications.typeName\" : \"SMS\" . notifications.notificationToken string A HipChat API token.\nRequired if  \"notifications.typeName\" : \"HIP_CHAT\" .\nIf the token later becomes invalid,  Cloud Manager  sends an email to\nthe Project owner and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . notifications.role string One or more  project roles  that receive\nthe configured alert. Accepted values include: If you include this field,  Cloud Manager  sends alerts only to\nusers assigned the roles you specify in the array. If you\nomit this field,  Cloud Manager  sends alerts to users assigned\nany role. Configurable for  GROUP  notifications types. Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin notifications.roomName string HipChat room name.\nRequired if  \"notifications.typeName\" : \"HIP_CHAT\" . notifications.serviceKey string PagerDuty integration key.\nRequired if  \"notifications.typeName\" : \"PAGER_DUTY\" . notifications.smsEnabled boolean Flag indicating SMS notifications must be sent.\nRequired if: \"notifications.typeName\" : \"GROUP\" \"notifications.typeName\" : \"USER\" notifications.teamId string Unique identifier of a team. notifications.typeName string Type of alert notification. Accepted values are: EMAIL GROUP  (Project) HIPCHAT ORG PAGER_DUTY SLACK SMS TEAM USER WEBHOOK MICROSOFT_TEAMS notifications.username string Name of  a Cloud Manager  user to which to send notifications.\nSpecify a user in the Project that owns the alert\nconfiguration.\nRequired if  \"notifications.typeName\" : \"USER\" . object array Notifications to send when an alert condition is\ndetected. threshold.operator string Operator to apply when checking the current metric value\nagainst the threshold value. GREATER_THAN LESS_THAN threshold.threshold number Threshold value outside of which an alert is triggered. threshold object Threshold that will cause an alert to be triggered.\nRequired if: \"eventTypeName\" : \"TOO_FEW_HEALTHY_MEMBERS\" \"eventTypeName\" : TOO_MANY_UNHEALTHY_MEMBERS The response includes the alert configuration details: Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was created. enabled boolean Flag indicating this alert configuration enabled. eventTypeName string Type of event that triggers an alert. groupId string Unique identifier of the Project that owns this alert\nconfiguration. id string Unique identifier of the alert configuration. links array of objects One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . matchers array of objects Rules to apply when matching an object against this alert\nconfiguration. string Name of the field in the target object that you wanted this\nconfiguration to match. string Comparison operator to apply when checking the current metric\nvalue against  matcher.[n].value . string Value to match or exceed using  matchers.[n].operator . metricThreshold object Value and means of comparison that triggers an alert. string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. string Average value of this metric. string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value of  metricThreshold.metricName  that, when exceeded,\ntriggers an alert. string Units of capacity or time that define the scope of the\n metricThreshold.threshold . notifications array of objects One or more targets for  Cloud Manager  to send notifications when\nan alert condition is detected. string Slack API token token.  Cloud Manager  returns this value if you\nset  notifications.[n].typeName  to  SLACK . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Slack channel name.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SLACK . string DataDog API Key.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  DATADOG . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. string Email address to which to send notification.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  EMAIL . boolean Flag indicating email notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  ORG ,  GROUP , or  USER . number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. string Microsoft Teams channel incoming webhook URL.\n Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  MICROSOFT_TEAMS . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. string Mobile number to which alert notifications are sent.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SMS . string HipChat API token.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  HIP_CHAT . If the token later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string OpsGenie Alert API \nkey.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  OPS_GENIE . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Region that indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n OPS_GENIE . array of strings Cloud Manager  role in current Project or Organization.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n ORG  or  GROUP . string HipChat room name.  Cloud Manager  returns this value if\n \"notifications.typeName\" : \"HIP_CHAT . string PagerDuty service key.  Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  PAGER_DUTY . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . boolean Flag indicating text notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName  to\n ORG ,  GROUP , or  USER . string Unique identifier of the team that receives this\nnotification. string Label for the team that receives this notification. string Means by which you want  Cloud Manager  to send you notification of an\nalert. string Name of  a Cloud Manager  user to which to send notifications.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  USER . string VictorOps  API (Application Programming Interface)  key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string VictorOps routing key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string A value used to authenticate with the Webhook that accepts\nand forwards the notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookSecret  to a non-empty\nstring You set a default  webhookSecret  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. string URL (Uniform Resource Locator)  for the webhook that triggers this notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookURL  to a non-empty string You set a default  webhookUrl  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. threshold object Threshold that triggers an alert.  Cloud Manager  returns this value\nif  eventTypeName  is any value other than\n OUTSIDE_METRIC_THRESHOLD . string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value that, when exceeded,  Cloud Manager  triggers an alert. string Units of capacity or time that define the scope of the\n threshold.threshold . typeName string This field is deprecated and is ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was last\nupdated.",
            "code": [
                {
                    "lang": "none",
                    "value": "POST /groups/{PROJECT-ID}/alertConfigs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs\" \\\n     --data '\n       {\n         \"groupId\" : \"{PROJECT-ID}\",\n         \"eventTypeName\" : \"RESYNC_REQUIRED\",\n         \"enabled\" : true,\n         \"notifications\" : [ {\n           \"typeName\" : \"GROUP\",\n           \"intervalMin\" : 5,\n           \"delayMin\" : 0,\n           \"smsEnabled\" : false,\n           \"emailEnabled\" : true\n         } ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2014-04-23T14:29:18Z\",\n  \"enabled\" : true,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{ALERT-CONFIG-ID}\",\n  \"links\" : [],\n  \"matchers\" : [ ],\n  \"notifications\" : [ {\n    \"delayMin\" : 0,\n    \"emailEnabled\" : true,\n    \"intervalMin\" : 5,\n    \"smsEnabled\" : false,\n    \"typeName\" : \"GROUP\"\n  } ],\n  \"updated\" : \"2014-04-23T14:29:18Z\"\n}"
                }
            ],
            "preview": "The response includes the alert configuration details:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/users",
            "title": "Users",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  users  resource allows you to create users and retrieve user\ninformation. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  users . Method Endpoint Description GET /users/{USER-ID} Retrieve one user by their user ID. GET /users/byName/{USER-NAME} Retrieve one user by their name. POST /users Create one new user. Get All Organization Users",
            "code": [],
            "preview": "The users resource allows you to create users and retrieve user\ninformation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-status-full",
            "title": "Get Automation Status of Last 50 Plans",
            "headings": [
                "Overview",
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Retrieves the 50 most recent plans for MongoDB processes. Plans are a\nset of actions required to get a MongoDB deployment to the\n goalVersion . The endpoint returns the  goalVersion  field to\nreport the version of the automation configuration the response object\ndescribes and the  lastGoalVersionAchieved  field to report the\nversions of the configuration running on each server. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description GROUP-ID string (Required.)  The unique identifier for the group. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description goalVersion number The version of the  automation\nconfiguration . If there is a\n conflict in submissions of automation configurations , this field lists the winning\nconfiguration. processes array The project's deployed MongoDB instances. process.errorCode integer The error code. Returns  0  if the process has no errors. process.errorCodeDescription string Detailed error description. Returns an empty string if the\nprocess has no errors. process.errorCodeHumanReadable string Short error description. Returns an empty string if the\nprocess has no errors. process.errorString string Output of the log line that contains the error. Examine this\nfield for additional error context.\nReturns an empty string if the process has no errors. processes.hostname string The fully qualified domain name (retrieved by issuing  hostname -f )\nof the server on which the MongoDB process and Automation are\nhosted. processes.name string The process name as specified in the automation configuration. processes.lastGoalVersionAchieved number The last version of the automation configuration with which this\nprocess had deployed as configured. If the  processes.lastGoalVersionAchieved \nnumber is not equal to the  goalVersion  number, the process has\nnot yet deployed according to the current configuration. processes.plan array Describes how a process that is not yet up-to-date with the\nconfiguration will achieve the goal state.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/GROUP-ID/automationStatus/full"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET -i \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus/full\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n     \"goalVersion\": 11,\n     \"processes\": [{\n             \"errorCode\": 0,\n             \"errorCodeDescription\": \"\",\n             \"errorCodeHumanReadable\": \"\",\n             \"errorString\": \"\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 11,\n             \"name\": \"myReplicaSet_3\",\n             \"plan\": [\"Download\",\n                     \"WaitRsInit\",\n                     \"WaitFeatureCompatibilityVersionCorrect\"\n             ]\n     }, {\n             \"errorCode\": 100,\n             \"errorCodeDescription\": \"There is an issue with file permissions for this process\",\n             \"errorCodeHumanReadable\": \"File Permissions Error\",\n             \"errorString\": \"<myReplicaSet_1> [13:11:33.348] Failed to compute states : <myReplicaSet_1> [13:11:33.348] Error calling ComputeState : <myReplicaSet_1> [13:11:33.348] Error getting fickle state for current state : <myReplicaSet_1> [13:11:33.348] Error checking if process is running from dbpath = /data/0 : <myReplicaSet_1> [13:11:33.348] Error getting file contents of /data/0/mongod.lock as string : <myReplicaSet_1> [13:11:33.348] Error reading file from /data/0/mongod.lock : open /data/0/mongod.lock: permission denied\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 1,\n             \"name\": \"myReplicaSet_1\",\n             \"plan\": [\"Download\"]\n     }, {\n             \"errorCode\": 0,\n             \"errorCodeDescription\": \"\",\n             \"errorCodeHumanReadable\": \"\",\n             \"errorString\": \"\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 11,\n             \"name\": \"myReplicaSet_2\",\n             \"plan\": [\"Download\",\n                     \"Start\",\n                     \"WaitRsInit\",\n                     \"WaitFeatureCompatibilityVersionCorrect\",\n                     \"AdjustRoles\"\n             ]\n     }]\n}"
                }
            ],
            "preview": "Retrieves the 50 most recent plans for MongoDB processes. Plans are a\nset of actions required to get a MongoDB deployment to the\ngoalVersion.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agents-get-by-type",
            "title": "Get Agents by Type for One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get all agents of a specified type (i.e. Monitoring, Backup, or\nAutomation) for a project. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\nAgent API Key. TYPE string The agent type to retrieve.  TYPE  can be one of the\nfollowing values: MONITORING BACKUP AUTOMATION The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Name Type Description typeName string The type of agent:  MONITORING ,  BACKUP , or  AUTOMATION . hostname string Primary hostname. A host typically may have aliases, so the primary\nis the best available name as decided by  Cloud Manager . confCount number Number of configuration calls. lastConf timestamp Date and time of last configuration call. stateName string The current state of the agent.  stateName  can return the following\nvalues: ACTIVE : the agent is active and operating STANDBY : the agent is on standby NO_PROCESSES : the agent is not managing,\nmonitoring, or backing up any processes. pingCount number Only applicable to Monitoring Agents . The number of pings that\nthe Monitoring Agent has sent to the  hostname  URL. isManaged Boolean Only applicable to Monitoring and Backup Agents . Specifies\nwhether or not  Cloud Manager  manages the agent. lastPing timestamp Only applicable to Monitoring Agents . Time of most recent\nping. tag string Only applicable to Backup Agents . The agent's tag, if there is one. Get All Monitoring Agents for One Project.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/agents/{TYPE}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agents/MONITORING\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"results\": [\n    {\n      \"confCount\": 59,\n      \"hostname\": \"example\",\n      \"isManaged\": true,\n      \"lastConf\": \"2015-06-18T14:21:42Z\",\n      \"lastPing\": \"2015-06-18T14:21:42Z\",\n      \"pingCount\": 6,\n      \"stateName\": \"ACTIVE\",\n      \"typeName\": \"MONITORING\"\n    }\n  ],\n  \"totalCount\": 1\n}"
                }
            ],
            "preview": "Get all agents of a specified type (i.e. Monitoring, Backup, or\nAutomation) for a project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/access-list",
            "title": "Access List",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  accessList  resource lets you retrieve and update a user's\n access list , which controls the user's\naccess to API operations. Users can issue API\noperations only from addresses on their own access list. To use the\n accessList  resource you must know the unique identifier of the user who owns\nthe access list. To retrieve a user's ID, see  Get All Users in One Project . The  accessList  resource's  POST  and  DELETE  operations are\nin the access list themselves. They must originate from an address already on\nthe user's access list. You can retrieve access list information only for the user issuing the request.\nThe  USER-ID  in the URL  must  match the ID of the user associated with the\n public API key  used to send the request. The  whitelist  resource is deprecated.\nUse the  accessList  resource instead to control access to\nAPI operations. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  hosts . Method Endpoint Description GET /users/{USER-ID}/accessList Retrieves the access list for the current user. GET /users/{USER-ID}/accessList/{IP-ADDRESS} Retrieves the access list for the specified IP address. POST /users/{USER-ID}/accessList/{IP-ADDRESS} Adds entries to the access list for the current user. DELETE /users/{USER-ID}/accessList/{IP-ADDRESS} Deletes an entry from the access list for the current user.",
            "code": [],
            "preview": "The accessList resource lets you retrieve and update a user's\naccess list, which controls the user's\naccess to API operations. Users can issue API\noperations only from addresses on their own access list. To use the\naccessList resource you must know the unique identifier of the user who owns\nthe access list. To retrieve a user's ID, see Get All Users in One Project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/identity-provider-return-all",
            "title": "Return All Connected Identity Providers",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example SAML (Security Assertion Markup Language) Request",
                "Example SAML (Security Assertion Markup Language) Response",
                "Example OIDC (OpenID Connect) Request",
                "Example OIDC (OpenID Connect) Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return all\n identity providers  for a federated authentication configuration. You must have the  Organization Owner  role for at least one\nconnected organization in the federation configuration to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false protocol string Optional The protocol(s) of the target  IdPs (Identity Providers) . Possible values are: If this is not specified, this enpoint only returns  SAML   IdPs (Identity Providers) . SAML OIDC SAML This endpoint doesn't use HTTP request body parameters. Each document in the  results  array contains the federated\nauthentication configuration for each connected organization. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description acsUrl string Assertion consumer service URL to which the  IdP (Identity Provider)  sends the SAML response. associatedDomains array List that contains the configured domains from which users can log in for\nthis  IdP (Identity Provider) . associatedOrgs array List that contains the organizations from which users can log in for this\n IdP (Identity Provider) . audienceUri string Identifier for the intended audience of the  SAML Assertion . displayName string Human-readable label that identifies the  IdP (Identity Provider) . issuerUri string Identifier for the issuer of the  SAML Assertion . oktaIdpId string Unique 20-hexadecimal digit string that identifies the  IdP (Identity Provider) . pemFileInfo array List that contains the file information, including: start date, and expiration date for the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. Name Type Description certificates array List that contains the start date and expiration date for the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. fileName string Label that identifies the file containing the identity\nprovider's  PEM (Privacy-Enhanced Mail) -encoded public key certificate. requestBinding string SAML (Security Assertion Markup Language)  Authentication Request Protocol binding used to send the\nAuthNRequest.  Cloud Manager  supports the following binding values: HTTP POST HTTP REDIRECT responseSignatureAlgorithm string Algorithm used to encrypt the  IdP (Identity Provider)  signature.  Cloud Manager  supports the\nfollowing signature algorithm values: SHA-1 SHA-256 ssoDebugEnabled boolean Flag that indicates whether the  IdP (Identity Provider)  has SSO debugging enabled. ssoUrl string URL of the receiver of the  SAML (Security Assertion Markup Language)  AuthNRequest. status string Label that indicates whether the identity provider is active. The  IdP (Identity Provider)  is\n Inactive  until you map at least one domain to the\n IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n     {\n         \"links\" : [ {\n \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders?pretty=true&pageNum=1&itemsPerPage=100\",\n         \"rel\": \"self\"\n     }\n ],\n \"results\": [\n     {\n         \"acsUrl\" : \"https://example.mongodb.com/sso/saml2/12345678901234567890\",\n         \"associatedDomains\" : [ ],\n         \"associatedOrgs\" : [ ],\n         \"audienceUri\" : \"https://www.example.com/saml2/service-provider/abcdefghij1234567890\",\n         \"displayName\" : \"Test\",\n         \"issuerUri\" : \"urn:123456789000.us.provider.com\",\n         \"oktaIdpId\" : \"1234567890abcdefghij\",\n         \"pemFileInfo\" : {\n             \"certificates\" : [ {\n                \"notAfter\" : \"2035-09-29T15:03:55Z\",\n                \"notBefore\" : \"2022-01-20T15:03:55Z\"\n             } ],\n             \"fileName\" : \"file.pem\"\n         },\n         \"requestBinding\" : \"HTTP-POST\",\n         \"responseSignatureAlgorithm\" : \"SHA-256\",\n         \"ssoDebugEnabled\" : true,\n         \"ssoUrl\" : \"https://123456789000.us.provider.com/samlp/12345678901234567890123456789012\",\n         \"status\" : \"INACTIVE\"\n     } ],\n \"totalCount\": 1\n}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders?protocol=OIDC\""
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n     {\n         \"links\" : [ {\n \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders?pretty=true&pageNum=1&itemsPerPage=100\",\n         \"rel\": \"self\"\n     }\n ],\n \"results\": [\n     {\n         \"associatedDomains\": [],\n         \"associatedOrgs\": [],\n         \"audienceClaim\": [\n             \"audience\"\n         ],\n         \"clientId\": \"clientId\",\n         \"description\": \"OIDC IdP response example\",\n         \"displayName\": \"OIDC IdP\",\n         \"groupsClaim\": \"groups\",\n         \"id\": \"32b6e34b3d91647abb20e7b8\",\n         \"issuerUri\": \"issuer.com\",\n         \"oktaIdpId\": null,\n         \"protocol\": \"OIDC\",\n         \"requestedScopes\": [\n             \"scopes\"\n         ],\n         \"userClaim\": \"sub\"\n     }\n ],\n \"totalCount\": 1\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return all\nidentity providers for a federated authentication configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/user-get-by-name",
            "title": "Get a User by Name",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "You can always retrieve your own user account. Otherwise, you must have\nthe  Project User Admin  role in at least one project that is\ncommon between you and the user you are retrieving. You cannot use this endpoint to return information on an\n API Key . Request the\n Get One API Key \nendpoint to get this information. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description USER-NAME string (Required.)  Username of the MongoDB user that you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. The HTTP document contains each of the following elements: Name Type Description emailAddress string Email address of the  Cloud Manager  user. firstName string First name of the  Cloud Manager  user. id string Unique identifier of the  Cloud Manager  user. lastName string Last name of the  Cloud Manager  user. links object array Links to related sub-resources. All  links  arrays in\nresponses include at least one link called self. The\nrelationship between URLs are explained in the\n Web Linking Specification . mobileNumber string Mobile number of the  Cloud Manager  user. roles object array Role assignments. roles.groupId string Unique identifier for the project in which the user has the specified role. roles.orgId string Unique identifier for the organization in which the user has\nthe specified role. roles.roleName string Name of the role. Values are: The  users  resource returns all the roles the user\nhas in both  Cloud Manager  and  MongoDB Atlas . Value Description ORG_MEMBER Organization Member ORG_READ_ONLY Organization Read Only ORG_BILLING_ADMIN Organization Billing Admin ORG_GROUP_CREATOR Organization Project Creator ORG_OWNER Organization Owner GROUP_ATLAS_ADMIN Project Admin (Atlas) GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write username string Username of the  Cloud Manager  user.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /users/byName/{USER-NAME}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/users/byName/jane\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"emailAddress\" : \"jane@qa.example.com\",\n  \"firstName\" : \"Jane\",\n  \"id\" : \"533dc19ce4b00835ff81e2eb\",\n  \"lastName\" : \"D'oh\",\n  \"roles\" : [ {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_USER_ADMIN\"\n  },{\n    \"orgId\" : \"55555bbe3bd5253aea2d9b16\",\n    \"roleName\" : \"ORG_MEMBER\"\n  } ],\n  \"links\" : [],\n  \"username\": \"jane\"\n}"
                }
            ],
            "preview": "You can always retrieve your own user account. Otherwise, you must have\nthe Project User Admin role in at least one project that is\ncommon between you and the user you are retrieving.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/user-create",
            "title": "Create One User",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Create a new user. By default, any non-global organization and project\nroles in the payload send users an invitation to the organization or\nproject first. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false All fields are required. Name Type Description username string Username of the  Cloud Manager  user. Must be a valid email address. password string Password of the  Cloud Manager  user. This field is  not  included in the entity returned from the\nserver. It can only be sent in the entity body when creating\na new user. emailAddress string Email address of the  Cloud Manager  user. mobileNumber string Mobile telephone number of the  Cloud Manager  user. firstName string First name of the  Cloud Manager  user. lastName string Last name of the  Cloud Manager  user. country string Primary country where the  Cloud Manager  user is based. Must match\na two-letter  ISO 3661-1  country code . roles object array Role assignments of the  Cloud Manager  user. roles.orgId string Unique identifier of the organization in which the  Cloud Manager  user\nhas the specified role. roles.groupId string Unique identifier of the group in which the  Cloud Manager  user has the\nspecified role. roles.roleName string Name of the role. Accepted values are: Value Description ORG_MEMBER Organization Member ORG_READ_ONLY Organization Read Only ORG_BILLING_ADMIN Organization Billing Admin ORG_GROUP_CREATOR Organization Project Creator ORG_OWNER Organization Owner GROUP_ATLAS_ADMIN Project Admin (Atlas) GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write The  JSON (Javascript Object Notation)  document contains each of the following elements: Name Type Description emailAddress string Email address of the  Cloud Manager  user. firstName string First name of the  Cloud Manager  user. id string Unique identifier of the  Cloud Manager  user. lastName string Last name of the  Cloud Manager  user. links object array Links to related sub-resources. All  links  arrays in\nresponses include at least one link called self. The\nrelationship between URLs are explained in the\n Web Linking Specification . mobileNumber string Mobile number of the  Cloud Manager  user. roles empty array Role assigned to the  Cloud Manager  user. string Unique identifier for the project in which the user has the\nspecified role. string Unique identifier for the organization in which the user has\nthe specified role. string Name of the role. Accepted values are: The  users  resource returns all the roles the user\nhas in both  Cloud Manager  and  MongoDB Atlas . Value Description ORG_MEMBER Organization Member ORG_READ_ONLY Organization Read Only ORG_BILLING_ADMIN Organization Billing Admin ORG_GROUP_CREATOR Organization Project Creator ORG_OWNER Organization Owner GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write username string Username of the  Cloud Manager  user.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /users"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/users\" \\\n     --data '\n       {\n         \"username\": \"jane.doe@mongodb.com\",\n         \"emailAddress\": \"jane.doe@mongodb.com\",\n         \"firstName\": \"Jane\",\n         \"lastName\": \"Doe\",\n         \"password\": \"M0ng0D8!:)\",\n         \"country\" : \"US\",\n         \"roles\": [{\n           \"groupId\": \"533daa30879bb2da07807696\",\n           \"roleName\": \"GROUP_USER_ADMIN\"\n         },{\n           \"orgId\" : \"55555bbe3bd5253aea2d9b16\",\n           \"roleName\" : \"ORG_MEMBER\"\n         }]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"533dc19ce4b00835ff81e2eb\",\n  \"username\" : \"jane.doe@mongodb.com\",\n  \"emailAddress\" : \"jane.doe@mongodb.com\",\n  \"firstName\" : \"Jane\",\n  \"lastName\" : \"Doe\",\n  \"roles\" : [],\n  \"links\" : []\n}"
                }
            ],
            "preview": "Create a new user. By default, any non-global organization and project\nroles in the payload send users an invitation to the organization or\nproject first.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts",
            "title": "Hosts",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  hosts  resource defines the  mongod  and  mongos  processes\nin your deployment. Each process is identified by a unique hostname and\nport combination. When you add a  mongod  or  mongos  to  Cloud Manager ,\n Cloud Manager  automatically discovers various valid hostname and port\ncombinations for the process. DNS records the names you can use to\naccess a given host.  Cloud Manager  ranks the hostnames to choose a \"primary\"\nhostname. Hostnames with the most periods rank highest, while the\nloopback address ( 127.0.0.1 ) and  localhost  lowest.  Cloud Manager  treats\nthe \"losing\" hostnames as host aliases. When  Cloud Manager  receives a ping from the Monitoring, the algorithm for\nassigning a primary hostname repeats. As a result, the primary hostname\nmay change over time. You can also\n specify preferred hostnames  in  Cloud Manager 's\nproject settings to override the hostname algorithm. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available for  hosts . Method Endpoint Description GET /groups/{PROJECT-ID}/hosts Get all MongoDB processes in a project. GET /groups/{PROJECT-ID}/hosts/{HOST-ID} Get one MongoDB process by host ID. GET /groups/{PROJECT-ID}/hosts/byName/{HOSTNAME:PORT} Get one MongoDB process by its hostname and port. POST /groups/{PROJECT-ID}/hosts Start monitoring one new MongoDB process. PATCH /groups/{PROJECT-ID}/hosts/{HOST-ID} Update configuration of one monitored MongoDB process. DELETE /groups/{PROJECT-ID}/hosts/{HOST-ID} Stop monitoring one MongoDB process.",
            "code": [],
            "preview": "The hosts resource defines the mongod and mongos processes\nin your deployment. Each process is identified by a unique hostname and\nport combination. When you add a mongod or mongos to Cloud Manager,\nCloud Manager automatically discovers various valid hostname and port\ncombinations for the process. DNS records the names you can use to\naccess a given host. Cloud Manager ranks the hostnames to choose a \"primary\"\nhostname. Hostnames with the most periods rank highest, while the\nloopback address (127.0.0.1) and localhost lowest. Cloud Manager treats\nthe \"losing\" hostnames as host aliases.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/role-mapping-return-all",
            "title": "Return All Role Mappings",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "links",
                "results",
                "totalCount",
                "Example",
                "Request",
                "Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return all\n role mappings  from the specified\norganization in the specified federation. You must have the  Organization Owner  role to call this\nendpoint. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint does not use HTTP request body parameters. An array of documents, representing a  link  to one\nor more sub-resources and/or related resources such as  list\npagination . See  Linking  for more information. An array of documents, each representing one role mapping. Name Type Description externalGroupName string Unique human-readable label that identifies the identity\nprovider group associated with the role mapping. id string Unique 24-hexadecimal digit string that identifies the role\nmapping. roleAssignments array List that contains the unique identifiers for the projects and\norganizations associated with each role. roleAssignments.groupId string Unique 24-hexadecimal digit string that identifies the project\nin which the role applies. roleAssignments.orgId string Unique 24-hexadecimal digit string that identifies the\norganization in which the role applies. roleAssignments.role string Human readable label that identifies the role. The total number of items in the result set. This value may be higher\nthan the number of objects in the  results  array if the entire\nresult set is paginated.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings\""
                },
                {
                    "lang": "json",
                    "value": "{\n   \"links\": [\n     {\n       \"href\": \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/roleMappings?pageNum=1&itemsPerPage=100\",\n       \"rel\": \"self\"\n     }\n   ],\n   \"results\": [\n     {\n       \"externalGroupName\": \"autocomplete-highlight\",\n       \"id\": \"61d88e15e6cc044270a36fce\",\n       \"roleAssignments\": [\n         {\n           \"groupId\": null,\n           \"orgId\": \"{ORG-ID}\",\n           \"role\": \"ORG_OWNER\"\n         },\n         {\n           \"groupId\": \"{GROUP-ID}\",\n           \"orgId\": null,\n           \"role\": \"GROUP_OWNER\"\n         }\n       ]\n     }\n   ],\n   \"totalCount\": 1\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to return all\nrole mappings from the specified\norganization in the specified federation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-mapping-update-one",
            "title": "Update One Connected Organization",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to update one\n connected organization \nfor a federated authentication configuration. Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Organization Owner  role to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. ORG-ID string Unique 24-hexadecimal digit string that identifies the\nconnected organization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description domainAllowList array Optional List that contains the approved domains from which organization\nusers can log in. If you provide a  domainAllowList  field in the request, the array\nthat you provide replaces the current  domainAllowList . domainRestrictionEnabled boolean Required Flag that indicates whether domain restriction is enabled for\nthe connected organization. identityProviderId string Required Unique 20-hexadecimal digit string that identifies the identity\nprovider associated with the connected organization. If omitted or if the value is  null , MongoDB Cloud disconnects\nthe organization specified by  orgId  from the  IdP (Identity Provider) . orgId string Required Unique 24-hexadecimal digit string that identifies the\nconnected organization. postAuthRoleGrants array Optional List that contains the default  roles \ngranted to users who authenticate through the  IdP (Identity Provider)  in a\nconnected organization. If you provide a  postAuthRoleGrants  field in the request, the array\nthat you provide replaces the current  postAuthRoleGrants . roleMappings array Optional List that contains the role mappings configured in this\norganization. If you provide a  roleMappings  field in the request, the array\nthat you provide replaces the current  roleMappings . Name Type Description domainAllowList array List that contains the approved domains from which organization\nusers can log in. domainRestrictionEnabled boolean Flag that indicates whether domain restriction is enabled for\nthe connected organization. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false . identityProviderId string Unique 20-hexadecimal digit string that identifies the identity\nprovider associated with the connected organization. orgId string Unique 24-hexadecimal digit string that identifies the\nconnected organization. postAuthRoleGrants array List that contains the default  roles \ngranted to users who authenticate through the  IdP (Identity Provider)  in a\nconnected organization. roleMappings array List that contains the role mappings configured in this\norganization. userConflicts array List that contains the usernames that don't match any domain on\nthe allowed list. userConflicts  returns  null  when\n \"domainRestrictionEnabled\": false .",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/connectedOrgConfigs/{ORG-ID}\" \\\n     --data '\n       {\n         \"domainRestrictionEnabled\": false,\n         \"identityProviderId\": \"0oa7i0grsgbwJiIyw357\",\n         \"orgId\": \"5df7a168f10fab3a149357fb\",\n         \"roleMappings\": [\n           {\n             \"externalGroupName\": \"example\",\n             \"id\": \"61e89721b827b56c845ff44c\",\n             \"roleAssignments\": [\n               {\n                 \"groupId\": null,\n                 \"orgId\": \"5df7a168f10fab3a149357fb\",\n                 \"role\": \"ORG_OWNER\"\n               }\n             ]\n           }\n         ]\n       }'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"domainAllowList\": [],\n  \"domainRestrictionEnabled\": false,\n  \"identityProviderId\": \"0oa7i0grsgbwJiIyw357\",\n  \"orgId\": \"5df7a168f10fab3a149357fb\",\n  \"postAuthRoleGrants\": [\n    \"ORG_OWNER\"\n  ],\n  \"roleMappings\": [\n    {\n      \"externalGroupName\": \"example\",\n      \"id\": \"61e89721b827b56c845ff44c\",\n      \"roleAssignments\": [\n        {\n          \"groupId\": null,\n          \"orgId\": \"5df7a168f10fab3a149357fb\",\n          \"role\": \"ORG_OWNER\"\n        }\n      ]\n    }\n  ],\n  \"userConflicts\": null\n}"
                }
            ],
            "preview": "The federationSettings resource allows you to update one\nconnected organization\nfor a federated authentication configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/org-api-key-access-lists",
            "title": "Organization Programmatic API Key Access Lists",
            "headings": [],
            "paragraphs": "Use the  /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList  resource to\nview, create, or delete access list entries for a user or\n Programmatic API Key  within the specified\n Cloud Manager   organization . The Organization  API (Application Programming Interface)  Key, or users with the\n Organization Owner  role in the\n organization  in which the\n API Key  belongs, can access these\nendpoints. The  whitelist  resource is deprecated.\nUse the  accessList  resource instead to control access to\nAPI operations. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList Get all access list entries that belong to  {API-KEY-ID} . GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/{IP-ADDRESS} Get the access list entry for  {API-KEY-ID}  specified by\n {IP-ADDRESS} . POST /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList Create one or more access list entries for  {API-KEY-ID} . DELETE /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/{IP-ADDRESS} Delete the access list entry for  {API-KEY-ID}  specified by\n {IP-ADDRESS} .",
            "code": [],
            "preview": "Use the /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList resource to\nview, create, or delete access list entries for a user or\nProgrammatic API Key within the specified\nCloud Manager organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-status",
            "title": "Get Automation Status of Latest Plan",
            "headings": [
                "Overview",
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Retrieves the latest plan for MongoDB processes. Plans are a\nset of actions required to get a MongoDB deployment to the\n goalVersion . The endpoint returns the  goalVersion  field to\nreport the current version of the automation configuration and the\n lastGoalVersionAchieved  field to report the versions of the\nconfiguration running on each server. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  The unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description goalVersion number The version of the most recently submitted  automation\nconfiguration . If there is a\n conflict in submissions of automation configurations , this field lists the winning\nconfiguration. processes array The project's deployed MongoDB instances. process.errorCode integer The error code. Returns  0  if the process has no errors. process.errorCodeDescription string Detailed error description. Returns an empty string if the\nprocess has no errors. process.errorCodeHumanReadable string Short error description. Returns an empty string if the\nprocess has no errors. process.errorString string Output of the log line that contains the error. Examine this\nfield for additional error context.\nReturns an empty string if the process has no errors. processes.hostname string The fully qualified domain name (retrieved by issuing  hostname -f )\nof the server on which the MongoDB process and Automation are\nhosted. processes.name string The process name as specified in the automation configuration. processes.lastGoalVersionAchieved number The last version of the automation configuration with which this\nprocess had deployed as configured. If the  processes.lastGoalVersionAchieved \nnumber is not equal to the  goalVersion  number, the process has\nnot yet deployed according to the current configuration. processes.plan array Describes how a process that is not yet up-to-date with the\nconfiguration will achieve the goal state.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/automationStatus"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET -i \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n     \"goalVersion\": 11,\n     \"processes\": [{\n             \"errorCode\": 0,\n             \"errorCodeDescription\": \"\",\n             \"errorCodeHumanReadable\": \"\",\n             \"errorString\": \"\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 11,\n             \"name\": \"myReplicaSet_3\",\n             \"plan\": [\"Download\",\n                     \"WaitRsInit\",\n                     \"WaitFeatureCompatibilityVersionCorrect\"\n             ]\n     }, {\n             \"errorCode\": 100,\n             \"errorCodeDescription\": \"There is an issue with file permissions for this process\",\n             \"errorCodeHumanReadable\": \"File Permissions Error\",\n             \"errorString\": \"<myReplicaSet_1> [13:11:33.348] Failed to compute states : <myReplicaSet_1> [13:11:33.348] Error calling ComputeState : <myReplicaSet_1> [13:11:33.348] Error getting fickle state for current state : <myReplicaSet_1> [13:11:33.348] Error checking if process is running from dbpath = /data/0 : <myReplicaSet_1> [13:11:33.348] Error getting file contents of /data/0/mongod.lock as string : <myReplicaSet_1> [13:11:33.348] Error reading file from /data/0/mongod.lock : open /data/0/mongod.lock: permission denied\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 1,\n             \"name\": \"myReplicaSet_1\",\n             \"plan\": [\"Download\"]\n     }, {\n             \"errorCode\": 0,\n             \"errorCodeDescription\": \"\",\n             \"errorCodeHumanReadable\": \"\",\n             \"errorString\": \"\",\n             \"hostname\": \"example.net\",\n             \"lastGoalVersionAchieved\": 11,\n             \"name\": \"myReplicaSet_2\",\n             \"plan\": [\"WaitRsInit\",\n                     \"WaitFeatureCompatibilityVersionCorrect\"\n             ]\n     }]\n}"
                }
            ],
            "preview": "Retrieves the latest plan for MongoDB processes. Plans are a\nset of actions required to get a MongoDB deployment to the\ngoalVersion.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshot-schedule",
            "title": "Snapshot Schedule",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "This resource allows you to view and configure various properties of snapshot\ncreation and retention for a replica set or cluster. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following lists the endpoints available for  Edit Snapshot Schedule and Retention Policy . Method Endpoint Description GET /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/snapshotSchedule Get the snapshot schedule for an instance.  CLUSTER-ID  must be the\nID of either a  replica set  or a  sharded cluster . PATCH /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/snapshotSchedule Change the parameters of snapshot creation and retention. Any\ncombination of the snapshot schedule's attributes can be modified.\n CLUSTER-ID  must be the ID of either a  replica set  or a\n sharded cluster",
            "code": [],
            "preview": "This resource allows you to view and configure various properties of snapshot\ncreation and retention for a replica set or cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/maintenance-windows-delete-one",
            "title": "Delete One Maintenance Window",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Delete one maintenance window with an end date in the future. Cloud Manager  turns on the alert notifications that the maintenance window\nmuted. You can successfully call this endpoint with any of the following\nassigned roles: Organization Owner Project Owner Project Monitoring Admin Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project. MW-ID string Unique identifier of the maintenance window you want to delete. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/maintenanceWindows/{MW-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 204 No Content\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Delete one maintenance window with an end date in the future.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/checkpoints",
            "title": "Checkpoints",
            "headings": [
                "Endpoints",
                "Get All Checkpoints",
                "Get One Checkpoint",
                "Sample Entity",
                "Entity Fields",
                "Links",
                "Examples",
                "Get All Checkpoints",
                "Request",
                "Response",
                "Response Header",
                "Response Body",
                "Get One Checkpoint",
                "Request",
                "Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource allows you to view  Checkpoints  metadata. You can\nuse checkpoints to create custom snapshots of a cluster at points in\ntime between regular snapshots. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. Get all checkpoints for a cluster. Get a single checkpoint. Name Type Description clusterId string Unique identifier of the cluster represented by the checkpoint. completed string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the point-in-time when the checkpoint\ncompleted and the balancer restarted. groupId string Unique identifier of the group that owns the checkpoint. id string Unique identifier of the checkpoint. parts array of objects Individual parts that comprise the complete checkpoint. There\nwill be one element for each shard plus one element for the\nconfig servers. string Name of the replica set. Not present for a config server. string Name of the shard. Boolean Flag that indicates whether the token exists. object Timestamp of an entry in the  oplog , as specified by the\nentry\u2019s  ts  field. The  ts  field is a  BSON  timestamp and has two components: the\ntimestamp, which is the value in seconds since the Unix epoch,\nand the increment, which is an incrementing ordinal for\noperations within a given second. string Type of server represented by the part. Possible values are: REPLICA_SET , which indicates the part is a shard. CONFIG_SERVER restorable Boolean Flag that indicates whether the checkpoint can be used for a\nrestore. started string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the point-in-time when  Cloud Manager  stopped the\n balancer  and began the checkpoint. timestamp string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the point-in-time to which the checkpoint\nrestores data. Relation Description self Checkpoint http://mms.mongodb.com/cluster Cluster the checkpoint belongs to. http://mms.mongodb.com/group Project that owns the checkpoint.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/CLUSTER-ID/checkpoints"
                },
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/CLUSTER-ID/checkpoints/CHECKPOINT-ID"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"completed\" : \"2015-07-31T23:19:51Z\",\n  \"groupId\" : \"{GROUP-ID}\",\n  \"id\" : \"{CHECKPOINT-ID}\",\n  \"parts\" : [ {\n    \"replicaSetName\" : \"shard_1\",\n    \"shardName\" : \"shard_1\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 1\n    },\n    \"typeName\" : \"REPLICA_SET\"\n  }, {\n    \"replicaSetName\" : \"shard_0\",\n    \"shardName\" : \"shard_0\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 1\n    },\n    \"typeName\" : \"REPLICA_SET\"\n  }, {\n    \"hostId\" : \"{HOST-ID}\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 6\n    },\n    \"typeName\" : \"CONFIG_SERVER\"\n  } ],\n  \"restorable\" : true,\n  \"started\" : \"2015-07-31T23:19:51Z\",\n  \"timestamp\" : \"2015-07-31T23:19:47Z\"\n}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/checkpoints\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"results\" : [ {\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"completed\" : \"2015-07-31T23:35:52Z\",\n    \"groupId\" : \"{GROUP-ID}\",\n    \"id\" : \"55bc0658e4b097a3efe06f1f\",\n    \"links\" : [],\n    \"parts\" : [ {\n      \"replicaSetName\" : \"shard_1\",\n      \"shardName\" : \"shard_1\",\n      \"tokenDiscovered\" : true,\n      \"tokenTimestamp\" : {\n        \"date\" : \"2015-07-31T23:35:52Z\",\n        \"increment\" : 1\n      },\n      \"typeName\" : \"REPLICA_SET\"\n    }, {\n      \"replicaSetName\" : \"shard_0\",\n      \"shardName\" : \"shard_0\",\n      \"tokenDiscovered\" : true,\n      \"tokenTimestamp\" : {\n        \"date\" : \"2015-07-31T23:35:52Z\",\n        \"increment\" : 1\n      },\n      \"typeName\" : \"REPLICA_SET\"\n    }, {\n      \"hostId\" : \"{HOST-ID}\",\n      \"tokenDiscovered\" : true,\n      \"tokenTimestamp\" : {\n        \"date\" : \"2015-07-31T23:35:52Z\",\n        \"increment\" : 2\n      },\n      \"typeName\" : \"CONFIG_SERVER\"\n    } ],\n    \"restorable\" : true,\n    \"started\" : \"2015-07-31T23:35:52Z\",\n    \"timestamp\" : \"2015-07-31T23:34:47Z\"\n  },\n  ...\n  ],\n  \"totalCount\" : 6\n}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-ID}/checkpoints/{CHECKPOINT-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"completed\" : \"2015-07-31T23:19:51Z\",\n  \"groupId\" : \"{GROUP-ID}\",\n  \"id\" : \"{CHECKPOINT-ID}\",\n  \"links\" : [],\n  \"parts\" : [ {\n    \"replicaSetName\" : \"shard_1\",\n    \"shardName\" : \"shard_1\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 1\n    },\n    \"typeName\" : \"REPLICA_SET\"\n  }, {\n    \"replicaSetName\" : \"shard_0\",\n    \"shardName\" : \"shard_0\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 1\n    },\n    \"typeName\" : \"REPLICA_SET\"\n  }, {\n    \"hostId\" : \"{HOST-ID}\",\n    \"tokenDiscovered\" : true,\n    \"tokenTimestamp\" : {\n      \"date\" : \"2015-07-31T23:19:51Z\",\n      \"increment\" : 6\n    },\n    \"typeName\" : \"CONFIG_SERVER\"\n  } ],\n  \"restorable\" : true,\n  \"started\" : \"2015-07-31T23:19:51Z\",\n  \"timestamp\" : \"2015-07-31T23:19:47Z\"\n}"
                }
            ],
            "preview": "This resource allows you to view Checkpoints metadata. You can\nuse checkpoints to create custom snapshots of a cluster at points in\ntime between regular snapshots.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/identity-provider-return-one-metadata",
            "title": "Return One Identity Provider's Metadata",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "The  federationSettings  resource allows you to return the contents of the\nSAML metadata XML file for one identity provider in the specified federation. You must have the  Organization Owner  role for at least one\nconnected organization in the federation configuration to call this\nendpoint. Name Type Description FEDERATION-SETTINGS-ID string Unique 24-hexadecimal digit string that identifies the federated\nauthentication configuration. IDP-ID string Unique 20-hexadecimal digit string that identifies the  IdP (Identity Provider) . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. File Type Description XML Metadata for the  IdP (Identity Provider) .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID}/metadata.xml"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/xml\" \\\n     --header \"Content-Type: application/xml\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/federationSettings/{FEDERATION-SETTINGS-ID}/identityProviders/{IDP-ID}/metadata.xml?pretty=true\""
                },
                {
                    "lang": "xml",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<md:EntityDescriptor entityID=\"https://www.example.com/saml2/service-provider/sptikhtmphyefhvhjmkt\" xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\"><md:SPSSODescriptor AuthnRequestsSigned=\"true\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"><md:KeyDescriptor use=\"encryption\"><ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Data><ds:X509Certificate>MIIDpjCCAo6gAwIBAgIGAWqTiVlwMA0GCSqGSIb3DQEBCwUAMIGTMQswCQYDVQQGEwJVUzETMBEG\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\nMBIGA1UECwwLU1NPUHJvdmlkZXIxFDASBgNVBAMMC21vbmdvZGItZGV2MRwwGgYJKoZIhvcNAQkB\nFg1pbmZvQG9rdGEuY29tMB4XDTE5MDUwNzE4MjIzM1oXDTI5MDUwNzE4MjMzM1owgZMxCzAJBgNV\nBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYD\nVQQKDARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjEUMBIGA1UEAwwLbW9uZ29kYi1kZXYxHDAa\nBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQCXHOJx/t+zFgbJzloBRpGhMFxccmvMShn2OQHinrW/s7J49YGbkj0NBWpW+Y6yTZfzGm04mYe+\n/1+m7+ERJpypvlF+tkNcevMmYtxTPjYvGk+GslkjdfDJFSygbtiQkLCQTbpPnGTtVvx+YSg83Rq0\na7QPQ0QeU7utE2NiTOGakIzTLd6Okb2VjBb/cv92P1fcrrY7aDbb27V2+ZBsdv8fg55xrwlMm2uv\nm32ZSRWfWwYgOoUtYZxEQZoOv45MPKf0O5Ok7ICyNZAd5+zI+gS+7keKAE6mF9ux7MfokashORgf\nUN2K77/xYk/1y4XSlKF1vb6+yfZr9MTkyrSCaS/tAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAH+k\niR2cvXUlxOLG6gpMCuZlDdvkayBBwRNprawhEr2LLI8yGV3hRsWxsi2GoXXOCHZ62/rsn3Lg8mvQ\nYAW3knId2ZsEh6mWlUljIjAtUZ5s6067KQV4u/70sO3wBQ0kcs/WnJPfz3Obb7uQ8cv0aa68IJrb\nu8w5NqwWqA3FP1iuG3mfHNh6GI7DhzaVnzm9F5m7pL6hohKHMxF7n/dtuRMPTpc+UvpbnNAz/0kS\n2d9fEHuMo4DXuzFZMy2ZKyFNnsVAwasAN3vdWY2S9ysGoUmCr98dS+nh4mMPSUHoPWj2myP53E08\n+ZRsuZ13zI2C25+U4rgerB8XsxU7OER2CEk=</ds:X509Certificate></ds:X509Data></ds:KeyInfo><md:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes128-cbc\"/><md:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes192-cbc\"/><md:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes256-cbc\"/><md:EncryptionMethod Algorithm=\"http://www.w3.org/2009/xmlenc11#aes128-gcm\"/><md:EncryptionMethod Algorithm=\"http://www.w3.org/2009/xmlenc11#aes256-gcm\"/><md:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\"/></md:KeyDescriptor><md:KeyDescriptor use=\"signing\"><ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Data><ds:X509Certificate>MIIDpjCCAo6gAwIBAgIGAWqTiVlwMA0GCSqGSIb3DQEBCwUAMIGTMQswCQYDVQQGEwJVUzETMBEG\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\nMBIGA1UECwwLU1NPUHJvdmlkZXIxFDASBgNVBAMMC21vbmdvZGItZGV2MRwwGgYJKoZIhvcNAQkB\nFg1pbmZvQG9rdGEuY29tMB4XFKDLJFHwNzE4MjIzM1oXDTI5MDUwNzE4MjMzM1owgZMxCzAJBgNV\nBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYD\nVQQKDARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjEUMBIGA1UEAwwLbW9uZ29kYi1kZXYxHDAa\nBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQCXHOJx/t+zFgbJzloBRpGhMFxccmvMShn2OQHinrW/s7J49YGbkj0NBWpW+Y6yTZfzGm04mYe+\n/1+m7+ERJpypvlF+tkNcevMmYtxTPjYvGk+GQmZSLKJDJAygbtiQkLCQTbpPnGTtVvx+YSg83Rq0\na7QPQ0QeU7utE2NiTOGakIzTLd6Okb2VjBb/cv92P1fcrrY7aDbb27V2+ZBsdv8fg55xrwlMm2uv\nm32ZSRWfWwYgOoUtYZxEQZoOv45MPKf0O5Ok7ICyNZAd5+zI+gS+7keKAE6mF9ux7MfokashORgf\nUN2K77/xYk/1y4XSlKF1vb6+yfZr9MTkyrSCaS/tAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAH+k\niR2cvXUlxOLG6gpMCuZlDdvkayBBwRNprawhEr2LLI8yGV3hRsWxsi2GoXXOCHZ62/rsn3Lg8mvQ\nYAW3knId2ZsEh6mWlUljIjAtUZ5s6067KQV4u/70sO3wBQ0kcs/WnJPfz3Obb7uQ8cv0aa68IJrb\nu8w5NqwWqA3FP1iuG3mfHNh6GI7DhzaVnzm9F5m7pL6hohKHMxF7n/dtuRMPTpc+UvpbnNAz/0kS\n2d9fEHuMo4DXuzFZMy2ZKyFNnsVAwasAN3vdWY2S9ysGoUmCr98dS+nh4mMPSUHoPWj2myP53E08\nl:lang=\"en\">http://www.mongodb.com/</md:OrganizationURL></md:Organization>"
                }
            ],
            "preview": "The federationSettings resource allows you to return the contents of the\nSAML metadata XML file for one identity provider in the specified federation.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-enable-disable-config",
            "title": "Enable/Disable Alert Configuration",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint updates the only the enabled/disabled state for the\nalert configuration. To update more than just this configuration,\nsee  Update an Alert Configuration . All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. ALERT-CONFIG-ID string Unique identifier for this alert configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false All request body parameters are  required . Parameter Type Description enabled boolean Specify  true  to enable;   false   to disable. Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was created. enabled boolean Flag indicating this alert configuration enabled. eventTypeName string Type of event that triggers an alert. groupId string Unique identifier of the Project that owns this alert\nconfiguration. id string Unique identifier of the alert configuration. links array of objects One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . matchers array of objects Rules to apply when matching an object against this alert\nconfiguration. string Name of the field in the target object that you wanted this\nconfiguration to match. string Comparison operator to apply when checking the current metric\nvalue against  matcher.[n].value . string Value to match or exceed using  matchers.[n].operator . metricThreshold object Value and means of comparison that triggers an alert. string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. string Average value of this metric. string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value of  metricThreshold.metricName  that, when exceeded,\ntriggers an alert. string Units of capacity or time that define the scope of the\n metricThreshold.threshold . notifications array of objects One or more targets for  Cloud Manager  to send notifications when\nan alert condition is detected. string Slack API token token.  Cloud Manager  returns this value if you\nset  notifications.[n].typeName  to  SLACK . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Slack channel name.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SLACK . string DataDog API Key.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  DATADOG . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. string Email address to which to send notification.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  EMAIL . boolean Flag indicating email notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  ORG ,  GROUP , or  USER . number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. string Microsoft Teams channel incoming webhook URL.\n Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  MICROSOFT_TEAMS . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. string Mobile number to which alert notifications are sent.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SMS . string HipChat API token.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  HIP_CHAT . If the token later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string OpsGenie Alert API \nkey.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  OPS_GENIE . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Region that indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n OPS_GENIE . array of strings Cloud Manager  role in current Project or Organization.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n ORG  or  GROUP . string HipChat room name.  Cloud Manager  returns this value if\n \"notifications.typeName\" : \"HIP_CHAT . string PagerDuty service key.  Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  PAGER_DUTY . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . boolean Flag indicating text notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName  to\n ORG ,  GROUP , or  USER . string Unique identifier of the team that receives this\nnotification. string Label for the team that receives this notification. string Means by which you want  Cloud Manager  to send you notification of an\nalert. string Name of  a Cloud Manager  user to which to send notifications.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  USER . string VictorOps  API (Application Programming Interface)  key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string VictorOps routing key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string A value used to authenticate with the Webhook that accepts\nand forwards the notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookSecret  to a non-empty\nstring You set a default  webhookSecret  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. string URL (Uniform Resource Locator)  for the webhook that triggers this notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookURL  to a non-empty string You set a default  webhookUrl  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. threshold object Threshold that triggers an alert.  Cloud Manager  returns this value\nif  eventTypeName  is any value other than\n OUTSIDE_METRIC_THRESHOLD . string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value that, when exceeded,  Cloud Manager  triggers an alert. string Units of capacity or time that define the scope of the\n threshold.threshold . typeName string This field is deprecated and is ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was last\nupdated.",
            "code": [
                {
                    "lang": "none",
                    "value": "PATCH /groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs/{ALERT-CONFIG-ID}\" \\\n     --data '\n       {\n         \"enabled\" : false\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2014-04-23T14:52:29Z\",\n  \"enabled\" : false,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{ALERT-CONFIG-ID}\",\n  \"links\" : [],\n  \"matchers\" : [ {\n    \"fieldName\" : \"REPLICA_SET_NAME\",\n    \"operator\" : \"EQUALS\",\n    \"value\" : \"rs1\"\n  } ],\n  \"notifications\" : [ {\n    \"delayMin\" : 5,\n    \"emailAddress\" : \"sos@example.com\",\n    \"intervalMin\" : 60,\n    \"typeName\" : \"EMAIL\"\n  }, {\n    \"delayMin\" : 60,\n    \"emailEnabled\" : false,\n    \"intervalMin\" : 120,\n    \"smsEnabled\" : true,\n    \"typeName\" : \"GROUP\"\n  } ],\n  \"updated\" : \"2014-04-23T14:52:29Z\"\n}"
                }
            ],
            "preview": "All request path parameters are required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/access-list-get-for-ip-address",
            "title": "Get Access List for an IP Address",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves an access list entity if the value of  IP-ADDRESS  equals the\nvalue of the entity's  ipAddress  field. This does not retrieve an\nobject where the value of  IP-ADDRESS  is contained within the values\nallowed by the  cidrBlock  field. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description USER-ID string (Required.)  Unique identifier of the current user. To retrieve\nthe ID of the current user, see\n Get All Users in One Project . ACCESS-LIST-ENTRY string The IP or  CIDR (Classless Inter-Domain Routing)  address.\nIf the entry includes a subnet mask, such as  192.0.2.0/24 ,\nuse the URL-encoded value  %2F  for the forward slash  / . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description cidrBlock string A CIDR-notated range of IP addresses. created date The date this IP address was added to the access list. ipAddress string An IP address in the access list. lastUsed date The date of the most recent request that originated from this IP\naddress. Note that this field is  only  updated when a resource that is\nprotected by the access list is accessed. lastUsedAddress string The address from which the last call to the API was issued. count number The total number of requests that originated from this IP address.\nNote that this field is  only  updated when a resource that is\nprotected by the access list is accessed. links array Links to related sub-resources. All links arrays in responses\ncontain at least one link called  self . The relations between\nURLs are explained in the  Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /users/{USER-ID}/accessList/{ACCESS-LIST-ENTRY}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList/192.0.2.0%2F24\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList/?pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"cidrBlock\": \"192.0.2.0/24\",\n      \"count\": 0,\n      \"created\": \"2019-11-01T15:18:12Z\",\n      \"links\": [\n        {\n          \"href\": \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList/192.0.2.0%2F24\",\n          \"rel\": \"self\"\n        }\n      ]\n    },\n  ],\n  \"totalCount\": 1\n}"
                }
            ],
            "preview": "Retrieves an access list entity if the value of IP-ADDRESS equals the\nvalue of the entity's ipAddress field. This does not retrieve an\nobject where the value of IP-ADDRESS is contained within the values\nallowed by the cidrBlock field.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/cloud-migration",
            "title": "Live Data Migration from Cloud Manager to MongoDB Atlas",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "Connects  a Cloud Manager  organization to an  MongoDB Atlas  organization. This\nconnection allows you to migrate your data from  a Cloud Manager  deployment to\nan  MongoDB Atlas  cluster. Base URL:  https://cloud.mongodb.com/api/public/v1.0 The following endpoints are available to connect organizations between\n Cloud Manager  and  MongoDB Atlas . Method Endpoint Description POST /orgs/{orgId}/liveExport/migrationLink Connect the source  Cloud Manager  organization with a target  MongoDB Atlas \norganization. DELETE /orgs/{orgId}/liveExport/migrationLink Remove the connection between the source  Cloud Manager  organization and\nthe target  MongoDB Atlas  organization. This stops the source\norganization from synchronizing data with the target\norganization. GET /orgs/{orgId}/liveExport/migrationLink/status Return the status of the connection between the specified source\n Cloud Manager  organization and the target  MongoDB Atlas  organization.",
            "code": [],
            "preview": "Connects a Cloud Manager organization to an MongoDB Atlas organization. This\nconnection allows you to migrate your data from a Cloud Manager deployment to\nan MongoDB Atlas cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/alert-configurations-get-all-configs",
            "title": "Get All Alert Configurations for a Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 All request path parameters are  required . Parameter Type Description PROJECT-ID string Unique identifier for this Project. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one alert configuration. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Alert configurations vary. An alert configuration may only\ninclude a subset of these elements. Name Type Description created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was created. enabled boolean Flag indicating this alert configuration enabled. eventTypeName string Type of event that triggers an alert. groupId string Unique identifier of the Project that owns this alert\nconfiguration. id string Unique identifier of the alert configuration. links array of objects One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . matchers array of objects Rules to apply when matching an object against this alert\nconfiguration. string Name of the field in the target object that you wanted this\nconfiguration to match. string Comparison operator to apply when checking the current metric\nvalue against  matcher.[n].value . string Value to match or exceed using  matchers.[n].operator . metricThreshold object Value and means of comparison that triggers an alert. string Name of the metric to check. Supports the same values as\nthe  metricName  field of the  alerts  resource. string Average value of this metric. string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value of  metricThreshold.metricName  that, when exceeded,\ntriggers an alert. string Units of capacity or time that define the scope of the\n metricThreshold.threshold . notifications array of objects One or more targets for  Cloud Manager  to send notifications when\nan alert condition is detected. string Slack API token token.  Cloud Manager  returns this value if you\nset  notifications.[n].typeName  to  SLACK . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Slack channel name.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SLACK . string DataDog API Key.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  DATADOG . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . number Number of minutes to wait after an alert condition is\ndetected before sending out the first notification. string Email address to which to send notification.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  EMAIL . boolean Flag indicating email notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName \nto  ORG ,  GROUP , or  USER . number Number of minutes to wait between successive notifications\nfor unacknowledged alerts that are not resolved. string Microsoft Teams channel incoming webhook URL.\n Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  MICROSOFT_TEAMS . When you view or edit the alert for a webhook\nnotification, the URL appears partially redacted, and the\nsecret appears completely redacted. string Mobile number to which alert notifications are sent.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  SMS . string HipChat API token.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  HIP_CHAT . If the token later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the token. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string OpsGenie Alert API \nkey.  Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  OPS_GENIE . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string Region that indicates which  API (Application Programming Interface)   URL (Uniform Resource Locator)  to use.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n OPS_GENIE . array of strings Cloud Manager  role in current Project or Organization.  Cloud Manager  returns\nthis value if you set  notifications.[n].typeName  to\n ORG  or  GROUP . string HipChat room name.  Cloud Manager  returns this value if\n \"notifications.typeName\" : \"HIP_CHAT . string PagerDuty service key.  Cloud Manager  returns this value if\nyou set  notifications.[n].typeName  to  PAGER_DUTY . After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . boolean Flag indicating text notifications must be sent.  Cloud Manager \nreturns this value if you set  notifications.[n].typeName  to\n ORG ,  GROUP , or  USER . string Unique identifier of the team that receives this\nnotification. string Label for the team that receives this notification. string Means by which you want  Cloud Manager  to send you notification of an\nalert. string Name of  a Cloud Manager  user to which to send notifications.\n Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  USER . string VictorOps  API (Application Programming Interface)  key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string VictorOps routing key. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  VICTOR_OPS . If the key later becomes invalid,  MongoDB Atlas  sends an email to the\n Project Owner  and eventually removes the key. After you create a third-party integration that requires an API or\nintegration key, the key appears partially redacted when you: View or edit the alert through the UI. Query the third-party integration settings through the  API (Application Programming Interface) . string A value used to authenticate with the Webhook that accepts\nand forwards the notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookSecret  to a non-empty\nstring You set a default  webhookSecret  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. string URL (Uniform Resource Locator)  for the webhook that triggers this notification. Cloud Manager  returns this value if you set\n notifications.[n].typeName  to  WEBHOOK  and either: You set  notification.[n].webhookURL  to a non-empty string You set a default  webhookUrl  either on the\n Integrations  page, or with\nthe  Integrations API After creating a webhook notification, the URL will appear\npartially redacted when you view or edit the alert, and the\nsecret will appear completely redacted. threshold object Threshold that triggers an alert.  Cloud Manager  returns this value\nif  eventTypeName  is any value other than\n OUTSIDE_METRIC_THRESHOLD . string Comparison operator that  Cloud Manager  applied when checking the\ncurrent metric value against the threshold value. number Value that, when exceeded,  Cloud Manager  triggers an alert. string Units of capacity or time that define the scope of the\n threshold.threshold . typeName string This field is deprecated and is ignored. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this alert configuration was last\nupdated.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/alertConfigs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/alertConfigs\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [],\n  \"results\": [ {\n    \"created\" : \"2013-10-30T15:28:30Z\",\n    \"enabled\" : true,\n    \"eventTypeName\" : \"RESYNC_REQUIRED\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"5271259ee4b00ece6b4754ef\",\n    \"links\" : [],\n    \"matchers\" : [ ],\n    \"notifications\" : [ {\n      \"delayMin\" : 0,\n      \"emailAddress\" : \"somebody@example.com\",\n      \"intervalMin\" : 60,\n      \"typeName\" : \"EMAIL\"\n    } ],\n    \"updated\" : \"2014-02-12T16:11:05Z\"\n  }, {\n    \"created\" : \"2014-03-19T16:42:07Z\",\n    \"enabled\" : true,\n    \"eventTypeName\" : \"MONITORING_AGENT_DOWN\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"5329c8dfe4b0b07a83d67e7e\",\n    \"links\" : [],\n    \"matchers\" : [ ],\n    \"notifications\" : [ {\n      \"delayMin\" : 0,\n      \"emailEnabled\" : true,\n      \"intervalMin\" : 5,\n      \"smsEnabled\" : false,\n      \"typeName\" : \"GROUP\"\n    } ],\n    \"updated\" : \"2014-03-19T16:42:07Z\"\n  }, {\n    \"created\" : \"2014-04-03T20:26:50Z\",\n    \"enabled\" : true,\n    \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"533dc40ae4b00835ff81eaee\",\n    \"links\" : [],\n    \"matchers\" : [ {\n      \"field\" : \"hostnameAndPort\",\n      \"operator\" : \"EQUALS\",\n      \"value\" : \"mongo.example.com:27017\"\n    } ],\n    \"notifications\" : [ {\n      \"delayMin\" : 0,\n      \"intervalMin\" : 5,\n      \"mobileNumber\" : \"2343454567\",\n      \"typeName\" : \"SMS\"\n    } ],\n    \"metricThreshold\" : {\n      \"metricName\" : \"ASSERT_REGULAR\",\n      \"mode\" : \"AVERAGE\",\n      \"operator\" : \"LESS_THAN\",\n      \"threshold\" : 99.0,\n      \"units\" : \"RAW\"\n    },\n    \"updated\" : \"2014-04-03T20:26:50Z\",\n  } ],\n  \"totalCount\": 3\n}"
                }
            ],
            "preview": "Each result is one alert configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/remove-one-snapshot-from-one-cluster",
            "title": "Remove One Snapshot from a Cluster",
            "headings": [
                "Resource",
                "Required Permissions",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 You must have the  Global Backup Admin  or\n Global Owner  role to delete a snapshot that is within\nPoint-in-Time restore window. Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the  snapshot . CLUSTER-ID string Unique identifier of the cluster that the  snapshot  represents. SNAPSHOT-ID string Unique identifier of the  snapshot . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}\""
                }
            ],
            "preview": "You must have the Global Backup Admin or\nGlobal Owner role to delete a snapshot that is within\nPoint-in-Time restore window.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/user-get-by-id",
            "title": "Get a User by ID",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "You can always retrieve your own user account. Otherwise, you must have\nthe  Project User Admin  role in at least one project that is\ncommon between you and the user you are retrieving. You cannot use this endpoint to return information on an\n API Key . Request the\n Get One API Key \nendpoint to get this information. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description USER-ID string (Required.)  Unique identifier of the user that you want to retrieve. To retrieve the  USER-ID \nfor a user, see  Get All Users in One Project . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. The HTTP document contains each of the following elements: Name Type Description emailAddress string Email address of the  Cloud Manager  user. firstName string First name of the  Cloud Manager  user. id string Unique identifier of the  Cloud Manager  user. lastName string Last name of the  Cloud Manager  user. links object array Links to related sub-resources. All  links  arrays in\nresponses include at least one link called self. The\nrelationship between URLs are explained in the\n Web Linking Specification . mobileNumber string Mobile number of the  Cloud Manager  user. roles object array Role assignments. roles.groupId string Unique identifier for the project in which the user has the specified role. roles.orgId string Unique identifier for the organization in which the user has\nthe specified role. roles.roleName string Name of the role. Values are: The  users  resource returns all the roles the user\nhas in both  Cloud Manager  and  MongoDB Atlas . Value Description ORG_MEMBER Organization Member ORG_READ_ONLY Organization Read Only ORG_BILLING_ADMIN Organization Billing Admin ORG_GROUP_CREATOR Organization Project Creator ORG_OWNER Organization Owner GROUP_ATLAS_ADMIN Project Admin (Atlas) GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write username string Username of the  Cloud Manager  user.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /users/{USER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/users/533dc19ce4b00835ff81e2eb\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"533dc19ce4b00835ff81e2eb\",\n  \"username\" : \"jane\",\n  \"emailAddress\" : \"jane@qa.example.com\",\n  \"firstName\" : \"Jane\",\n  \"lastName\" : \"D'oh\",\n  \"roles\" : [ {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_USER_ADMIN\"\n  },{\n    \"orgId\" : \"55555bbe3bd5253aea2d9b16\",\n    \"roleName\" : \"ORG_MEMBER\"\n  } ],\n  \"links\" : [],\n  \"username\": \"jane\"\n}"
                }
            ],
            "preview": "You can always retrieve your own user account. Otherwise, you must have\nthe Project User Admin role in at least one project that is\ncommon between you and the user you are retrieving.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/get-all-snapshots-for-one-cluster",
            "title": "Get All Snapshots for One Cluster",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the  snapshot . CLUSTER-ID string Unique identifier of the cluster that the  snapshot  represents. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one sync store. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description clusterId string Unique identifier of the cluster the  snapshot \nrepresents. complete boolean Flag that indicates the  snapshot  has been created. This\nis  false  if the snapshot creation job is still in progress. created document Components of a  timestamp . timestamp iso8601-time when the  snapshot  was taken. integer Operation order in which this  snapshot  took place at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . doNotDelete boolean Flag that indicates the  snapshot  cannot be deleted. expires timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  after which this  snapshot  can be\ndeleted. If  doNotDelete  is set to  true , any value in  expires \nis removed. If the  expires  value is earlier than the current date and\ntime, it cannot be edited. groupId string Unique identifier of the  project  that owns the\n snapshot . id string Unique identifier of the  snapshot . boolean Flag that indicates the consistency of this  snapshot . To take a snapshot of a  sharded cluster  in a consistent\nstate, the Backup temporarily turns off the\nbalancer before creating the  snapshot . In some cases, it\ncannot turn off the balancer in a timely manner. The snapshot is\nthen created with the balancer still running. If this happens, the snapshot may be in an inconsistent state\n(e.g., chunk migrations may be in progress). This appears for  sharded cluster  snapshots only. document Components of the\n timestamp   of the last\noplog entry was applied. timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last  oplog  was applied. integer Operation order in which last  oplog  was applied at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . namespaceFilterList object namespaces  that are included or excluded\nfrom this  snapshot . string array Comma-separated list of any combination of databases or\n namespaces  that are exclusively included or\nexplicitly excluded from the snapshot. The default value is an empty array ( [] ). string Label that determines how  namespaces  are\nfiltered for this snapshot. The default value is  blacklist . If this value is set to  blacklist , namespaces in\n namespaceFilterList.filterList  are excluded from the\nsnapshot. If this value is set to  whitelist , only namespaces in\n namespaceFilterList.filterList  are included in the\nsnapshot. missingShards array of objects List of shards that the  snapshot  is missing. In steady state, this array is empty. If the Backup cannot\nconnect to a shard when a  snapshot  is created, the shard\nis omitted from the snapshot. Each  document  in the array\nis a  cluster  document containing a  self  link. This appears for  sharded cluster  snapshots only. string Unique identifier of the missing  shard . string Unique identifier of the project that owns the missing\n shard . string Type of server that the missing  shard  represents: CONFIG_SERVER_REPLICA_SET REPLICA_SET string Name of the cluster for the missing  shard . string Name of the missing  shard . string Name of the replica set in the missing  shard . timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last heartbeat was received\nfrom the missing  shard . parts array of objects Individual parts that comprise the complete  snapshot . For a  replica set , this array contains a single\ndocument. For a  sharded cluster , this array contains one\ndocument for each shard plus one document for the\n config server . string Unique identifier of the  replica set . string Method of compression for the  snapshot . number Total size of the data in the  snapshot  in bytes. boolean Indicator of the state of encryption of the  snapshot \ndata. number Total size of the data files in bytes. string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data. This appears only if this snapshot has\n parts.encryptionEnabled : true . string Version of  mongod  that the  replica set \n primary  was running when the  snapshot  was\ncreated. string Name of the  replica set . number Total size of space allocated for document storage. string Type of server that the part represents: REPLICA_SET CONFIG_SERVER_REPLICA_SET",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"complete\" : true,\n    \"created\" : {\n      \"date\" : \"2016-08-21T23:47:38Z\",\n      \"increment\" : 1\n    },\n    \"doNotDelete\" : false,\n    \"expires\" : \"2017-08-20T23:47:38Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"{SNAPSHOT-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"namespaceFilterList\" : {\n      \"filterList\" : [ ],\n      \"filterType\" : \"blacklist\"\n    },\n    \"parts\" : [ {\n      \"clusterId\" : \"{CLUSTER-ID}\",\n      \"compressionSetting\" : \"GZIP\",\n      \"dataSizeBytes\" : 503779557,\n      \"encryptionEnabled\" : false,\n      \"fileSizeBytes\" : 2855605344,\n      \"mongodVersion\" : \"4.0.9\",\n      \"replicaSetName\" : \"proton\",\n      \"storageSizeBytes\" : 547516416,\n      \"typeName\" : \"REPLICA_SET\"\n    } ]\n  }, {\n  } ],\n  \"totalCount\" : 28\n}"
                }
            ],
            "preview": "Each result is one sync store.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/get-all-snapshots-for-config-server",
            "title": "Get All Snapshots for One Config Server",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "As of MongoDB 3.4, mirrored config server deployments (also known as\n SCCC (Sync Cluster Connection Config) ) are no longer\nsupported. The following API method works with  SCCC (Sync\nCluster Connection Config)  config servers only. Replica set config\nservers (also known as  CSRS (Config Server Replica Sets) ) use\nthe  Get All Snapshots for One Cluster \nmethod. To learn how to convert your config servers from  SCCC\n(Sync Cluster Connection Config)  to a  CSRS (Config Server\nReplica Set) , see  Upgrade Config Servers to Replica Set  in the MongoDB\nServer Manual. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the  snapshot . HOST-ID string Unique identifier of the host that that the  snapshot  represents. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one snapshot. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description clusterId objectId ID of the cluster the  snapshot  represents. complete boolean Indicator that the  snapshot  has been created. This is\n false  if the snapshot creation job is still in progress. created document The components of a  timestamp . created.date timestamp The exact point in time when the snapshot was taken in\n ISO 8601 \ndate and time format at  UTC (Coordinated Universal Time) . created.increment integer The operation order in which this  snapshot  took place at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . doNotDelete boolean Indicator that the  snapshot  cannot be deleted. If  doNotDelete  is set to  true , any value in  expires \nis ignored. expires timestamp The date in  ISO 8601  date\nand time format at  UTC (Coordinated Universal Time)  after\nwhich this  snapshot  can be deleted. If  doNotDelete  is set to  true , any value in  expires \nis removed. If the  expires  value is earlier than the current date and\ntime, it can no longer be edited. groupId objectId ID of the  project  that owns the  snapshot . id objectId ID of the  snapshot . lastOplogAppliedTimestamp document The components of the\n timestamp   of the last\noplog entry was applied. lastOplogAppliedTimestamp.date timestamp The exact point in time when the last  oplog  was applied\nin  ISO 8601  date\nand time format at  UTC (Coordinated Universal Time) . lastOplogAppliedTimestamp.increment integer The operation order in which last  oplog  was applied at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . namespaceFilterList object array The  namespaces  that are included or excluded\nfrom this  snapshot . namespaceFilterList.filterList string array A comma-separated list of any combination of databases or\n namespaces  that are exclusively included or\nexplicitly excluded from the snapshot. The default value is an empty array ( [] ). namespaceFilterList.filterType string A value that determines how  namespaces  are\nfiltered for this snapshot. The default value is  blacklist . If this value is set to  blacklist , namespaces in\n namespaceFilterList.filterList  are excluded from the\nsnapshot. If this value is set to  whitelist , only namespaces in\n namespaceFilterList.filterList  are included in the\nsnapshot. parts object array The individual parts that comprise the complete  snapshot .\nThis array contains a single document. parts.dataSizeBytes number The total size of the data in the  snapshot  in bytes. parts.encryptionEnabled boolean Indicator of the state of encryption of the  snapshot \ndata. parts.fileSizeBytes number The total size of the data files in bytes. parts.hostId string ID of a config server. parts.masterKeyUUID objectId The  KMIP (Key Management Interoperability Protocol) \nmaster key ID used to encrypt the snapshot data. This parameter appears only if this snapshot has\n parts.encryptionEnabled : true . parts.mongodVersion string The version of  mongod  that was running when the\n snapshot  was created. parts.storageSizeBytes number The total size of space allocated for document storage. parts.typeName string The type of server that the part represents: CONFIG_SERVER",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"complete\" : true,\n    \"created\" : {\n      \"date\" : \"2016-08-21T23:47:38Z\",\n      \"increment\" : 1\n    },\n    \"doNotDelete\" : false,\n    \"expires\" : \"2017-08-20T23:47:38Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"{SNAPSHOT-ID}\",\n    \"lastOplogAppliedTimestamp\" : {\n      \"date\" : \"2017-08-21T09:14:51Z\",\n      \"increment\" : 1\n    },\n    \"links\" : [ {\n      \"href\" : \"https://https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots/{SNAPSHOT-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"namespaceFilterList\" : {\n      \"filterList\" : [ ],\n      \"filterType\" : \"blacklist\"\n    },\n    \"parts\" : [ {\n      \"clusterId\" : \"{CLUSTER-ID}\",\n      \"compressionSetting\" : \"GZIP\",\n      \"dataSizeBytes\" : 503779557,\n      \"encryptionEnabled\" : false,\n      \"fileSizeBytes\" : 2855605344,\n      \"mongodVersion\" : \"4.0.9\",\n      \"replicaSetName\" : \"proton\",\n      \"storageSizeBytes\" : 547516416,\n      \"typeName\" : \"REPLICA_SET\"\n    } ]\n  }, {\n\n  } ],\n  \"totalCount\" : 28\n}"
                }
            ],
            "preview": "Each result is one snapshot.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/change-expiry-for-one-snapshot",
            "title": "Change the Expiry of One Snapshot",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "links Array",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the  snapshot . CLUSTER-ID string Unique identifier of the cluster that the  snapshot  represents. SNAPSHOT-ID string Unique identifier of the  snapshot . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description doNotDelete boolean Indicator that the snapshot cannot be deleted. You cannot set  doNotDelete  to  true   and  set a\ntimestamp for  expires  in the same request. If you do,\n Cloud Manager  returns an error:  Cannot modify snapshot because of\ninvalid fields. expires timestamp The date in  ISO 8601  date\nand time format at  UTC (Coordinated Universal Time)  after\nwhich this snapshot can be deleted. If  doNotDelete  is set to  true , any existing value in\n expires  is removed. If  expires  is set to a timestamp at or before the current\ndate and time,  Cloud Manager  deletes the snapshot at its next\nopportunity. There is no guarantee that the snapshot would be\ndeleted immediately. If the current  expires  timestamp has already passed, it\ncannot be edited. Name Type Description clusterId string Unique identifier of the cluster the  snapshot \nrepresents. complete boolean Flag that indicates the  snapshot  has been created. This\nis  false  if the snapshot creation job is still in progress. created document Components of a  timestamp . timestamp iso8601-time when the  snapshot  was taken. integer Operation order in which this  snapshot  took place at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . doNotDelete boolean Flag that indicates the  snapshot  cannot be deleted. expires timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  after which this  snapshot  can be\ndeleted. If  doNotDelete  is set to  true , any value in  expires \nis removed. If the  expires  value is earlier than the current date and\ntime, it cannot be edited. groupId string Unique identifier of the  project  that owns the\n snapshot . id string Unique identifier of the  snapshot . boolean Flag that indicates the consistency of this  snapshot . To take a snapshot of a  sharded cluster  in a consistent\nstate, the Backup temporarily turns off the\nbalancer before creating the  snapshot . In some cases, it\ncannot turn off the balancer in a timely manner. The snapshot is\nthen created with the balancer still running. If this happens, the snapshot may be in an inconsistent state\n(e.g., chunk migrations may be in progress). This appears for  sharded cluster  snapshots only. document Components of the\n timestamp   of the last\noplog entry was applied. timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last  oplog  was applied. integer Operation order in which last  oplog  was applied at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . namespaceFilterList object namespaces  that are included or excluded\nfrom this  snapshot . string array Comma-separated list of any combination of databases or\n namespaces  that are exclusively included or\nexplicitly excluded from the snapshot. The default value is an empty array ( [] ). string Label that determines how  namespaces  are\nfiltered for this snapshot. The default value is  blacklist . If this value is set to  blacklist , namespaces in\n namespaceFilterList.filterList  are excluded from the\nsnapshot. If this value is set to  whitelist , only namespaces in\n namespaceFilterList.filterList  are included in the\nsnapshot. missingShards array of objects List of shards that the  snapshot  is missing. In steady state, this array is empty. If the Backup cannot\nconnect to a shard when a  snapshot  is created, the shard\nis omitted from the snapshot. Each  document  in the array\nis a  cluster  document containing a  self  link. This appears for  sharded cluster  snapshots only. string Unique identifier of the missing  shard . string Unique identifier of the project that owns the missing\n shard . string Type of server that the missing  shard  represents: CONFIG_SERVER_REPLICA_SET REPLICA_SET string Name of the cluster for the missing  shard . string Name of the missing  shard . string Name of the replica set in the missing  shard . timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last heartbeat was received\nfrom the missing  shard . parts array of objects Individual parts that comprise the complete  snapshot . For a  replica set , this array contains a single\ndocument. For a  sharded cluster , this array contains one\ndocument for each shard plus one document for the\n config server . string Unique identifier of the  replica set . string Method of compression for the  snapshot . number Total size of the data in the  snapshot  in bytes. boolean Indicator of the state of encryption of the  snapshot \ndata. number Total size of the data files in bytes. string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data. This appears only if this snapshot has\n parts.encryptionEnabled : true . string Version of  mongod  that the  replica set \n primary  was running when the  snapshot  was\ncreated. string Name of the  replica set . number Total size of space allocated for document storage. string Type of server that the part represents: REPLICA_SET CONFIG_SERVER_REPLICA_SET The  links  array includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained in the  Web\nLinking Specification Relation Description self The URL endpoint for this resource.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}?pretty=true\" \\\n     --data '\n     {\n       \"doNotDelete\": true\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"{SNAPSHOT-ID}\",\n  \"CLUSTER-ID\" : \"{CLUSTER-ID}\",\n  \"complete\" : true,\n  \"created\" : {\n    \"date\" : \"2014-07-09T15:24:37Z\",\n    \"increment\" : 1\n  },\n  \"doNotDelete\" : true,\n  \"GROUP-ID\" : \"{PROJECT-ID}\",\n  \"lastOplogAppliedTimestamp\" : {\n    \"date\" : \"2017-08-21T09:14:51Z\",\n    \"increment\" : 1\n  },\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}\",\n   \"rel\" : \"self\"\n  } ],\n  \"namespaceFilterList\" : {\n    \"filterList\" : [ ],\n    \"filterType\" : \"blacklist\"\n  },\n  \"parts\" : [ {\n    \"CLUSTER-ID\" : \"{CLUSTER-ID}\",\n    \"dataSizeBytes\" : 17344,\n    \"fileSizeBytes\" : 67108864,\n    \"mongodVersion\" : \"2.6.3\",\n    \"replicaSetName\" : \"rs0\",\n    \"storageSizeBytes\" : 10502144,\n    \"typeName\" : \"REPLICA_SET\"\n  } ],\n}"
                }
            ],
            "preview": "The links array includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained in the Web\nLinking Specification",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/get-one-snapshot-for-one-cluster",
            "title": "Get One Snapshot for One Cluster",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier of the  project  that owns the\n snapshot . CLUSTER-ID string Required Unique identifier of the cluster that the  snapshot \nrepresents. SNAPSHOT-ID string Required Unique identifier of the  snapshot . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description clusterId string Unique identifier of the cluster the  snapshot \nrepresents. complete boolean Flag that indicates the  snapshot  has been created. This\nis  false  if the snapshot creation job is still in progress. created document Components of a  timestamp . timestamp iso8601-time when the  snapshot  was taken. integer Operation order in which this  snapshot  took place at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . doNotDelete boolean Flag that indicates the  snapshot  cannot be deleted. expires timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  after which this  snapshot  can be\ndeleted. If  doNotDelete  is set to  true , any value in  expires \nis removed. If the  expires  value is earlier than the current date and\ntime, it cannot be edited. groupId string Unique identifier of the  project  that owns the\n snapshot . id string Unique identifier of the  snapshot . boolean Flag that indicates the consistency of this  snapshot . To take a snapshot of a  sharded cluster  in a consistent\nstate, the Backup temporarily turns off the\nbalancer before creating the  snapshot . In some cases, it\ncannot turn off the balancer in a timely manner. The snapshot is\nthen created with the balancer still running. If this happens, the snapshot may be in an inconsistent state\n(e.g., chunk migrations may be in progress). This appears for  sharded cluster  snapshots only. document Components of the\n timestamp   of the last\noplog entry was applied. timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last  oplog  was applied. integer Operation order in which last  oplog  was applied at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . namespaceFilterList object namespaces  that are included or excluded\nfrom this  snapshot . string array Comma-separated list of any combination of databases or\n namespaces  that are exclusively included or\nexplicitly excluded from the snapshot. The default value is an empty array ( [] ). string Label that determines how  namespaces  are\nfiltered for this snapshot. The default value is  blacklist . If this value is set to  blacklist , namespaces in\n namespaceFilterList.filterList  are excluded from the\nsnapshot. If this value is set to  whitelist , only namespaces in\n namespaceFilterList.filterList  are included in the\nsnapshot. missingShards array of objects List of shards that the  snapshot  is missing. In steady state, this array is empty. If the Backup cannot\nconnect to a shard when a  snapshot  is created, the shard\nis omitted from the snapshot. Each  document  in the array\nis a  cluster  document containing a  self  link. This appears for  sharded cluster  snapshots only. string Unique identifier of the missing  shard . string Unique identifier of the project that owns the missing\n shard . string Type of server that the missing  shard  represents: CONFIG_SERVER_REPLICA_SET REPLICA_SET string Name of the cluster for the missing  shard . string Name of the missing  shard . string Name of the replica set in the missing  shard . timestamp Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  at  UTC (Coordinated Universal Time)  when the last heartbeat was received\nfrom the missing  shard . parts array of objects Individual parts that comprise the complete  snapshot . For a  replica set , this array contains a single\ndocument. For a  sharded cluster , this array contains one\ndocument for each shard plus one document for the\n config server . string Unique identifier of the  replica set . string Method of compression for the  snapshot . number Total size of the data in the  snapshot  in bytes. boolean Indicator of the state of encryption of the  snapshot \ndata. number Total size of the data files in bytes. string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data. This appears only if this snapshot has\n parts.encryptionEnabled : true . string Version of  mongod  that the  replica set \n primary  was running when the  snapshot  was\ncreated. string Name of the  replica set . number Total size of space allocated for document storage. string Type of server that the part represents: REPLICA_SET CONFIG_SERVER_REPLICA_SET",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"complete\" : true,\n  \"created\" : {\n    \"date\" : \"2016-08-21T23:47:38Z\",\n    \"increment\" : 1\n  },\n  \"doNotDelete\" : false,\n  \"expires\" : \"2017-08-20T23:47:38Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{SNAPSHOT-ID}\",\n  \"lastOplogAppliedTimestamp\" : {\n    \"date\" : \"2017-08-21T09:14:51Z\",\n    \"increment\" : 1\n  },\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots/{SNAPSHOT-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"namespaceFilterList\" : {\n    \"filterList\" : [ ],\n    \"filterType\" : \"blacklist\"\n  },\n  \"parts\" : [ {\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"compressionSetting\" : \"GZIP\",\n    \"dataSizeBytes\" : 503779557,\n    \"encryptionEnabled\" : false,\n    \"fileSizeBytes\" : 2855605344,\n    \"mongodVersion\" : \"4.0.9\",\n    \"replicaSetName\" : \"proton\",\n    \"storageSizeBytes\" : 547516416,\n    \"typeName\" : \"REPLICA_SET\"\n  } ]\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/groups-and-users",
            "title": "Projects and Users",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following\nproject and user resources: Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Projects Users Access List",
            "code": [],
            "preview": "The Cloud Manager API exposes the following\nproject and user resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams",
            "title": "Teams",
            "headings": [
                "Endpoints"
            ],
            "paragraphs": "The  teams  resource provides access to retrieve  MongoDB Cloud Manager \n teams . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Method Endpoint Description GET /orgs/{ORG-ID}/teams Retrieves all teams to which the authorized user has access. GET /orgs/{ORG-ID}/teams/{TEAM-ID} Get the team with ID  {TEAM-ID}  in the organization associated\nwith  {ORG-ID} . GET /orgs/{ORG-ID}/teams/byName/{TEAM-NAME} Get the team with name  {TEAM-NAME}  in the organization\nassociated with  {ORG-ID} . GET /orgs/{ORG-ID}/teams/{TEAM-ID}/users Get all users in the team associated with  {TEAM-ID}  in the\norganization associated with  {ORG-ID} . POST /orgs/{ORG-ID}/teams Create a single team in the organization associated with\n {ORG-ID}} . PATCH /orgs/{ORG-ID}/teams/{TEAM-ID} Rename a team in an organization. PATCH /groups/{PROJECT-ID}/teams/{TEAM-ID} Update roles for a team in a project. POST /orgs/{ORG-ID}/teams/{TEAM-ID}/users Add a user from the organization associated with  {ORG-ID}  to\nthe team with ID  {TEAM-ID} . DELETE /orgs/{ORG-ID}/teams/{TEAM-ID}/users/{USER-ID} Remove the specified user from the specified team. DELETE /orgs/{ORG-ID}/teams/{TEAM-ID} Delete the team with ID  {TEAM-ID}  from the organization\nspecified to  {ORG-ID} . DELETE /groups/{PROJECT-ID}/teams/{TEAM-ID} Remove the specified  team  from the specified\n group .",
            "code": [],
            "preview": "The teams resource provides access to retrieve MongoDB Cloud Manager\nteams.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/deployments",
            "title": "Deployments",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following deployments\nresources: Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Hosts Disks Databases Clusters",
            "code": [],
            "preview": "The Cloud Manager API exposes the following deployments\nresources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/prog-api-keys",
            "title": "Programmatic API Keys",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following\nprogrammatic API key resources: Organization Programmatic API Keys Organization Programmatic API Key Access Lists Organization API Keys on Projects",
            "code": [],
            "preview": "The Cloud Manager API exposes the following\nprogrammatic API key resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/organizations-and-teams",
            "title": "Organizations and Teams",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following\norganizations and teams resources: Organizations Teams",
            "code": [],
            "preview": "The Cloud Manager API exposes the following\norganizations and teams resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/snapshots/get-one-snapshot-for-config-server",
            "title": "Get One Snapshot for One Config Server",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "As of MongoDB 3.4, mirrored config server deployments (also known\nas  SCCC (Sync Cluster Connection Config) ) are no longer\nsupported. The following API method works with\n SCCC (Sync Cluster Connection Config)  config servers only.\nReplica set config servers (also known as\n CSRS (Config Server Replica Sets) ) use the\n Get One Snapshot for One Cluster \nmethod. To learn how to convert your config servers from\n SCCC (Sync Cluster Connection Config)  to a\n CSRS (Config Server Replica Set) , see\n Upgrade Config Servers to Replica Set \nin the MongoDB Server Manual. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the  snapshot . CLUSTER-ID string Unique identifier of the cluster that the  snapshot  represents. SNAPSHOT-ID string Unique identifier of the  snapshot . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description clusterId objectId ID of the cluster the  snapshot  represents. complete boolean Indicator that the  snapshot  has been created. This is\n false  if the snapshot creation job is still in progress. created document The components of a  timestamp . created.date timestamp The exact point in time when the snapshot was taken in\n ISO 8601 \ndate and time format at  UTC (Coordinated Universal Time) . created.increment integer The operation order in which this  snapshot  took place at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . doNotDelete boolean Indicator that the  snapshot  cannot be deleted. If  doNotDelete  is set to  true , any value in  expires \nis ignored. expires timestamp The date in  ISO 8601  date\nand time format at  UTC (Coordinated Universal Time)  after\nwhich this  snapshot  can be deleted. If  doNotDelete  is set to  true , any value in  expires \nis removed. If the  expires  value is earlier than the current date and\ntime, it can no longer be edited. groupId objectId ID of the  project  that owns the  snapshot . id objectId ID of the  snapshot . lastOplogAppliedTimestamp document The components of the\n timestamp   of the last\noplog entry was applied. lastOplogAppliedTimestamp.date timestamp The exact point in time when the last  oplog  was applied\nin  ISO 8601  date\nand time format at  UTC (Coordinated Universal Time) . lastOplogAppliedTimestamp.increment integer The operation order in which last  oplog  was applied at\nthis exact point in time. To learn how timestamps work in\nMongoDB, see  Timestamps . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . namespaceFilterList object array The  namespaces  that are included or excluded\nfrom this  snapshot . namespaceFilterList.filterList string array A comma-separated list of any combination of databases or\n namespaces  that are exclusively included or\nexplicitly excluded from the snapshot. The default value is an empty array ( [] ). namespaceFilterList.filterType string A value that determines how  namespaces  are\nfiltered for this snapshot. The default value is  blacklist . If this value is set to  blacklist , namespaces in\n namespaceFilterList.filterList  are excluded from the\nsnapshot. If this value is set to  whitelist , only namespaces in\n namespaceFilterList.filterList  are included in the\nsnapshot. parts object array The individual parts that comprise the complete  snapshot .\nThis array contains a single document. parts.dataSizeBytes number The total size of the data in the  snapshot  in bytes. parts.encryptionEnabled boolean Indicator of the state of encryption of the  snapshot \ndata. parts.fileSizeBytes number The total size of the data files in bytes. parts.hostId string ID of a config server. parts.masterKeyUUID objectId The  KMIP (Key Management Interoperability Protocol) \nmaster key ID used to encrypt the snapshot data. This parameter appears only if this snapshot has\n parts.encryptionEnabled : true . parts.mongodVersion string The version of  mongod  that was running when the\n snapshot  was created. parts.storageSizeBytes number The total size of space allocated for document storage. parts.typeName string The type of server that the part represents: CONFIG_SERVER",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots/{SNAPSHOT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"CLUSTER-ID\" : \"{CLUSTER-ID}\",\n  \"complete\" : true,\n  \"created\" : {\n    \"date\" : \"2016-08-21T23:47:38Z\",\n    \"increment\" : 1\n  },\n  \"doNotDelete\" : false,\n  \"expires\" : \"2017-08-20T23:47:38Z\",\n  \"GROUP-ID\" : \"{PROJECT-ID}\",\n  \"HOST-ID\" : \"{HOST-ID}\",\n  \"id\" : \"{SNAPSHOT-ID}\",\n  \"lastOplogAppliedTimestamp\" : {\n    \"date\" : \"2017-08-21T09:14:51Z\",\n    \"increment\" : 1\n  },\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots/{SNAPSHOT-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"namespaceFilterList\" : {\n    \"filterList\" : [ ],\n    \"filterType\" : \"blacklist\"\n  },\n  \"parts\" : [ {\n    \"dataSizeBytes\" : 503779557,\n    \"encryptionEnabled\" : false,\n    \"fileSizeBytes\" : 2855605344,\n    \"HOST-ID\" : \"{HOST-ID}\",\n    \"mongodVersion\" : \"4.0.9\",\n    \"storageSizeBytes\" : 547516416,\n    \"typeName\" : \"REPLICA_SET\"\n  } ]\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/measurements-and-alerts",
            "title": "Measurements and Alerts",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following\nmeasurement and alert resources: Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Measurements Alerts Alert Configurations Events Maintenance Windows Performance Advisor Third-Party Integration Settings",
            "code": [],
            "preview": "The Cloud Manager API exposes the following\nmeasurement and alert resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/backup-and-restore",
            "title": "Backup and Restore",
            "headings": [],
            "paragraphs": "The  Cloud Manager   API  exposes the following\nbackup and restore resources: Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Backup Configurations Snapshot Schedule Snapshots Checkpoints Restore Jobs",
            "code": [],
            "preview": "The Cloud Manager API exposes the following\nbackup and restore resources:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/nav/automation",
            "title": "Automation",
            "headings": [],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/get-one-group-by-agent-api-key",
            "title": "Get One Project by Agent API Key",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description AGENT-API-KEY string (Required.)  The  agent API key The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/byAgentApiKey/{AGENT-API-KEY}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/byAgentApiKey/{AGENT-API-KEY}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{PROJECT-ID}\",\n  \"name\": \"My Project\",\n  \"orgId\" : \"{ORG-ID}\",\n  \"hostCounts\": {\n    \"arbiter\": 2,\n    \"config\": 1,\n    \"primary\": 4,\n    \"secondary\": 8,\n    \"mongos\": 2\n\n  },\n  \"lastActiveAgent\": ISODate(\"2016-08-05T07:23:34Z\"),\n  \"activeAgentCount\": 1,\n  \"replicaSetCount\": 3,\n  \"shardCount\": 2,\n  \"publicApiEnabled\": true,\n  \"agentApiKey\": \"{AGENT-API-KEY}\",\n  \"links\" : []\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/get-all-groups-for-current-user",
            "title": "Get All Projects for the Current User",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one project. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [{\n    \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\": \"self\"\n  }, {\n    \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups?pretty=true&itemsPerPage=100&pageNum=2\",\n    \"rel\": \"next\"\n  }],\n  \"results\": [{\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 0,\n      \"secondary\": 0\n    },\n    \"id\": \"56a10a80e4b0fd3b9a9bb0c2\",\n    \"lastActiveAgent\": \"2016-03-09T18:19:37Z\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"name\": \"012i3091203jioawjioej\",\n    \"orgId\": \"5980cfdf0b6d97029d82f86e\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 0,\n    \"shardCount\": 0,\n    \"tags\": []\n  }, {\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 0,\n      \"secondary\": 0\n    },\n    \"id\": \"56aa691ce4b0a0e8c4be51f7\",\n    \"lastActiveAgent\": \"2016-01-29T19:02:56Z\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"name\": \"1454008603036\",\n    \"orgId\": \"5980d0040b6d97029d831798\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 0,\n    \"shardCount\": 0,\n    \"tags\": []\n  }, {\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 0,\n      \"secondary\": 0\n    },\n    \"id\": \"56aa6dfde4b0fe328eee82ad\",\n    \"lastActiveAgent\": \"2016-01-29T20:34:28Z\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"name\": \"1454009852809\",\n    \"orgId\": \"5980d0040b6d97029d831799\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 0,\n    \"shardCount\": 0,\n    \"tags\": []\n  }, {\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 0,\n      \"secondary\": 0\n    },\n    \"id\": \"56aa8421e4b0d04c1c54df99\",\n    \"lastActiveAgent\": \"2016-01-29T21:36:10Z\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"name\": \"1454015520776\",\n    \"orgId\": \"5980d0040b6d97029d83179a\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 0,\n    \"shardCount\": 0,\n    \"tags\": []\n  }, {\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 0,\n      \"secondary\": 0\n    },\n    \"id\": \"56aa85f9e4b0d04c1c54e347\",\n    \"lastActiveAgent\": \"2016-01-29T21:36:10Z\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"name\": \"1454015992252\",\n    \"orgId\": \"5980d0040b6d97029d83179b\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 0,\n    \"shardCount\": 0,\n    \"tags\": []\n  }],\n  \"totalCount\": 5\n}"
                }
            ],
            "preview": "Each result is one project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/get-one-group-by-id",
            "title": "Get One Project by ID",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string (Required.)  The unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{PROJECT-ID}\",\n  \"name\": \"My Project\",\n  \"orgId\" : \"{ORG-ID}\",\n  \"hostCounts\": {\n    \"arbiter\": 2,\n    \"config\": 1,\n    \"primary\": 4,\n    \"secondary\": 8,\n    \"mongos\": 2\n  },\n  \"lastActiveAgent\": ISODate(\"2016-08-05T07:23:34Z\"),\n  \"activeAgentCount\": 1,\n  \"replicaSetCount\": 3,\n  \"shardCount\": 2,\n  \"publicApiEnabled\": true,\n  \"agentApiKey\": \"cbd728abd6a6d6c6b6d7826345dbcff0e\",\n  \"links\" : []\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/project-add-team",
            "title": "Add Teams to a Project",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description PROJECT-ID Required. The unique identifier for the  project  to which\nyou are adding the team or teams. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true Specify an array of documents, where each document represents one\nteam you want to associate to the project. Each document in the array\nmust contain the following fields: Name Type Description roleNames array Each object in the array represents a\n project role  you want to assign to\nthe team. The valid roles and their associated mappings are: GROUP_OWNER  -  Project Owner GROUP_READ_ONLY  -  Project Read Only GROUP_DATA_ACCESS_ADMIN  -  Project Data Access Admin GROUP_DATA_ACCESS_READ_WRITE  -  Project Data Access Read/Write GROUP_DATA_ACCESS_READ_ONLY  -  Project Data Access Read Only GROUP_MONITORING_ADMIN  -  Project Monitoring Admin GROUP_BACKUP_ADMIN  -  Project Backup Admin GROUP_AUTOMATION_ADMIN  -  Project Automation Admin GROUP_USER_ADMIN  -  Project User Admin teamId string The unique identifier of the team you want to associate with the\nproject. The team and project must share the same parent\n organization . Each element in the  result  array is one team added to the project. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description links array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . roleNames array Array of  project roles  assigned to the\nteam. The valid roles and their associated mappings are: GROUP_OWNER  -  Project Owner GROUP_READ_ONLY  -  Project Read Only GROUP_DATA_ACCESS_ADMIN  -  Project Data Access Admin GROUP_DATA_ACCESS_READ_WRITE  -  Project Data Access Read/Write GROUP_DATA_ACCESS_READ_ONLY  -  Project Data Access Read Only GROUP_MONITORING_ADMIN  -  Project Monitoring Admin GROUP_BACKUP_ADMIN  -  Project Backup Admin GROUP_AUTOMATION_ADMIN  -  Project Automation Admin GROUP_USER_ADMIN  -  Project User Admin",
            "code": [
                {
                    "lang": "none",
                    "value": "POST /groups/{PROJECT-ID}/teams"
                },
                {
                    "lang": "sh",
                    "value": "curl -u \"username:apiKey\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams?pretty=true\" \\\n     --data '[ { \"teamId\" : \"{TEAM-ID}\", \"roles\" : [ { \"roleName\" : \"GROUP_OWNER\" } ] } ]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"links\": [\n        {\n          \"href\": \"https://cloud.mongodb.com/api/pubic/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}\",\n          \"rel\": \"self\"\n        }\n      ],\n      \"roleNames\": [ \"GROUP_OWNER\" ],\n      \"teamId\": \"{TEAM-ID}\"\n    }\n  ],\n  \"totalCount\": 1\n}"
                }
            ],
            "preview": "Each element in the result array is one team added to the project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/remove-one-user-from-one-group",
            "title": "Remove One User from One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string (Required.)  The unique identifier for the project. USER-ID string (Required.)  The unique identifier for the user in  {PROJECT-ID} . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}/users/{USER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/users/{USER-ID}\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/get-one-group-by-name",
            "title": "Get One Project by Name",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description GROUP-NAME string (Required.)  The name of the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project. Some characters are not allowed in URLs. These are called\n reserved characters .\nIf your  {GROUP-NAME}  includes reserved characters, like spaces,\nyou must replace them with their\n percent encoding . Instead of making this request (via curl): Make this request (via curl):",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/byName/{GROUP-NAME}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/byName/{GROUP-NAME}?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n --header \"Accept: application/json\" \\\n --include \\\n --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/byName/My%20Project?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n --header \"Accept: application/json\" \\\n --include \\\n --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/byName/My%20Group?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"activeAgentCount\": 1,\n  \"agentApiKey\": \"{AGENT-API-KEY}\",\n  \"hostCounts\": {\n    \"arbiter\": 2,\n    \"config\": 1,\n    \"primary\": 4,\n    \"secondary\": 8,\n    \"mongos\": 2\n\n  },\n  \"id\": \"{PROJECT-ID}\",\n  \"lastActiveAgent\": ISODate(\"2016-08-05T07:23:34Z\"),\n  \"links\" : [],\n  \"name\": \"My Project\",\n  \"orgId\" : \"111111111cccccf38dc78bdf\",\n  \"publicApiEnabled\": true,\n  \"replicaSetCount\": 3,\n  \"shardCount\": 2,\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/update-project-roles-for-one-user",
            "title": "Update Project Roles for One User",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates the roles of one user in the specified project. To\nspecify the user to update, provide the unique 24-hexadecimal digit\nstring that identifies the user in the specified project. To use this\nresource, the requesting API Key must have the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string (Required.)  Unique 24-hexadecimal digit string that identifies\nproject. USER-ID string (Required.)  Unique 24-hexadecimal digit string that identifies\nthe user to modify. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description groupRoles array List of objects that describe the roles of the user. Name Type Description groupRoles array List of objects that describe the roles of the user.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{PROJECT-ID}/users/{USER-ID}/roles"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/users/{USER-ID}/roles\"\n     --data '\n     [\n      {\n        \"groupRoles: [\"GROUP_OWNER, \"GROUP_USER_ADMIN\", \"GROUP_READ_ONLY\"]\n      }\n     ]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n   \"groupRoles\": [\n     \"GROUP_OWNER\",\n     \"GROUP_USER_ADMIN\",\n     \"GROUP_READ_ONLY\"\n   ]\n}"
                }
            ],
            "preview": "Updates the roles of one user in the specified project. To\nspecify the user to update, provide the unique 24-hexadecimal digit\nstring that identifies the user in the specified project. To use this\nresource, the requesting API Key must have the\nProject User Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/add-users-to-one-group",
            "title": "Add Existing Users to One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource adds users who exist in  Cloud Manager  to another project. It does\nnot create new users and add them to a project. By default, users first\nreceive an invitation to the project. You can add users directly to a\nproject only if you set the\n mms.user.bypassInviteForExistingUsers  setting to  true . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  The unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description id string The unique identifier for an existing user. roles object array The roles to which this user is assigned. roles.groupId string The unique identifier for the project role. roles.roleName string The display name for the user role. Name Type Description emailAddress string The email address for the  Cloud Manager  user. firstName string The first name displayed for the returned  Cloud Manager  user. id string The unique identifier for the user. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . lastName string The last name displayed for the returned  Cloud Manager  user. roles object array The roles to which this user is assigned. roles.groupId string The unique identifier for the project role. roles.roleName string The display name for the user role. username string The  Cloud Manager  username. You must send an array of entities, even if adding a single user. For\neach user that you wish to add, specify the user ID and the roles the\nuser should possess. For role values, see the description of the\n roles.roleName  field in the\n users resource . If you specify a user that is already a member of the project, their\nexisting roles are overwritten with the specified permissions.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/users"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/users?pretty=true\" \\\n     --data '\n     [\n       {\n         \"id\": \"{USER-ID}\",\n         \"roles\": [{\n           \"roleName\": \"GROUP_OWNER\"\n         }]\n       }\n     ]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/users?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"emailAddress\" : \"joe.bloggs@example.com\",\n    \"firstName\" : \"Joe\",\n    \"id\" : \"{USER-ID}\",\n    \"lastName\" : \"Bloggs\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}\",\n      \"rel\" : \"self\"\n    }, {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList\",\n      \"rel\" : \"http://mms.mongodb.com/accessList\"\n    } ],\n    \"roles\" : [ {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }, {\n      \"groupId\" : \"{OTHER-PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }\n    ...\n    ],\n    \"username\" : \"joe.bloggs\"\n  }, {\n    \"emailAddress\" : \"jim.bloggs@example.com\",\n    \"firstName\" : \"Jim\",\n    \"id\" : \"{OTHER-USER-ID}\",\n    \"lastName\" : \"Bloggs\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{OTHER-USER-ID}\",\n      \"rel\" : \"self\"\n    }, {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{OTHER-USER-ID}/accessList\",\n      \"rel\" : \"http://mms.mongodb.com/accessList\"\n    } ],\n    \"roles\" : [ {\n      \"roleName\" : \"GLOBAL_READ_ONLY\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    } ],\n    \"username\" : \"jim.bloggs\"\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "This resource adds users who exist in Cloud Manager to another project. It does\nnot create new users and add them to a project. By default, users first\nreceive an invitation to the project. You can add users directly to a\nproject only if you set the\nmms.user.bypassInviteForExistingUsers setting to true.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/project-get-teams",
            "title": "Get All Teams in One Project",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description PROJECT-ID Required. The unique identifier for the  project . The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each element in the  result  array is one team assigned to the\nproject. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description links object array This array includes one or more  links  to\nsub-resources and/or related resources. The relations between URLs are explained in the\n Web Linking Specification . roleNames string array Array of  project roles  assigned to the\nteam. teamId string The unique identifier for the team.",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /groups/{PROJECT-ID}/teams"
                },
                {
                    "lang": "sh",
                    "value": "curl -u \"username:apiKey\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n   {\n    \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams\",\n    \"rel\": \"self\"\n   }\n ],\n \"results\": [\n   {\n    \"links\" : [\n      {\n        \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID}\",\n        \"rel\": \"self\"\n      }\n    ],\n    \"roleNames\": [\n      \"GROUP_READ_ONLY\"\n    ],\n    \"teamId\": \"{TEAM-ID}\"\n   }\n ],\n \"totalCount\": 1\n}"
                }
            ],
            "preview": "Each element in the result array is one team assigned to the\nproject.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/create-one-group",
            "title": "Create One Project",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 To create a project within an existing organization, you must have\none of the following roles in the specified organization: Organization Project Creator Organization Owner This endpoint doesn't use HTTP request path parameters. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description name string Required Human-readable label that identifies the project. orgId string Required Unique 24-hexadecimal digit string that identifies the\norganization within which to create the project. Cloud Manager  set the oldest  Organization Owner  of the\nspecified organization as a  Project Owner  for the\nnew project. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups?pretty=true\" \\\n     --data '\n       {\n         \"name\": \"Create Project API Example\",\n         \"orgId\": \"deffb2031b938da53f16d714\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"activeAgentCount\" : 0,\n  \"agentApiKey\" : \"{GROUP-API-KEY}\",\n  \"hostCounts\" : {\n    \"arbiter\" : 0,\n    \"config\" : 0,\n    \"mongos\" : 0,\n    \"primary\" : 0,\n    \"secondary\" : 0\n  },\n  \"id\" : \"{PROJECT-ID}\",\n  \"links\" : [],\n  \"name\" : \"Create Project API Example\",\n  \"orgId\" : \"{ORG-ID}\",\n  \"publicApiEnabled\" : true,\n  \"replicaSetCount\" : 0,\n  \"shardCount\" : 0,\n  \"tags\" : [ ]\n}"
                }
            ],
            "preview": "To create a project within an existing organization, you must have\none of the following roles in the specified organization:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/performance-advisor/pa-namespaces-get-all",
            "title": "Get Namespaces for a Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response Elements",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Retrieve namespaces for collections experiencing slow queries\non a specified host. Namespaces appear in the following format:\n {database}.{collection} . If you specify a  secondary member of a replica set \nthat has not received any database read operations, the endpoint\ndoes not return any namespaces. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Description PROJECT-ID The unique identifier for the project where the\nthe MongoDB host resides. HOST-ID The unique identifier for the host of a MongoDB process. For\ninformation about retrieving host ids, see  Get All Hosts in One Project . Field Optional/Required Type Description since Optional number Point in time, specified as milliseconds since the  Unix Epoch ,\nfrom which you want to receive results. If you do not also specify\nthe  duration  parameter, the endpoint returns results from\n since  until the current time. duration Optional number Length of time from the  since  parameter, in milliseconds,\nfor which you want to receive results. If you do not also specify\nthe  since  parameter, the endpoint returns results from the\nnumber of milliseconds specified by  duration  before the\ncurrent time until now. envelope Optional boolean Specifies whether or not to wrap the response in an\n envelope . The default is  false . pretty Optional boolean Indicates whether the response body should be in a\n prettyprint \nformat. The default value is  false . This endpoint doesn't use HTTP request body parameters. Name Type Description namespaces array Each element in the array represents one namespace on the specified\nhost that is experiencing slow queries. Namespaces appear in the\nfollowing format:  {database.collection} namespaces[i].namespace string A namespace on the specified host. namespaces[i].type string The type of namespace.",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/namespaces"
                },
                {
                    "lang": "shell",
                    "value": "curl --digest -i -u \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n   \"https://cloud.mongodb.com/api/atlas/v1.0/groups/{PROJECT-ID}/hosts/cluster0-shard-00-00-mnswc.mongodb-dev.net:27017/performanceAdvisor/namespaces?pretty=true\""
                },
                {
                    "lang": "javascript",
                    "value": "{\n  \"namespaces\" : [ {\n    \"namespace\" : \"data.zips\",\n    \"type\" : \"COLLECTION\"\n  }, {\n    \"namespace\" : \"data.stocks\",\n    \"type\" : \"COLLECTION\"\n  } ]\n}"
                }
            ],
            "preview": "Retrieve namespaces for collections experiencing slow queries\non a specified host. Namespaces appear in the following format:\n{database}.{collection}.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/delete-one-group",
            "title": "Delete One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string (Required.)  The unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/change-one-group-name",
            "title": "Update One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Change one project's name. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string (Required.)  The unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description name string Required The new name for the project. Name Type Description activeAgentCount integer Number of active agents sending regular pings to  Cloud Manager . The value is refreshed about every 24 hours and cached. If\nyou start a new agent or stop an existing one, the change\ncan take up to 30 minutes to show up in the\n activeAgentCount  field. hostCounts object Total number of hosts by type. The embedded fields\nshould be self-explanatory. id string Unique identifier for the group. lastActiveAgent string Time  Cloud Manager  last updated the  activeAgentCount  total for\nthe project.  Cloud Manager  refreshes this value every 24 hours and\ncaches it to record the number of active MongoDB Agents. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string Display name for the project. orgId string Unique identifier for the organization to which the project\nbelongs. publicApiEnabled boolean Flag indicating that the  API (Application Programming Interface)  is enabled for this project.\nThis is a read-only field that is always  true . replicaSetCount integer Total number of replica sets for this project. shardCount integer Total number of shards for this project.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}?pretty=true\" \\\n     --data '\n     {\n       \"name\" :  \"Project Name 1\"\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{PROJECT-ID}\",\n  \"name\":  \"Project Name 1\",\n  \"orgId\" : \"{ORG-ID}\",\n  \"hostCounts\": {\n    \"arbiter\": 2,\n    \"config\": 1,\n    \"primary\": 4,\n    \"secondary\": 8,\n    \"mongos\": 2\n  },\n  \"lastActiveAgent\": ISODate(\"2016-08-05T07:23:34Z\"),\n  \"activeAgentCount\": 1,\n  \"replicaSetCount\": 3,\n  \"shardCount\": 2,\n  \"publicApiEnabled\": true,\n  \"agentApiKey\": \"{API-KEY}\",\n  \"links\" : []\n}"
                }
            ],
            "preview": "Change one project's name.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/groups/get-all-users-in-one-group",
            "title": "Get All Users in One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier for the project. Name Type Necessity Description flattenTeams boolean Optional Flag that indicates whether the returned list should include\nusers who belong to a team assigned a role in this project. You\nmay not have assigned the individual users a role in this\nproject. If this flag is set to  false , the endpoint returns only\nusers that were assigned a role in the project. If this flag is set to  true , the endpoint returns both\nusers that were assigned roles in the project  and  users who\nare members of teams that were assigned roles in the project. includeOrgUsers boolean Optional Flag that indicates whether the returned list should include\nusers with implicit access to the project through the\n Organization Owner  or\n Organization Read Only  role. You might not have\nassigned the individual users a role in this project. The default value is  false . If this flag is set to  false , the endpoint returns only\nusers who are assigned a role in the project. If this flag is set to  true , the endpoint returns both\nusers who are assigned roles in the project  and  users who\nhave implicit access to the project through their organization role. This endpoint doesn't use HTTP request body parameters. Each  result  is one user. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description emailAddress string Email address assigned to the returned  MongoDB Atlas  user. firstName string First name assigned to the returned  MongoDB Atlas  user. id string Unique identifier assigned to the returned  MongoDB Atlas  user. lastName string Last name assigned to the returned  MongoDB Atlas  user. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . roles object array Roles assigned to the returned  MongoDB Atlas  user. roles.groupId string Unique identifier for the project to which the returned  MongoDB Atlas \nuser was assigned the role provided in  role.roleName . roles.orgId string Unique identifier for the organization to which the returned\n MongoDB Atlas  user was assigned the role provided in\n role.roleName . roles.roleName string Display name for the role assigned to the returned  MongoDB Atlas \nuser for either the group provided in  role.groupId  or the\norganization provided in  role.orgId . username string MongoDB Atlas  username given to the returned  MongoDB Atlas  user.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/users"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/users?pretty=true&includeOrgUsers=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/ users?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"emailAddress\" : \"joe.bloggs@example.com\",\n    \"firstName\" : \"Joe\",\n    \"id\" : \"{USER-ID}\",\n    \"lastName\" : \"Bloggs\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}\",\n      \"rel\" : \"self\"\n    }, {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}/accessList\",\n      \"rel\" : \"http://mms.mongodb.com/accessList\"\n    } ],\n    \"roles\" : [ {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }, {\n      \"groupId\" : \"{OTHER-PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }\n    ...\n    ],\n    \"username\" : \"joe.bloggs\"\n  }, {\n    \"emailAddress\" : \"jim.bloggs@example.com\",\n    \"firstName\" : \"Jim\",\n    \"id\" : \"{OTHER-USER-ID}\",\n    \"lastName\" : \"Bloggs\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{OTHER-USER-ID}\",\n      \"rel\" : \"self\"\n    }, {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/users/{OTHER-USER-ID}/accessList\",\n      \"rel\" : \"http://mms.mongodb.com/accessList\"\n    } ],\n    \"roles\" : [ {\n      \"roleName\" : \"GLOBAL_READ_ONLY\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }, {\n      \"orgId\" : \"{ORGANIZATION-ID}\",\n      \"roleName\" : \"ORG_READ_ONLY\"\n    } ],\n    \"username\" : \"jim.bloggs\"\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Each result is one user.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/clusters/clusters-get-all",
            "title": "Get All Clusters in One Project",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Parameters",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve details for all clusters in one project. You can successfully call this endpoint with any assigned role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the project. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one cluster. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description clusterName string Display name of the cluster. Note that  mongod  itself doesn't\nallow you to name a cluster;  Cloud Manager  supplies this name and you can\nupdate it. For a replica set within a sharded cluster, the\ncluster name is the name of its parent cluster. groupId string Unique identifier of the project to which the cluster belongs. id string Unique identifier of the cluster. lastHeartbeat date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  most recently processed a ping from\nthis cluster. replicaSetName string Replica set name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  REPLICA_SET  or  CONFIG_SERVER_REPLICA_SET . shardName string Shard name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  SHARDED  or a  REPLICA_SET  that part of a\nsharded cluster. typeName string Cluster type.  Cloud Manager  may return: typeName Description REPLICA_SET A replica set . SHARDED A sharded cluster where each shard is a  standalone \ninstance. No shards are replica sets. SHARDED_REPLICA_SET A sharded cluster that contains at least one shard that is\na replica set. CONFIG_SERVER_REPLICA_SET Config servers deployed as a replica set.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/5e84b94c003f2d6370004f4e/clusters?pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"clusterName\": \"myRS\",\n      \"groupId\": \"5e84b94c003f2d6370004f4e\",\n      \"id\": \"5e8ba20e87d9396ca9b96bd0\",\n      \"lastHeartbeat\": \"2020-06-10T14:51:28Z\",\n      \"links\": [\n        {\n          \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/5e84b94c003f2d6370004f4e/clusters/5e8ba20e87d9396ca9b96bd0\",\n          \"rel\": \"self\"\n        }\n      ],\n      \"replicaSetName\": \"myRS\",\n      \"typeName\": \"REPLICA_SET\"\n    },\n    {\n      \"clusterName\": \"cm-clstr-repl\",\n      \"groupId\": \"5e84b94c003f2d6370004f4e\",\n      \"id\": \"5e84e393395ec72bfc888f6c\",\n      \"lastHeartbeat\": \"2020-06-10T15:20:08Z\",\n      \"links\": [\n        {\n          \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/5e84b94c003f2d6370004f4e/clusters/5e84e393395ec72bfc888f6c\",\n          \"rel\": \"self\"\n        }\n      ],\n      \"replicaSetName\": \"cm-clstr-repl\",\n      \"typeName\": \"REPLICA_SET\"\n    }\n  ],\n  \"totalCount\": 2\n}\n\n"
                }
            ],
            "preview": "Retrieve details for all clusters in one project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/performance-advisor/get-slow-queries",
            "title": "Get Slow Query Logs",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves log lines for slow queries as determined by the\n Performance Advisor . Performance Advisor users must have the necessary  access\nprivileges  to view performance\ndata. Users who do not have the necessary permissions will not be\nable to view any log data in the  slowQueryLogs  API endpoint\nresponses. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project that owns this MongoDB process. HOST-ID string (Required.)  Unique identifier of the host for the MongoDB process. All parameters are optional. pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an\nenvelope. false since long Point in time from which to retrieve slow query logs,\nstated in  milliseconds since epoch . previous 24 hours duration long Length of time in milliseconds during which to find\nslow query logs among the managed namespaces in the cluster. up to the present time namespaces string Namespaces from which to retrieve suggested slow query logs.\nA namespace consists of the database and collection resource\nseparated by a  . , such as  <database>.<collection> . To specify multiple namespaces, pass the parameter multiple times\nusing an ampersand ( & ) as a delimiter, once for each\nnamespace. ?namespaces=data.stocks&namespaces=data.zips&pretty=true all nLogs long Maximum number of log lines to return. 20000 This endpoint doesn't use HTTP request body parameters. Name Type Description slowQueries array of documents A list of documents with information about slow queries as\ndetected by the Performance Advisor. slowQueries[n].line string The raw log line pertaining to the slow query. slowQueries[n].namespace string The namespace in which the slow query ran.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/slowQueryLogs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n --header 'Accept: application/json' \\\n --include \\\n --request GET 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/slowQueryLogs?pretty=true'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"slowQueries\" : [ {\n    \"line\" : \"2018-08-16T22:53:43.447+0000 I COMMAND  [conn10614] command myDb.users appName: \\\"MongoDB Shell\\\" command: find { find: \\\"users\\\", filter: { emails: \\\"tocde@fijoow.to\\\" }, lsid: { id: UUID(\\\"832b4b0e-085a-480e-b470-16a0994dc7cb\\\") }, $clusterTime: { clusterTime: Timestamp(1534460016, 1)...\",\n   \"namespace\" : \"myDb.users\"\n  }, {\n    \"line\" : \"2018-08-16T22:54:32.705+0000 I COMMAND  [conn10614] command myDb.users appName: \\\"MongoDB Shell\\\" command: find { find: \\\"users\\\", filter: { emails: \\\"la@sa.kp\\\" }, lsid: { id: UUID(\\\"832b4b0e-085a-480e-b470-16a0994dc7cb\\\") }, $clusterTime: { clusterTime: Timestamp(1534460056, 1), ...\",\n    \"namespace\" : \"myDb.users\"\n  } ]\n}"
                }
            ],
            "preview": "Retrieves log lines for slow queries as determined by the\nPerformance Advisor.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/performance-advisor/get-suggested-indexes",
            "title": "Get Suggested Indexes",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves suggested indexes as determined by the\n Performance Advisor . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project that owns this MongoDB process. HOST-ID string (Required.)  Unique identifier of the host for the MongoDB process. All parameters are optional. pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an\nenvelope. false since long Point in time from which to retrieve suggested indexes,\nstated in  milliseconds since epoch . previous 24 hours duration long Length of time in milliseconds during which to find\nsuggested indexes among the managed namespaces in the cluster. up to the present time namespaces string Namespaces from which to retrieve suggested indexes. A namespace\nconsists of the database and collection resource separated by a\n . , such as  <database>.<collection> . To specify multiple namespaces, pass the parameter multiple times\nusing an ampersand ( & ) as a delimiter, once for each\nnamespace. ?namespaces=data.stocks&namespaces=data.zips&pretty=true all nIndexes long Maximum number of indexes to suggest. unlimited nExamples long Maximum number of examples queries to provide that will be\nimproved by a suggested index. 5 This endpoint doesn't use HTTP request body parameters. Name Type Description shapes array of documents Documents with information about the  query shapes  that are served by the\nsuggested indexes. shapes[n].avgMs number Average duration in milliseconds for the queries examined that\nmatch this shape. shapes[n].count number Number of queries examined that match this shape. shapes[n].id objectId Unique id for this shape. Exists only for the duration of the\nAPI request. shapes[n].inefficiencyScore number Average number of documents read for every document returned\nby the query. For more information, see  Understanding the\nQuery Inefficiency Score . shapes[n].namespace string Namespace searched by the queries in this shape. shapes[n].operations array of documents Documents with specific information and log lines for individual\nqueries. shapes[n].operations[n].predicates array of documents Documents containing the search criteria used by the query.\nValues in key-value pairs will be redacted in these predicates\nunless the user has  Project Data Access Read Only  permissions or higher. shapes[n].operations[n].raw string Raw log line produced by the query. shapes[n].operations[n].stats document Query statistics. shapes[n].operations[n].stats.ms number Duration in milliseconds of the query. shapes[n].operations[n].stats.nReturned number Number of results returned by the query. shapes[n].stats.avgObjSize number Average object size. shapes[n].stats.nScanned number Number of documents read by the query. shapes[n].stats.ts number Query timestamp, in seconds since epoch. suggestedIndexes array of documents Documents with information about the indexes suggested by the\nPerformance Advisor. suggestedIndexes[n].id objectId Unique id for this suggested index. suggestedIndexes[n].impact array of objectIds List of unique identifers which correspond the query\nshapes in this response which pertain to this suggested index. This field does not correspond to  Impact  in the\n Performance Advisor  user\ninterface. suggestedIndexes[n].index array of documents Each array element is a document that specifies a key in the\nindex and its sort order, ascending or descending. Keys in indexes with multiple keys appear in the same order\nthat they appear in the index. A value of 1 indicates an ascending sort order. A value of -1 indicates a descending sort order. suggestedIndexes[n].index.<fieldname> string Specific field to be indexed. suggestedIndexes[n].namespace string Namespace of the suggested index. suggestedIndexes[n].weight number Estimated performance improvement that the suggested\nindex would provide. Corresponds to  Impact  in the  Performance Advisor  user interface.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/suggestedIndexes"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n --header 'Accept: application/json' \\\n --include \\\n --request GET 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/performanceAdvisor/suggestedIndexes?pretty=true'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"shapes\" : [ {\n    \"avgMs\" : 42,\n    \"count\" : 2,\n    \"id\" : \"5b74689a80eef53f3388897e\",\n    \"inefficiencyScore\" : 50000,\n    \"namespace\" : \"test.users\",\n    \"operations\" : [ {\n      \"predicates\" : [{ \"find\" : { \"emails\" : \"la@sa.kp\" } }],\n      \"raw\" : \"2018-08-15T17:14:11.115+0000 I COMMAND  [conn4576] command test.users appName: \\\"MongoDB Shell\\\" command: find { find: \\\"users\\\", filter: { emails: \\\"la@sa.kp\\\" }, lsid: { id: UUID(\\\"1a4e71d3-9b67-4e9c-b078-9fdf3fae9091\\\") }, $clusterTime: { clusterTime: Timestamp(1534353241, 1), signature: { hash: BinData(0, AB91938B7CF7BC87994A2909A98D87F29101EFA0), keyId: 6589681559618453505 } }, $db: \\\"test\\\" } planSummary: COLLSCAN keysExamined:0 docsExamined:50000 cursorExhausted:1 numYields:391 nreturned:1 reslen:339 locks:{ Global: { acquireCount: { r: 784 } }, Database: { acquireCount: { r: 392 } }, Collection: { acquireCount: { r: 392 } } } protocol:op_msg 34ms\",\n      \"stats\" : {\n        \"ms\" : 34,\n        \"nReturned\" : 1,\n        \"nScanned\" : 50000,\n        \"ts\" : 1534353251147\n      }\n    }, {\n      \"predicates\" : [{ \"find\" : { \"emails\" : \"tocde@fijoow.to\" } }],\n      \"raw\" : \"2018-08-15T17:14:18.665+0000 I COMMAND  [conn4576] command test.users appName: \\\"MongoDB Shell\\\" command: find { find: \\\"users\\\", filter: { emails: \\\"tocde@fijoow.to\\\" }, lsid: { id: UUID(\\\"1a4e71d3-9b67-4e9c-b078-9fdf3fae9091\\\") }, $clusterTime: { clusterTime: Timestamp(1534353241, 1), signature: { hash: BinData(0, AB91938B7CF7BC87994A2909A98D87F29101EFA0), keyId: 6589681559618453505 } }, $db: \\\"test\\\" } planSummary: COLLSCAN keysExamined:0 docsExamined:50000 cursorExhausted:1 numYields:390 nreturned:1 reslen:342 locks:{ Global: { acquireCount: { r: 782 } }, Database: { acquireCount: { r: 391 } }, Collection: { acquireCount: { r: 391 } } } protocol:op_msg 36ms\",\n      \"stats\" : {\n        \"ms\" : 36,\n        \"nReturned\" : 1,\n        \"nScanned\" : 50000,\n        \"ts\" : 1534353258697\n      }\n    } ]\n  } ],\n  \"suggestedIndexes\" : [ {\n    \"id\" : \"5b74689a80eef53f3388897f\",\n    \"impact\" : [ \"5b74689a80eef53f3388897e\" ],\n    \"index\" : [ {\n      \"emails\" : 1\n    } ],\n    \"namespace\" : \"test.users\",\n    \"weight\" : 37.220480901815623\n  }, {\n    \"id\" : \"5b74689a80eef53f33888980\",\n    \"impact\" : [ \"5b74689a80eef53f3388897d\" ],\n    \"index\" : [ {\n      \"email\" : 1\n    } ],\n    \"namespace\" : \"test.inventory\",\n    \"weight\" : 19.037578309966488\n  } ]\n}"
                }
            ],
            "preview": "Retrieves suggested indexes as determined by the\nPerformance Advisor.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/clusters/clusters-update-one",
            "title": "Update One Cluster",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Parameters",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Update one cluster in one project. You can update only the  clusterName  field.  Cloud Manager  populates all other\ncluster fields based on cluster properties it discovers. This operation is only available for clusters with a  typeName  of\n SHARDED  or  SHARDED_REPLICA_SET . You can successfully call this endpoint with any of the following\nassigned roles: Project Monitoring Admin . Project Owner . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the project. CLUSTER-ID string Unique identifier for the cluster you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description clusterName string Required Name to assign to the cluster. Name Type Description clusterName string Display name of the cluster. Note that  mongod  itself doesn't\nallow you to name a cluster;  Cloud Manager  supplies this name and you can\nupdate it. For a replica set within a sharded cluster, the\ncluster name is the name of its parent cluster. groupId string Unique identifier of the project to which the cluster belongs. id string Unique identifier of the cluster. lastHeartbeat date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  most recently processed a ping from\nthis cluster. replicaSetName string Replica set name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  REPLICA_SET  or  CONFIG_SERVER_REPLICA_SET . shardName string Shard name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  SHARDED  or a  REPLICA_SET  that part of a\nsharded cluster. typeName string Cluster type.  Cloud Manager  may return: typeName Description REPLICA_SET A replica set . SHARDED A sharded cluster where each shard is a  standalone \ninstance. No shards are replica sets. SHARDED_REPLICA_SET A sharded cluster that contains at least one shard that is\na replica set. CONFIG_SERVER_REPLICA_SET Config servers deployed as a replica set.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}?pretty=true\"\n     --data '{\n        \"clusterName\":\"New Cluster Name\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterName\": \"New Cluster Name\",\n  \"groupId\": \"5e84b94c003f2d6370004f4e\",\n  \"id\": \"5e8ba20e87d9396ca9b96bd0\",\n  \"lastHeartbeat\": \"2020-06-10T14:51:28Z\",\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/5e84b94c003f2d6370004f4e/clusters/5e8ba20e87d9396ca9b96bd0\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"replicaSetName\": \"myRS\",\n  \"typeName\": \"REPLICA_SET\"\n}\n\n"
                }
            ],
            "preview": "Update one cluster in one project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/clusters/clusters-get-all-key",
            "title": "Get All Clusters in All Projects",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Parameters",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get details for all clusters in all projects available to the\nprogrammatic API key making the request. You can successfully call this endpoint with any assigned role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Each  result  is one project. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description clusters array of objects Objects that describe the clusters in each project that the API\nkey is authorized to view. clusters.[n].alertCount integer Number of open alerts. clusters.[n].authEnabled boolean Specifies if authentication is required to access the nodes\nin the cluster. clusters.[n].availability string Availability of the cluster. Values include: available : All nodes in the cluster are available. warning : Some nodes in the cluster are available. At\nleast one node is unavailable. unavailable : The cluster is unavailable. The cluster\ndoes not have a primary node. dead : The cluster is inactive. clusters.[n].backupEnabled boolean Specifies if backup is enabled for the cluster. clusters.[n].clusterId string Unique identifier of the  Cloud Manager  cluster. clusters.[n].dataSizeBytes number Total size of the data stored on each node in the cluster in\nbytes. clusters.[n].name string Name of the cluster as it appears in  Cloud Manager . clusters.[n].nodeCount integer Number of nodes in the cluster. clusters.[n].sslEnabled boolean Specifies if  SSL (Secure Sockets Layer)  authentication is required to access the nodes\nin the cluster. clusters.[n].type string The type of MongoDB cluster. Values include: replica set :  replica set sharded cluster :  sharded cluster standalone :  standalone clusters.[n].versions array of strings Version of MongoDB that each node in the cluster is running. groupId string Unique identifier of the project. groupName string Name of the project to which the returned clusters belong. orgId string Unique identifier for the organization that owns the project to\nwhich the returned clusters belong. orgName string Name of the organization that owns the project to\nwhich the returned clusters belong. planType string Plan type. In  Cloud Manager , this value is always  Cloud Manager . tags array of strings Tags applied to the project.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /api/public/v1.0/clusters"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/clusters?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [\n    {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/clusters\",\n      \"rel\" : \"self\"\n    }\n  ],\n  \"results\" : [\n    {\n      \"clusters\" : [\n        {\n          \"alertCount\" : 0,\n          \"authEnabled\" : true,\n          \"availability\" : \"available\",\n          \"backupEnabled\" : false,\n          \"clusterId\" : \"5e6bc0352e41683c191c8956\",\n          \"dataSizeBytes\" : 0,\n          \"name\" : \"Cluster1\",\n          \"nodeCount\" : 3,\n          \"sslEnabled\" : true,\n          \"type\" : \"replica set\",\n          \"versions\" : [\n            \"4.2.3\"\n          ]\n        },\n        {\n          \"alertCount\" : 0,\n          \"authEnabled\" : true,\n          \"availability\" : \"available\",\n          \"backupEnabled\" : false,\n          \"clusterId\" : \"5e6bc60ba4c3f47a54d8fe95\",\n          \"dataSizeBytes\" : 0,\n          \"name\" : \"Cluster2\",\n          \"nodeCount\" : 3,\n          \"sslEnabled\" : true,\n          \"type\" : \"replica set\",\n          \"versions\" : [\n            \"4.2.3\"\n          ]\n        }\n      ],\n      \"groupId\" : \"5df90932f10fab675508b0e5\",\n      \"groupName\" : \"az\",\n      \"orgId\" : \"5df7a168f10fab3a149357fb\",\n      \"orgName\" : \"jww-12-16\",\n      \"planType\" : \"Cloud Manager\",\n      \"tags\" : [\n\n      ]\n    },\n    {\n      \"clusters\" : [\n        {\n          \"alertCount\" : 0,\n          \"authEnabled\" : true,\n          \"availability\" : \"available\",\n          \"backupEnabled\" : false,\n          \"clusterId\" : \"5e6bbf6a9de0d35b1527dd93\",\n          \"dataSizeBytes\" : 0,\n          \"name\" : \"Cluster0\",\n          \"nodeCount\" : 3,\n          \"sslEnabled\" : true,\n          \"type\" : \"replica set\",\n          \"versions\" : [\n            \"4.2.3\"\n          ]\n        }\n      ],\n      \"groupId\" : \"5df90590f10fab5e33de2305\",\n      \"groupName\" : \"jww-12-17\",\n      \"orgId\" : \"5df7a168f10fab3a149357fb\",\n      \"orgName\" : \"jww-12-16\",\n      \"planType\" : \"Cloud Manager\",\n      \"tags\" : [\n\n      ]\n    },\n    {\n      \"clusters\" : [\n        {\n          \"alertCount\" : 0,\n          \"authEnabled\" : true,\n          \"availability\" : \"dead\",\n          \"backupEnabled\" : false,\n          \"clusterId\" : \"5e6be93fd434591c4ca765f6\",\n          \"dataSizeBytes\" : 0,\n          \"name\" : \"Cluster0\",\n          \"nodeCount\" : 0,\n          \"sslEnabled\" : true,\n          \"type\" : \"replica set\",\n          \"versions\" : [\n            \"4.2.3\"\n          ]\n        }\n      ],\n      \"groupId\" : \"5df90923f10fab675508b065\",\n      \"groupName\" : \"gcp\",\n      \"orgId\" : \"5df7a168f10fab3a149357fb\",\n      \"orgName\" : \"jww-12-16\",\n      \"planType\" : \"Cloud Manager\",\n      \"tags\" : [\n\n      ]\n    }\n  ],\n  \"totalCount\" : 3\n}\n\n"
                }
            ],
            "preview": "Get details for all clusters in all projects available to the\nprogrammatic API key making the request.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/clusters/clusters-get-one",
            "title": "Get One Cluster in One Project",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Parameters",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve details for one cluster in one project. You can successfully call this endpoint with any assigned role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the project. CLUSTER-ID string Unique identifier for the cluster you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description clusterName string Display name of the cluster. Note that  mongod  itself doesn't\nallow you to name a cluster;  Cloud Manager  supplies this name and you can\nupdate it. For a replica set within a sharded cluster, the\ncluster name is the name of its parent cluster. groupId string Unique identifier of the project to which the cluster belongs. id string Unique identifier of the cluster. lastHeartbeat date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  most recently processed a ping from\nthis cluster. replicaSetName string Replica set name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  REPLICA_SET  or  CONFIG_SERVER_REPLICA_SET . shardName string Shard name.  Cloud Manager  returns this value when a cluster has a\n typeName  of  SHARDED  or a  REPLICA_SET  that part of a\nsharded cluster. typeName string Cluster type.  Cloud Manager  may return: typeName Description REPLICA_SET A replica set . SHARDED A sharded cluster where each shard is a  standalone \ninstance. No shards are replica sets. SHARDED_REPLICA_SET A sharded cluster that contains at least one shard that is\na replica set. CONFIG_SERVER_REPLICA_SET Config servers deployed as a replica set.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterName\": \"myRS\",\n  \"groupId\": \"5e84b94c003f2d6370004f4e\",\n  \"id\": \"5e8ba20e87d9396ca9b96bd0\",\n  \"lastHeartbeat\": \"2020-06-10T14:51:28Z\",\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/5e84b94c003f2d6370004f4e/clusters/5e8ba20e87d9396ca9b96bd0\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"replicaSetName\": \"myRS\",\n  \"typeName\": \"REPLICA_SET\"\n}\n\n"
                }
            ],
            "preview": "Retrieve details for one cluster in one project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/project/create-one-apiKey-in-one-project",
            "title": "Create and Assign One Organization API Key to One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the Project whose  API (Application Programming Interface)  keys you want to\nretrieve. Use the\n /groups  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None At least one of the two body parameters are required. Name Type Description desc string Description of the  API (Application Programming Interface)  key. Must be between 1 and 250\ncharacters in length. roles string array List of roles that the  API (Application Programming Interface)  Key needs to have. If the  roles \narray is provided: Project roles include: Provide at least one role Make sure all roles must be valid for the Project Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin Name Type Description desc string Description of this Organization  API (Application Programming Interface)  key assigned to this\nProject. id string Unique identifier for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. privateKey string Redacted Private key for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. publicKey string Public key for this Organization  API (Application Programming Interface)  key assigned to this Project. roles object array Roles that this Organization  API (Application Programming Interface)  key assigned to this Project\nhas. This array returns all the Organization and Project roles\nthe user has in  Cloud Manager . roles.groupId string Unique identifier of the Project to which this role belongs. roles.orgId string Unique identifier of the Organization to which this role\nbelongs. roles.roleName string Name of the role. This resource returns all the roles the user\nhas in  Cloud Manager . Possible values are: Organization Roles If this is an  roles.orgId  (Organization), values include: Project Roles If this is an  roles.groupId  (Project), values include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} .",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/apiKeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys?pretty=true\" \\\n     --data '{\n       \"desc\" : \"New API key for test purposes\",\n       \"roles\": [\"GROUP_READ_ONLY\", \"GROUP_DATA_ACCESS_ADMIN\"]\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"New API key for test purposes\",\n  \"id\" : \"5d1d143c87d9d63e6d694746\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfe20b6d97029d82fa63/apiKeys/5d1d143c87d9d63e6d694746\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-db2c132ca78d\",\n  \"publicKey\" : \"{PUBLIC-KEY}\",\n  \"roles\" : [ {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_READ_ONLY\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_DATA_ACCESS_ADMIN\"\n  }, {\n    \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n    \"roleName\" : \"ORG_BILLING_ADMIN\"\n  } ]\n}"
                }
            ],
            "preview": "At least one of the two body parameters are required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/project/delete-one-apiKey-in-one-project",
            "title": "Unassign One Organization API Key from One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the Project you wish to unassign from the\n API (Application Programming Interface)  key. Use the\n /groups  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  key you want to update. Request\nthe\n /groups/{PROJECT-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys to which the authenticated\nuser has access for the specified organization. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /orgs/{PROJECT-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys/5d1d12c087d9d63e6d682438\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/project/assign-one-org-apiKey-to-one-project",
            "title": "Assign One Organization API Key to One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the Project whose  API (Application Programming Interface)  keys you want to\nupdate. Use the\n /groups  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  key you want to update. Request\nthe\n /groups/{PROJECT-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys to which the authenticated\nuser has access for the specified organization. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None Name Type Necessity Description roles array Required List of roles that the  API (Application Programming Interface)  Key should be granted. A minimum\nof one role must be provided. Any roles provided must be\nvalid for the assigned Project: Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin Name Type Description desc string Description of this Organization  API (Application Programming Interface)  key assigned to this\nProject. id string Unique identifier for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. privateKey string Redacted Private key for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. publicKey string Public key for this Organization  API (Application Programming Interface)  key assigned to this Project. roles object array Roles that this Organization  API (Application Programming Interface)  key assigned to this Project\nhas. This array returns all the Organization and Project roles\nthe user has in  Cloud Manager . roles.groupId string Unique identifier of the Project to which this role belongs. roles.orgId string Unique identifier of the Organization to which this role\nbelongs. roles.roleName string Name of the role. This resource returns all the roles the user\nhas in  Cloud Manager . Possible values are: Organization Roles If this is an  roles.orgId  (Organization), values include: Project Roles If this is an  roles.groupId  (Project), values include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys/{API-KEY-ID}?pretty=true\"\n     --data '{\n       \"roles\": [ \"GROUP_READ_ONLY\", \"GROUP_DATA_ACCESS_READ_WRITE\" ]\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"test\",\n  \"id\" : \"{API-KEY-ID}\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-1493e7bcfde9\",\n  \"publicKey\" : \"{PUBLIC-KEY}\",\n  \"roles\" : [ {\n    \"groupId\" : \"{PROJECT-ID-1}\",\n    \"roleName\" : \"GROUP_DATA_ACCESS_READ_WRITE\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID-1}\",\n    \"roleName\" : \"GROUP_READ_ONLY\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID-2}\",\n    \"roleName\" : \"GROUP_READ_ONLY\"\n  }, {\n    \"orgId\" : \"{ORG-ID}\",\n    \"roleName\" : \"ORG_MEMBER\"\n  } ]\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/project/get-all-apiKeys-in-one-project",
            "title": "Get All Organization API Keys Assigned to One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the Project from which you want to\nretrieve its assigned Organization  API (Application Programming Interface)  keys. Use the\n /groups  endpoint\nto retrieve all Projects to which the authenticated user has\naccess. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Each  result  is one Project  API (Application Programming Interface)  key. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description desc string Description of this Organization  API (Application Programming Interface)  key assigned to this\nProject. id string Unique identifier for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. privateKey string Redacted Private key for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. publicKey string Public key for this Organization  API (Application Programming Interface)  key assigned to this Project. roles object array Roles that this Organization  API (Application Programming Interface)  key assigned to this Project\nhas. This array returns all the Organization and Project roles\nthe user has in  Cloud Manager . roles.groupId string Unique identifier of the Project to which this role belongs. roles.orgId string Unique identifier of the Organization to which this role\nbelongs. roles.roleName string Name of the role. This resource returns all the roles the user\nhas in  Cloud Manager . Possible values are: Organization Roles If this is an  roles.orgId  (Organization), values include: Project Roles If this is an  roles.groupId  (Project), values include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/apiKeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"desc\" : \"Updated API Key description for DOCSP-6042\",\n    \"id\" : \"5d1cf1f980eef570c9fc87e5\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfe20b6d97029d82fa63/apiKeys/5d1cf1f980eef570c9fc87e5\",\n      \"rel\" : \"self\"\n    } ],\n    \"privateKey\" : \"********-****-****-9d4ae38e4ddd\",\n    \"publicKey\" : \"{PUBLIC-KEY}\",\n    \"roles\" : [ {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_AUTOMATION_ADMIN\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_MONITORING_ADMIN\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_MEMBER\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_BILLING_ADMIN\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_DATA_ACCESS_ADMIN\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_USER_ADMIN\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_READ_ONLY\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_OWNER\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_DATA_ACCESS_READ_WRITE\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_GROUP_CREATOR\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_READ_ONLY\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_DATA_ACCESS_READ_ONLY\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_BACKUP_ADMIN\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_CLUSTER_MANAGER\"\n    } ]\n  }, {\n    \"desc\" : \"New API key for test purposes\",\n    \"id\" : \"5d1d12c087d9d63e6d682438\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfe20b6d97029d82fa63/apiKeys/5d1d12c087d9d63e6d682438\",\n      \"rel\" : \"self\"\n    } ],\n    \"privateKey\" : \"********-****-****-cb34f12aafdb\",\n    \"publicKey\" : \"oxhzytwb\",\n    \"roles\" : [ {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_READ_ONLY\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_MEMBER\"\n    }, {\n      \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n      \"roleName\" : \"ORG_BILLING_ADMIN\"\n    } ]\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Each result is one Project API (Application Programming Interface) key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/delete-one-org-api-key-access-list",
            "title": "Delete One Access List Entry for an API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Delete a specified address on the access list from the specified\n API Key . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nto which the target  API (Application Programming Interface)  key belongs. Request the\n /orgs \nendpoint to retrieve all organizations to which the\nauthenticated user has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  key for which you want to\nretrieve access list entries. Request the\n /orgs/{ORG-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys for the specified\norganization to which the authenticated user has access. ACCESS-LIST-ENTRY string The IP or  CIDR (Classless Inter-Domain Routing)  address.\nIf the entry includes a subnet mask, such as  192.0.2.0/24 ,\nuse the URL-encoded value  %2F  for the forward slash  / . The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. This endpoint returns an empty JSON document.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/{ACCESS-LIST-ENTRY}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/192.0.2.0%2F24\""
                },
                {
                    "lang": "json",
                    "value": "HTTP/1.1 204 No Content"
                }
            ],
            "preview": "Delete a specified address on the access list from the specified\nAPI Key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/get-all-org-api-key-access-list",
            "title": "Get All Access List Entries for One Organization API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve information on all access list entries for the specified\n API Key . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nto which the target  API (Application Programming Interface)  Key belongs. Request the\n /orgs  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  Key for which you want to\nretrieve access list entries. Request the\n /orgs/{ORG-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys for the specified\norganization to which the authenticated user has access. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Each  result  is one access list entry. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description cidrBlock string CIDR-notated range of IP addresses in the access list. count number Total number of requests that have originated from this IP\naddress. created date Date this IP address was added to the access list. ipAddress string IP address in the access list. lastUsed date Date of the most recent request that originated from this IP\naddress. This field only appears if at least one request has\noriginated from this IP address, and is only updated when a\nresource is retrieved from the access list. lastUsedAddress string IP address from which the last call to the API was issued. This\nfield only appears if at least one request has originated\nfrom this IP address. links array An array of documents, representing a  link \nto one or more sub-resources and/or related resources such as\n list pagination . See  Linking  for\nmore information.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --header \"Content-Type: application/json\" \\\n  --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n  \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/599c510c80eef518f3b63fe1/apiKeys/5c49e72980eef544a218f8f8/accessList/?pretty=true&pageNum=1&itemsPerPage=100\",\n  \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"cidrBlock\" : \"147.58.184.16/32\",\n    \"count\" : 0,\n    \"created\" : \"2019-01-24T16:34:57Z\",\n    \"ipAddress\" : \"147.58.184.16\",\n    \"lastUsed\" : \"2019-01-24T20:18:25Z\",\n    \"lastUsedAddress\": \"147.58.184.16\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/147.58.184.16\",\n      \"rel\" : \"self\"\n    } ]\n  }, {\n    \"cidrBlock\" : \"84.255.48.125/32\",\n    \"count\" : 0,\n    \"created\" : \"2019-01-24T16:26:37Z\",\n    \"ipAddress\" : null,\n    \"lastUsed\" : \"2019-01-24T20:18:25Z\",\n    \"lastUsedAddress\": \"84.255.48.125\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/206.252.195.126\",\n      \"rel\" : \"self\"\n    } ]\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Retrieve information on all access list entries for the specified\nAPI Key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/delete-one-api-key",
            "title": "Delete One API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier of the organization that owns the  API (Application Programming Interface)  Key. API-KEY-ID string Unique identifier of the  API (Application Programming Interface)  Key. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/update-one-org-api-key",
            "title": "Update an API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nwhose  API (Application Programming Interface)  keys you want to retrieve. Use the\n /orgs \nendpoint to retrieve all organizations to which the\nauthenticated user has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  key you want to update. Request\nthe\n /orgs/{ORG-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys to which the authenticated\nuser has access for the specified organization. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None Name Type Required/Optional Description desc string Optional Description of the key. This parameter is optional; however, the\nrequest must contain either a  desc  parameter or a  roles \nparameter. If  desc  is provided, it must be between 1 and 250\ncharacters long. roles string array Optional List of roles that the  API (Application Programming Interface)  key should have. This parameter is\noptional; however, the request must contain either a  desc \nparameter or a  roles  parameter. If  roles  is provided,\nthere must be at least one role listed, and all roles must be\nvalid for an Organization. Organization roles include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Name Type Description id string Unique identifier for the API key desc string Description of the API key privateKey string Redacted private key for the API key publicKey string Public key for the API key roles object array Roles that the API key has roles.{ENTITY-ID} string The  {ENTITY-ID}  represents the Organization or Project to\nwhich this role applies. Possible values are:  orgId  or\n groupId . roles.roleName string The name of the role. The  users  resource returns all the roles the\nuser has in either  MongoDB Atlas  or  Cloud Manager . Possible values are: Organization Roles Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Project Roles Groups and projects are synonymous terms. GROUP_OWNER GROUP_READ_ONLY GROUP_DATA_ACCESS_ADMIN GROUP_DATA_ACCESS_READ_WRITE GROUP_DATA_ACCESS_READ_ONLY GROUP_AUTOMATION_ADMIN GROUP_BACKUP_ADMIN GROUP_MONITORING_ADMIN GROUP_OWNER GROUP_USER_ADMIN The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} .",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}?pretty=true\" \\\n     --data '{\n       \"desc\" : \"Updated |api| key description for test purposes\",\n       \"roles\": [\"ORG_MEMBER\", \"ORG_READ_ONLY\"]\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"Updated |api| key description for test purposes\",\n  \"id\" : \"5c47ba5127d9d61b9fd8a27b\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfc70b6d12029d82e3f6/apiKeys/5c47ba5127d9d61b9fd8a27b\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-db2c132ca78d\",\n  \"publicKey\" : \"kzurbulc\",\n  \"roles\" : [ {\n    \"orgId\" : \"5980cfc70b6d97029d82e3f6\",\n    \"roleName\" : \"ORG_MEMBER\"\n  }, {\n    \"orgId\" : \"5980cfc70b6d97029d82e3f6\",\n    \"roleName\" : \"ORG_READ_ONLY\"\n  } ]\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/project/update-one-apiKey-in-one-project",
            "title": "Modify Roles of One Organization API Key to One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier for the Project whose  API (Application Programming Interface)  keys you want to\nupdate. Use the\n /groups  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  key you want to update. Request\nthe\n /groups/{PROJECT-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys to which the authenticated\nuser has access for the specified organization. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None The body parameter is required. Name Type Necessity Description roles string array Required List of roles that the  API (Application Programming Interface)  Key should be granted. A minimum\nof one role must be provided. Any roles provided must be\nvalid for the assigned Project: Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin Include all roles that you want this API Key to have. Any\nroles not in this array are removed. Name Type Description desc string Description of this Organization  API (Application Programming Interface)  key assigned to this\nProject. id string Unique identifier for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. privateKey string Redacted Private key for this Organization  API (Application Programming Interface)  key assigned to\nthis Project. publicKey string Public key for this Organization  API (Application Programming Interface)  key assigned to this Project. roles object array Roles that this Organization  API (Application Programming Interface)  key assigned to this Project\nhas. This array returns all the Organization and Project roles\nthe user has in  Cloud Manager . roles.groupId string Unique identifier of the Project to which this role belongs. roles.orgId string Unique identifier of the Organization to which this role\nbelongs. roles.roleName string Name of the role. This resource returns all the roles the user\nhas in  Cloud Manager . Possible values are: Organization Roles If this is an  roles.orgId  (Organization), values include: Project Roles If this is an  roles.groupId  (Project), values include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Role Value in API Role GROUP_AUTOMATION_ADMIN Project Automation Admin GROUP_BACKUP_ADMIN Project Backup Admin GROUP_BILLING_ADMIN Project Billing Admin GROUP_DATA_ACCESS_ADMIN Project Data Access Admin GROUP_DATA_ACCESS_READ_ONLY Project Data Access Read Only GROUP_DATA_ACCESS_READ_WRITE Project Data Access Read/Write GROUP_MONITORING_ADMIN Project Monitoring Admin GROUP_OWNER Project Owner GROUP_READ_ONLY Project Read Only GROUP_USER_ADMIN Project User Admin The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} .",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/apiKeys/5d1d143c87d9d63e6d694746?pretty=true\" \\\n     --data '{\n         \"roles\": [ \"GROUP_READ_ONLY\", \"GROUP_DATA_ACCESS_READ_WRITE\" ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"New API key for test purposes\",\n  \"id\" : \"5d1d143c87d9d63e6d694746\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfe20b6d97029d82fa63/apiKeys/5d1d143c87d9d63e6d694746\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-eac4256753ba\",\n  \"publicKey\" : \"{PUBLIC-KEY}\",\n  \"roles\" : [ {\n    \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n    \"roleName\" : \"ORG_BILLING_ADMIN\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_DATA_ACCESS_READ_WRITE\"\n  }, {\n    \"orgId\" : \"5980cfe20b6d97029d82fa63\",\n    \"roleName\" : \"ORG_MEMBER\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_READ_ONLY\"\n  } ]\n}"
                }
            ],
            "preview": "The body parameter is required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/create-one-org-api-key",
            "title": "Create an API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nwhose API keys you want to retrieve. Use the\n /orgs  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None All body parameters are required. Name Type Description desc string Description of the API key. Must be between 1 and 250\ncharacters in length. roles string array List of roles that the API key should have. There must\nbe at least one role listed, and all roles must be valid for an\nOrganization. Organization roles include: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Name Type Description id string Unique identifier for the API key desc string Description of the API key privateKey string Private key for the API key. This key appears unredacted only\nat the time of creation. publicKey string Public key for the API key roles object array Roles that the API key has roles.orgId string The  orgId  represents the Organization to\nwhich this role applies. roles.roleName string The name of the role. The  users  resource returns all the\nroles the user has in either  MongoDB Atlas  or  Cloud Manager . Possible values\nare: Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} . The  privateKey  appears unredacted in the response body. This\nexample is redacted for security purposes.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /orgs/{ORG-ID}/apiKeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys?pretty=true\" \\\n     --data '{\n       \"desc\" : \"New API key for test purposes\",\n       \"roles\": [\"ORG_MEMBER\", \"ORG_BILLING_ADMIN\"]\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"New API key for test purposes\",\n  \"id\" : \"{API-KEY-ID}\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-db2c132ca78d\",\n  \"publicKey\" : \"{PUBLIC-KEY}\",\n  \"roles\" : [ {\n    \"orgId\" : \"{ORG-ID}\",\n    \"roleName\" : \"ORG_BILLING_ADMIN\"\n  }, {\n    \"orgId\" : \"{ORG-ID}\",\n    \"roleName\" : \"ORG_MEMBER\"\n  } ]\n}"
                }
            ],
            "preview": "All body parameters are required.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/get-all-org-api-keys",
            "title": "Get All API Keys",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string The unique identifier for the  organization \nwhose API keys you want to retrieve. Use the\n /orgs \nendpoint to retrieve all organizations to which the\nauthenticated user has access. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None Each  result  is one API key. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description id string Unique identifier for the API key desc string Description of the API key privateKey string Redacted private key for the API key publicKey string Public key for the API key roles object array Roles that the API key has roles.{ENTITY-ID} string The  {ENTITY-ID}  represents the Organization or Project to\nwhich this role applies. Possible values are:  orgId  or\n groupId . roles.roleName string The name of the role. The  users  resource returns all the roles the\nuser has in either  MongoDB Atlas  or  Cloud Manager . Possible values are: Organization Roles Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Project Roles Groups and projects are synonymous terms. GROUP_OWNER GROUP_READ_ONLY GROUP_DATA_ACCESS_ADMIN GROUP_DATA_ACCESS_READ_WRITE GROUP_DATA_ACCESS_READ_ONLY GROUP_AUTOMATION_ADMIN GROUP_BACKUP_ADMIN GROUP_MONITORING_ADMIN GROUP_OWNER GROUP_USER_ADMIN The user who makes the request can be formatted either as\n {USERNAME}:{APIKEY}  or  {PUBLIC-KEY}:{PRIVATE-KEY} .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/apiKeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfc70b6d97029d82e3f6/apiKeys?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"desc\" : \"Test Docs Service User\",\n    \"id\" : \"5c47503320eef5699e1cce8d\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfc70b6d98829d82e3f6/apiKeys/5c47503ae0eef5699e1cce8d\",\n      \"rel\" : \"self\"\n    } ],\n    \"privateKey\" : \"********-****-****-db2c132ca78d\",\n    \"publicKey\" : \"ewmaqvdo\",\n    \"roles\" : [ {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_OWNER\"\n    }, {\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"roleName\" : \"GROUP_READ_ONLY\"\n    }, {\n      \"orgId\" : \"5980cfc70b6d97029d82e3f6\",\n      \"roleName\" : \"ORG_MEMBER\"\n    } ]\n  } ],\n  \"totalCount\" : 1\n}"
                }
            ],
            "preview": "Each result is one API key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/get-one-org-api-key-access-list",
            "title": "Get One Access List Entry for One Organization API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve information on a single  API Key \naccess list entry using the unique identifier for the  API (Application Programming Interface)  Key and\ndesired IP address. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nto which the target  API (Application Programming Interface)  Key belongs. Request the\n /orgs \nendpoint to retrieve all organizations to which the\nauthenticated user has access. API-KEY-ID string Unique identifier for the  API (Application Programming Interface)  Key for which you want to\nretrieve access list entries. Request the\n /orgs/{ORG-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys for the specified\norganization to which the authenticated user has access. ACCESS-LIST-ENTRY string The IP or  CIDR (Classless Inter-Domain Routing)  address.\nIf the entry includes a subnet mask, such as  192.0.2.0/24 ,\nuse the URL-encoded value  %2F  for the forward slash  / . The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description cidrBlock string CIDR-notated range of IP addresses in the access list. count number Total number of requests that have originated from this IP\naddress. created date Date this IP address was added to the access list. ipAddress string IP address in the access list. lastUsed date Date of the most recent request that originated from this IP\naddress. This field only appears if at least one request has\noriginated from this IP address, and is only updated when a\nresource is retrieved from the access list. lastUsedAddress string IP address from which the last call to the API was issued. This\nfield only appears if at least one request has originated\nfrom this IP address. links array An array of documents, representing a  link \nto one or more sub-resources and/or related resources such as\n list pagination . See  Linking  for\nmore information.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/{ACCESS-LIST-ENTRY}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/192.0.2.0%2F24?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"cidrBlock\": \"192.0.2.0/24\",\n  \"count\": 0,\n  \"created\": \"2019-11-01T14:44:44Z\",\n  \"links\": [\n    {\n               \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/192.0.2.0%2F24\",\n               \"rel\": \"self\"\n           },\n           {\n               \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}\",\n               \"rel\": \"http://mms.mongodb.com/apiKeys\"\n           }\n       ]\n   }"
                }
            ],
            "preview": "Retrieve information on a single API Key\naccess list entry using the unique identifier for the API (Application Programming Interface) Key and\ndesired IP address.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/controlled-features/update-controlled-features-for-one-project",
            "title": "Update Feature Policies for One Project",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This resource requires the  Project Owner . You must include every policy that you want to include and maintain.\nThis resource overwrites any existing policy. If you omit a policy\nwhen using this resource, that policy isn't enforced after the\nupdate. That policy has been removed. Name Type Necessity Description PROJECT-ID string Required Unique identifier of the project that has the controlled\nfeatures. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None Name Type Description externalManagementSystem object Identifying parameters for the external system that manages this\n Ops Manager  Project. string Identifying label for the external system that manages this\n Ops Manager  Project. string Unique identifier of the external system that manages this\n Ops Manager  Project. string Active release of the external system that manages this  Ops Manager \nProject. policies array List of policies that the external system applies to this\n Ops Manager  Project. object Single policy set for this  Ops Manager  Project. This parameter can\nbe set one or more times in the  policies  array. Accepted values are: Value Purpose EXTERNALLY_MANAGED_LOCK Users can't use  Ops Manager  to manage other settings given\nin the  policies.policy[n]  array. These same users may\nuse a configured external system, like the  Kubernetes Operator \nto manage these settings. DISABLE_USER_MANAGEMENT Users can't manage users or roles. Users can't change authentication settings. Users can't change any  mongod  settings listed in the\n policies[n].disabledParams  array. Users can't change the version of any  mongod  or\n mongos . DISABLE_BACKUP_AGENT Users can't enable or disable the Backup agent. Users can't change log management settings. Users can't manage deployments using Automation. Users can't create or update Agent API keys. Users can't change the server type of hosts. array List of  mongod  settings to disable when you apply the\n DISABLE_SET_MONGOD_CONFIG  policy. Automation doesn't support\nall MongoDB options, which can result in failed import attempts.\nTo learn more, see  MongoDB Settings and Automation Support . Name Type Description _id string Unique identifier of the Project for which you are setting this\npolicy. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was updated. externalManagementSystem object Identifying parameters for the external system that manages this\n Cloud Manager  Project. string Identifying label for the external system that manages this\n Cloud Manager  Project. string Unique identifier of the external system that manages this\n Cloud Manager  Project. string Active release of the external system that manages this  Cloud Manager \nProject. policies array List of policies that the external system applies to this\n Cloud Manager  Project. object Single policy set for this  Cloud Manager  Project. This parameter can\nbe set one or more times in the  policies  array. Possible values are: Value Purpose EXTERNALLY_MANAGED_LOCK Users can't use  Cloud Manager  to manage other settings given\nin the  policies.policy[n]  array. These same users may\nuse a configured external system, like the  Kubernetes Operator \nto manage these settings. DISABLE_USER_MANAGEMENT Users can't manage users or roles. Users can't change authentication settings. Users can't change any  mongod  settings listed in the\n policies[n].disabledParams  array. Users can't change the version of any  mongod  or\n mongos . DISABLE_BACKUP_AGENT Users can't enable or disable the Backup agent. Users can't change log management settings. Users can't manage deployments using Automation. Users can't create or update Agent API keys. Users can't change the server type of hosts. array List of  mongod  settings to disable if you apply the\n DISABLE_SET_MONGOD_CONFIG  policy. Automation doesn't support\nall MongoDB options, which can result in failed import attempts.\nTo learn more, see  MongoDB Settings and Automation Support .",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{PROJECT-ID}/controlledFeature"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/controlledFeature?pretty=true\" \\\n     --data '{\n       \"externalManagementSystem\":\n       {\n         \"name\": \"Operator\",\n         \"systemId\": \"6d6c139ae5528707b6e8e3b2\",\n         \"version\": \"0.2.1\"\n       },\n       \"policies\": [\n         {\"policy\": \"ExternallyManagedLock\"},\n         {\"policy\": \"DisableUserManagement\"},\n         {\"policy\": \"DisableAuthenticationMechanisms\"},\n         {\"policy\": \"DisableSetMongodVersion\"},\n         {\n           \"policy\": \"DisableSetMongodConfig\",\n           \"disabledParams\": [\"net.tls.CAFile\"]\n         }\n       ]\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"_id\": \"{PROJECT-ID}\",\n  \"created\": \"2019-08-29T15:03:24Z\",\n  \"updated\": \"2019-08-29T15:03:24Z\",\n  \"externalManagementSystem\":\n  {\n    \"name\": \"Operator\",\n    \"systemId\": \"6d6c139ae5528707b6e8e3b2\",\n    \"version\": \"0.2.1\"\n  },\n  \"policies\": [\n    {\"policy\": \"ExternallyManagedLock\"},\n    {\"policy\": \"DisableUserManagement\"},\n    {\"policy\": \"DisableAuthenticationMechanisms\"},\n    {\"policy\": \"DisableSetMongodVersion\"},\n    {\n      \"policy\": \"DisableSetMongodConfig\",\n      \"disabledParams\": [\"net.tls.CAFile\"]\n    }\n  ]\n}"
                }
            ],
            "preview": "This resource requires the Project Owner.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/controlled-features/get-controlled-features-for-one-project",
            "title": "Retrieve Feature Policies for One Project",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This resource requires the  Project Owner . Name Type Necessity Description PROJECT-ID string Required Unique identifier of the project that has the controlled\nfeatures. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description _id string Unique identifier of the Project for which you are setting this\npolicy. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was updated. externalManagementSystem object Identifying parameters for the external system that manages this\n Cloud Manager  Project. string Identifying label for the external system that manages this\n Cloud Manager  Project. string Unique identifier of the external system that manages this\n Cloud Manager  Project. string Active release of the external system that manages this  Cloud Manager \nProject. policies array List of policies that the external system applies to this\n Cloud Manager  Project. object Single policy set for this  Cloud Manager  Project. This parameter can\nbe set one or more times in the  policies  array. Possible values are: Value Purpose EXTERNALLY_MANAGED_LOCK Users can't use  Cloud Manager  to manage other settings given\nin the  policies.policy[n]  array. These same users may\nuse a configured external system, like the  Kubernetes Operator \nto manage these settings. DISABLE_USER_MANAGEMENT Users can't manage users or roles. Users can't change authentication settings. Users can't change any  mongod  settings listed in the\n policies[n].disabledParams  array. Users can't change the version of any  mongod  or\n mongos . DISABLE_BACKUP_AGENT Users can't enable or disable the Backup agent. Users can't change log management settings. Users can't manage deployments using Automation. Users can't create or update Agent API keys. Users can't change the server type of hosts. array List of  mongod  settings to disable if you apply the\n DISABLE_SET_MONGOD_CONFIG  policy. Automation doesn't support\nall MongoDB options, which can result in failed import attempts.\nTo learn more, see  MongoDB Settings and Automation Support .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/controlledFeature"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/controlledFeature?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"_id\": \"{PROJECT-ID}\",\n  \"created\": \"2019-08-29T15:03:24Z\",\n  \"updated\": \"2019-08-29T15:03:24Z\",\n  \"externalManagementSystem\":\n  {\n    \"name\": \"Operator\",\n    \"systemId\": \"6d6c139ae5528707b6e8e3b2\",\n    \"version\": \"0.2.1\"\n  },\n  \"policies\": [\n    {\"policy\": \"ExternallyManagedLock\"},\n    {\"policy\": \"DisableUserManagement\"},\n    {\"policy\": \"DisableAuthenticationMechanisms\"},\n    {\"policy\": \"DisableSetMongodVersion\"},\n    {\n      \"policy\": \"DisableSetMongodConfig\",\n      \"disabledParams\": [\"net.tls.CAFile\"]\n    }\n  ]\n}"
                }
            ],
            "preview": "This resource requires the Project Owner.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/create-org-api-key-access-list",
            "title": "Create Access List Entries for One Organization API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Create one or more new access list entries for the specified\n API Key . Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier for the  organization \nto which the target  API (Application Programming Interface)  Key belongs. Use the\n /orgs  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string Unique identifier for the Organization  API (Application Programming Interface)  Key for which you\nwant to create a new access list entry. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None Specify an array of documents, where each document represents one\naccess list entry you want to add to the project. You must specify an\narray even if you are only associating a single access list entry to the\nproject. When you submit a  POST  request containing  ipAddress  or\n cidrBlock  values which are not already present in the access list,\n Cloud Manager  adds those entries to the list of existing entries in the\naccess list.  Cloud Manager  does not set the access list to only contain the\nentries specified in the request. In the following table,  [i]  represents an array index. Cloud Manager  supports up to 500  API (Application Programming Interface)  Keys within a single\norganization. Name Type Description [i].ipAddress string IP address to be added to the access list for the\nAPI key. This field is mutually exclusive with the\n cidrBlock  field. [i].cidrBlock string Access list entry in  CIDR (Classless Inter-Domain Routing)  notation to be added for the\nAPI key. This field is mutually exclusive with the\n ipAddress  field. Each object within the  results  array is one access list entry. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description cidrBlock string CIDR-notated range of IP addresses in the access list. count number Total number of requests that have originated from this IP\naddress. created date Date this IP address was added to the access list. ipAddress string IP address in the access list. lastUsed date Date of the most recent request that originated from this IP\naddress. This field only appears if at least one request has\noriginated from this IP address, and is only updated when a\nresource is retrieved from the access list. lastUsedAddress string IP address from which the last call to the API was issued. This\nfield only appears if at least one request has originated\nfrom this IP address. links array An array of documents, representing a  link \nto one or more sub-resources and/or related resources such as\n list pagination . See  Linking  for\nmore information.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{USER-ID}:{API-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true\" \\\n     --data '\n       [{\n         \"ipAddress\" : \"77.54.32.11\"\n       }]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"cidrBlock\" : \"206.252.195.126/32\",\n    \"count\" : 47,\n    \"created\" : \"2019-01-24T16:26:37Z\",\n    \"ipAddress\" : \"206.252.195.126\",\n    \"lastUsed\" : \"2019-01-25T16:32:47Z\",\n    \"lastUsedAddress\" : \"206.252.195.126\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/206.252.195.126\",\n      \"rel\" : \"self\"\n    } ]\n  }, {\n    \"cidrBlock\" : \"76.54.32.11/32\",\n    \"count\" : 0,\n    \"created\" : \"2019-01-24T21:09:05Z\",\n    \"ipAddress\" : null,\n    \"links\" : [ {\n     \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accessList/76.54.32.11\",\n      \"rel\" : \"self\"\n    } ]\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Create one or more new access list entries for the specified\nAPI Key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/api-keys/org/get-one-org-api-key",
            "title": "Get One API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Elements",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string The unique identifier for the  organization \nwhose API keys you want to retrieve. Use the\n /orgs  endpoint\nto retrieve all organizations to which the authenticated\nuser has access. API-KEY-ID string The unique identifier for the  API key \nyou want to retrieve. Request the\n /orgs/{ORG-ID}/apiKeys \nendpoint to retrieve all  API (Application Programming Interface)  keys for the specified\norganization to which the authenticated user has access. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. If you set the query element  envelope  to  true , the response is wrapped\nby the  content  object. The HTTP response returns a JSON document that includes the following objects: Name Type Description id string Unique identifier for the API key links string An array of documents, representing a  link \nto one or more sub-resources and/or related resources such as\n list pagination . See  Linking  for\nmore information. desc string Description of the API key privateKey string Redacted private key for the API key publicKey string Public key for the API key roles object array Roles that the API key has roles.{ENTITY-ID} string The  {ENTITY-ID}  represents the Organization or Project to\nwhich this role applies. Possible values are:  orgId  or\n groupId . roles.roleName string The name of the role. The  users  resource returns all the roles the\nuser has in either  MongoDB Atlas  or  Cloud Manager . Possible values are: Organization Roles Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Project Roles Groups and projects are synonymous terms. GROUP_OWNER GROUP_READ_ONLY GROUP_DATA_ACCESS_ADMIN GROUP_DATA_ACCESS_READ_WRITE GROUP_DATA_ACCESS_READ_ONLY GROUP_AUTOMATION_ADMIN GROUP_BACKUP_ADMIN GROUP_MONITORING_ADMIN GROUP_OWNER GROUP_USER_ADMIN",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/apiKeys/{API-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"desc\" : \"Test Docs Service User\",\n  \"id\" : \"5c47503880eef5662e1cce8d\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/5980cfc70b6d98229d82e3f6/apiKeys/5c47503880eef5662e1cce8d\",\n    \"rel\" : \"self\"\n  } ],\n  \"privateKey\" : \"********-****-****-db2c132ca78d\",\n  \"publicKey\" : \"ewmaqvdo\",\n  \"roles\" : [ {\n    \"orgId\" : \"5980cfc70b6d97029d82e3f6\",\n    \"roleName\" : \"ORG_MEMBER\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_READ_ONLY\"\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"roleName\" : \"GROUP_OWNER\"\n  } ]\n}"
                }
            ],
            "preview": "If you set the query element envelope to true, the response is wrapped\nby the content object.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/controlled-features/get-all-feature-control-policies",
            "title": "Retrieve All Feature Policies",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This resource requires any authenticated user or API Key. This endpoint doesn't use HTTP request path parameters. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description _id string Unique identifier of the Project for which you are setting this\npolicy. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was created. updated string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this feature control policy was updated. externalManagementSystem object Identifying parameters for the external system that manages this\n Cloud Manager  Project. string Identifying label for the external system that manages this\n Cloud Manager  Project. string Unique identifier of the external system that manages this\n Cloud Manager  Project. string Active release of the external system that manages this  Cloud Manager \nProject. policies array List of policies that the external system applies to this\n Cloud Manager  Project. object Single policy set for this  Cloud Manager  Project. This parameter can\nbe set one or more times in the  policies  array. Possible values are: Value Purpose EXTERNALLY_MANAGED_LOCK Users can't use  Cloud Manager  to manage other settings given\nin the  policies.policy[n]  array. These same users may\nuse a configured external system, like the  Kubernetes Operator \nto manage these settings. DISABLE_USER_MANAGEMENT Users can't manage users or roles. Users can't change authentication settings. Users can't change any  mongod  settings listed in the\n policies[n].disabledParams  array. Users can't change the version of any  mongod  or\n mongos . DISABLE_BACKUP_AGENT Users can't enable or disable the Backup agent. Users can't change log management settings. Users can't manage deployments using Automation. Users can't create or update Agent API keys. Users can't change the server type of hosts. array List of  mongod  settings to disable if you apply the\n DISABLE_SET_MONGOD_CONFIG  policy. Automation doesn't support\nall MongoDB options, which can result in failed import attempts.\nTo learn more, see  MongoDB Settings and Automation Support .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/availablePolicies"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{USERNAME}:{APIKEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/availablePolicies?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"_id\": \"{PROJECT-ID}\",\n  \"created\": \"2019-08-29T15:03:24Z\",\n  \"updated\": \"2019-08-29T15:03:24Z\",\n  \"externalManagementSystem\":\n  {\n    \"name\": \"Operator\",\n    \"systemId\": \"6d6c139ae5528707b6e8e3b2\",\n    \"version\": \"0.2.1\"\n  },\n  \"policies\": [\n    {\"policy\": \"ExternallyManagedLock\"},\n    {\"policy\": \"DisableUserManagement\"},\n    {\"policy\": \"DisableAuthenticationMechanisms\"},\n    {\"policy\": \"DisableSetMongodVersion\"},\n    {\n      \"policy\": \"DisableSetMongodConfig\",\n      \"disabledParams\": [\"net.tls.CAFile\"]\n    }\n  ]\n}"
                }
            ],
            "preview": "This resource requires any authenticated user or API Key.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agentapikeys/delete-one-agent-api-key",
            "title": "Remove One Agent API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint is restricted to users with the\n Project Owner  role. Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\nAgent API Key. API-AGENT-KEY-ID string Unique identifier of Agent API Key. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}/agentapikeys/{API-AGENT-KEY-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agentapikeys/{API-AGENT-KEY-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "This endpoint is restricted to users with the\nProject Owner role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agentapikeys/get-all-agent-api-keys-for-project",
            "title": "Get All Agent API Keys for One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint is restricted to users with the\n Project Read Only  role. Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\nAgent API Key. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description id string Unique identifier of this Agent API Key. key string Agent API Key. After creating this Agent API Key, subsequent requests\nreturn the last four characters of Agent API Keys. desc string Label for this Agent API Key. Limited to 1,000 characters. createdTime string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the Agent API Key was created. createdUserId string Unique identifier of user who created this Agent API Key. createdIpAddr string IP (Internet Protocol)  address that created this Agent API Key. createdBy string Source of this Agent API Key. Accepted values are: USER OLD_KEY PROVISIONING ATLAS PUBLIC_API",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/agentapikeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agentapikeys?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "[ {\n  \"_id\" : \"{AGENT-API-KEY-ID-1}\",\n  \"createdBy\" : \"PUBLIC_API\",\n  \"createdIpAddr\" : \"{IP-ADDRESS-1}\",\n  \"createdTime\" : 1520458807291,\n  \"createdUserId\" : \"{USER-ID-1}\",\n  \"desc\" : \"Agent API Key for this project\",\n  \"key\" : \"****************************8b87\"\n}, {\n  \"_id\" : \"{AGENT-API-KEY-ID-2}\",\n  \"createdBy\" : \"PROVISIONING\",\n  \"createdTime\" : 1508871142864,\n  \"desc\" : \"Generated by Provisioning\",\n  \"key\" : \"****************************39fe\"\n}, {\n  \"_id\" : \"{AGENT-API-KEY-ID-3}\",\n  \"createdBy\" : \"USER\",\n  \"createdIpAddr\" : \"{IP-ADDRESS-2}\",\n  \"createdTime\" : 1507067499083,\n  \"createdUserId\" : \"{USER-ID-2}\",\n  \"desc\" : \"Initial API Key\",\n  \"key\" : \"****************************70d7\"\n} ]"
                }
            ],
            "preview": "This endpoint is restricted to users with the\nProject Read Only role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/diagnostics/get-project-diagnostic-archive",
            "title": "Get One Project Diagnostic Archive",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "MongoDB engineers may request that  Ops Manager  administrators provide\ndiagnostic archives for one project for debugging and troubleshooting.\nProject diagnostic archives also contain global system information\nabout  Ops Manager . The API Key requires the  Global Monitoring Admin  or\n Global Owner  role to download a diagnostic archive. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns the diagnostics\narchive. Provide any of the following query parameters that you need: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true ageLimit integer Optional Length of time in days to retrieve entries for the diagnostic\narchive. 7 limit integer Optional Maximum number of entries for the diagnostic archive. 1000 minutes integer Optional Time range of the diagnostic archive, beginning at the specified\nnumber of minutes in the past and ending at the present time. To retrieve a diagnostic archive with data for the last 10\nminutes, specify  minutes=10  in your request. 1440 sizeLimit integer Optional Maximum file size of each file in the diagnostic archive\nexpressed in the number of characters. This includes values up\nto the nearest whole value to this limit. 50000000 This endpoint doesn't use HTTP request body parameters. This endpoint returns a compressed ( .tar.gz ) archive file to your\ncurrent working directory with the name you specified using the\n --output  or the  -o  option. The response saves  project_diagnostics.tar.gz  to your current\nworking directory on your local host. This endpoint returns a compressed ( .tar.gz ) archive file to your\ncurrent working directory with the name you specified using the\n --output  or the  -o  option.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/diagnostics"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/gzip\" \\\n     --request GET \"https://<OpsManagerHost>:<Port>/api/public/v1.0/groups/{PROJECT-ID}/diagnostics?pretty=true\" \\\n     --output project_diagnostics.tar.gz"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "MongoDB engineers may request that Ops Manager administrators provide\ndiagnostic archives for one project for debugging and troubleshooting.\nProject diagnostic archives also contain global system information\nabout Ops Manager.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/agentapikeys/create-one-agent-api-key",
            "title": "Create One Agent API Key",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint is restricted to users with the\n Project Owner  role. Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\nAgent API Key. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description desc string Label for this Agent API Key. Name Type Description id string Unique identifier of this Agent API Key. key string Agent API Key. After creating this Agent API Key, subsequent requests\nreturn the last four characters of Agent API Keys. desc string Label for this Agent API Key. Limited to 1,000 characters. createdTime string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the Agent API Key was created. createdUserId string Unique identifier of user who created this Agent API Key. createdIpAddr string IP (Internet Protocol)  address that created this Agent API Key. createdBy string Source of this Agent API Key. Accepted values are: USER OLD_KEY PROVISIONING ATLAS PUBLIC_API",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/agentapikeys"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/agentapikeys?pretty=true\" \\\n     --data '\n       {\n         \"desc\": \"Agent API Key for this project\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"_id\" : \"{AGENT-API-KEY-ID}\",\n  \"createdBy\" : \"PUBLIC_API\",\n  \"createdIpAddr\" : \"{IP-ADDRESS}\",\n  \"createdTime\" : 1520458807291,\n  \"createdUserId\" : \"{USER-ID}\",\n  \"desc\" : \"Agent API Key for this project\",\n  \"key\" : \"{AGENT-API-KEY}\"\n}"
                }
            ],
            "preview": "This endpoint is restricted to users with the\nProject Owner role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-get-all",
            "title": "Get All Log Collection Jobs for One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment. Use this\nendpoint to retrieve all log collection jobs for a specified  Cloud Manager \nproject. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true verbose Boolean Optional Flag that indicates whether to include all child jobs in the\nresponse. Each log collection job contains child jobs for each\nlog type and MongoDB process included in the request. false This endpoint doesn't use HTTP request body parameters. Each  result  is one log collection job. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description childJobs array List of child jobs associated with this request. Included in the\nresponse if you set tthe  verbose  query parameter to\n true . childJobs[n].errorMessage string Error message showing why this child job failed, if applicable. childJobs[n].finishDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this child job finished. childJobs[n].hostName string Name of the host from whom the child job collects the logs. childJobs[n].logCollectionType string Type of log this child job collects. Returns one of the\nfollowing values: AUTOMATION_AGENT BACKUP_AGENT MONITORING_AGENT MONGODB FTDC childJobs[n].path string Path to the process in the deployment for which this child job\ncollects logs.  MongoDB Atlas  uses these paths to build the directory\nhierarchy in the compressed archive file. logCollectionType Path AUTOMATION_AGENT <hostname>/automation_agent BACKUP_AGENT <hostname>/automation_agent MONITORING_AGENT <hostname>/automation_agent MONGODB <hostname>/<port>/<mongodb> FTDC <hostname>/<port>/<ftdc> childJobs[n].startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this child job started. childJobs[n].status string Status of this child job. This resource returns one of the\nfollowing values: SUCCESS FAILURE IN_PROGRESS MARKED_FOR_EXPIRY EXPIRED childJobs[n].uncompressedDiskSpaceBytes number Total uncompressed disk space in bytes that this child job uses. creationDate string Timestamp, in the number of seconds that have elapsed since the  UNIX epoch  when you created the log collection request job. expirationDate string Timestamp, in the number of seconds that have elapsed since the  UNIX epoch  when the log collection request job expires. groupId string Unique 24-hexadecimal digit string that identifies the\n project  associated with log collection request. id string Unique 24-hexadecimal digit string that identifies the log\ncollection request job. logTypes array List of log types included in this request. This resource\nreturns one or more of the following values: AUTOMATION_AGENT BACKUP_AGENT MONITORING_AGENT MONGODB FTDC redacted boolean Flag that indicates whether the request replaces emails,\nhostnames, IP addresses, and namespaces in the response with\nrandom string values. resourceName string Name of the resource for which you requested logs. resourceType string Type of resource for which you requested logs. This resource\nreturns one of the following values: CLUSTER PROCESS REPLICA_SET rootResourceName string Name of the complete deployment if you made the log request to a\npart of a deployment. Part of the deployment could be a replica\nset in a cluster or one shard of a sharded cluster. rootResourceType string Type of the part of the complete deployment if you made the log\nrequest to a part of a deployment. Part of the deployment could\nbe a replica set in a cluster or one shard of a sharded cluster.\nThis resource returns one of the following values: CLUSTER PROCESS REPLICA_SET status string Status of the log collection request job. This resource returns\none of the following values: SUCCESS FAILURE IN_PROGRESS MARKED_FOR_EXPIRY EXPIRED sizeRequestedPerFileBytes number Size for each log file in bytes. uncompressedSizeTotalBytes number Total uncompressed size of the log data in bytes that this\nrequest returns. userId string Unique 24-hexadecimal digit string that identifies the user\nexecuting the request. url string Internet address from which you download the logs from this\nrequest.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/logCollectionJobs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs?verbose=true&pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs?verbose=true&pageNum=1&itemsPerPage=100\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"results\": [\n    {\n      \"childJobs\": [\n        {\n          \"automationAgentId\": \"5c810cc4ff7a256345ff97bf\",\n          \"errorMessage\": null,\n          \"finishDate\": \"2019-03-07T12:21:30Z\",\n          \"hostName\": \"server1.example.com\",\n          \"logCollectionType\": \"AUTOMATION_AGENT\",\n          \"path\": \"server1.example.com/automation_agent\",\n          \"startDate\": \"2019-03-07T12:21:24Z\",\n          \"status\": \"SUCCESS\",\n          \"uncompressedDiskSpaceBytes\": 14686\n        }\n      ],\n      \"creationDate\": \"2019-03-07T12:21:24Z\",\n      \"downloadUrl\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/5c810cc4ff7a256345ff97b7/download\",\n      \"expirationDate\": \"2019-04-06T12:21:24Z\",\n      \"groupId\": \"5c8100bcf2a30b12ff88258f\",\n      \"id\": \"5c810cc4ff7a256345ff97b7\",\n      \"logTypes\": [\n        \"AUTOMATION_AGENT\",\n        \"MONGODB\"\n      ],\n      \"redacted\": true,\n      \"resourceName\": \"myReplicaSet\",\n      \"resourceType\": \"replicaset\",\n      \"rootResourceName\": \"myReplicaSet\",\n      \"rootResourceType\": \"replicaset\",\n      \"sizeRequestedPerFileBytes\": 1000,\n      \"status\": \"SUCCESS\",\n      \"uncompressedSizeTotalBytes\": 63326,\n      \"userId\": \"5c80f75fcf09a246878f67a4\"\n    },\n    {\n      \"childJobs\": [\n        {\n          \"automationAgentId\": \"5c81086e014b76a3d85e1117\",\n          \"errorMessage\": null,\n          \"finishDate\": \"2019-03-07T12:02:57Z\",\n          \"hostName\": \"server1.example.com:27027\",\n          \"logCollectionType\": \"MONGODB\",\n          \"path\": \"server1.example.com/27027/mongodb\",\n          \"startDate\": \"2019-03-07T12:02:54Z\",\n          \"status\": \"SUCCESS\",\n          \"uncompressedDiskSpaceBytes\": 9292\n        }\n      ],\n      \"creationDate\": \"2019-03-07T12:02:54Z\",\n      \"downloadUrl\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/5c81086e014b76a3d85e1113/download\",\n      \"expirationDate\": \"2019-05-06T12:02:54Z\",\n      \"groupId\": \"5c8100bcf2a30b12ff88258f\",\n      \"id\": \"5c81086e014b76a3d85e1113\",\n      \"logTypes\": [\n        \"MONGODB\",\n        \"FTDC\",\n        \"AUTOMATION_AGENT\"\n      ],\n      \"redacted\": false,\n      \"resourceName\": \"myReplicaSet\",\n      \"resourceType\": \"replicaset\",\n      \"rootResourceName\": \"myReplicaSet\",\n      \"rootResourceType\": \"replicaset\",\n      \"sizeRequestedPerFileBytes\": 1000,\n      \"status\": \"IN_PROGRESS\",\n      \"uncompressedSizeTotalBytes\": 44518,\n      \"userId\": \"5c80f75fcf09a246878f67a4\"\n    }\n  ],\n  \"totalCount\": 2\n}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment. Use this\nendpoint to retrieve all log collection jobs for a specified Cloud Manager\nproject.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-update-one",
            "title": "Extend a Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment. Each job is\ncreated with a specified expiration date. Use this endpoint to extend\nthe expiration date of an existing log collection job. You cannot extend the duration of log collection jobs which have already\nexpired. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. JOB-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection job to retry. Use the\n Get All Log Collection Jobs for One Project \nendpoint to obtain the IDs associated with your project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description expirationDate string Required Timestamp, in the number of seconds that have elapsed since the  UNIX epoch  when this job expires. This can be up to 6 months\nfrom the time the job was created. You cannot specify a date\nwhich precedes the time the request is made. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}?pretty=true\"\n     --data '\n       {\n         \"expirationDate\": \"2019-04-06T12:02:54Z\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment. Each job is\ncreated with a specified expiration date. Use this endpoint to extend\nthe expiration date of an existing log collection job.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-download-job",
            "title": "Download Logs from a Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment.  Use this\nendpoint to download a  .tar.gz  file stream for all logs associated\nwith the specified job. You can download logs from both successful and failed log collection\njobs. If the job failed, all successful components are downloaded. The\nlogs are downloaded to the same directory where the request is\nexecuted, and in the same format used when downloading logs through the\n Cloud Manager  UI. You cannot download logs from jobs in the  EXPIRED  or\n IN_PROGRESS  states. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. JOB-ID string Required Unique identifier of the job for which to download the logs. You\ncan obtain the  JOB-IDs  associated with your project by using\nthe  Get All Log Collection Jobs for One Project \nendpoint. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. If you're using cURL to make requests, you must include the\n --output  option and specify a file name to store\nyour logs. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "sh",
                    "value": "hostname/\n    automation_agent/\n        Automation-agent-verbose.log.2019-01-...\n    mongos/\n        ...\n    myShard_1/\n        27017/\n            ...\n        27018/\n..."
                },
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}/download"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{username}:{apiKey}\" --digest\n     --header \"Accept: application/json\"\n     --header \"Accept: application/gzip\"\n     --output logs.tar.gz\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}/download\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment.  Use this\nendpoint to download a .tar.gz file stream for all logs associated\nwith the specified job.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-retry",
            "title": "Retry a Failed Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment.  Use this\nendpoint to retry a single failed log collection job. To check if a log collection job failed, you can use the\n Get All Log Collection Jobs for One Project  and  Get One Log Collection Job  endpoints. The\n status  response element shows  FAILURE  for failed log collection\njobs. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. JOB-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection job to retry. Use the\n Get All Log Collection Jobs for One Project \nendpoint to obtain the IDs associated with your project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}/retry"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}/retry?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment.  Use this\nendpoint to retry a single failed log collection job.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-get-one",
            "title": "Get One Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment.  Use this\nendpoint to retrieve a single log collection job by its unique\nidentifier. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. JOB-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection job to retry. Use the\n Get All Log Collection Jobs for One Project \nendpoint to obtain the IDs associated with your project. Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None verbose Boolean If true, returns all child jobs in the response. A log\ncollection job contains child jobs for each log type and\nMongoDB process included in the request. false This endpoint doesn't use HTTP request body parameters. Name Type Description childJobs array List of child jobs associated with this request. Included in the\nresponse if you set tthe  verbose  query parameter to\n true . childJobs[n].errorMessage string Error message showing why this child job failed, if applicable. childJobs[n].finishDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this child job finished. childJobs[n].hostName string Name of the host from whom the child job collects the logs. childJobs[n].logCollectionType string Type of log this child job collects. Returns one of the\nfollowing values: AUTOMATION_AGENT BACKUP_AGENT MONITORING_AGENT MONGODB FTDC childJobs[n].path string Path to the process in the deployment for which this child job\ncollects logs.  MongoDB Atlas  uses these paths to build the directory\nhierarchy in the compressed archive file. logCollectionType Path AUTOMATION_AGENT <hostname>/automation_agent BACKUP_AGENT <hostname>/automation_agent MONITORING_AGENT <hostname>/automation_agent MONGODB <hostname>/<port>/<mongodb> FTDC <hostname>/<port>/<ftdc> childJobs[n].startDate string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this child job started. childJobs[n].status string Status of this child job. This resource returns one of the\nfollowing values: SUCCESS FAILURE IN_PROGRESS MARKED_FOR_EXPIRY EXPIRED childJobs[n].uncompressedDiskSpaceBytes number Total uncompressed disk space in bytes that this child job uses. creationDate string Timestamp, in the number of seconds that have elapsed since the  UNIX epoch  when you created the log collection request job. expirationDate string Timestamp, in the number of seconds that have elapsed since the  UNIX epoch  when the log collection request job expires. groupId string Unique 24-hexadecimal digit string that identifies the\n project  associated with log collection request. id string Unique 24-hexadecimal digit string that identifies the log\ncollection request job. logTypes array List of log types included in this request. This resource\nreturns one or more of the following values: AUTOMATION_AGENT BACKUP_AGENT MONITORING_AGENT MONGODB FTDC redacted boolean Flag that indicates whether the request replaces emails,\nhostnames, IP addresses, and namespaces in the response with\nrandom string values. resourceName string Name of the resource for which you requested logs. resourceType string Type of resource for which you requested logs. This resource\nreturns one of the following values: CLUSTER PROCESS REPLICA_SET rootResourceName string Name of the complete deployment if you made the log request to a\npart of a deployment. Part of the deployment could be a replica\nset in a cluster or one shard of a sharded cluster. rootResourceType string Type of the part of the complete deployment if you made the log\nrequest to a part of a deployment. Part of the deployment could\nbe a replica set in a cluster or one shard of a sharded cluster.\nThis resource returns one of the following values: CLUSTER PROCESS REPLICA_SET status string Status of the log collection request job. This resource returns\none of the following values: SUCCESS FAILURE IN_PROGRESS MARKED_FOR_EXPIRY EXPIRED sizeRequestedPerFileBytes number Size for each log file in bytes. uncompressedSizeTotalBytes number Total uncompressed size of the log data in bytes that this\nrequest returns. userId string Unique 24-hexadecimal digit string that identifies the user\nexecuting the request. url string Internet address from which you download the logs from this\nrequest.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}?verbose=true&pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"childJobs\": [\n    {\n      \"automationAgentId\": \"5c81086e014b76a3d85e1123\",\n      \"errorMessage\": null,\n      \"finishDate\": \"2019-03-07T12:02:57Z\",\n      \"hostName\": \"server1.example.com\",\n      \"logCollectionType\": \"AUTOMATION_AGENT\",\n      \"path\": \"server1.example.com/automation_agent\",\n      \"startDate\": \"2019-03-07T12:02:54Z\",\n      \"status\": \"SUCCESS\",\n      \"uncompressedDiskSpaceBytes\": 12827\n    },\n    {\n      \"automationAgentId\": \"5c81086e014b76a3d85e1117\",\n      \"errorMessage\": null,\n      \"finishDate\": \"2019-03-07T12:02:57Z\",\n      \"hostName\": \"server1.example.com:27027\",\n      \"logCollectionType\": \"MONGODB\",\n      \"path\": \"server1.example.com/27027/mongodb\",\n      \"startDate\": \"2019-03-07T12:02:54Z\",\n      \"status\": \"SUCCESS\",\n      \"uncompressedDiskSpaceBytes\": 9292\n    },\n    ...\n  ],\n  \"creationDate\": \"2019-03-07T12:02:54Z\",\n  \"downloadUrl\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/5c81086e014b76a3d85e1113/download\",\n  \"expirationDate\": \"2019-05-06T12:02:54Z\",\n  \"groupId\": \"5c8100bcf2a30b12ff88258f\",\n  \"id\": \"5c81086e014b76a3d85e1113\",\n  \"logTypes\": [\n    \"AUTOMATION_AGENT\",\n    \"MONGODB\",\n    \"FTDC\"\n  ],\n  \"redacted\": false,\n  \"resourceName\": \"myReplicaSet\",\n  \"resourceType\": \"replicaset\",\n  \"rootResourceName\": \"myReplicaSet\",\n  \"rootResourceType\": \"replicaset\",\n  \"sizeRequestedPerFileBytes\": 1000,\n  \"status\": \"IN_PROGRESS\",\n  \"uncompressedSizeTotalBytes\": 44518,\n  \"userId\": \"5c80f75fcf09a246878f67a4\"\n}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment.  Use this\nendpoint to retrieve a single log collection job by its unique\nidentifier.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-delete-one",
            "title": "Delete a Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment. Use this\nendpoint to delete a specified log collection job. You can delete both\nin-progress jobs and completed jobs. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. JOB-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection job to retry. Use the\n Get All Log Collection Jobs for One Project \nendpoint to obtain the IDs associated with your project. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs/{JOB-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment. Use this\nendpoint to delete a specified log collection job. You can delete both\nin-progress jobs and completed jobs.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/log-collections/log-collections-submit",
            "title": "Create a Log Collection Job",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "When you create a log collection job,  Cloud Manager  starts a background job to\ndownload the logs from the specified  Cloud Manager  deployment. Use this\nendpoint to create a new log collection job. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the log\ncollection request job. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description resourceType string Required Type of resource from which to collect logs. Must be one of the\nfollowing values: CLUSTER , for a sharded cluster. PROCESS , for a node in the replica set. REPLICASET , for a replica set.` resourceName string Required Name of the resource from which to collect logs.\nThe resource type defines the value: For the  CLUSTER   resourceType , the value is the name of\nthe deployment or the  CLUSTER-ID .\nFor example,  my-deployment . To obtain this value, use the\n /groups/{GROUP-ID}/clusters/{CLUSTER-ID}  endpoint. For the  PROCESS   resourceType , the value is\nthe name of the replica set followed by the node name.\nFor example,  Cluster0-shard-1-node-0 . To obtain this value, use the  /groups/{PROJECT-ID}/automationConfig  endpoint.\nThe value is located in the  processes.name  parameter. To obtain the name of the replica set, the list of\nnodes, and other information, access the cluster and run\n rs.conf()._id \nand  rs.status() . For the  REPLICASET   resourceType , the value is\nthe name of the replica set in the cluster followed\nby the shard name. For example,  test-123abc-shard-0 . sizeRequestedPerFileBytes number Required Size for each log file in bytes. logTypes array Required Array of strings specifying the types of logs to collect. Each\narray element must be one of the following values: AUTOMATION_AGENT BACKUP_AGENT MONITORING_AGENT MONGODB FTDC redacted boolean Required If set to  true , emails, hostnames, IP addresses, and\nnamespaces in API responses involving this job are replaced with\nrandom string values. Name Type Description id string Unique identifier of the created log collection job.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{GROUP-ID}/logCollectionJobs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/logCollectionJobs?pretty=true\"\n     --data '\n       {\n         \"resourceType\": \"PROCESS\",\n         \"resourceName\": \"my_deployment_1\",\n         \"redacted\": true,\n         \"sizeRequestedPerFileBytes\": 10000000,\n         \"logTypes\": [\n             \"FTDC\",\n             \"MONGODB\",\n             \"AUTOMATION_AGENT\"\n         ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{ \"id\": \"5c81086e014b76a3d85e1113\" }"
                }
            ],
            "preview": "When you create a log collection job, Cloud Manager starts a background job to\ndownload the logs from the specified Cloud Manager deployment. Use this\nendpoint to create a new log collection job.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-get-one-by-name",
            "title": "Get One Team by Name",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the\n organization \nassociated with the team. TEAM-NAME Required The name of the  team  whose\ninformation you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description id string The unique identifier for the team. name string The name of the organization associated with the team. links array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification .",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /orgs/{ORG-ID}/teams/byName/{TEAM-NAME}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{username:apiKey}\"\" --digest -i \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/byName/{TEAM-NAME}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{TEAM-ID}\",\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"name\": \"myNewTeam\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-get-all",
            "title": "Get All Teams",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Description ORG-ID Required. The unique identifier for the\n organization  whose teams you want\nto retrieve. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one team. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description id string Unique identifier for the team. name string Name of the team.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/teams"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [],\n  \"results\": [{\n    \"id\": \"{TEAM-ID1}\",\n    \"name\": \"Engineering\"\n  }, {\n    \"id\": \"{TEAM-ID2}\",\n    \"name\": \"Finance\"\n  }, {\n    \"id\": \"{TEAM-ID3}\",\n    \"name\": \"Technical Documentation\"\n  }],\n  \"totalCount\": 3\n}"
                }
            ],
            "preview": "Each result is one team.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-rename-one",
            "title": "Rename a Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example",
                "Request",
                "Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required The unique identifier for the\n organization  associated\nwith the team that you want to rename. TEAM-ID Required The unique identifier of the  team  that you want to rename. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Path Element Required/Optional Description name Required The new name of the team. Name Type Description id string The unique identifier for the team. links object array One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . name string The new name of the team.",
            "code": [
                {
                    "lang": "none",
                    "value": "PATCH /orgs/{ORG-ID}/teams/{TEAM-ID}"
                },
                {
                    "lang": "shell",
                    "value": "curl -X PATCH --digest --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --header \"Content-Type: application/json\" \\\n \"https://cloud.mongodb.com/api/public/v10/orgs/6006bd5780eef53d35e9f74e/teams/6b77131987d9d66ddeb3f907?pretty=true\" \\\n --data '{\"name\":\"Finance\"}'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"6b77131987d9d66ddeb3f907\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/6006bd5780eef53d35e9f74e/teams/6b77131987d9d66ddeb3f907\",\n    \"rel\" : \"self\"\n  } ],\n  \"name\" : \"Finance\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-delete-one",
            "title": "Delete One Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the\n organization \nassociated with the team. TEAM-ID Required The unique identifier of the  team  you want\nto delete. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE /orgs/{ORG-ID}/teams/{TEAM-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{username:apiKey}\"\" --digest -i \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request DELETE \\\n     \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}?pretty=true\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-remove-from-project",
            "title": "Remove One Team From One Project",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description PROJECT-ID Required The unique identifier of the  group \nfrom which you want to remove a team. TEAM-ID Required The unique identifier of the  team \nthat you want to remove from the specified project. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. This endpoint does not return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE /groups/{PROJECT-ID}/teams/{TEAM-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl -X DELETE --digest --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/5a4c0c7887d9d672cf86df58\""
                },
                {
                    "lang": "none",
                    "value": "{}"
                }
            ],
            "preview": "This endpoint does not return a response body.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-get-all-users",
            "title": "Get All Users Assigned to a Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required The unique identifier for the\n organization  associated\nwith the team. TEAM-ID Required The unique identifier of the  team \nwhose user membership you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each element in the  result  array is one user assigned to the team. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description emailAddress string The email address associated to the user. firstName string The first name of the user. id string The unique identifier for the team. lastName string The last name of the user. links object array One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . roles array Each object in the  roles  array represents the\n MongoDB Atlas   organization role  the user\nhas for the associated  orgId  or  groupId . roles.orgId string ID of the organization where the user has the assigned\n roles.roleName   organization role . roles.groupId string ID of the  project  where the user has the\nassigned  roles.roleName   project role . roles.roleName string The  organization role  assigned to the\nuser for the specified  roles.orgId  or  roles.groupId . teamsIds array Array of string IDs for each team the user is a member of. username string Username associated to the user.",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /orgs/{ORG-ID}/teams/{TEAM-ID}/users"
                },
                {
                    "lang": "shell",
                    "value": "curl --user \"{username:apiKey}\" --digest -i \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}/users?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n   {\n     \"href\": \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}/users?pageNum=1&itemsPerPage=100\",\n     \"rel\": \"self\"\n   }\n ],\n \"results\": [\n   {\n     \"emailAddress\": \"CloudUser@example.com\",\n     \"firstName\": \"Cloud\",\n     \"id\": \"{USER-ID}\",\n     \"lastName\": \"User\",\n     \"links\": [\n       {\n         \"href\": \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}\",\n         \"rel\": \"self\"\n       }\n     ],\n     \"roles\": [\n       {\n         \"groupId\": \"{PROJECT-ID}\",\n         \"roleName\": \"GROUP_OWNER\"\n       },\n       {\n         \"orgId\": \"{ORG-ID}\",\n         \"roleName\": \"ORG_OWNER\"\n       }\n     ],\n     \"teamIds\": [\n       \"{TEAM-ID}\"\n     ],\n     \"username\": \"CloudUser@example.com\"\n   }\n ],\n \"totalCount\": 1\n}"
                }
            ],
            "preview": "Each element in the result array is one user assigned to the team.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-add-user",
            "title": "Add Users to Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the\n organization \nyou want to associate the team with. TEAM-ID Required The name of the  team  you want to add\nusers to. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Specify an array of documents, where each document represents one\nuser you want to add to the team. Each document in the array\nmust contain the following fields: Name Type Description id string The unique ID of the user you want to add to the team Each element in the  result  array is one user added to the team. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description country string The  ISO 3166 Alpha-2 \ncountry code associated with the user. emailAddress string The email address associated with the user. firstName string The first name of the user. id string The unique identifier for the team. lastName string The last name of the user. links array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . mobileNumber string The phone number associated with the user. roles array Each object in the  roles  array represents the\n MongoDB Atlas   organization role  the user\nhas for the associated  org_id roles.orgId string ID of the organization where the user has the assigned\n roles.roleName   organization role . roles.roleName string The  organization role  assigned to the\nuser for the specified  roles.orgId . teamsId array Each string in the array is a team associated with the user. username string Username associated with the user.",
            "code": [
                {
                    "lang": "none",
                    "value": "POST /orgs/{ORG-ID}/teams/{TEAM-ID}/users"
                },
                {
                    "lang": "sh",
                    "value": "curl -u \"username:apiKey\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}/users? pretty=true\" \\\n     --data '[{ \"id\" : \"{USER-ID}\" }]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n \"links\": [\n     {\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}/users?pretty=true\",\n      \"rel\": \"self\"\n     }\n ],\n \"results\": [\n     {\n      \"country\": \"US\",\n      \"emailAddress\": \"JohnDoe@example.com\",\n      \"firstName\": \"John\",\n      \"id\": \"{USER-ID}\",\n      \"lastName\": \"Doe\",\n      \"links\": [\n          {\n              \"href\": \"https://cloud.mongodb.com/api/public/v1.0/users/{USER-ID}\",\n              \"rel\": \"self\"\n          }\n      ],\n      \"mobileNumber\": \"5555550100\",\n      \"roles\": [\n          {\n              \"orgId\": \"{ORG-ID}\",\n              \"roleName\": \"ORG_MEMBER\"\n          },\n          ...\n      ],\n      \"teamIds\": [ \"{TEAM-ID}\" ],\n      \"username\": \"JohnDoe@example.com\"\n     }\n ],\n \"totalCount\": 1\n}"
                }
            ],
            "preview": "Each element in the result array is one user added to the team.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-update-roles",
            "title": "Update Team Roles in One Project",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example",
                "Request",
                "Response"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the\n project \nassociated with this team. TEAM-ID string Required Unique identifier of the  team  for which\nyou want to update roles. Query Parameter Type Necessity Description envelope boolean Optional Flag that specifies whether or not to wrap the response in an\n envelope . Defaults to  false . pretty boolean Optional Flag that specifies whether or not to return a \"pretty-printed\"\n JSON (Javascript Object Notation)  document. Defaults to  false . Specify an array of strings, where each string represents one role\nyou want to add to the team. You must specify an array even if you are\nonly associating a single role to the team. Body Parameter Type Necessity Description roleNames array Required Project roles  you want to\nassign the given team. Each element in the  result  array is one set of roles specified for\none team. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Response Parameter Type Description roleNames array Project roles  assigned to\nthe team for the specified  teamsId . teamsId string Unique identifier of the team assigned the listed roles.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/teams/{TEAM-ID}"
                },
                {
                    "lang": "shell",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID3}?pretty=true\" \\\n     --data '{\n        \"roleNames\": [\"GROUP_OWNER\"]\n      }'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\": [{\n    \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID3}?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\": \"self\"\n  }],\n  \"results\": [{\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID1}\",\n      \"rel\": \"self\"\n    }],\n    \"roleNames\": [\"GROUP_OWNER\", \"GROUP_BACKUP_ADMIN\", \"GROUP_DATA_ACCESS_READ_ONLY\", \"GROUP_AUTOMATION_ADMIN\", \"GROUP_DATA_ACCESS_ADMIN\", \"GROUP_USER_ADMIN\", \"GROUP_DATA_ACCESS_READ_WRITE\", \"GROUP_READ_ONLY\"],\n    \"teamId\": \"{TEAM-ID1}\"\n  }, {\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID2}\",\n      \"rel\": \"self\"\n    }],\n    \"roleNames\": [\"GROUP_DATA_ACCESS_ADMIN\", \"GROUP_READ_ONLY\"],\n    \"teamId\": \"{TEAM-ID2}\"\n  }, {\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/teams/{TEAM-ID3}\",\n      \"rel\": \"self\"\n    }],\n    \"roleNames\": [\"GROUP_OWNER\"],\n    \"teamId\": \"{TEAM-ID3}\"\n  }],\n  \"totalCount\": 3\n}"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Each element in the result array is one set of roles specified for\none team.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-remove-user",
            "title": "Remove a User from a Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the  organization \nthat contains the team from which you want to remove a MongoDB\nuser. TEAM-ID Required The unique identifier of the  team  from which you want to remove\na MongoDB user. USER-ID Required The unique identifier of the MongoDB  user  that\nyou want to remove from the specified team. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE /orgs/{ORG-ID}/teams/{TEAM-ID}/users/{USER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl -X DELETE -i --digest --user \"{username:apiKey}\" \\\n    \"https://cloud.mongodb.com/api/public/v1.0/orgs/6005bd5780eef53d35e9f743/teams/6bdd139c87d9d630926164bf/users/69g63c0980eef52994dbfdge\""
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-get-one-by-id",
            "title": "Get One Team by ID",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the\n organization \nassociated with the team. TEAM-ID Required The unique identifier of the  team \nwhose information you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description id string The unique identifier for the team. name string The name of the organization associated with the team. links array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification .",
            "code": [
                {
                    "lang": "none",
                    "value": "GET /orgs/{ORG-ID}/teams/{TEAM-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{username:apiKey}\"\" --digest -i \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{TEAM-ID}\",\n  \"links\": [\n    {\n      \"href\": \"https://cloud.mongodb.com/api/pubic/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"name\": \"myNewTeam\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/teams/teams-create-one",
            "title": "Create a Team",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Required/Optional Description ORG-ID Required. The unique identifier for the\n organization \nwith which you want to associate the team. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description name string The name of the  team  you want to create. Name Type Description id string The unique identifier for the team. name string The name of the organization associated with the team. links array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification .",
            "code": [
                {
                    "lang": "none",
                    "value": "POST /orgs/{ORG-ID}/teams"
                },
                {
                    "lang": "sh",
                    "value": "curl -u \"username:apiKey\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams/\" \\\n     --data '{ \"name\" : \"myNewTeam\" }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n \"id\": \"{TEAM-ID}\",\n \"links\": [\n   {\n     \"href\": \"https://cloud.mongodb.com/api/pubic/v1.0/orgs/{ORG-ID}/teams/{TEAM-ID}\",\n     \"rel\": \"self\"\n   }\n ],\n \"name\": \"myNewTeam\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measures/get-disk-measurements",
            "title": "Get Disk Partition Measurements",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Disk measurements provide data on IOPS, disk use, and disk latency on\nthe disk partitions for hosts running MongoDB that the Automations collect. You must run  Cloud Manager  Automation to retrieve disk measurements. To calculate some metric series,  Cloud Manager  takes the rate between every\ntwo adjacent points. For these metric series, the first data point\nhas a null value because  Cloud Manager  can't calculate a rate for the first\ndata point given the query time range. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the host. HOST-ID string Unique identifier of the host that serves the MongoDB process. PARTITION-NAME string Name of the disk partition on which the MongoDB\nprocess is stored. This endpoint accepts the following query parameters to filter\nreturned measurements: Name Type Description string Duration in  ISO 8601  notation  that specifies the interval between\nmeasurement data points. Measurement granularity can be expressed as days, hours, minutes, seconds and milliseconds using the following notation: P  (for  period ) followed by: D  for  days  (if desired) T  for  time  (after  days ) H  for  hours M  for  minutes S  for  seconds Notation Duration PT30S 30 seconds P1T12H 1 day, 12 hours PT0.5S 500 milliseconds period string Duration in  ISO 8601  notation  that specifies how far back in the past to\nretrieve measurements. To request the last 36 hours, include this query parameter:\n period=P1DT12H . start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period for which to\nretrieve measurements. If you specify  start  you must also\nspecify  end . end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period for which to retrieve\nmeasurements. If you specify  end  you must also specify\n start . m string Measurements to return. If  m  is not specified, all\nmeasurements are returned. To specify multiple values for  m , you must repeat the  m \nparameter. You must specify measurements that are valid for the host.  Cloud Manager \nreturns an error if any specified measurements are invalid\nFor available measurements, see  Measurement Types . Each measurement request must include either the\n period  query parameter\nor both the  start  and  end  query parameters. This endpoint also accepts the query parameters common to all endpoints\nthat return a single response: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description databaseName string Database to which the measurement applies. Populated for  Get Database Measurements  only. end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period the returned\nmeasurements cover. granularity string Duration in  ISO 8601  notation  that specifies the size of the interval that\neach data point covers. PT5M  specifies a 5-minute granularity. groupId string Unique identifier of the project that owns the host. hostId string Unique identifier of the host to which the measurements pertain. measurements object array Each object in this array represents a measurement and the data\npoints for that measurement. measurements.dataPoints object array Each object represents a single data point. If there is no data\npoint available for a particular moment in time, this  value \nis set to  null . measurements.dataPoints.timestamp string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the time interval this data\npoint represents. measurements.dataPoints.value float Value of this data point. measurements.name string Name of the measurement. Accepted values are given in the\n Measurement Types  page. measurements.units string How this measurement is quantified. Accepted units are: PERCENT MILLISECONDS BYTES GIGABYTES BYTES_PER_SECOND MEGABYTES_PER_SECOND GIGABYTES_PER_HOUR SCALAR_PER_SECOND SCALAR partitionName string Name of the disk partition that stores the MongoDB process\ndatabase. Populated for  Get Disk Partition Measurements  only. processId string FQDN (fully qualified domain name)  and port of the MongoDB process. start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period the returned\nmeasurements cover.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/disks/{PARTITION-NAME}/measurements"
                },
                {
                    "lang": "none",
                    "value": "../measurements?m=CONNECTIONS&m=OPCOUNTER_CMD&m=OPCOUNTER_QUERY"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/disks/{PARTITION-NAME}/measurements?granularity={TIME-INCREMENT}&period={PERIOD}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"granularity\": \"{TIME-INCREMENT}\",\n  \"groupId\": \"{PROJECT-ID}\",\n  \"hostId\": \"{HOST-ID}\",\n  \"links\": [\n\n  ],\n  \"measurements\": [\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_IOPS_READ\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_IOPS_WRITE\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_IOPS_TOTAL\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_LATENCY_READ\",\n      \"units\": \"MILLISECONDS\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_LATENCY_WRITE\",\n      \"units\": \"MILLISECONDS\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_SPACE_FREE\",\n      \"units\": \"BYTES\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_SPACE_USED\",\n      \"units\": \"BYTES\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_SPACE_PERCENT_FREE\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"DISK_PARTITION_SPACE_PERCENT_USED\",\n      \"units\": \"PERCENT\"\n    }\n  ],\n  \"partitionName\": \"{PARTITION-NAME}\",\n  \"processId\": \"{MONGODB-PROCESS-FQDN}:{PORT}\"\n}"
                }
            ],
            "preview": "Disk measurements provide data on IOPS, disk use, and disk latency on\nthe disk partitions for hosts running MongoDB that the Automations collect. You must run Cloud Manager Automation to retrieve disk measurements.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measures/get-database-measurements",
            "title": "Get Database Measurements",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Database measurements provide statistics on database performance and\nstorage. The Monitoring collects database measurements through\nthe  dbStats  command. To calculate some metric series,  Cloud Manager  takes the rate between every\ntwo adjacent points. For these metric series, the first data point\nhas a null value because  Cloud Manager  can't calculate a rate for the first\ndata point given the query time range. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the host. HOST-ID string Unique identifier of the host that serves the MongoDB process. DATABASE-NAME string Unique identifier of the database on which the MongoDB\nprocess is stored. This endpoint accepts the following query parameters to filter\nreturned measurements: Name Type Description string Duration in  ISO 8601  notation  that specifies the interval between\nmeasurement data points. Measurement granularity can be expressed as days, hours, minutes, seconds and milliseconds using the following notation: P  (for  period ) followed by: D  for  days  (if desired) T  for  time  (after  days ) H  for  hours M  for  minutes S  for  seconds Notation Duration PT30S 30 seconds P1T12H 1 day, 12 hours PT0.5S 500 milliseconds period string Duration in  ISO 8601  notation  that specifies how far back in the past to\nretrieve measurements. To request the last 36 hours, include this query parameter:\n period=P1DT12H . start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period for which to\nretrieve measurements. If you specify  start  you must also\nspecify  end . end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period for which to retrieve\nmeasurements. If you specify  end  you must also specify\n start . m string Measurements to return. If  m  is not specified, all\nmeasurements are returned. To specify multiple values for  m , you must repeat the  m \nparameter. You must specify measurements that are valid for the host.  Cloud Manager \nreturns an error if any specified measurements are invalid\nFor available measurements, see  Measurement Types . Each measurement request must include either the\n period  query parameter\nor both the  start  and  end  query parameters. This endpoint also accepts the query parameters common to all endpoints\nthat return a single response: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description databaseName string Database to which the measurement applies. Populated for  Get Database Measurements  only. end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period the returned\nmeasurements cover. granularity string Duration in  ISO 8601  notation  that specifies the size of the interval that\neach data point covers. PT5M  specifies a 5-minute granularity. groupId string Unique identifier of the project that owns the host. hostId string Unique identifier of the host to which the measurements pertain. measurements object array Each object in this array represents a measurement and the data\npoints for that measurement. measurements.dataPoints object array Each object represents a single data point. If there is no data\npoint available for a particular moment in time, this  value \nis set to  null . measurements.dataPoints.timestamp string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the time interval this data\npoint represents. measurements.dataPoints.value float Value of this data point. measurements.name string Name of the measurement. Accepted values are given in the\n Measurement Types  page. measurements.units string How this measurement is quantified. Accepted units are: PERCENT MILLISECONDS BYTES GIGABYTES BYTES_PER_SECOND MEGABYTES_PER_SECOND GIGABYTES_PER_HOUR SCALAR_PER_SECOND SCALAR partitionName string Name of the disk partition that stores the MongoDB process\ndatabase. Populated for  Get Disk Partition Measurements  only. processId string FQDN (fully qualified domain name)  and port of the MongoDB process. start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period the returned\nmeasurements cover.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/databases/{DATABASE-NAME}/measurements"
                },
                {
                    "lang": "none",
                    "value": "../measurements?m=CONNECTIONS&m=OPCOUNTER_CMD&m=OPCOUNTER_QUERY"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/fd5b59188dc13ad142493/databases/markets/measurements?granularity={TIME-INCREMENT}&period={PERIOD}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"databaseName\": \"markets\",\n  \"end\": \"2016-08-11T21:08:40Z\",\n  \"granularity\": \"{TIME-INCREMENT}\",\n  \"groupId\": \"{PROJECT-ID}\",\n  \"hostId\": \"fd5b59188dc13ad142493\",\n  \"links\": [],\n  \"measurements\": [{\n      \"dataPoints\": [],\n      \"name\": \"DATABASE_WRITE_LOCK_PERCENTAGE\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [{\n        \"timestamp\": \"2016-08-11T21:08:40Z\",\n        \"value\": 51.780589415213704\n      }],\n      \"name\": \"DATABASE_AVERAGE_OBJECT_SIZE\",\n      \"units\": \"BYTES\"\n    },\n    {\n      \"dataPoints\": [{\n        \"timestamp\": \"2016-08-11T21:08:40Z\",\n        \"value\": 32405.0\n      }],\n      \"name\": \"DATABASE_OBJECT_COUNT\",\n      \"units\": \"SCALAR\"\n    }\n  ],\n  \"processId\": \"{MONGODB-PROCESS-FQDN}:{PORT}\",\n  \"start\": \"2016-08-11T21:08:40Z\"\n}"
                }
            ],
            "preview": "Database measurements provide statistics on database performance and\nstorage. The Monitoring collects database measurements through\nthe dbStats command.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measures/get-host-process-system-measurements",
            "title": "Get Host, Process, System Measurements",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Host measurements provide data on the state of the MongoDB process.\nThe Monitoring collects host measurements through the MongoDB\n serverStatus  and\n dbStats  commands. System and process measurements provide data on the CPU usage of the\nhosts that run MongoDB. The Automation collects these\nmeasurements. System and process measurements require  Cloud Manager  Automation. This endpoint returns these  Measurement Types . To calculate some metric series,  Cloud Manager  takes the rate between every\ntwo adjacent points. For these metric series, the first data point\nhas a null value because  Cloud Manager  can't calculate a rate for the first\ndata point given the query time range. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the host. HOST-ID string Unique identifier of the host that serves the MongoDB process. This endpoint accepts the following query parameters to filter\nreturned measurements: Name Type Description string Duration in  ISO 8601  notation  that specifies the interval between\nmeasurement data points. Measurement granularity can be expressed as days, hours, minutes, seconds and milliseconds using the following notation: P  (for  period ) followed by: D  for  days  (if desired) T  for  time  (after  days ) H  for  hours M  for  minutes S  for  seconds Notation Duration PT30S 30 seconds P1T12H 1 day, 12 hours PT0.5S 500 milliseconds period string Duration in  ISO 8601  notation  that specifies how far back in the past to\nretrieve measurements. To request the last 36 hours, include this query parameter:\n period=P1DT12H . start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period for which to\nretrieve measurements. If you specify  start  you must also\nspecify  end . end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period for which to retrieve\nmeasurements. If you specify  end  you must also specify\n start . m string Measurements to return. If  m  is not specified, all\nmeasurements are returned. To specify multiple values for  m , you must repeat the  m \nparameter. You must specify measurements that are valid for the host.  Cloud Manager \nreturns an error if any specified measurements are invalid\nFor available measurements, see  Measurement Types . Each measurement request must include either the\n period  query parameter\nor both the  start  and  end  query parameters. This endpoint also accepts the query parameters common to all endpoints\nthat return a single response: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description databaseName string Database to which the measurement applies. Populated for  Get Database Measurements  only. end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period the returned\nmeasurements cover. granularity string Duration in  ISO 8601  notation  that specifies the size of the interval that\neach data point covers. PT5M  specifies a 5-minute granularity. groupId string Unique identifier of the project that owns the host. hostId string Unique identifier of the host to which the measurements pertain. measurements object array Each object in this array represents a measurement and the data\npoints for that measurement. measurements.dataPoints object array Each object represents a single data point. If there is no data\npoint available for a particular moment in time, this  value \nis set to  null . measurements.dataPoints.timestamp string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the time interval this data\npoint represents. measurements.dataPoints.value float Value of this data point. measurements.name string Name of the measurement. Accepted values are given in the\n Measurement Types  page. measurements.units string How this measurement is quantified. Accepted units are: PERCENT MILLISECONDS BYTES GIGABYTES BYTES_PER_SECOND MEGABYTES_PER_SECOND GIGABYTES_PER_HOUR SCALAR_PER_SECOND SCALAR partitionName string Name of the disk partition that stores the MongoDB process\ndatabase. Populated for  Get Disk Partition Measurements  only. processId string FQDN (fully qualified domain name)  and port of the MongoDB process. start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period the returned\nmeasurements cover.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements?granularity={ISO-8601-PERIOD}&period={ISO-8601-PERIOD}"
                },
                {
                    "lang": "none",
                    "value": "../measurements?m=CONNECTIONS&m=OPCOUNTER_CMD&m=OPCOUNTER_QUERY"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements?granularity={TIME-INCREMENT}&period={PERIOD}&pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"end\": \"2022-05-12T18:28:19Z\",\n  \"granularity\": \"{TIME-INCREMENT}\",\n  \"groupId\": \"{PROJECT-ID}\",\n  \"hostId\": \"{HOST-ID}\",\n  \"links\": [ ],\n  \"measurements\": [{\n    \"dataPoints\": [{\n      \"timestamp\" : \"2022-05-12T18:28:10Z\",\n      \"value\": 5.0\n    }],\n    \"name\": \"CONNECTIONS\",\n    \"units\": \"SCALAR\"\n  }, {\n    \"dataPoints\": [{\n      \"timestamp\": \"2022-05-12T18:28:10Z\",\n      \"value\": 15.699934824278714\n    }],\n    \"name\": \"NETWORK_BYTES_IN\",\n    \"units\": \"BYTES_PER_SECOND\"\n  },\n\n  .\n  .\n  .\n\n  , {\n    \"dataPoints\": [],\n    \"name\": \"SYSTEM_NORMALIZED_CPU_SOFTIRQ\",\n    \"units\": \"PERCENT\"\n  }, {\n    \"dataPoints\": [],\n    \"name\": \"SYSTEM_NORMALIZED_CPU_GUEST\",\n    \"units\": \"PERCENT\"\n  }, {\n    \"dataPoints\": [],\n    \"name\": \"SYSTEM_NORMALIZED_CPU_STEAL\",\n    \"units\": \"PERCENT\"\n  }],\n  \"processId\": \"{MONGODB-PROCESS-FQDN}:{PORT}\",\n  \"start\": \"2022-05-12T18:28:10Z\"\n}"
                }
            ],
            "preview": "Host measurements provide data on the state of the MongoDB process.\nThe Monitoring collects host measurements through the MongoDB\nserverStatus and\ndbStats commands.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measures/get-measurement-types",
            "title": "Get Measurement Types",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "To retrieve the  Measurement Types  that\napply to a specific measurement without returning a large document,\nissue the following  GET  command with a value of  PT5M  for both\nthe  granularity  and  period . This returns a document with only\none data point for each measurement. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the host. HOST-ID string Unique identifier of the host that serves the MongoDB process. This endpoint accepts the following query parameters to filter\nreturned measurements: Name Type Description string Duration in  ISO 8601  notation  that specifies the interval between\nmeasurement data points. Measurement granularity can be expressed as days, hours, minutes, seconds and milliseconds using the following notation: P  (for  period ) followed by: D  for  days  (if desired) T  for  time  (after  days ) H  for  hours M  for  minutes S  for  seconds Notation Duration PT30S 30 seconds P1T12H 1 day, 12 hours PT0.5S 500 milliseconds period string Duration in  ISO 8601  notation  that specifies how far back in the past to\nretrieve measurements. To request the last 36 hours, include this query parameter:\n period=P1DT12H . start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period for which to\nretrieve measurements. If you specify  start  you must also\nspecify  end . end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period for which to retrieve\nmeasurements. If you specify  end  you must also specify\n start . m string Measurements to return. If  m  is not specified, all\nmeasurements are returned. To specify multiple values for  m , you must repeat the  m \nparameter. You must specify measurements that are valid for the host.  Cloud Manager \nreturns an error if any specified measurements are invalid\nFor available measurements, see  Measurement Types . Each measurement request must include either the\n period  query parameter\nor both the  start  and  end  query parameters. This endpoint also accepts the query parameters common to all endpoints\nthat return a single response: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Name Type Description databaseName string Database to which the measurement applies. Populated for  Get Database Measurements  only. end string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the end of the period the returned\nmeasurements cover. granularity string Duration in  ISO 8601  notation  that specifies the size of the interval that\neach data point covers. PT5M  specifies a 5-minute granularity. groupId string Unique identifier of the project that owns the host. hostId string Unique identifier of the host to which the measurements pertain. measurements object array Each object in this array represents a measurement and the data\npoints for that measurement. measurements.dataPoints object array Each object represents a single data point. If there is no data\npoint available for a particular moment in time, this  value \nis set to  null . measurements.dataPoints.timestamp string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the time interval this data\npoint represents. measurements.dataPoints.value float Value of this data point. measurements.name string Name of the measurement. Accepted values are given in the\n Measurement Types  page. measurements.units string How this measurement is quantified. Accepted units are: PERCENT MILLISECONDS BYTES GIGABYTES BYTES_PER_SECOND MEGABYTES_PER_SECOND GIGABYTES_PER_HOUR SCALAR_PER_SECOND SCALAR partitionName string Name of the disk partition that stores the MongoDB process\ndatabase. Populated for  Get Disk Partition Measurements  only. processId string FQDN (fully qualified domain name)  and port of the MongoDB process. start string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  for the beginning of the period the returned\nmeasurements cover.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements"
                },
                {
                    "lang": "none",
                    "value": "../measurements?m=CONNECTIONS&m=OPCOUNTER_CMD&m=OPCOUNTER_QUERY"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/measurements?granularity=PT5M&period=PT5M\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"end\": \"2018-07-31T14:55:24Z\",\n  \"granularity\": \"PT5M\",\n  \"groupId\": \"{PROJECT-ID}\",\n  \"hostId\": \"{HOST-ID}\",\n  \"links\": [\n  ],\n  \"measurements\": [\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": 0\n        }\n      ],\n      \"name\": \"CONNECTIONS\",\n      \"units\": \"SCALAR\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"NETWORK_BYTES_IN\",\n      \"units\": \"BYTES_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"NETWORK_BYTES_OUT\",\n      \"units\": \"BYTES_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"NETWORK_NUM_REQUESTS\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_CMD\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_QUERY\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_UPDATE\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_DELETE\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_GETMORE\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": null\n        }\n      ],\n      \"name\": \"OPCOUNTER_INSERT\",\n      \"units\": \"SCALAR_PER_SECOND\"\n    },\n    {\n      \"dataPoints\": [\n        {\n          \"timestamp\": \"2018-07-31T14:55:24Z\",\n          \"value\": 0\n        }\n      ],\n      \"name\": \"LOGICAL_SIZE\",\n      \"units\": \"BYTES\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_CPU_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_CPU_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_CPU_CHILDREN_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_CPU_CHILDREN_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_NORMALIZED_CPU_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_NORMALIZED_CPU_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_NORMALIZED_CPU_CHILDREN_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_NICE\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_IOWAIT\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_IRQ\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_SOFTIRQ\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_GUEST\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_CPU_STEAL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_USER\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_KERNEL\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_NICE\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_IOWAIT\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_IRQ\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_SOFTIRQ\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_GUEST\",\n      \"units\": \"PERCENT\"\n    },\n    {\n      \"dataPoints\": [],\n      \"name\": \"SYSTEM_NORMALIZED_CPU_STEAL\",\n      \"units\": \"PERCENT\"\n    }\n  ],\n  \"processId\": \"{MONGODB-PROCESS-FQDN}:{PORT}\",\n  \"start\": \"2018-07-31T14:55:24Z\"\n}"
                }
            ],
            "preview": "To retrieve the Measurement Types that\napply to a specific measurement without returning a large document,\nissue the following GET command with a value of PT5M for both\nthe granularity and period. This returns a document with only\none data point for each measurement.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/cloud-migration/remove-the-link-between-organizations",
            "title": "Remove the Connection between Organizations",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Remove the connection between the source  Cloud Manager  organization and the\ntarget  MongoDB Atlas  organization. This stops the source organization from\nsynchronizing data with the target organization. Your API Key must have the  Organization Owner  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description orgId string Required Unique 24-hexadecimal digit string that identifies the source\norganization that contains your projects. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint doesn't return a response body. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /orgs/{orgId}/liveExport/migrationLink"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{USERNAME}:{APIKEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request DELETE 'https://cloud.mongodb.com/api/public/v1.0/orgs/{orgId}/liveExport/migrationLink?pretty=true'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 204 No Content\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Remove the connection between the source Cloud Manager organization and the\ntarget MongoDB Atlas organization. This stops the source organization from\nsynchronizing data with the target organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/measures/measurement-types",
            "title": "Measurement Types",
            "headings": [
                "Host Measurements",
                "Process Measurements",
                "System Measurements",
                "Disk Measurements",
                "Database Measurements"
            ],
            "paragraphs": "The  measurements  endpoint returns the available measurement types\nfor use with the  Cloud Manager  Measurements API resource. ASSERT_REGULAR ASSERT_WARNING ASSERT_MSG ASSERT_USER Rate of asserts for a MongoDB process found in the\n asserts  document that the\n serverStatus \ncommand generates. BACKGROUND_FLUSH_AVG Amount of data flushed in the background. CACHE_BYTES_READ_INTO CACHE_BYTES_WRITTEN_FROM CACHE_DIRTY_BYTES CACHE_USED_BYTES TICKETS_AVAILABLE_READS TICKETS_AVAILABLE_WRITE Amount of bytes in the  WiredTiger \nstorage engine cache and tickets found in the\n wiredTiger.cache  and\n wiredTiger.concurrentTransactions  documents\nthat the\n serverStatus \ncommand generates. CONNECTIONS Number of connections to a MongoDB process found in the\n connections  document that the\n serverStatus \ncommand generates. CURSORS_TOTAL_OPEN CURSORS_TOTAL_TIMED_OUT Number of  cursors  for a MongoDB\nprocess found in the  metrics.cursor  document\nthat the\n serverStatus \ncommand generates. EXTRA_INFO_PAGE_FAULTS GLOBAL_ACCESSES_NOT_IN_MEMORY GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN Numbers of  Memory Issues  and  Page Faults  for a MongoDB\nprocess. GLOBAL_LOCK_CURRENT_QUEUE_TOTAL GLOBAL_LOCK_CURRENT_QUEUE_READERS GLOBAL_LOCK_CURRENT_QUEUE_WRITERS Number of operations waiting on locks for the MongoDB process\nthat the\n serverStatus \ncommand generates.  Cloud Manager  computes these values based on the\ntype of storage engine. INDEX_COUNTERS_BTREE_ACCESSES INDEX_COUNTERS_BTREE_HITS INDEX_COUNTERS_BTREE_MISSES INDEX_COUNTERS_BTREE_MISS_RATIO Number of index btree operations. JOURNALING_COMMITS_IN_WRITE_LOCK JOURNALING_MB JOURNALING_WRITE_DATA_FILES_MB Number of journaling operations. MEMORY_RESIDENT MEMORY_VIRTUAL MEMORY_MAPPED COMPUTED_MEMORY Amount of memory for a MongoDB process found in the\n mem  document that the\n serverStatus  command collects. NETWORK_BYTES_IN NETWORK_BYTES_OUT NETWORK_NUM_REQUESTS Amount of throughput for MongoDB process found in the\n network  document that the\n serverStatus  command collects. OPLOG_REPLICATION_LAG_TIME OPLOG_RATE_GB_PER_HOUR OPLOG_MASTER_TIME OPLOG_MASTER_LAG_TIME_DIFF Durations and throughput of the MongoDB process'\n oplog .\nThe  OPLOG_SLAVE_LAG_MASTER_TIME  metric is deprecated in the\nmeasurement API. Use the  OPLOG_REPLICATION_LAG_TIME  metric\ninstead. It returns decimal values (seconds and milliseconds).\nFor example, the value 2.75 means 2 seconds and 750 milliseconds. DB_STORAGE_TOTAL Sum total of the compressed on-disk storage space allocated for\ndocument storage across all databases. DB_INDEX_SIZE_TOTAL Sum total of the logical size in bytes (including prefix compression) of\nthe index data across all databases. DB_DATA_SIZE_TOTAL Sum total of the uncompressed document data in bytes (including\nthe padding factor) across all databases including system databases. DB_DATA_SIZE_TOTAL_WO_SYSTEM Sum total of the uncompressed document data in bytes (including\nthe padding factor) across non-system databases. OPCOUNTER_CMD OPCOUNTER_QUERY OPCOUNTER_UPDATE OPCOUNTER_DELETE OPCOUNTER_GETMORE OPCOUNTER_INSERT Rate of database operations on a MongoDB process since the\nprocess last started found in the  opcounters  document that the\n serverStatus  command collects. OPCOUNTER_REPL_CMD OPCOUNTER_REPL_UPDATE OPCOUNTER_REPL_DELETE OPCOUNTER_REPL_INSERT Rate of database operations on MongoDB\n secondaries  found in the\n opcountersRepl  document that the\n serverStatus \ncommand collects. DOCUMENT_METRICS_RETURNED DOCUMENT_METRICS_INSERTED DOCUMENT_METRICS_UPDATED DOCUMENT_METRICS_DELETED Average rate of documents returned, inserted, updated, or\ndeleted per second during a selected time period. OPERATIONS_SCAN_AND_ORDER Average rate for operations per second during a selected time\nperiod that perform a sort but cannot perform the sort using an\nindex. OP_EXECUTION_TIME_READS OP_EXECUTION_TIME_WRITES OP_EXECUTION_TIME_COMMANDS Average execution time in milliseconds per read, write, or\ncommand operation during a selected time period. Available to hosts running MongoDB 3.4 or later. RESTARTS_IN_LAST_HOUR Number of times the host restarted within the previous hour. SYSTEM_MEMORY_USED SYSTEM_MEMORY_FREE SYSTEM_MEMORY_AVAILABLE Physical memory usage, in bytes. SYSTEM_NETWORK_BYTES_IN SYSTEM_NETWORK_BYTES_OUT Network throughput in bytes per second. SWAP_USAGE_USED SWAP_USAGE_FREE Total amount swap space in use. QUERY_EXECUTOR_SCANNED Average rate per second to scan index items during\nqueries and query-plan evaluations found in the value of\n totalKeysExamined  from the\n explain  command. QUERY_EXECUTOR_SCANNED_OBJECTS Average rate of documents scanned per second during queries\nand query-plan evaluations found in the value of\n totalDocsExamined  from the\n explain  command. QUERY_TARGETING_SCANNED_PER_RETURNED Ratio of the number of index items scanned to the number of\ndocuments returned. QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED Ratio of the number of documents scanned to the number of\ndocuments returned. PROCESS_CPU_USER MAX_PROCESS_CPU_USER PROCESS_CPU_KERNEL MAX_PROCESS_CPU_KERNEL PROCESS_CPU_CHILDREN_USER MAX_PROCESS_CPU_CHILDREN_USER PROCESS_CPU_CHILDREN_KERNEL MAX_PROCESS_CPU_CHILDREN_KERNEL MongoDB CPU usage. For hosts with more than one CPU core,\nthese values can exceed 100%. Requires  Cloud Manager  Automation. PROCESS_NORMALIZED_CPU_USER MAX_PROCESS_NORMALIZED_CPU_USER PROCESS_NORMALIZED_CPU_KERNEL MAX_PROCESS_NORMALIZED_CPU_KERNEL PROCESS_NORMALIZED_CPU_CHILDREN_USER MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL MongoDB CPU usage scaled to a range of 0% to 100% by dividing\nby the number of CPU cores. Requires  Cloud Manager  Automation. SYSTEM_CPU_USER MAX_SYSTEM_CPU_USER SYSTEM_CPU_KERNEL MAX_SYSTEM_CPU_KERNEL SYSTEM_CPU_NICE MAX_SYSTEM_CPU_NICE SYSTEM_CPU_IOWAIT MAX_SYSTEM_CPU_IOWAIT SYSTEM_CPU_IRQ MAX_SYSTEM_CPU_IRQ SYSTEM_CPU_SOFTIRQ MAX_SYSTEM_CPU_SOFTIRQ SYSTEM_CPU_GUEST MAX_SYSTEM_CPU_GUEST SYSTEM_CPU_STEAL MAX_SYSTEM_CPU_STEAL CPU usage of processes on the host. For hosts with more\nthan one CPU core, this value can exceed 100%. Requires  Cloud Manager  Automation. SYSTEM_NORMALIZED_CPU_USER MAX_SYSTEM_NORMALIZED_CPU_USER SYSTEM_NORMALIZED_CPU_KERNEL MAX_SYSTEM_NORMALIZED_CPU_KERNEL SYSTEM_NORMALIZED_CPU_NICE MAX_SYSTEM_NORMALIZED_CPU_NICE SYSTEM_NORMALIZED_CPU_IOWAIT MAX_SYSTEM_NORMALIZED_CPU_IOWAIT SYSTEM_NORMALIZED_CPU_IRQ MAX_SYSTEM_NORMALIZED_CPU_IRQ SYSTEM_NORMALIZED_CPU_SOFTIRQ MAX_SYSTEM_NORMALIZED_CPU_SOFTIRQ SYSTEM_NORMALIZED_CPU_GUEST MAX_SYSTEM_NORMALIZED_CPU_GUEST SYSTEM_NORMALIZED_CPU_STEAL MAX_SYSTEM_NORMALIZED_CPU_STEAL CPU usage of processes on the host scaled to a range of\n0 to 100% by dividing by the number of CPU cores. Requires  Cloud Manager  Automation. SYSTEM_MEMORY_USED MAX_SYSTEM_MEMORY_USED SYSTEM_MEMORY_FREE MAX_SYSTEM_MEMORY_FREE SYSTEM_MEMORY_AVAILABLE MAX_SYSTEM_MEMORY_AVAILABLE Physical memory usage, in bytes. SYSTEM_NETWORK_BYTES_IN MAX_SYSTEM_NETWORK_IN SYSTEM_NETWORK_BYTES_OUT MAX_SYSTEM_NETWORK_OUT Network throughput in bytes per second. SWAP_USAGE_USED MAX_SWAP_USAGE_USED SWAP_USAGE_FREE MAX_SWAP_USAGE_FREE Total amount swap space in use. DISK_PARTITION_IOPS_READ MAX DISK_PARTITION_IOPS_READ DISK_PARTITION_IOPS_WRITE MAX_DISK_PARTITION_IOPS_WRITE DISK_PARTITION_IOPS_TOTAL MAX_DISK_PARTITION_IOPS_TOTAL Number of Input/Output operations for the disk partition that\nhosts MongoDB. Requires  Cloud Manager  Automation. DISK_PARTITION_LATENCY_READ MAX_DISK_PARTITION_LATENCY_READ DISK_PARTITION_LATENCY_WRITE MAX_DISK_PARTITION_LATENCY_WRITE Latency per operation type of the disk partition that hosts\nMongoDB. Requires  Cloud Manager  Automation. DISK_PARTITION_SPACE_FREE MAX_DISK_PARTITION_SPACE_FREE DISK_PARTITION_SPACE_USED MAX_DISK_PARTITION_SPACE_USED DISK_PARTITION_SPACE_PERCENT_FREE MAX_DISK_PARTITION_SPACE_PERCENT_FREE DISK_PARTITION_SPACE_PERCENT_USED MAX_DISK_PARTITION_SPACE_PERCENT_USED Measures the free disk space and used disk space on the disk\npartition used by MongoDB. Only available if you use  Cloud Manager \nAutomation. DATABASE_WRITE_LOCK_PERCENTAGE Duration that the host is  write locked . DATABASE_AVERAGE_OBJECT_SIZE DATABASE_COLLECTION_COUNT DATABASE_DATA_SIZE DATABASE_FILE_SIZE DATABASE_STORAGE_SIZE DATABASE_INDEX_SIZE DATABASE_INDEX_COUNT DATABASE_EXTENT_COUNT DATABASE_OBJECT_COUNT Amount of disk storage that database uses on-disk storage space\nfound from the MongoDB\n dbStats  command. By default, the Monitoring retrieves database\nmeasurements every 20 minutes but adjusts frequency when\nnecessary to reduce the impact on database performance. To\ndisable collecting database statistics in the  Cloud Manager , click\n Settings , then click  Group Settings , and\nthen set  Collect Database Specific Statistics  to\n No .",
            "code": [],
            "preview": "The measurements endpoint returns the available measurement types\nfor use with the Cloud Manager Measurements API resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/cloud-migration/link-the-organization-with-atlas",
            "title": "Connect One Organization with One Atlas Organization",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Connect the source  Cloud Manager  organization with a target  MongoDB Atlas \norganization. Your API Key must have the  Organization Owner  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description orgId string Required Unique 24-hexadecimal digit string that identifies the source\norganization that contains your projects. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description linkToken string Required String that contains the information necessary to connect from\n MongoDB Cloud Manager  or  Ops Manager  to  MongoDB Atlas  during a Live Migration from a\n MongoDB Cloud Manager  or  Ops Manager  deployment to a cluster in  MongoDB Atlas . When you migrate data from a  MongoDB Cloud Manager  or  Ops Manager  deployment,\nyou need to do the following: You use the same link-token to migrate each deployment in your\n MongoDB Cloud Manager  or  Ops Manager  organization sequentially, one at a time.\nYou can generate multiple link-tokens in  MongoDB Atlas . Use one\nunique link-token for each  MongoDB Cloud Manager  or  Ops Manager  organization. Generate a link-token in  MongoDB Atlas Enter it in your  MongoDB Cloud Manager  or  Ops Manager  organization\u2019s settings. Name Type Description status string State of the connection that exists between this organization\nand the target cluster in the  MongoDB Atlas  organization. Response returns  \"SYNCED\"  or  \"NOT_SYNCED\" .",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /orgs/{orgId}/liveExport/migrationLink"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{USERNAME}:{APIKEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request POST 'https://cloud.mongodb.com/api/atlas/v1.0/orgs/{orgId}/liveExport/migrationLink?pretty=true' \\\n     --data '{\n         \"linkToken\": \"string\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"status\": \"SYNCED\"\n}"
                }
            ],
            "preview": "Connect the source Cloud Manager organization with a target MongoDB Atlas\norganization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/cloud-migration/return-the-status-of-the-organization-link",
            "title": "Return the Status of the Connection between Organizations",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Return the status of the connection between the specified source  Cloud Manager \norganization and the target  MongoDB Atlas  organization. Your API Key must have the  Organization Owner  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description orgId string Required Unique 24-hexadecimal digit string that identifies the source\norganization that contains the projects to be migrated to\n MongoDB Atlas . The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description status string State of the connection that exists between this organization\nand the target cluster in the  MongoDB Atlas  organization. Response returns  \"SYNCED\"  or  \"NOT_SYNCED\" .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{orgId}/liveExport/migrationLink/status"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{USERNAME}:{APIKEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --header 'Content-Type: application/json' \\\n     --include \\\n     --request GET 'https://cloud.mongodb.com/api/public/v1.0/orgs/{orgId}/liveExport/migrationLink/status?pretty=true'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"status\": \"SYNCED\"\n}"
                }
            ],
            "preview": "Return the status of the connection between the specified source Cloud Manager\norganization and the target MongoDB Atlas organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/delete-one-host",
            "title": "Stop Monitoring One Host",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Stops the Monitoring from monitoring the MongoDB process\non the hostname and port you specify. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Description PROJECT-ID string (Required.)  Unique identifier of the project that owns this MongoDB host. HOST-ID string (Required.)  Unique identifier of the host for the MongoDB process. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{PROJECT-ID}/hosts/{HOST-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}\""
                }
            ],
            "preview": "Stops the Monitoring from monitoring the MongoDB process\non the hostname and port you specify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/get-all-hosts-in-group",
            "title": "Get All Hosts in One Project",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get all MongoDB hosts in a project. Use the  CLUSTER-ID  query\nparameter to only get the hosts that belong to the specified\ncluster. The response sorts the hosts alphabetically by\n HOSTNAME:PORT . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns this MongoDB host. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true Parameter Type Necessity Description CLUSTER-ID string Required Unique identifier of the cluster in which this MongoDB process\nbelongs. This endpoint doesn't use HTTP request body parameters. Each  result  is one host. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description aliases array of strings Array of alternate hostname and port combinations that  Cloud Manager \ndiscovered for the MongoDB process. These combinations can\ninclude hostnames,  FQDN (fully qualified domain name) s,  IPv4 (Internet Protocol version 4)  addresses, and  IPv6 (Internet Protocol version 6) \naddresses. alertsEnabled boolean true  if this MongoDB process has alerts enabled. authMechanismName string Authentication mechanism used to connect to this MongoDB\nprocess. This displays only one of the following values: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE clusterId string Unique identifier of the cluster to which the MongoDB\nprocess belongs. created date Date  Cloud Manager  created or first discovered this MongoDB process. groupId string Unique identifier of the  group  that owns this host. hasStartupWarnings boolean true  if this MongoDB process had startup warnings. hidden boolean true  if host is displayed in the  Cloud Manager  UI. Hosts set to\n true  are omitted from  API (Application Programming Interface)  responses. hiddenSecondary boolean true  if this host is a\n hidden secondary . hostEnabled boolean true  if the MongoDB process currently enabled. hostname string Primary hostname as  Cloud Manager  can best determine. This can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. id string Unique identifier. ipAddress string IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address associated with the  hostname  of\nthis MongoDB process. Additional accessible  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6) \naddresses may be displayed in the  aliases  array. journalingEnabled boolean true  if journaling is enabled for this MongoDB process. lastDataSizeBytes number Uncompressed size of the host's databases on disk in\nbytes excluding indexes.  lastDataSizeBytes   does not \ninclude the data in the\n local  database. lastIndexSizeBytes number Uncompressed size of the host's database indexes on disk\nin bytes. This number  does not  include the size of the\nindex for the  local \ndatabase. lastPing date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last ping for this MongoDB process\nwas received. lastRestart date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this process last restarted. If the\nMongoDB process has never been restarted, the  lastRestart \nfield is omitted. links array Array that includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained\nin the  Web Linking Specification . At minimum, a\n links  array contains one link called  self . logsEnabled boolean true  if  Cloud Manager  is collecting logs for this MongoDB\nprocess. lowUlimit boolean true  if this MongoDB process's host has a low  ulimit \nsetting. port number Port on which the MongoDB process listens. profilerEnabled boolean true  if  Cloud Manager  collects profile information from this\nMongoDB process. replicaSetName string Name of the replica set this process belongs to. Only present\nif this process is part of a replica set. replicaStateName string Current state of this MongoDB process within a replica set.\nOnly present if this process is part of a replica set. See\n Replica Set Member States \nfor possible values. shardName string Name of the shard to which this process belongs. Only present\nif the process is part of a sharded cluster. secondaryDelaySecs number Number of seconds this  replica set  member's data\ntrails the  primary . If this value is set to  0 ,\nthe member is not configured as a delayed member.\nFor additional details on secondary delays, see\n Delayed Replica Set Members sslEnabled boolean true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and is enabled for this MongoDB\nprocess. systemInfo object Object that contains RAM and CPU information for this MongoDB\nprocess' server as reported by the operating system or\ncontainer. systemInfo.memSizeMB number Amount of RAM in megabytes. systemInfo.numCores number Number of CPU cores. typeName string Type for this MongoDB process. Possible values are: The type for new hosts added to  Cloud Manager  will be  NO_DATA \nuntil the Monitoring receives its first ping. STANDALONE REPLICA_PRIMARY REPLICA_SECONDARY REPLICA_ARBITER RECOVERING SHARD_MONGOS SHARD_CONFIG SHARD_STANDALONE SHARD_PRIMARY SHARD_SECONDARY NO_DATA uptimeMsec number Number of milliseconds since this process last restarted. version string Version of MongoDB running for this process. Some hosts don't return  clusterId . This occurs when a  mongos \nprocess routes data operations to shards that don't store data.\n Cloud Manager  doesn't assign a  clusterId  to some non-data bearing nodes. Although  Cloud Manager  returns  muninEnabled  in the response,\n Munin  is unsupported.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts"
                },
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts?clusterId={CLUSTER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"totalCount\" : 2,\n  \"results\" : [\n    {\n      \"alertsEnabled\" : true,\n      \"aliases\": [ \"{HOSTNAME}:26000\", \"{IP-ADDRESS}:26000\" ],\n      \"authMechanismName\" : \"SCRAM-SHA-1\",\n      \"clusterId\" : \"{CLUSTER-ID}\",\n      \"created\" : \"2014-04-22T19:56:50Z\",\n      \"groupId\" : \"{PROJECT-ID}\",\n      \"hasStartupWarnings\" : false,\n      \"hidden\" : false,\n      \"hostEnabled\" : true,\n      \"hostname\" : \"{HOSTNAME}\",\n      \"id\" : \"{HOST-ID}\",\n      \"ipAddress\": \"127.0.0.1\",\n      \"journalingEnabled\" : false,\n      \"lastDataSizeBytes\" : 633208918,\n      \"lastIndexSizeBytes\" : 101420524,\n      \"lastPing\" : \"2016-08-18T11:23:41Z\",\n      \"links\" : [  ],\n      \"logsEnabled\" : false,\n      \"lowUlimit\" : false,\n      \"muninEnabled\" : false,\n      \"port\" : 26000,\n      \"profilerEnabled\" : false,\n      \"replicaSetName\": \"rs1\",\n      \"replicaStateName\" : \"PRIMARY\",\n      \"sslEnabled\" : true,\n      \"systemInfo\" : {\n        \"memSizeMB\" : 65536,\n        \"numCores\" : 16\n      },\n      \"typeName\": \"REPLICA_PRIMARY\",\n      \"uptimeMsec\": 1827300394,\n      \"username\" : \"mongo\",\n      \"version\" : \"4.0.0\"\n    },\n    {\n\n    }\n  ]\n}"
                }
            ],
            "preview": "Get all MongoDB hosts in a project. Use the CLUSTER-ID query\nparameter to only get the hosts that belong to the specified\ncluster. The response sorts the hosts alphabetically by\nHOSTNAME:PORT.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/get-one-host-by-hostname-port",
            "title": "Get One Host by Hostname and Port",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get a single MongoDB process by its hostname and port combination. You\ncan specify either the primary hostname or an alias. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns this MongoDB process. HOSTNAME string Required Primary hostname  Cloud Manager  should use to connect to this MongoDB\ninstance. This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4) \naddress, or an  IPv6 (Internet Protocol version 6)  address. PORT string Required Port on which the MongoDB process listens. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description aliases array of strings Array of alternate hostname and port combinations that  Cloud Manager \ndiscovered for the MongoDB process. These combinations can\ninclude hostnames,  FQDN (fully qualified domain name) s,  IPv4 (Internet Protocol version 4)  addresses, and  IPv6 (Internet Protocol version 6) \naddresses. alertsEnabled boolean true  if this MongoDB process has alerts enabled. authMechanismName string Authentication mechanism used to connect to this MongoDB\nprocess. This displays only one of the following values: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE clusterId string Unique identifier of the cluster to which the MongoDB\nprocess belongs. created date Date  Cloud Manager  created or first discovered this MongoDB process. groupId string Unique identifier of the  group  that owns this host. hasStartupWarnings boolean true  if this MongoDB process had startup warnings. hidden boolean true  if host is displayed in the  Cloud Manager  UI. Hosts set to\n true  are omitted from  API (Application Programming Interface)  responses. hiddenSecondary boolean true  if this host is a\n hidden secondary . hostEnabled boolean true  if the MongoDB process currently enabled. hostname string Primary hostname as  Cloud Manager  can best determine. This can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. id string Unique identifier. ipAddress string IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address associated with the  hostname  of\nthis MongoDB process. Additional accessible  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6) \naddresses may be displayed in the  aliases  array. journalingEnabled boolean true  if journaling is enabled for this MongoDB process. lastDataSizeBytes number Uncompressed size of the host's databases on disk in\nbytes excluding indexes.  lastDataSizeBytes   does not \ninclude the data in the\n local  database. lastIndexSizeBytes number Uncompressed size of the host's database indexes on disk\nin bytes. This number  does not  include the size of the\nindex for the  local \ndatabase. lastPing date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last ping for this MongoDB process\nwas received. lastRestart date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this process last restarted. If the\nMongoDB process has never been restarted, the  lastRestart \nfield is omitted. links array Array that includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained\nin the  Web Linking Specification . At minimum, a\n links  array contains one link called  self . logsEnabled boolean true  if  Cloud Manager  is collecting logs for this MongoDB\nprocess. lowUlimit boolean true  if this MongoDB process's host has a low  ulimit \nsetting. port number Port on which the MongoDB process listens. profilerEnabled boolean true  if  Cloud Manager  collects profile information from this\nMongoDB process. replicaSetName string Name of the replica set this process belongs to. Only present\nif this process is part of a replica set. replicaStateName string Current state of this MongoDB process within a replica set.\nOnly present if this process is part of a replica set. See\n Replica Set Member States \nfor possible values. shardName string Name of the shard to which this process belongs. Only present\nif the process is part of a sharded cluster. secondaryDelaySecs number Number of seconds this  replica set  member's data\ntrails the  primary . If this value is set to  0 ,\nthe member is not configured as a delayed member.\nFor additional details on secondary delays, see\n Delayed Replica Set Members sslEnabled boolean true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and is enabled for this MongoDB\nprocess. systemInfo object Object that contains RAM and CPU information for this MongoDB\nprocess' server as reported by the operating system or\ncontainer. systemInfo.memSizeMB number Amount of RAM in megabytes. systemInfo.numCores number Number of CPU cores. typeName string Type for this MongoDB process. Possible values are: The type for new hosts added to  Cloud Manager  will be  NO_DATA \nuntil the Monitoring receives its first ping. STANDALONE REPLICA_PRIMARY REPLICA_SECONDARY REPLICA_ARBITER RECOVERING SHARD_MONGOS SHARD_CONFIG SHARD_STANDALONE SHARD_PRIMARY SHARD_SECONDARY NO_DATA uptimeMsec number Number of milliseconds since this process last restarted. version string Version of MongoDB running for this process. Although  Cloud Manager  returns  muninEnabled  in the response,\n Munin  is unsupported.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/byName/{HOSTNAME}:{PORT}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/byName/server1.example.com:27017?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertsEnabled\" : true,\n  \"aliases\": [ \"server1.example.com:27017\", \"10.1.0.10:27017\" ],\n  \"authMechanismName\" : \"SCRAM-SHA-1\",\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"created\" : \"2014-04-22T19:56:50Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hasStartupWarnings\" : false,\n  \"hidden\" : false,\n  \"hostEnabled\" : true,\n  \"hostname\" : \"server1.example.com\",\n  \"id\" : \"{HOST-ID}\",\n  \"ipAddress\": \"10.1.0.10\",\n  \"journalingEnabled\" : false,\n  \"lastDataSizeBytes\" : 633208918,\n  \"lastIndexSizeBytes\" : 101420524,\n  \"lastPing\" : \"2016-08-18T11:23:41Z\",\n  \"links\" : [  ],\n  \"logsEnabled\" : false,\n  \"lowUlimit\" : false,\n  \"muninEnabled\" : false,\n  \"port\" : 27017,\n  \"profilerEnabled\" : false,\n  \"replicaSetName\": \"rs1\",\n  \"replicaStateName\" : \"PRIMARY\",\n  \"sslEnabled\" : true,\n  \"systemInfo\" : {\n    \"memSizeMB\" : 65536,\n    \"numCores\" : 16\n  },\n  \"typeName\": \"REPLICA_PRIMARY\",\n  \"uptimeMsec\": 1827300394,\n  \"username\" : \"mongodb\",\n  \"version\" : \"4.0.0\"\n}"
                }
            ],
            "preview": "Get a single MongoDB process by its hostname and port combination. You\ncan specify either the primary hostname or an alias.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/create-one-host",
            "title": "Begin Monitoring One Host",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Start monitoring a new MongoDB process. The Monitoring\nstarts monitoring the MongoDB process on the hostname and port you\nspecify.  Cloud Manager  knows only the information that you provide. The\nresponse document includes blank values until  Cloud Manager  completes discovery\nof the MongoDB processes configuration. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns this MongoDB process. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description alertsEnabled boolean Optional Set to  true  if alerts should be enabled for this MongoDB\nprocess. authMechanismName string Optional Specify which authentication mechanism should be used to connect\nto this MongoDB process. Possible values are: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE hostname string Required Set the primary hostname  Cloud Manager  should use to\nconnect to this MongoDB instance. logsEnabled boolean Optional Set to  true  if  Cloud Manager  should collect logs for this MongoDB\nprocess. password string Optional Password associated with  username  for connecting to this\nMongoDB process. Set this parameter if  \"authMechanismName\" : \"MONGODB_CR\" Cloud Manager  doesn't include this parameter in any Host || response. port number Required Port on which MongoDB process listens. profilerEnabled boolean Optional Flag indicating whether  Cloud Manager  collects profile information from\nthis MongoDB process. sslEnabled boolean Conditional Flag indicating whether  TLS (Transport Layer Security)  should be enabled for this MongoDB\nprocess. Set to  true  if  \"authMechanismName\" : \"MONGODB_X509\" . username string Conditional Username needed to connect to this MongoDB process. Required if  \"authMechanismName\" : \"MONGODB_CR\" Name Type Description aliases array of strings Array of alternate hostname and port combinations that  Cloud Manager \ndiscovered for the MongoDB process. These combinations can\ninclude hostnames,  FQDN (fully qualified domain name) s,  IPv4 (Internet Protocol version 4)  addresses, and  IPv6 (Internet Protocol version 6) \naddresses. alertsEnabled boolean true  if this MongoDB process has alerts enabled. authMechanismName string Authentication mechanism used to connect to this MongoDB\nprocess. This displays only one of the following values: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE clusterId string Unique identifier of the cluster to which the MongoDB\nprocess belongs. created date Date  Cloud Manager  created or first discovered this MongoDB process. groupId string Unique identifier of the  group  that owns this host. hasStartupWarnings boolean true  if this MongoDB process had startup warnings. hidden boolean true  if host is displayed in the  Cloud Manager  UI. Hosts set to\n true  are omitted from  API (Application Programming Interface)  responses. hiddenSecondary boolean true  if this host is a\n hidden secondary . hostEnabled boolean true  if the MongoDB process currently enabled. hostname string Primary hostname as  Cloud Manager  can best determine. This can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. id string Unique identifier. ipAddress string IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address associated with the  hostname  of\nthis MongoDB process. Additional accessible  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6) \naddresses may be displayed in the  aliases  array. journalingEnabled boolean true  if journaling is enabled for this MongoDB process. lastDataSizeBytes number Uncompressed size of the host's databases on disk in\nbytes excluding indexes.  lastDataSizeBytes   does not \ninclude the data in the\n local  database. lastIndexSizeBytes number Uncompressed size of the host's database indexes on disk\nin bytes. This number  does not  include the size of the\nindex for the  local \ndatabase. lastPing date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last ping for this MongoDB process\nwas received. lastRestart date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this process last restarted. If the\nMongoDB process has never been restarted, the  lastRestart \nfield is omitted. links array Array that includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained\nin the  Web Linking Specification . At minimum, a\n links  array contains one link called  self . logsEnabled boolean true  if  Cloud Manager  is collecting logs for this MongoDB\nprocess. lowUlimit boolean true  if this MongoDB process's host has a low  ulimit \nsetting. port number Port on which the MongoDB process listens. profilerEnabled boolean true  if  Cloud Manager  collects profile information from this\nMongoDB process. replicaSetName string Name of the replica set this process belongs to. Only present\nif this process is part of a replica set. replicaStateName string Current state of this MongoDB process within a replica set.\nOnly present if this process is part of a replica set. See\n Replica Set Member States \nfor possible values. shardName string Name of the shard to which this process belongs. Only present\nif the process is part of a sharded cluster. secondaryDelaySecs number Number of seconds this  replica set  member's data\ntrails the  primary . If this value is set to  0 ,\nthe member is not configured as a delayed member.\nFor additional details on secondary delays, see\n Delayed Replica Set Members sslEnabled boolean true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and is enabled for this MongoDB\nprocess. systemInfo object Object that contains RAM and CPU information for this MongoDB\nprocess' server as reported by the operating system or\ncontainer. systemInfo.memSizeMB number Amount of RAM in megabytes. systemInfo.numCores number Number of CPU cores. typeName string Type for this MongoDB process. Possible values are: The type for new hosts added to  Cloud Manager  will be  NO_DATA \nuntil the Monitoring receives its first ping. STANDALONE REPLICA_PRIMARY REPLICA_SECONDARY REPLICA_ARBITER RECOVERING SHARD_MONGOS SHARD_CONFIG SHARD_STANDALONE SHARD_PRIMARY SHARD_SECONDARY NO_DATA uptimeMsec number Number of milliseconds since this process last restarted. version string Version of MongoDB running for this process.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/hosts"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts?pretty=true\" \\\n     --data '\n       {\n         \"hostname\": \"server1.example.com\",\n         \"port\": 27017\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertsEnabled\" : true,\n  \"authMechanismName\" : \"NONE\",\n  \"created\" : \"2014-04-22T19:56:50Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hasStartupWarnings\" : false,\n  \"hidden\" : false,\n  \"hostEnabled\" : true,\n  \"hostname\" : \"server1.example.com\",\n  \"id\" : \"{HOST-ID}\",\n  \"journalingEnabled\" : false,\n  \"links\" : [  ],\n  \"logsEnabled\" : false,\n  \"lowUlimit\" : false,\n  \"port\" : 27017,\n  \"profilerEnabled\" : false,\n  \"sslEnabled\" : false\n  \"systemInfo\" : {\n    \"memSizeMB\" : 65536,\n    \"numCores\" : 16\n  },\n}"
                }
            ],
            "preview": "Start monitoring a new MongoDB process. The Monitoring\nstarts monitoring the MongoDB process on the hostname and port you\nspecify. Cloud Manager knows only the information that you provide. The\nresponse document includes blank values until Cloud Manager completes discovery\nof the MongoDB processes configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/get-one-host-by-id",
            "title": "Get Host by ID",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get the MongoDB process with the specified host ID. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns this MongoDB process. HOST-ID string Required Unique identifier of the host for the MongoDB process. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description aliases array of strings Array of alternate hostname and port combinations that  Cloud Manager \ndiscovered for the MongoDB process. These combinations can\ninclude hostnames,  FQDN (fully qualified domain name) s,  IPv4 (Internet Protocol version 4)  addresses, and  IPv6 (Internet Protocol version 6) \naddresses. alertsEnabled boolean true  if this MongoDB process has alerts enabled. authMechanismName string Authentication mechanism used to connect to this MongoDB\nprocess. This displays only one of the following values: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE clusterId string Unique identifier of the cluster to which the MongoDB\nprocess belongs. created date Date  Cloud Manager  created or first discovered this MongoDB process. groupId string Unique identifier of the  group  that owns this host. hasStartupWarnings boolean true  if this MongoDB process had startup warnings. hidden boolean true  if host is displayed in the  Cloud Manager  UI. Hosts set to\n true  are omitted from  API (Application Programming Interface)  responses. hiddenSecondary boolean true  if this host is a\n hidden secondary . hostEnabled boolean true  if the MongoDB process currently enabled. hostname string Primary hostname as  Cloud Manager  can best determine. This can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. id string Unique identifier. ipAddress string IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address associated with the  hostname  of\nthis MongoDB process. Additional accessible  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6) \naddresses may be displayed in the  aliases  array. journalingEnabled boolean true  if journaling is enabled for this MongoDB process. lastDataSizeBytes number Uncompressed size of the host's databases on disk in\nbytes excluding indexes.  lastDataSizeBytes   does not \ninclude the data in the\n local  database. lastIndexSizeBytes number Uncompressed size of the host's database indexes on disk\nin bytes. This number  does not  include the size of the\nindex for the  local \ndatabase. lastPing date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last ping for this MongoDB process\nwas received. lastRestart date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this process last restarted. If the\nMongoDB process has never been restarted, the  lastRestart \nfield is omitted. links array Array that includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained\nin the  Web Linking Specification . At minimum, a\n links  array contains one link called  self . logsEnabled boolean true  if  Cloud Manager  is collecting logs for this MongoDB\nprocess. lowUlimit boolean true  if this MongoDB process's host has a low  ulimit \nsetting. port number Port on which the MongoDB process listens. profilerEnabled boolean true  if  Cloud Manager  collects profile information from this\nMongoDB process. replicaSetName string Name of the replica set this process belongs to. Only present\nif this process is part of a replica set. replicaStateName string Current state of this MongoDB process within a replica set.\nOnly present if this process is part of a replica set. See\n Replica Set Member States \nfor possible values. shardName string Name of the shard to which this process belongs. Only present\nif the process is part of a sharded cluster. secondaryDelaySecs number Number of seconds this  replica set  member's data\ntrails the  primary . If this value is set to  0 ,\nthe member is not configured as a delayed member.\nFor additional details on secondary delays, see\n Delayed Replica Set Members sslEnabled boolean true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and is enabled for this MongoDB\nprocess. systemInfo object Object that contains RAM and CPU information for this MongoDB\nprocess' server as reported by the operating system or\ncontainer. systemInfo.memSizeMB number Amount of RAM in megabytes. systemInfo.numCores number Number of CPU cores. typeName string Type for this MongoDB process. Possible values are: The type for new hosts added to  Cloud Manager  will be  NO_DATA \nuntil the Monitoring receives its first ping. STANDALONE REPLICA_PRIMARY REPLICA_SECONDARY REPLICA_ARBITER RECOVERING SHARD_MONGOS SHARD_CONFIG SHARD_STANDALONE SHARD_PRIMARY SHARD_SECONDARY NO_DATA uptimeMsec number Number of milliseconds since this process last restarted. version string Version of MongoDB running for this process.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertsEnabled\" : true,\n  \"aliases\": [ \"server1.example.com:27017\", \"10.1.0.10:27017\" ],\n  \"authMechanismName\" : \"MONGODB_CR\",\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"created\" : \"2014-04-22T19:56:50Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hasStartupWarnings\" : false,\n  \"hidden\" : false,\n  \"hostEnabled\" : true,\n  \"hostname\" : \"server1.example.com\",\n  \"id\" : \"{HOST-ID}\",\n  \"ipAddress\": \"10.1.0.10\",\n  \"journalingEnabled\" : false,\n  \"lastDataSizeBytes\" : 633208918,\n  \"lastIndexSizeBytes\" : 101420524,\n  \"lastPing\" : \"2016-08-18T11:23:41Z\",\n  \"links\" : [  ],\n  \"logsEnabled\" : false,\n  \"lowUlimit\" : false,\n  \"port\" : 27017,\n  \"profilerEnabled\" : false,\n  \"replicaSetName\": \"rs1\",\n  \"replicaStateName\" : \"PRIMARY\",\n  \"sslEnabled\" : true,\n  \"systemInfo\" : {\n    \"memSizeMB\" : 65536,\n    \"numCores\" : 16\n  },\n  \"typeName\": \"REPLICA_PRIMARY\",\n  \"uptimeMsec\": 1827300394,\n  \"username\" : \"mongodb\",\n  \"version\" : \"4.0.0\"\n}"
                }
            ],
            "preview": "Get the MongoDB process with the specified host ID.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/create-one-restore-job-for-one-sccc-config-server",
            "title": "Create One Restore Job for One Legacy Mirrored Config Server",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the job. HOST-ID string Unique identifier of the mirrored  config server  ( SCCC (Sync\nCluster Connection Configuration) ) that the job represents. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description checkpointId string Conditional Unique identifier for the  sharded cluster  checkpoint\nthat represents the point in time to which your data will be\nrestored. If you provide this setting, this endpoint restores all data up\nto this  checkpoint  to the database you\nspecified in the  delivery  object. Set  \"delivery.methodName\" : \"AUTOMATED_RESTORE\" . Run Sharded Clusters using  FCV  of 4.0 or earlier. Can't set  oplogInc ,  oplogTs , or\n pointInTimeUTCMillis . delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Conditional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.methodName\" : \"HTTP\" number Conditional Number of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.methodName\" : \"HTTP\" number Conditional Number of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName\" : \"HTTP\" string Required Means by which  Cloud Manager  delivers the data. Accepted values are: AUTOMATED_RESTORE HTTP If you set  \"delivery.methodName\" : \"AUTOMATED_RESTORE\" ,\nyou must also set: In addition, the response shows the  delivery.methodName \nas  HTTP . An automated restore uses the  HTTP  method\nto deliver the restore job to the target host. delivery.targetGroupId  and delivery.targetClusterId Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. string Conditional Unique identifier of the target cluster. Use the  clusterId \nreturned in the response body of the\n Get All Snapshots \nand  Get a Snapshot \nendpoints. delivery.methodName\" : \"AUTOMATED_RESTORE\" . If backup is not enabled on the target cluster, the\n Get All Snapshots \nendpoint returns an empty  results  array without\n clusterId  elements, and the\n Get a Snapshot \nendpoint also does not return a  clusterId  element. string Conditional Unique identifier of the project that contains the destination\ncluster for the restore job. delivery.methodName\" : \"AUTOMATED_RESTORE\" oplogTs string Conditional Oplog  timestamp  given as a\n Timestamp in the number of seconds that have elapsed since the  UNIX epoch . When paired with  oplogInc , they represent the\npoint in time to which your data will be restored. Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. \"delivery.methodName\" : \"AUTOMATED_RESTORE\" \n for Replica Sets Only. If you provide this setting, this endpoint restores all data up\nto  and including  this Oplog timestamp to the database you\nspecified in the  delivery  object. If you set  oplogTs , you: Must set  oplogInc . Cannot set  checkpointId  or  pointInTimeUTCMillis . oplogInc string Conditional 32-bit incrementing ordinal\nthat represents operations within a given second. When paired\nwith  oplogTs , they represent the point in time to which\nyour data will be restored. \"delivery.methodName\" : \"AUTOMATED_RESTORE\" \n for Replica Sets Only. If you provide this setting, this endpoint restores all data up\nto  and including  this Oplog timestamp to the database you\nspecified in the  delivery  object. If you set  oplogInc , you: Must set  oplogTs . Cannot set  checkpointId  or  pointInTimeUTCMillis . pointInTimeUTCMillis long Conditional timestamp in the number of milliseconds that have elapsed since the  UNIX epoch ',  that represents the point in time to which your\ndata will be restored. This timestamp must be within last 24\nhours of the current time. If you provide this setting, this endpoint restores all data up\nto this  Point in Time   to the\ndatabase you specified in the  delivery  object. \"delivery.methodName\" : \"AUTOMATED_RESTORE\" \n for Replica Sets Only. If you set  pointInTimeUTCMillis , you cannot set\n oplogInc ,  oplogTs , or  checkpointId . snapshotId string Conditional Unique identifier of the  snapshot  to restore. Name Type Description batchId string Conditional:   sharded cluster  only.\nUnique identifier of the  batch  to which this restore\njob belongs. clusterId string Conditional:   cluster  only.\nUnique identifier of the  cluster  that the\nrestore job represents. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. delivery.expirationHours number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.expires string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.maxDownloads number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName string Means by which the data is delivered. Accepted value is\n HTTP Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. delivery.statusName string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED delivery.targetClusterId string Conditional:   delivery.methodName\" : \"AUTOMATED_RESTORE\" .\nUnique identifier of the destination cluster to perform the\nrestore job. delivery.targetGroupId string Conditional:   delivery.methodName\" : \"AUTOMATED_RESTORE\" .\nUnique identifier of the project that contains the\ndestination cluster for the restore job. delivery.url string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. groupId string Unique identifier of the  group  that owns the restore\njob. hashes object array If the corresponding  delivery.url  has been downloaded,\neach document in this array is a mapping of a restore file to\na hashed checksum. This array is present  only after  the\nfile is downloaded. For an  HTTP  restore, this array only contains a single\nobject that represents the hash of the  .tar.gz  file. hashes.fileName string Name of the snapshot file that has been hashed. hashes.hash string Hash of the snapshot file. hashes.typeName string Hashing algorithm used to compute the hash value. If\npresent, this value is  SHA1 . hostId string Conditional:  mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ).\nUnique identifier of the  config server  to which this\nrestore job belongs. id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. timestamp.date string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. timestamp.increment string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Create a restore job that transfers a compressed snapshot using  HTTP (Hypertext Transfer Protocol) .",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs?pretty=true\" \\\n     --data '\n      {\n        \"delivery\" : {\n          \"expirationHours\" : 1,\n          \"expires\" : \"2017-04-21T04:49:57Z\",\n          \"maxDownloads\" : 1,\n          \"methodName\" : \"HTTP\",\n          \"statusName\" : \"READY\",\n          \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/OTY0ZmFiNmEzZjEzNGUyMTlhZjJjNjM3NGMyNGM4ZTM=/electron_0-1492636465-{JOB-ID}.tar.gz\"\n        },\n        \"snapshotId\" : \"{SNAPSHOT-ID}\"\n      }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2017-08-25T16:22:15Z\",\n  \"delivery\" : {\n    \"expirationHours\" : 1,\n    \"expires\" : \"2017-04-21T04:49:57Z\",\n    \"maxDownloads\" : 1,\n    \"methodName\" : \"HTTP\",\n    \"statusName\" : \"READY\",\n    \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/OTY0ZmFiNmEzZjEzNGUyMTlhZjJjNjM3NGMyNGM4ZTM=/electron_0-1492636465-{JOB-ID}.tar.gz\"\n  },\n  \"encryptionEnabled\" : true,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hostId\" : \"{HOST-ID}\",\n  \"id\" : \"{JOB-ID}\",\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID}\",\n    \"rel\" : \"self\"\n  }, {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}\",\n    \"rel\" : \"http://mms.mongodb.com/cluster\"\n  }, {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/snapshots/{SNAPSHOT-ID}\",\n    \"rel\" : \"http://mms.mongodb.com/snapshot\"\n  }, {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}\",\n    \"rel\" : \"http://mms.mongodb.com/group\"\n  } ],\n  \"masterKeyUUID\" : \"{UUID}\",\n  \"snapshotId\" : \"{SNAPSHOT-ID}\",\n  \"statusName\" : \"IN_PROGRESS\"\n}"
                }
            ],
            "preview": "Create a restore job that transfers a compressed snapshot using HTTP (Hypertext Transfer Protocol).",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/get-all-restore-jobs-for-one-cluster",
            "title": "Get All Restore Jobs for One Cluster",
            "headings": [
                "Resources",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Get all restore jobs for a cluster.  CLUSTER-ID  must be the ID of\neither a  replica set  or a  sharded cluster . If you use the  BATCH-ID  query parameter, you can retrieve all\nrestore jobs in the specified batch. When creating a restore job for\na sharded cluster,  Cloud Manager  creates a separate job for each shard, plus\nanother for the config server. Each of those jobs are part of a\nbatch. A restore job for a replica set, however, cannot be part of a\nbatch. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the\n snapshot . CLUSTER-ID string Unique identifier of the cluster that the  snapshot \nrepresents. Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true BATCH-ID string Unique identifier of the  batch . NONE This endpoint doesn't use HTTP request body parameters. Each  result  is one cluster restore job. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description batchId string Conditional:   sharded cluster  only.\nUnique identifier of the  batch  to which this restore\njob belongs. clusterId string Conditional:   cluster  only.\nUnique identifier of the  cluster  that the\nrestore job represents. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. delivery.expirationHours number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.expires string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.maxDownloads number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName string Means by which the data is delivered. Accepted values are: HTTP Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. delivery.statusName string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED delivery.url string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. groupId string Unique identifier of the  group  that owns the restore\njob. hashes object array If the corresponding  delivery.url  has been downloaded,\neach document in this array is a mapping of a restore file to\na hashed checksum. This array is present  only after  the\nfile is downloaded. For an  HTTP  restore, this array only contains a single\nobject that represents the hash of the  .tar.gz  file. hashes.fileName string Name of the snapshot file that has been hashed. hashes.hash string Hash of the snapshot file. hashes.typeName string Hashing algorithm used to compute the hash value. If\npresent, this value is  SHA1 . hostId string Conditional:  mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ).\nUnique identifier of the  config server  to which this\nrestore job belongs. id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . pointInTime boolean Flag indicating that the job for a\n PIT (point-in-time)  restore. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. timestamp.date string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. timestamp.increment string Order of all operations completed at the latest oplog entry in\nthe restored snapshot.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs"
                },
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?batchId={BATCH-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\" : \"{BATCH-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"created\" : \"2017-04-21T03:49:57Z\",\n    \"delivery\" : {\n      \"expirationHours\" : 1,\n      \"expires\" : \"2017-04-21T04:49:57Z\",\n      \"maxDownloads\" : 1,\n      \"methodName\" : \"HTTP\",\n      \"statusName\" : \"READY\",\n      \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/OTY0ZmFiNmEzZjEzNGUyMTlhZjJjNjM3NGMyNGM4ZTM=/electron_0-1492636465-{JOB-ID}.tar.gz\"\n    },\n    \"encryptionEnabled\" : false,\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"{JOB-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"snapshotId\" : \"{SNAPSHOT-ID}\",\n    \"statusName\" : \"FINISHED\",\n    \"timestamp\" : {\n      \"date\" : \"2017-04-18T15:14:25Z\",\n      \"increment\" : 1\n    }\n  }, {\n    \"batchId\" : \"{BATCH-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"created\" : \"2017-04-18T19:21:23Z\",\n    \"delivery\" : {\n      \"expirationHours\" : 1,\n      \"expires\" : \"2017-04-18T20:21:23Z\",\n      \"maxDownloads\" : 1,\n      \"methodName\" : \"HTTP\",\n      \"statusName\" : \"READY\",\n      \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/NWRlMTk4NzgxYzNjNDIzOTg2Yzc3YzkyODYxYjNjMzY=/electron_0-1492528465-{JOB-ID}.tar.gz\"\n    },\n    \"encryptionEnabled\" : false,\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"{JOB-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"snapshotId\" : \"{SNAPSHOT-ID}\",\n    \"statusName\" : \"FINISHED\",\n    \"timestamp\" : {\n      \"date\" : \"2017-04-19T21:14:25Z\",\n      \"increment\" : 1\n    }\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Get all restore jobs for a cluster. CLUSTER-ID must be the ID of\neither a replica set or a sharded cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/hosts/update-one-host",
            "title": "Update Configuration of One Monitored Host",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Update the configuration of a monitored MongoDB process. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier of the project that owns this MongoDB process. HOST-ID string Required Unique identifier of the host for the MongoDB process. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false If  authMechanismName  is  NONE  then any existing values for\n username  and  password  are cleared. If\n authMechanismName  is  SCRAM-SHA-1 , then you must provide both\nthe  username  and  password . Parameter Type Necessity Description alertsEnabled boolean Optional Set to  true  if alerts should be enabled for this MongoDB\nprocess. authMechanismName string Optional Specify which authentication mechanism should be used to connect\nto this MongoDB process. Possible values are: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE logsEnabled boolean Optional Set to  true  if  Cloud Manager  should collect logs for this MongoDB\nprocess. password string Conditional Password for connecting to this MongoDB process. Specify if\n \"authMechanismName\" : \"MONGODB_CR\"  or  \"authMechanismName\"\n: \"SCRAM_SHA_1\" . However, it will never be exposed when a host\nentity is returned. profilerEnabled boolean Optional Set to  true  if  Cloud Manager  collects profile information from this\nMongoDB process. sslEnabled boolean Conditional Set to  true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  should be enabled for this MongoDB\nprocess. Set to  true  if  \"authMechanismName\" :\n\"MONGODB_X509\" . username string Conditional Username needed to connect to this MongoDB process. Specify if\n \"authMechanismName\" : \"MONGODB_CR\"  or  \"authMechanismName\"\n: \"SCRAM_SHA_1\" . Name Type Description aliases array of strings Array of alternate hostname and port combinations that  Cloud Manager \ndiscovered for the MongoDB process. These combinations can\ninclude hostnames,  FQDN (fully qualified domain name) s,  IPv4 (Internet Protocol version 4)  addresses, and  IPv6 (Internet Protocol version 6) \naddresses. alertsEnabled boolean true  if this MongoDB process has alerts enabled. authMechanismName string Authentication mechanism used to connect to this MongoDB\nprocess. This displays only one of the following values: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE clusterId string Unique identifier of the cluster to which the MongoDB\nprocess belongs. created date Date  Cloud Manager  created or first discovered this MongoDB process. groupId string Unique identifier of the  group  that owns this host. hasStartupWarnings boolean true  if this MongoDB process had startup warnings. hidden boolean true  if host is displayed in the  Cloud Manager  UI. Hosts set to\n true  are omitted from  API (Application Programming Interface)  responses. hiddenSecondary boolean true  if this host is a\n hidden secondary . hostEnabled boolean true  if the MongoDB process currently enabled. hostname string Primary hostname as  Cloud Manager  can best determine. This can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. id string Unique identifier. ipAddress string IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address associated with the  hostname  of\nthis MongoDB process. Additional accessible  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6) \naddresses may be displayed in the  aliases  array. journalingEnabled boolean true  if journaling is enabled for this MongoDB process. lastDataSizeBytes number Uncompressed size of the host's databases on disk in\nbytes excluding indexes.  lastDataSizeBytes   does not \ninclude the data in the\n local  database. lastIndexSizeBytes number Uncompressed size of the host's database indexes on disk\nin bytes. This number  does not  include the size of the\nindex for the  local \ndatabase. lastPing date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the last ping for this MongoDB process\nwas received. lastRestart date Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this process last restarted. If the\nMongoDB process has never been restarted, the  lastRestart \nfield is omitted. links array Array that includes one or more links to sub-resources and/or\nrelated resources. The relations between URLs are explained\nin the  Web Linking Specification . At minimum, a\n links  array contains one link called  self . logsEnabled boolean true  if  Cloud Manager  is collecting logs for this MongoDB\nprocess. lowUlimit boolean true  if this MongoDB process's host has a low  ulimit \nsetting. port number Port on which the MongoDB process listens. profilerEnabled boolean true  if  Cloud Manager  collects profile information from this\nMongoDB process. replicaSetName string Name of the replica set this process belongs to. Only present\nif this process is part of a replica set. replicaStateName string Current state of this MongoDB process within a replica set.\nOnly present if this process is part of a replica set. See\n Replica Set Member States \nfor possible values. shardName string Name of the shard to which this process belongs. Only present\nif the process is part of a sharded cluster. secondaryDelaySecs number Number of seconds this  replica set  member's data\ntrails the  primary . If this value is set to  0 ,\nthe member is not configured as a delayed member.\nFor additional details on secondary delays, see\n Delayed Replica Set Members sslEnabled boolean true  if  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and is enabled for this MongoDB\nprocess. systemInfo object Object that contains RAM and CPU information for this MongoDB\nprocess' server as reported by the operating system or\ncontainer. systemInfo.memSizeMB number Amount of RAM in megabytes. systemInfo.numCores number Number of CPU cores. typeName string Type for this MongoDB process. Possible values are: The type for new hosts added to  Cloud Manager  will be  NO_DATA \nuntil the Monitoring receives its first ping. STANDALONE REPLICA_PRIMARY REPLICA_SECONDARY REPLICA_ARBITER RECOVERING SHARD_MONGOS SHARD_CONFIG SHARD_STANDALONE SHARD_PRIMARY SHARD_SECONDARY NO_DATA uptimeMsec number Number of milliseconds since this process last restarted. version string Version of MongoDB running for this process. Although  Cloud Manager  returns  muninEnabled  in the response,\n Munin  is unsupported.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/hosts/{HOST-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}?pretty=true\" \\\n     --data '\n       {\n         \"sslEnabled\": true,\n         \"username\": \"mongodb\",\n         \"password\": \"M0ng0DB!:)\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertsEnabled\" : true,\n  \"authMechanismName\" : \"SCRAM-SHA-1\",\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"created\" : \"2014-04-22T19:56:50Z\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hasStartupWarnings\" : false,\n  \"hidden\" : false,\n  \"hostEnabled\" : true,\n  \"hostname\" : \"server1.example.com\",\n  \"id\" : \"{HOST-ID}\",\n  \"ipAddress\": \"10.1.0.10\",\n  \"journalingEnabled\" : false,\n  \"lastDataSizeBytes\" : 470208719,\n  \"lastIndexSizeBytes\" : 110420592,\n  \"lastPing\" : \"2016-08-15T17:57:12Z\",\n  \"links\" : [  ],\n  \"logsEnabled\" : false,\n  \"lowUlimit\" : false,\n  \"muninEnabled\" : false,\n  \"port\" : 26000,\n  \"profilerEnabled\" : false,\n  \"replicaSetName\": \"rs1\",\n  \"replicaStateName\" : \"SECONDARY\",\n  \"sslEnabled\" : true,\n  \"systemInfo\" : {\n    \"memSizeMB\" : 65536,\n    \"numCores\" : 16\n  },\n  \"typeName\": \"REPLICA_SECONDARY\",\n  \"uptimeMsec\": 489182394,\n  \"username\" : \"mongodb\",\n  \"version\" : \"4.0.0\"\n}"
                }
            ],
            "preview": "Update the configuration of a monitored MongoDB process.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/get-all-restore-jobs-for-one-sccc-config-server",
            "title": "Get All Restore Jobs for One Legacy Mirrored Config Server",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the job. HOST-ID string Unique identifier of the host that the job represents. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each  result  is one  config server  restore job. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description batchId string Conditional:   sharded cluster  only.\nUnique identifier of the  batch  to which this restore\njob belongs. clusterId string Conditional:   cluster  only.\nUnique identifier of the  cluster  that the\nrestore job represents. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. delivery.expirationHours number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.expires string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.maxDownloads number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName string Means by which the data is delivered. Accepted values are: HTTP Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. delivery.statusName string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED delivery.url string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. groupId string Unique identifier of the  group  that owns the restore\njob. hashes object array If the corresponding  delivery.url  has been downloaded,\neach document in this array is a mapping of a restore file to\na hashed checksum. This array is present  only after  the\nfile is downloaded. For an  HTTP  restore, this array only contains a single\nobject that represents the hash of the  .tar.gz  file. hashes.fileName string Name of the snapshot file that has been hashed. hashes.hash string Hash of the snapshot file. hashes.typeName string Hashing algorithm used to compute the hash value. If\npresent, this value is  SHA1 . hostId string Conditional:  mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ).\nUnique identifier of the  config server  to which this\nrestore job belongs. id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . pointInTime boolean Flag indicating that the job for a\n PIT (point-in-time)  restore. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. timestamp.date string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. timestamp.increment string Order of all operations completed at the latest oplog entry in\nthe restored snapshot.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\" : \"58f98165ce4bd91677fee35e\",\n    \"created\" : \"2017-04-21T03:49:57Z\",\n    \"delivery\" : {\n      \"expirationHours\" : 1,\n      \"expires\" : \"2017-04-21T04:49:57Z\",\n      \"maxDownloads\" : 1,\n      \"methodName\" : \"HTTP\",\n      \"statusName\" : \"READY\",\n      \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/OTY0ZmFiNmEzZjEzNGUyMTlhZjJjNjM3NGMyNGM4ZTM=/electron_0-1492636465-{JOB-ID}.tar.gz\"\n    },\n    \"encryptionEnabled\" : false,\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"hostId\" : \"{HOST-ID}\",\n    \"id\" : \"{JOB-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"pointInTime\" : false,\n    \"snapshotId\" : \"{SNAPSHOT-ID}\",\n    \"statusName\" : \"FINISHED\",\n    \"timestamp\" : {\n      \"date\" : \"2017-04-18T15:14:25Z\",\n      \"increment\" : 1\n    }\n  }, {\n    \"batchId\" : \"{BATCH-ID}\",\n    \"created\" : \"2017-04-18T19:21:23Z\",\n    \"delivery\" : {\n      \"expirationHours\" : 1,\n      \"expires\" : \"2017-04-18T20:21:23Z\",\n      \"maxDownloads\" : 1,\n      \"methodName\" : \"HTTP\",\n      \"statusName\" : \"READY\",\n      \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/NWRlMTk4NzgxYzNjNDIzOTg2Yzc3YzkyODYxYjNjMzY=/electron_0-1492528465-{JOB-ID}.tar.gz\"\n    },\n    \"encryptionEnabled\" : false,\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"hostId\" : \"{HOST-ID}\",\n    \"id\" : \"{JOB-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"pointInTime\" : false,\n    \"snapshotId\" : \"{SNAPSHOT-ID}\",\n    \"statusName\" : \"FINISHED\",\n    \"timestamp\" : {\n      \"date\" : \"2017-04-19T21:14:25Z\",\n      \"increment\" : 1\n    }\n  } ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "Each result is one config server restore job.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/get-one-single-restore-job-for-one-cluster",
            "title": "Get One Restore Job for One Cluster",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the restore\njob. CLUSTER-ID string Unique identifier of the cluster that the restore job\nrepresents. JOB-ID string Unique identifier of the restore job. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description batchId string Conditional:   sharded cluster  only.\nUnique identifier of the  batch  to which this restore\njob belongs. clusterId string Conditional:   cluster  only.\nUnique identifier of the  cluster  that the\nrestore job represents. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. delivery.expirationHours number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.expires string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.maxDownloads number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName string Means by which the data is delivered. Accepted values are: HTTP Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. delivery.statusName string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED delivery.url string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. groupId string Unique identifier of the  group  that owns the restore\njob. hashes object array If the corresponding  delivery.url  has been downloaded,\neach document in this array is a mapping of a restore file to\na hashed checksum. This array is present  only after  the\nfile is downloaded. For an  HTTP  restore, this array only contains a single\nobject that represents the hash of the  .tar.gz  file. hashes.fileName string Name of the snapshot file that has been hashed. hashes.hash string Hash of the snapshot file. hashes.typeName string Hashing algorithm used to compute the hash value. If\npresent, this value is  SHA1 . hostId string Conditional:  mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ).\nUnique identifier of the  config server  to which this\nrestore job belongs. id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . pointInTime boolean Flag indicating that the job for a\n PIT (point-in-time)  restore. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. timestamp.date string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. timestamp.increment string Order of all operations completed at the latest oplog entry in\nthe restored snapshot.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"batchId\" : \"{BATCH-ID}\",\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"created\" : \"2016-03-04T22:07:27Z\",\n  \"delivery\" : {\n    \"expirationHours\" : 1,\n    \"expires\" : \"2016-03-04T23:07:27Z\",\n    \"maxDownloads\" : 1,\n    \"methodName\" : \"HTTP\",\n    \"statusName\" : \"EXPIRED\",\n    \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/1976673072885966399/electron_0-1456098690-{JOB-ID}.tar.gz\"\n  },\n  \"encryptionEnabled\" : false,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"id\" : \"{JOB-ID}\",\n  \"links\" : [ {\n\n  } ],\n  \"pointInTime\" : false,\n  \"snapshotId\" : \"{SNAPSHOT-ID}\",\n  \"statusName\" : \"FINISHED\",\n  \"timestamp\" : {\n    \"date\" : \"2017-04-19T21:14:25Z\",\n    \"increment\" : 1\n  }\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/get-one-single-restore-job-for-one-sccc-config-server",
            "title": "Get One Restore Job for One Legacy Mirrored Config Server",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the  project  that owns the restore\njob. HOST-ID string Unique identifier of the mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ) that the\nrestore job represents. JOB-ID string Unique identifier of the restore job. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description batchId string Conditional:   sharded cluster  only.\nUnique identifier of the  batch  to which this restore\njob belongs. clusterId string Conditional:   cluster  only.\nUnique identifier of the  cluster  that the\nrestore job represents. created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. delivery.expirationHours number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. delivery.expires string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. delivery.maxDownloads number Conditional:   \"delivery.methodName\" : \"HTTP\" .\nNumber of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. delivery.methodName string Means by which the data is delivered. Accepted values are: HTTP Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. delivery.statusName string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED delivery.url string Conditional:   \"delivery.methodName\" : \"HTTP\" .\n URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. groupId string Unique identifier of the  group  that owns the restore\njob. hashes object array If the corresponding  delivery.url  has been downloaded,\neach document in this array is a mapping of a restore file to\na hashed checksum. This array is present  only after  the\nfile is downloaded. For an  HTTP  restore, this array only contains a single\nobject that represents the hash of the  .tar.gz  file. hashes.fileName string Name of the snapshot file that has been hashed. hashes.hash string Hash of the snapshot file. hashes.typeName string Hashing algorithm used to compute the hash value. If\npresent, this value is  SHA1 . hostId string Conditional:  mirrored  config server \n( SCCC (Sync Cluster Connection Configuration) ).\nUnique identifier of the  config server  to which this\nrestore job belongs. id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . pointInTime boolean Flag indicating that the job for a\n PIT (point-in-time)  restore. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. timestamp.date string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. timestamp.increment string Order of all operations completed at the latest oplog entry in\nthe restored snapshot.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}/restoreJobs/{JOB-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"batchId\" : \"{BATCH-ID}\",\n  \"created\" : \"2016-03-04T22:07:27Z\",\n  \"delivery\" : {\n    \"expirationHours\" : 1,\n    \"expires\" : \"2016-03-04T23:07:27Z\",\n    \"maxDownloads\" : 1,\n    \"methodName\" : \"HTTP\",\n    \"statusName\" : \"READY\",\n    \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/1976673072885966399/electron_0-1456098690-{JOB-ID}.tar.gz\"\n  },\n  \"encryptionEnabled\" : false,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"hostId\" : \"{HOST-ID}\",\n  \"id\" : \"{JOB-ID}\",\n  \"links\" : [ {\n\n  } ],\n  \"pointInTime\" : false,\n  \"snapshotId\" : \"{SNAPSHOT-ID}\",\n  \"statusName\" : \"FINISHED\",\n  \"timestamp\" : {\n    \"date\" : \"2017-04-19T21:14:25Z\",\n    \"increment\" : 1\n  }\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-delete-one",
            "title": "Delete One Organization",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Description ORG-ID Required. The unique identifier for the\n organization  to delete. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE /orgs/{ORG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n --include \\\n --request DELETE 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/orgs/{ORG-ID}'"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-one",
            "title": "Get One Organization",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Description ORG-ID string (Required.)  The unique identifier for the  organization \nwhose information you want to retrieve. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description id string Unique identifier for the organization. isDeleted boolean Flag indicating if the organization is deleted. name string Name of the organization. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\" : \"{ORG-ID}\",\n  \"isDeleted\": false,\n  \"links\": [{\n\n  }],\n  \"name\" : \"Customer Application Support\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/update-org-roles-for-one-user",
            "title": "Update Organization Roles for One User",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates the roles of one user in the specified organization. To\nspecify the user to update, provide the unique 24-hexadecimal digit\nstring that identifies the user in the specified project. To use this\nresource, the requesting API Key must have the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string (Required.)  24-hexadecimal digit string that identifies the\n organization  whose information you want\nto retrieve. USER-ID string (Required.)  Unique 24-hexadecimal digit string that identifies\nthe user to modify. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description orgRoles array List of objects that describe the roles of the user. Name Type Description orgRoles array List of objects that describe the roles of the user.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /orgs/{ORG-ID}/users/{USER-ID}/roles"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/users/{USER-ID}/roles\"\n     --data '\n     [\n      {\n        \"orgRoles: [\"ORG_OWNER, \"ORG_MEMBER\", \"ORG_BILLING_ADMIN\"]\n      }\n     ]'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n   \"orgRoles\": [\n     \"ORG_OWNER\",\n     \"ORG_MEMBER\",\n     \"ORG_BILLING_ADMIN\"\n   ]\n}"
                }
            ],
            "preview": "Updates the roles of one user in the specified organization. To\nspecify the user to update, provide the unique 24-hexadecimal digit\nstring that identifies the user in the specified project. To use this\nresource, the requesting API Key must have the\nOrganization User Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-rename",
            "title": "Update One Organization",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Change one project's name. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string The unique identifier of the organization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description name string Required The new name for the organization. Name Type Description id ObjectId Unique identifier for the organization. isDeleted boolean Flag indicating if the organization is deleted. links document array One or more links to sub-resources and/or related resources. The\nrelations between URLs are explained in the  Web Linking Specification . name string New name of the organization.",
            "code": [
                {
                    "lang": "none",
                    "value": "PATCH /orgs/{ORG-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}?pretty=true\" \\\n     --data '\n     {\n       \"name\" :  \"Organization Name 1\"\n     }'"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"{ORG-ID}\",\n  \"isDeleted\": false,\n  \"links\": [{\n      \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}\",\n      \"rel\": \"self\"\n    },\n    {\n      \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/groups\",\n      \"rel\": \"http://mms.mongodb.com/groups\"\n    },\n    {\n      \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/teams\",\n      \"rel\": \"http://mms.mongodb.com/teams\"\n    },\n    {\n      \"href\": \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/users\",\n      \"rel\": \"http://mms.mongodb.com/users\"\n    }\n  ],\n  \"name\": \"Organization Name 1\"\n}"
                }
            ],
            "preview": "Change one project's name.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-all",
            "title": "Get All Organizations",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Displays response in a  prettyprint  format. false envelope boolean Specifies whether or not to wrap the response in an  envelope . false name string Filters results based on the specified organization name. Performs\na case-insensitive search for organizations which exactly match\nthe specified  name . If you specify a  name  query parameter of  org1 ,\n Cloud Manager  returns organizations named  org1  and  Org1 ,\nbut would not return an organization named  org123 . None This endpoint doesn't use HTTP request body parameters. Each  result  is one organization. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description id string Unique identifier for the organization. isDeleted boolean Flag indicating if the organization is deleted. name string Name of the organization. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [{\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs\",\n    \"rel\" : \"self\"\n  }],\n  \"results\" : [\n    {\n      \"id\" : \"{ORG-ID1}\",\n      \"isDeleted\": false,\n      \"links\": [{\n\n      }],\n      \"name\" : \"Internal Application Support\"\n    },\n    {\n      \"id\" : \"{ORG-ID2}\",\n      \"isDeleted\": false,\n      \"links\": [{\n\n      }],\n      \"name\" : \"Customer Application Support\"\n    },\n    {\n      \"id\" : \"{ORG-ID3}\",\n      \"isDeleted\": false,\n      \"links\": [{\n\n      }],\n      \"name\" : \"Research and Development\"\n    }\n  ],\n  \"totalCount\" : 3\n}"
                }
            ],
            "preview": "Each result is one organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-pending-invoices",
            "title": "Get Pending Invoice for an Organization",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier of the organization. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. If you set the query element  envelope  to  true , the response is wrapped\nby the  content  object. The HTTP response returns a JSON document that includes the following objects: Name Type Description amountBilledCents number Amount billed in this invoice, calculated as  subtotalCents \n+  salesTaxCents  -  startingBalanceCents amountPaidCents number Amount paid for this invoice. created string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthis invoice was created. creditsCents number Amount credited by MongoDB, in USD cents. endDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time) \nwhen the billing period for this invoice ended. groupId string Unique identifier of the project with which the invoice is associated.\n Does not appear on all invoices. id string Unique identifier for this invoice. lineItems object array Line items in the invoice. This information is also found in the\n Usage Details  section of the Invoice page in the\n Cloud Manager  UI. Each object in the array includes\nthe following fields: Item Description clusterName The name of the cluster that incurred the charge created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the line item was posted to the invoice. endDate Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the period for which the line item applies ended. discountCents Amount discounted, in USD cents.  Displays when applicable. groupId ID of the project with which the line item is associated. note Note regarding the line item. percentDiscount Percent of discount.  Displays when applicable. quantity Number of units of the line item (e.g. GB, hours, etc.). replicaSetName Name of the replica set with which the line item is associated. sku Description of the line item. This could be the instance type,\na support charge, advanced security, etc. startDate Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the period for which the line item applies began. totalPriceCents Total price for the line item, in USD cents. Equal to unitPriceDollars Cost of the item, in dollars. links object array One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . orgId string Unique identifier for the organization that received this\ninvoice. payments object array Payments applied to the invoice. Objects in the  payments  array\ninclude the following fields: Field Description amountBilledCents The amount of the invoice, in USD cents. amountPaidCents The amount that the customer paid, in USD cents. created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  of the date the payment was recorded. id Unique identifier of the payment. salesTaxCents Amount of sales tax paid, in USD cents. statusName State of the payment. Status Description CANCELLED The payment has been cancelled. FAILED The attempt to charge the credit card failed. FORGIVEN The payment was created, but was subsequently\nforgiven. NEW The payment has been created, but no attempt\nhas been made to charge the credit card. PAID The payment was successful. subtotalCents Sum of all positive invoice line items, in USD cents. updated Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  that the object was last updated. refunds object array Refunds issued for the invoice. Objects in the  refunds  array\ninclude the following fields: Field Description amountCents The amount of the refund, in USD cents. created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  of the date the refund was recorded. reason Reason for the refund. paymentId Unique identifier of the payment. salesTaxCents number Amount of taxes levied on  subtotalCents . startDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  of\nthe starting date for this invoice. statusName string State of this invoice. Accepted values are: Status Description CLOSED All charges for the subscription cycle have been\nfinalized, the balance is more than zero, and the\ncustomer has not been charged yet. FAILED An attempt to charge the credit card for the amount due\nfailed. FORGIVEN The customer has been charged, but the charge has been\nforgiven. FREE The amount turned out to be zero, so the customer is not\ncharged. PAID The funds have been transferred to MongoDB, Inc. PENDING Includes charges for the current subscription cycle. A customer\nshould never have more than one invoice in this state. PREPAID The customer is on a prepaid plan, so the customer is not\ncharged. subtotalCents number Sum of all positive invoice line items in USD cents. updated string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthe invoice was last updated. In the following sample response, the  lineItems  array has been\ntruncated for ease of viewing.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/invoices/pending"
                },
                {
                    "lang": "none",
                    "value": " unitPriceDollars * quantity * 100"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n --header \"Accept: application/json\" \\\n --include \\\n --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/pending"
                },
                {
                    "lang": "text",
                    "value": "{\n  \"amountBilledCents\" : 0,\n  \"amountPaidCents\" : 0,\n  \"created\" : \"2018-06-01T04:05:10Z\",\n  \"endDate\" : \"2018-07-01T00:00:00Z\",\n  \"id\" : \"{INVOICE-ID}\",\n  \"lineItems\" : [ {\n    \"clusterName\" : \"{CLUSTER-NAME}\",\n    \"created\" : \"2018-06-19T04:06:14Z\",\n    \"endDate\" : \"2018-06-19T00:00:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"quantity\" : 12.0,\n    \"replicaSetName\": \"rs0\",\n    \"sku\" : \"CLOUD_MANAGER_BASIC\",\n    \"startDate\" : \"2018-06-18T00:00:00Z\",\n    \"totalPriceCents\" : 31,\n    \"unitPriceDollars\" : 0.026\n  },\n  ... ,\n  {\n    \"clusterName\" : \"{CLUSTER-NAME}\",\n    \"created\" : \"2018-06-19T04:06:14Z\",\n    \"endDate\" : \"2018-06-19T00:00:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"quantity\" : 1.0,\n    \"replicaSetName\": \"rs0\",\n    \"sku\" : \"BACKUP_STORAGE\",\n    \"startDate\" : \"2018-06-18T00:00:00Z\",\n    \"totalPriceCents\" : 4,\n    \"unitPriceDollars\" : 0.0351\n  } ],\n  \"links\" : [ {\n    \"href\" : \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}\",\n    \"rel\" : \"http://mms.mongodb.com/org\"\n  }, {\n    \"href\" : \"https://cloud-dev.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"orgId\" : \"{ORG-ID}\",\n  \"payments\" : [ ],\n  \"refunds\" : [ ],\n  \"salesTaxCents\" : 0,\n  \"startDate\" : \"2018-06-01T00:00:00Z\",\n  \"startingBalanceCents\" : 0,\n  \"statusName\" : \"PENDING\",\n  \"subtotalCents\" : 0,\n  \"updated\" : \"2018-06-01T04:05:10Z\"\n}"
                }
            ],
            "preview": "If you set the query element envelope to true, the response is wrapped\nby the content object.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-one-invoice",
            "title": "Get One Organization Invoice",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier of the organization. INVOICE-ID string Unique identifier of the invoice. Charges are\ntypically posted the next day. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. If you set the query element  envelope  to  true , the response is wrapped\nby the  content  object. The HTTP response returns a JSON document that includes the following objects: Name Type Description amountBilledCents number Amount billed in this invoice, calculated as  subtotalCents \n+  salesTaxCents  -  startingBalanceCents amountPaidCents number Amount paid for this invoice. created string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthis invoice was created. creditsCents number Amount credited by MongoDB, in USD cents. endDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time) \nwhen the billing period for this invoice ended. groupId string Unique identifier of the project with which the invoice is associated.\n Does not appear on all invoices. id string Unique identifier for this invoice. lineItems object array Line items in the invoice. This information is also found in the\n Usage Details  section of the Invoice page in the\n Cloud Manager  UI. Each object in the array includes\nthe following fields: Item Description clusterName The name of the cluster that incurred the charge created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the line item was posted to the invoice. endDate Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the period for which the line item applies ended. discountCents Amount discounted, in USD cents.  Displays when applicable. groupId ID of the project with which the line item is associated. note Note regarding the line item. percentDiscount Percent of discount.  Displays when applicable. quantity Number of units of the line item (e.g. GB, hours, etc.). replicaSetName Name of the replica set with which the line item is associated. sku Description of the line item. This could be the instance type,\na support charge, advanced security, etc. startDate Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  when the period for which the line item applies began. totalPriceCents Total price for the line item, in USD cents. Equal to unitPriceDollars Cost of the item, in dollars. links object array One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . orgId string Unique identifier for the organization that received this\ninvoice. payments object array Payments applied to the invoice. Objects in the  payments  array\ninclude the following fields: Field Description amountBilledCents The amount of the invoice, in USD cents. amountPaidCents The amount that the customer paid, in USD cents. created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  of the date the payment was recorded. id Unique identifier of the payment. salesTaxCents Amount of sales tax paid, in USD cents. statusName State of the payment. Status Description CANCELLED The payment has been cancelled. FAILED The attempt to charge the credit card failed. FORGIVEN The payment was created, but was subsequently\nforgiven. NEW The payment has been created, but no attempt\nhas been made to charge the credit card. PAID The payment was successful. subtotalCents Sum of all positive invoice line items, in USD cents. updated Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  that the object was last updated. refunds object array Refunds issued for the invoice. Objects in the  refunds  array\ninclude the following fields: Field Description amountCents The amount of the refund, in USD cents. created Timestamp in  ISO 8601 \ndate and time format in  UTC (Coordinated Universal\nTime)  of the date the refund was recorded. reason Reason for the refund. paymentId Unique identifier of the payment. salesTaxCents number Amount of taxes levied on  subtotalCents . startDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  of\nthe starting date for this invoice. statusName string State of this invoice. Accepted values are: Status Description CLOSED All charges for the subscription cycle have been\nfinalized, the balance is more than zero, and the\ncustomer has not been charged yet. FAILED An attempt to charge the credit card for the amount due\nfailed. FORGIVEN The customer has been charged, but the charge has been\nforgiven. FREE The amount turned out to be zero, so the customer is not\ncharged. PAID The funds have been transferred to MongoDB, Inc. PENDING Includes charges for the current subscription cycle. A customer\nshould never have more than one invoice in this state. PREPAID The customer is on a prepaid plan, so the customer is not\ncharged. subtotalCents number Sum of all positive invoice line items in USD cents. updated string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthe invoice was last updated. In the following sample response, the  lineItems  array has been\ntruncated for ease of viewing.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/invoices/{INVOICE-ID}"
                },
                {
                    "lang": "none",
                    "value": " unitPriceDollars * quantity * 100"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n --header \"Accept: application/json\" \\\n --include \\\n --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID}\""
                },
                {
                    "lang": "text",
                    "value": "{\n  \"amountBilledCents\" : 240,\n  \"amountPaidCents\" : 240,\n  \"created\" : \"2018-04-01T06:14:31Z\",\n  \"endDate\" : \"2018-05-01T00:00:00Z\",\n  \"id\" : \"{INVOICE-ID}\",\n  \"lineItems\" : [ {\n    \"clusterName\" : \"{CLUSTER-NAME}\",\n    \"created\" : \"2018-05-01T04:05:31Z\",\n    \"endDate\" : \"2018-05-01T00:00:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"quantity\" : 72.0,\n    \"replicaSetName\": \"rs0\",\n    \"sku\" : \"CLOUD_MANAGER_BASIC\",\n    \"startDate\" : \"2018-04-30T00:00:00Z\",\n    \"totalPriceCents\" : 0,\n    \"unitPriceDollars\" : 0.0\n  }, {\n    \"clusterName\" : \"{CLUSTER-NAME}\",\n    \"created\" : \"2018-04-30T04:05:19Z\",\n    \"endDate\" : \"2018-04-30T00:00:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"quantity\" : 72.0,\n    \"replicaSetName\": \"rs0\",\n    \"sku\" : \"CLOUD_MANAGER_BASIC\",\n    \"startDate\" : \"2018-04-29T00:00:00Z\",\n    \"totalPriceCents\" : 0,\n    \"unitPriceDollars\" : 0.0\n  },\n  ... ,\n  {\n    \"clusterName\" : \"{CLUSTER-NAME}\",\n    \"created\" : \"2018-04-02T06:05:07Z\",\n    \"endDate\" : \"2018-04-02T00:00:00Z\",\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"quantity\" : 72.0,\n    \"replicaSetName\": \"rs0\",\n    \"sku\" : \"CLOUD_MANAGER_BASIC\",\n    \"startDate\" : \"2018-04-01T00:00:00Z\",\n    \"totalPriceCents\" : 0,\n    \"unitPriceDollars\" : 0.0\n  } ],\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}\",\n    \"rel\" : \"http://mms.mongodb.com/org\"\n  }, {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID}\",\n    \"rel\" : \"self\"\n  } ],\n  \"orgId\" : \"{ORG-ID}\",\n  \"payments\" : [ {\n    \"amountBilledCents\" : 240,\n    \"amountPaidCents\" : 240,\n    \"created\" : \"2018-05-01T04:05:14Z\",\n    \"id\" : \"{PAYMENT-ID}\",\n    \"salesTaxCents\" : 19,\n    \"statusName\" : \"PAID\",\n    \"subtotalCents\" : 221,\n    \"updated\" : \"2018-05-01T07:00:46Z\"\n  } ],\n  \"refunds\" : [ ],\n  \"salesTaxCents\" : 19,\n  \"startDate\" : \"2018-04-01T00:00:00Z\",\n  \"startingBalanceCents\" : 0,\n  \"statusName\" : \"PAID\",\n  \"subtotalCents\" : 221,\n  \"updated\" : \"2018-05-01T07:00:46Z\""
                }
            ],
            "preview": "If you set the query element envelope to true, the response is wrapped\nby the content object.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-delete-one-user",
            "title": "Delete One User in an Organization",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Description ORG-ID Required. The unique identifier for the\n organization  to delete. USER-ID Required. The unique identifier for the user to delete. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint doesn't return a response body.",
            "code": [
                {
                    "lang": "none",
                    "value": "DELETE orgs/{ORG-ID}/users/{USER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user '{PUBLIC-KEY}:{PRIVATE-KEY}' --digest \\\n --include \\\n --request DELETE 'https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/orgs/{ORG-ID}/users/{USER-ID}'"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/restorejobs/create-one-restore-job-for-one-cluster",
            "title": "Create One Restore Job for One Cluster",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Responses",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description PROJECT-ID string Unique identifier of the project that owns the job. CLUSTER-ID string Unique identifier of the cluster that the job represents. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Conditional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. If you set  delivery.expires , you can't set\n delivery.expirationHours . number Conditional Number of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. If you set  delivery.expirationHours , you can't set\n delivery.expires . number Required Number of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. string Required Means by which  Cloud Manager  delivers the data. Set to  HTTP . snapshotId string Required Unique identifier of the  snapshot  to restore. If you set  \"delivery.methodName\" :\nAUTOMATED_RESTORE\" , you must set\n delivery.targetGroupId  and\n delivery.targetClusterId . Create an automated restore from a snapshot. Name Type Necessity Description delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Required Means by which  Cloud Manager  delivers the data. Set to\n AUTOMATED_RESTORE . The response shows the  \"delivery.methodName\" : \"HTTP\" . An\nautomated restore uses the  HTTP  method to deliver the\nrestore job to the target host. Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. string Required Unique identifier of the target cluster. Use the  clusterId \nreturned in the response body of the\n Get All Snapshots \nand  Get a Snapshot \nendpoints. If backup is not enabled on the target cluster, the\n Get All Snapshots \nendpoint returns an empty  results  array without\n clusterId  elements, and the\n Get a Snapshot \nendpoint also does not return a  clusterId  element. string Required Unique identifier of the project that contains the destination\ncluster for the restore job. snapshotId string Required Unique identifier of the  snapshot  to restore. Create an automated restore from an Oplog timestamp. Oplog Restores work with Replica Sets using any MongoDB\nversion or Sharded Clusters using  FCV  of 4.2 or\nlater. Name Type Necessity Description delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Required Means by which  Cloud Manager  delivers the data. Set to\n AUTOMATED_RESTORE . The response shows the  \"delivery.methodName\" : \"HTTP\" . An\nautomated restore uses the  HTTP  method to deliver the\nrestore job to the target host. Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. string Required Unique identifier of the target cluster. Use the  clusterId \nreturned in the response body of the\n Get All Snapshots \nand  Get a Snapshot \nendpoints. If backup is not enabled on the target cluster, the\n Get All Snapshots \nendpoint returns an empty  results  array without\n clusterId  elements, and the\n Get a Snapshot \nendpoint also does not return a  clusterId  element. string Required Unique identifier of the project that contains the destination\ncluster for the restore job. oplogTs string Required Oplog  timestamp  given as a\n Timestamp in the number of seconds that have elapsed since the  UNIX epoch . When paired with  oplogInc , they represent the\npoint in time to which your data will be restored. Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. If you provide this setting, this endpoint restores all data up\nto  and including  this Oplog timestamp to the database you\nspecified in the  delivery  object. oplogInc string Required 32-bit incrementing ordinal that represents operations within a\ngiven second. When paired with  oplogTs , they represent the\npoint in time to which your data will be restored. If you provide this setting, this endpoint restores all data up\nto  and including  this Oplog timestamp to the database you\nspecified in the  delivery  object. Create an automated restore from a specific point in time. PIT Restores work with Replica Sets using any MongoDB\nversion or Sharded Clusters using  FCV  of 4.2 or\nlater. Name Type Necessity Description delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Required Means by which  Cloud Manager  delivers the data. Set to\n AUTOMATED_RESTORE . The response shows the  \"delivery.methodName\" : \"HTTP\" . An\nautomated restore uses the  HTTP  method to deliver the\nrestore job to the target host. Restore delivery via  SCP (secure copy)  has been removed as of March 27, 2018. string Required Unique identifier of the target cluster. Use the  clusterId \nreturned in the response body of the\n Get All Snapshots \nand  Get a Snapshot \nendpoints. If backup is not enabled on the target cluster, the\n Get All Snapshots \nendpoint returns an empty  results  array without\n clusterId  elements, and the\n Get a Snapshot \nendpoint also does not return a  clusterId  element. string Required Unique identifier of the project that contains the destination\ncluster for the restore job. pointInTimeUTCMillis long Required timestamp in the number of milliseconds that have elapsed since the  UNIX epoch ',  that represents the point in time to which your\ndata will be restored. This timestamp must be within last 24\nhours of the current time. If you provide this setting, this endpoint restores all data up\nto this  Point in Time   to the\ndatabase you specified in the  delivery  object. Create an automated restore from a checkpoint. Checkpoint\nrestores work for\n sharded clusters  running MongoDB\nclusters with an  FCV  of 4.0 or earlier. Don't use checkpoint restores for MongoDB clusters with\nan  FCV (Feature Compatibility Version)  of 4.2 or later. Name Type Necessity Description checkpointId string Required Unique identifier for the  sharded cluster  checkpoint\nthat represents the point in time to which your data will be\nrestored. If you provide this setting, this endpoint restores all data up\nto this  checkpoint  to the database you\nspecified in the  delivery  object. delivery object Required Method and details of how the restored  snapshot  data\nis delivered. string Required Means by which  Cloud Manager  delivers the data. Set to\n AUTOMATED_RESTORE . The response shows the  \"delivery.methodName\" : \"HTTP\" . An\nautomated restore uses the  HTTP  method to deliver the\nrestore job to the target host. string Required Unique identifier of the target cluster. Use the  clusterId \nreturned in the response body of the\n Get All Snapshots \nand  Get a Snapshot \nendpoints. If backup is not enabled on the target cluster, the\n Get All Snapshots \nendpoint returns an empty  results  array without\n clusterId  elements, and the\n Get a Snapshot \nendpoint also does not return a  clusterId  element. string Required Unique identifier of the project that contains the destination\ncluster for the restore job. Each  result  is one cluster restore job. This array includes one\nrestore job only. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description batchId string Unique identifier of the  batch  to which this restore\njob belongs. Returned if snapshot was from a sharded cluster. clusterId string Unique identifier of the  cluster  that the restore job\nrepresents. Returned if snapshot was from a replica set or\n sharded cluster . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. number Number of hours the download  URL (Uniform Resource Locator)  is valid once the restore\njob is complete. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  after which the  URL (Uniform Resource Locator)  is no longer available. number Number of times the download  URL (Uniform Resource Locator)  can be used. This must be\n 1  or greater. string Means by which the data is delivered. Returns  HTTP . string Current status of the downloadable file. Accepted values are: NOT_STARTED IN_PROGRESS READY FAILED INTERRUPTED EXPIRED MAX_DOWNLOADS_EXCEEDED string URL (Uniform Resource Locator)  from which the restored  snapshot  data can be\ndownloaded. encryptionEnabled boolean Flag indicating if the snapshot was encrypted. groupId string Unique identifier of the  group  that owns the restore\njob. hashes array of objects If the corresponding  delivery.url  has been downloaded, this\narray returns a single object that represents the hash of\nthe  .tar.gz  file. string Name of the snapshot file that has been hashed. string Hash of the snapshot file. string Hashing algorithm used to compute the hash value. If returned,\nvalue is set to  SHA1 . hostId string Unique identifier of the  config server  to which this\nrestore job belongs. Returned if  config server  was a\n SCCC (Sync Cluster Connection Configuration) . id string Unique identifier of the restore job. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . masterKeyUUID string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data.\nReturned if  \"encryptionEnabled\" : true . pointInTime boolean Flag indicating if the snapshot was from a point in time. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Name Type Description batchId string Unique identifier of the  batch  to which this restore\njob belongs. Returned if snapshot was from a sharded cluster. clusterId string Unique identifier of the  cluster  that the restore job\nrepresents. Returned if snapshot was from a replica set or\n sharded cluster . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. string Means by which the data is delivered. Returns  HTTP . string Unique identifier of the destination cluster to perform the\nrestore job. string Unique identifier of the project that contains the\ndestination cluster for the restore job. encryptionEnabled boolean Flag indicating if the snapshot was encrypted. groupId string Unique identifier of the  group  that owns the restore\njob. hostId string Unique identifier of the  config server  to which this\nrestore job belongs. Returned if  config server  was a\n SCCC (Sync Cluster Connection Configuration) . id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . masterKeyUUID string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data.\nReturned if  \"encryptionEnabled\" : true . pointInTime boolean Flag indicating if the snapshot was from a point in time. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Name Type Description batchId string Unique identifier of the  batch  to which this restore\njob belongs. Returned if snapshot was from a sharded cluster. clusterId string Unique identifier of the  cluster  that the restore job\nrepresents. Returned if snapshot was from a replica set or\n sharded cluster . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. string Means by which the data is delivered. Returns  HTTP . string Unique identifier of the destination cluster to perform the\nrestore job. string Unique identifier of the project that contains the\ndestination cluster for the restore job. encryptionEnabled boolean Flag indicating if the snapshot was encrypted. groupId string Unique identifier of the  group  that owns the restore\njob. hostId string Unique identifier of the  config server  to which this\nrestore job belongs. Returned if  config server  was a\n SCCC (Sync Cluster Connection Configuration) . id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . masterKeyUUID string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data.\nReturned if  \"encryptionEnabled\" : true . pointInTime boolean Flag indicating if the snapshot was from a point in time. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Name Type Description batchId string Unique identifier of the  batch  to which this restore\njob belongs. Returned if snapshot was from a sharded cluster. clusterId string Unique identifier of the  cluster  that the restore job\nrepresents. Returned if snapshot was from a replica set or\n sharded cluster . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. string Means by which the data is delivered. Returns  HTTP . string Unique identifier of the destination cluster to perform the\nrestore job. string Unique identifier of the project that contains the\ndestination cluster for the restore job. encryptionEnabled boolean Flag indicating if the snapshot was encrypted. groupId string Unique identifier of the  group  that owns the restore\njob. hostId string Unique identifier of the  config server  to which this\nrestore job belongs. Returned if   config server  was a\n SCCC (Sync Cluster Connection Configuration) . id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . masterKeyUUID string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data.\nReturned if  \"encryptionEnabled\" : true . pointInTime boolean Flag indicating if the snapshot was from a point in time. snapshotId string Unique identifier of the  snapshot  to restore. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Name Type Description batchId string Unique identifier of the  batch  to which this restore\njob belongs. Returned if snapshot was from a sharded cluster. checkpointId string Unique identifier for the  sharded cluster  checkpoint\nthat represents the point in time to which your data will be\nrestored. clusterId string Unique identifier of the  cluster  that the restore job\nrepresents. Returned if snapshot was from a replica set or\n sharded cluster . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the restore job was requested. delivery object Method and details of how the restored  snapshot  data\nis delivered. string Means by which the data is delivered. Returns  HTTP . string Unique identifier of the destination cluster to perform the\nrestore job. string Unique identifier of the project that contains the\ndestination cluster for the restore job. encryptionEnabled boolean Flag indicating if the snapshot was encrypted. groupId string Unique identifier of the  group  that owns the restore\njob. hostId string Unique identifier of the  config server  to which this\nrestore job belongs. Returned if   config server  was a\n SCCC (Sync Cluster Connection Configuration) . id string Unique identifier of the restore job. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . masterKeyUUID string KMIP (Key Management Interoperability)  master key ID used to encrypt the  snapshot  data.\nReturned if  \"encryptionEnabled\" : true . pointInTime boolean Flag indicating if the snapshot was from a point in time. statusName string Current status of the job. Accepted values are: FINISHED IN_PROGRESS BROKEN KILLED timestamp object Timestamp of the Oplog entry when the snapshot was created. string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the latest oplog entry in the restored\nsnapshot. string Order of all operations completed at the latest oplog entry in\nthe restored snapshot. Create a restore job that transfers a compressed snapshot\nusing  HTTP (Hypertext Transfer Protocol) . Create an automated restore from a snapshot. Create an automated restore from an Oplog timestamp. Create an automated restore from a specific point in time. Create an automated restore from a checkpoint. Valid for\n sharded clusters  running MongoDB\nclusters with an  FCV (Feature Compatibility Version)  of 4.0 or earlier only. Don't use checkpoint restores for MongoDB clusters with\nan  FCV (Feature Compatibility Version)  of 4.2 or later.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --header \"Content-Type: application/json\" \\\n  --include \\\n  --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n  --data '\n   {\n     \"delivery\" : {\n       \"expirationHours\" : \"1\",\n       \"maxDownloads\" : \"1\",\n       \"methodName\" : \"HTTP\"\n     },\n     \"snapshotId\" : \"{SNAPSHOT-ID}\"\n   }'\n"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n     --data '\n       {\n         \"delivery\" : {\n           \"methodName\" : \"AUTOMATED_RESTORE\",\n           \"targetGroupId\" : \"{TARGET-PROJECT-ID}\",\n           \"targetClusterId\" : \"{TARGET-CLUSTER-ID}\"\n         },\n         \"snapshotId\": \"{SNAPSHOT-ID}\"\n       }'\n"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --header \"Content-Type: application/json\" \\\n  --include \\\n  --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n  --data '\n   {\n     \"delivery\" : {\n       \"methodName\" : \"AUTOMATED_RESTORE\",\n       \"targetGroupId\" : \"{TARGET-PROJECT-ID}\",\n       \"targetClusterId\" : \"{TARGET-CLUSTER-ID}\"\n     },\n     \"oplogTs\" : \"1536610288\",\n     \"oplogInc\" : \"1\"\n   }'\n"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --header \"Content-Type: application/json\" \\\n  --include \\\n  --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n  --data '\n   {\n     \"delivery\" : {\n       \"methodName\" : \"AUTOMATED_RESTORE\",\n       \"targetGroupId\" : \"{TARGET-PROJECT-ID}\",\n       \"targetClusterId\" : \"{TARGET-CLUSTER-ID}\"\n     },\n     \"pointInTimeUTCMillis\" : \"1536610288000\"\n   }'\n"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --header \"Content-Type: application/json\" \\\n  --include \\\n  --request POST \"https://<OpsManagerHost>:<Port>/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n  --data '\n   {\n     \"delivery\" : {\n       \"methodName\" : \"AUTOMATED_RESTORE\",\n       \"targetGroupId\" : \"{TARGET-PROJECT-ID}\",\n       \"targetClusterId\" : \"{TARGET-CLUSTER-ID}\"\n     },\n     \"checkpointId\" : \"{CHECKPOINT-ID}\"\n   }'\n"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\": \"{BATCH-ID}\",\n    \"clusterId\": \"{CLUSTER-ID}\",\n    \"created\": \"2018-09-20T15:00:00Z\",\n    \"delivery\": {\n      \"expirationHours\": 1,\n      \"maxDownloads\": 1,\n      \"methodName\": \"HTTP\",\n      \"statusName\": \"READY\"\n    },\n    \"encryptionEnabled\": false,\n    \"groupId\": \"{PROJECT-ID}\",\n    \"id\": \"{RESTORE-JOB-ID}\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-NAME}/restoreJobs/{RESTORE-JOB-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"pointInTime\": false,\n    \"snapshotId\": \"{SNAPSHOT-ID}\",\n    \"statusName\": \"FINISHED\",\n    \"timestamp\": {\n      \"date\": \"2018-09-15T15:53:00Z\",\n      \"increment\": 1\n    }\n  }],\n  \"totalCount\" : 1\n}\n"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\" : \"{BATCH-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID}\",\n    \"created\" : \"2020-04-21T03:49:57Z\",\n    \"delivery\" : {\n      \"expirationHours\" : 1,\n      \"expires\" : \"2020-04-21T04:49:57Z\",\n      \"maxDownloads\" : 1,\n      \"methodName\" : \"HTTP\",\n      \"statusName\" : \"READY\",\n      \"url\" : \"https://api-backup.mongodb.com/backup/restore/v2/pull/{JOB-ID}/OTY0ZmFiNmEzZjEzNGUyMTlhZjJjNjM3NGMyNGM4ZTM=/electron_0-1492636465-{JOB-ID}.tar.gz\"\n    },\n    \"encryptionEnabled\" : false,\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"id\" : \"{JOB-ID}\",\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs/{JOB-ID}\",\n      \"rel\" : \"self\"\n    } ],\n    \"snapshotId\" : \"{SNAPSHOT-ID}\",\n    \"statusName\" : \"FINISHED\",\n    \"timestamp\" : {\n      \"date\" : \"2020-04-18T15:14:25Z\",\n      \"increment\" : 1\n    }\n  } ],\n  \"totalCount\" : 1\n}\n"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\": \"{BATCH-ID}\",\n    \"clusterId\": \"{CLUSTER-ID}\",\n    \"created\": \"2018-09-20T15:01:00Z\",\n    \"delivery\": {\n      \"methodName\": \"HTTP\",\n      \"statusName\": \"READY\"\n    },\n    \"encryptionEnabled\": false,\n    \"groupId\": \"{PROJECT-ID}\",\n    \"id\": \"{RESTORE-JOB-ID}\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-NAME}/restoreJobs/{RESTORE-JOB-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"pointInTime\": false,\n    \"snapshotId\": \"{SNAPSHOT-ID}\",\n    \"statusName\": \"FINISHED\",\n    \"timestamp\": {\n      \"date\": \"2018-09-15T15:53:00Z\",\n      \"increment\": 1\n    }\n  } ],\n  \"totalCount\" : 1\n}\n\n"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\": \"{BATCH-ID}\",\n    \"clusterId\": \"{CLUSTER-ID}\",\n    \"created\": \"2018-09-20T15:02:00Z\",\n    \"delivery\": {\n      \"methodName\": \"HTTP\",\n      \"statusName\": \"READY\"\n    },\n    \"encryptionEnabled\": false,\n    \"groupId\": \"{PROJECT-ID}\",\n    \"id\": \"{RESTORE-JOB-ID}\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-NAME}/restoreJobs/{RESTORE-JOB-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"snapshotId\": \"{SNAPSHOT-ID}\",\n    \"statusName\": \"FINISHED\",\n    \"timestamp\": {\n      \"date\": \"2018-09-15T15:53:00Z\",\n      \"increment\": 1\n    }\n  } ],\n  \"totalCount\" : 1\n}\n\n"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://{OPSMANAGER-HOST}:{PORT}/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  } ],\n  \"results\" : [ {\n    \"batchId\": \"{BATCH-ID}\",\n    \"clusterId\": \"{CLUSTER-ID}\",\n    \"created\": \"2018-09-20T15:03:00Z\",\n    \"delivery\": {\n      \"methodName\": \"HTTP\",\n      \"statusName\": \"READY\"\n    },\n    \"encryptionEnabled\": false,\n    \"groupId\": \"{PROJECT-ID}\",\n    \"id\": \"{RESTORE-JOB-ID}\",\n    \"links\": [{\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-NAME}/restoreJobs/{RESTORE-JOB-ID}\",\n      \"rel\": \"self\"\n    }],\n    \"snapshotId\": \"{SNAPSHOT-ID}\",\n    \"statusName\": \"FINISHED\",\n    \"timestamp\": {\n      \"date\": \"2018-09-15T15:53:00Z\",\n      \"increment\": 1\n    }\n  } ],\n  \"totalCount\" : 1\n}\n\n"
                }
            ],
            "preview": "Each result is one cluster restore job. This array includes one\nrestore job only.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-all-users",
            "title": "Get All Organization Users",
            "headings": [
                "Syntax",
                "Request Path Parameters",
                "Request Query Parameters",
                "Response Elements",
                "results",
                "links",
                "totalCount",
                "Example Request",
                "Request",
                "Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Required/Optional Description ORG-ID Required. The unique identifier for the  organization  whose\nuser information you want to retrieve. Field Required/Optional Description pageNum Optional. The page to return. Defaults to  1 . itemsPerPage Optional. Number of items to return per page, up to a maximum of 500. Defaults to  100 . envelope Optional. A boolean that specifies whether or not to wrap the response in an\n envelope . Defaults to  false . pretty Optional A boolean that specifies whether or not to return a \"pretty-printed\"\nJSON document. Defaults to  false . If you set the query element  envelope  to  true , the response is wrapped\nby the  content  object. The HTTP response returns a JSON document that includes the following objects: An array of documents, each representing one Organization user. Name Description country The country where the user lives. emailAddress The user's email address. firstName The user's first name. lastName ID of the  Cloud Manager  project the user belongs to. id The user's id. links One or more links to sub-resources and/or related resources. mobileNumber The user's mobile phone number. username The username for authenticating to MongoDB. roles An array of the user's roles within the Organization and for each\nProject to which the user belongs. roles.{ENTITY-ID} The  {ENTITY-ID}  represents the Organization or Project to\nwhich this role applies. Possible values are:  orgId  or\n groupId . roles.roleName The name of the role. The  users  resource returns all the\nroles the user has in either   Cloud Manager  or  MongoDB Atlas . Possible\nvalues are: Organization Roles Role Value in API Role ORG_OWNER Organization Owner ORG_MEMBER Organization Member ORG_GROUP_CREATOR Organization Project Creator ORG_BILLING_ADMIN Organization Billing Admin ORG_READ_ONLY Organization Read Only Project Roles Groups and projects are synonymous terms. GROUP_OWNER GROUP_READ_ONLY GROUP_DATA_ACCESS_ADMIN GROUP_DATA_ACCESS_READ_WRITE GROUP_DATA_ACCESS_READ_ONLY GROUP_AUTOMATION_ADMIN GROUP_BACKUP_ADMIN GROUP_MONITORING_ADMIN GROUP_OWNER GROUP_USER_ADMIN teamIds An array of the team ids for the organization. An array of documents, representing a  link  to one\nor more sub-resources and/or related resources such as  list\npagination . See  Linking  for more information. The total number of items in the result set. This value may be higher\nthan the number of objects in the  results  array if the entire\nresult set is paginated.",
            "code": [
                {
                    "lang": "sh",
                    "value": "GET /orgs/{ORG-ID}/users"
                },
                {
                    "lang": "sh",
                    "value": "curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/public/v1.0/orgs/59db8d1d87d9d6420df0613f/users?pretty=true\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ ... ],\n  \"results\" : [\n    {\n       \"country\": \"US\",\n       \"emailAddress\": \"someone@example.com\",\n       \"firstName\": \"John\",\n       \"id\": \"59db8d1d87d9d6420df0613a\",\n       \"lastName\": \"Smith\",\n       \"links\": [ ... ],\n       \"mobileNumber\": \"123-456-7890\",\n       \"roles\": [{\n         \"groupId\": \"59ea02e087d9d636b587a967\",\n         \"roleName\": \"GROUP_OWNER\"\n       }, {\n         \"groupId\": \"59db8d1d87d9d6420df70902\",\n         \"roleName\": \"GROUP_OWNER\"\n       }, {\n         \"orgId\": \"59db8d1d87d9d6420df0613f\",\n         \"roleName\": \"ORG_OWNER\"\n       }],\n       \"teamIds\" : [ \"5aeeed020bd6ef9d00033291\", \"5ac2aeadcabceef96172be31\" ],\n       \"username\": \"someone@example.com\"\n    },\n    ...\n  ],\n  \"totalCount\" : 2\n}"
                }
            ],
            "preview": "If you set the query element envelope to true, the response is wrapped\nby the content object.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-all-projects",
            "title": "Get All Projects in an Organization",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Description ORG-ID Required. The unique identifier for the\n organization  whose information you want\nto retrieve. The following query parameters are optional: Name Type Description Default pageNum integer Page number (1-based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Displays response in a  prettyprint  format. false envelope boolean Specifies whether or not to wrap the response in an  envelope . false name string Human-readable label of the project to use to filter the returned\nlist. Performs a case-insensitive search for a project, which is\nprefixed by the specified  name , within the organization. If you specify a  name  query parameter of  project1 ,\n Cloud Manager  returns the project named  project1 , but would\nnot return a project named  project123 . None This endpoint doesn't use HTTP request body parameters. Each  result  is one project. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description activeAgentCount integer The number of active monitoring, automation, and Backups\nin the project. hostCounts Document Describes the host types and number of each host type\nfor the cluster. hostCounts.arbiter integer The number of  arbiter  hosts in the cluster. hostCounts.config integer The number of sharded cluster configuration server hosts in\nthe cluster. hostCounts.mongos integer The number of  mongos  hosts in the\ncluster. hostCounts.primary integer The number of  primary  hosts in the cluster. hostCounts.secondary integer The number of  secondary  hosts in the cluster. id string The unique identifier for the project. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . name string The name of the cluster. orgId string The unique identifier for the parent organization of the project. publicApiEnabled boolean The status of API access to the cluster. replicaSetCount integer The number of replica sets in the cluster. shardCount integer The number of shards in the cluster.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/groups"
                },
                {
                    "lang": "shell",
                    "value": "curl --user \"{username:apiKey}\" \\\n     --include \\\n     --header \"Content-Type: application/json\" \\\n     --digest GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/groups\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "http",
                    "value": "{\n  \"links\": [{\n\n  }],\n  \"results\": [{\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 1,\n      \"secondary\": 2\n      },\n    \"id\": \"{PROJECT-ID}\",\n    \"links\": [{\n\n    }],\n    \"name\": \"Production Cluster\",\n    \"orgId\": \"{ORG-ID}\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 1,\n    \"shardCount\": 0\n  },\n  {\n    \"activeAgentCount\": 0,\n    \"hostCounts\": {\n      \"arbiter\": 0,\n      \"config\": 0,\n      \"mongos\": 0,\n      \"primary\": 1,\n      \"secondary\": 2\n    },\n    \"id\": \"{PROJECT-ID}\",\n    \"lastActiveAgent\": \"2017-10-26T02:39:59Z\",\n    \"links\": [{\n\n    }],\n    \"name\": \"Staging Cluster\",\n    \"orgId\": \"{ORG-ID}\",\n    \"publicApiEnabled\": true,\n    \"replicaSetCount\": 1,\n    \"shardCount\": 0\n    }\n  ],\n  \"totalCount\": 2\n}"
                }
            ],
            "preview": "Each result is one project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup/get-one-backup-config-by-cluster-id",
            "title": "Get One Backup Configuration from One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject that holds the cluster with the backup configuration you\nwant to find. CLUSTER-ID string Required Unique 24-hexadecimal digit string that identifies the cluster\nwhose backup configuration you want to find. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description availableMembers string array List of cluster members available for backup. Appears only\nfor member requests. clusterId string Unique 24-hexadecimal digit string that identifies the cluster\nto configure for backup. excludedNamespaces string array List of database names and collection names to omit from\nthe backup. Each string is a namespace in the form of\n {database}  or  {database}.{collection} . If this field\nis present the  includedNamespaces  field cannot be\npresent. You must send the new full list of excluded namespaces,\nincluding any that were already listed. If the new list removes any namespaces from the previous\nlist, you must also set the  syncSource  field, as the\nremoval of an excluded namespace necessitates a full resync.\nWithout the  syncSource  field, the request will fail. If the new list only adds to the previous list, you do not\nneed to set  syncSource . groupId string Unique 24-hexadecimal digit string that identifies the\nproject that owns this backup configuration. includedNamespaces string array List of database names and collection names to include in\nthe backup. Each string is a namespace in the form of\n {database}  or  {database}.{collection} . Any namespace\n not listed  in this array  will not be backed up . If\nthis field is present the  excludedNamespaces  field cannot\nbe present. You must send the new full list of included namespaces,\nincluding any that were already listed. If the new list adds any namespaces to the previous list, you\nmust also set the  syncSource  field, as the addition of an\nincluded namespace necessitates a full resync. Without the\n syncSource  field, the request will fail. If the new list only removes namespaces from the previous\nlist, you do not need to set  syncSource . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . preferredMember string Cluster member manually designated as the preferred member\nfor backup. Appears only for member requests when the\npreferred member is set with the  UI  or  API . sslEnabled boolean Flag that indentifies whether  TLS (Transport Layer Security)  is enabled for the sync\nsource database. statusName string Current (or desired) status of the backup configuration.\nPossible values are: INACTIVE PROVISIONING STARTED STOPPED TERMINATING storageEngineName string Storage engine used for the backup. Possible values are: MEMORY_MAPPED WIRED_TIGER The following request returns the available members. When each snapshot starts,  Cloud Manager  selects a replica set member\nto run the snapshot. This automatically selected member should have the\nleast performance impact on the replica set. You can override the\ndefault selection. Use  default selection  whenever possible. This choice\nensures backup availability. The following response includes the available members and the\ndesignated preferred member. If a preferred member is\nundefined, then it is excluded from the response. When each snapshot starts,  Cloud Manager  selects a replica set member\nto run the snapshot. This automatically selected member should have the\nleast performance impact on the replica set. You can override the\ndefault selection. Use  default selection  whenever possible. This choice\nensures backup availability.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/availableMembers?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"excludedNamespaces\" : [ ],\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"includedNamespaces\" : [ ],\n  \"links\" : [ ],\n  \"sslEnabled\" : false,\n  \"statusName\" : \"STARTED\",\n  \"storageEngineName\" : \"WIRED_TIGER\"\n}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"availableMembers\" : [ \"{HOSTNAME1}:{PORT1}\", \"{HOSTNAME2}:{PORT2}\", \"{HOSTNAME3}:{PORT3}\"],\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"excludedNamespaces\" : [ ],\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"includedNamespaces\" : [ ],\n  \"links\" : [ ],\n  \"sslEnabled\" : false,\n  \"statusName\" : \"STARTED\",\n  \"storageEngineName\" : \"WIRED_TIGER\",\n  \"preferredMember\" : \"{HOSTNAME1}:{PORT1}\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup/get-snapshot-schedule",
            "title": "Get the Snapshot Schedule",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Parameter Type Necessity Description PROJECT-ID string Required Unique identifier for the project that holds the cluster with\nthe snapshot schedule you want to get. CLUSTER-ID string Required Unique indentifier of the cluster whose snapshot schedule\nyou want to get. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description clusterCheckpointIntervalMin number Number of minutes between successive cluster checkpoints. This\nonly applies to sharded clusters. This number determines the\ngranularity of point-in-time restores for sharded clusters.\n Cloud Manager  may return values of  15 ,  30 , or  60 . You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. clusterId string Unique identifier of the cluster to which this backup\nconfiguration applies. dailySnapshotRetentionDays number Number of days to retain daily snapshots.  Cloud Manager  may return\nvalues between  1  and  365 , inclusive. Setting  dailySnapshotRetentionDays  to  0  disables this\nrule. fullIncrementalDayOfWeek string Day of the week when  Cloud Manager  takes a full snapshot. This\nensures a recent complete backup.  Cloud Manager  sets the default\nvalue to a random weekday. groupId string Unique identifier of the project that owns the backup\nconfiguration. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . monthlySnapshotRetentionMonths number Number of months to retain monthly snapshots.  Cloud Manager  may return\nvalues between  1  and  36 , inclusive. Setting  monthlySnapshotRetentionMonths  to  0  disables this rule. pointInTimeWindowHours number Number of hours in the past for which a point-in-time snapshot\ncan be created. You cannot change this value for a snapshot. snapshotIntervalHours number Number of hours between snapshots.  Cloud Manager  may return values of\n 6 ,  8 ,  12 , or  24 . snapshotRetentionDays number Number of days to keep recent snapshots.  Cloud Manager  may return values\nbetween  2  and  5 , inclusive. weeklySnapshotRetentionWeeks number Number of weeks to retain weekly snapshots.  Cloud Manager  may return\nvalues between  1  and  52 , inclusive. Setting  weeklySnapshotRetentionWeeks  to  0  disables\nthis rule.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/backupConfigs/CLUSTER-ID/snapshotSchedule"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/snapshotSchedule\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"dailySnapshotRetentionDays\" : 7,\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"links\" : [],\n  \"monthlySnapshotRetentionMonths\" : 13,\n  \"pointInTimeWindowHours\": 24,\n  \"snapshotIntervalHours\" : 6,\n  \"snapshotRetentionDays\" : 2,\n  \"weeklySnapshotRetentionWeeks\" : 4\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/organizations/organization-get-all-invoices",
            "title": "Get All Invoices for One Organization",
            "headings": [
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response"
            ],
            "paragraphs": "Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description ORG-ID string Unique identifier of the organization. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Each document in the  result  array represents one invoice.\nCharges are typically posted the next day. Name Type Description amountBilledCents number Amount billed in this invoice, calculated as  subtotalCents \n+  salesTaxCents  -  startingBalanceCents . amountPaidCents number Amount paid for this invoice, in USD cents. created string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthis invoice was created. creditsCents number Amount credited by MongoDB, in USD cents. endDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time) \nwhen the billing period for this invoice ended. id string Unique identifier for this invoice. links object array One or more links to sub-resources and/or related resources. The\nrelation-types between URLs are explained in the\n Web Linking Specification . groupId string Unique identifier of the project with which the invoice is associated.  Does not\nappear on all invoices. orgId string Unique identifier for the organization that received this\ninvoice. salesTaxCents number Amount of taxes levied on  subtotalCents . startDate string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  of\nthe starting date for this invoice. statusName string State of this invoice. Accepted values are: Status Description CLOSED All charges for the subscription cycle have been\nfinalized, the balance is more than zero, and the\ncustomer has not been charged yet. FAILED An attempt to charge the credit card for the amount due\nfailed. FORGIVEN The customer has been charged, but the charge has been\nforgiven. FREE The amount turned out to be zero, so the customer is not\ncharged. PAID The funds have been transferred to MongoDB, Inc. PENDING Includes charges for the current subscription cycle. A customer\nshould never have more than one invoice in this state. PREPAID The customer is on a prepaid plan, so the customer is not\ncharged. subtotalCents number Sum of all positive invoice line items in USD cents. updated string Timestamp in  ISO 8601  date\nand time format in  UTC (Coordinated Universal Time)  when\nthe invoice was last updated.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/invoices/"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/?pretty=true\""
                },
                {
                    "lang": "json",
                    "value": "{\n   \"links\" : [ {\n     \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/?pretty=true&pageNum=1&itemsPerPage=100\",\n     \"rel\" : \"self\"\n   } ],\n   \"results\" : [ {\n     \"amountBilledCents\" : 0,\n     \"amountPaidCents\" : 0,\n     \"created\" : \"2018-06-01T04:05:10Z\",\n     \"endDate\" : \"2018-07-01T00:00:00Z\",\n     \"id\" : \"{INVOICE-ID}\",\n     \"links\" : [ {\n       \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID}\",\n       \"rel\" : \"self\"\n     } ],\n     \"orgId\" : \"{ORG-ID}\",\n     \"salesTaxCents\" : 0,\n     \"startDate\" : \"2018-06-01T00:00:00Z\",\n     \"startingBalanceCents\" : 0,\n     \"statusName\" : \"PENDING\",\n     \"subtotalCents\" : 0,\n     \"updated\" : \"2018-06-01T04:05:10Z\"\n   }, {\n     \"amountBilledCents\" : 726,\n     \"amountPaidCents\" : 726,\n     \"created\" : \"2018-02-01T06:05:04Z\",\n     \"endDate\" : \"2018-03-01T00:00:00Z\",\n     \"id\" : \"{INVOICE-ID}\",\n     \"links\" : [ {\n       \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invoices/{INVOICE-ID}\",\n       \"rel\" : \"self\"\n     } ],\n     \"orgId\" : \"{ORG-ID}\",\n     \"salesTaxCents\" : 57,\n     \"startDate\" : \"2018-02-01T00:00:00Z\",\n     \"startingBalanceCents\" : 0,\n     \"statusName\" : \"PAID\",\n     \"subtotalCents\" : 669,\n     \"updated\" : \"2018-03-01T07:00:54Z\"\n   } ],\n   \"totalCount\" : 16\n}"
                }
            ],
            "preview": "Each document in the result array represents one invoice.\nCharges are typically posted the next day.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup/update-backup-config",
            "title": "Update One Backup Configuration",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Parameter Type Necessity Description projectId string Required Unique 24-hexadecimal digit string that identifies the\nproject that holds the cluster with the backup configuration you\nwant to change. clusterId string Required Unique 24-hexadecimal digit string that identifies the cluster\nwhose backup configuration you want to change. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description authMechanismName string Conditional Authentication mechanism needed to connect to the sync source\ndatabase.  Cloud Manager  requires this parameter if the sync store uses authentication.  Cloud Manager  accepts: MONGODB_CR  (This covers SCRAM-SHA-1, SCRAM-SHA-256, and MONGODB-CR.) GSSAPI PLAIN MONGODB_X509 NONE excludedNamespaces array of strings Conditional List of database and collection names to  omit  from the backup.\nEach string represents one namespace. Namespaces use the format\nof  {database}  or  {database}.{collection} . This parameter must meet the following conditions: Cloud Manager  accepts this parameter for backup jobs running MongoDB\n FCV  4.0 or earlier.  Cloud Manager  ignores this parameter when\nbacking up MongoDB databases running  FCV (Feature Compatibility Version)  4.2 or later. Cloud Manager  accepts this parameter or  includedNamespaces , not\nboth. Cloud Manager  requires the new full list of excluded namespaces,\nincluding any already found in the array. If your new list  removes  any namespaces from the existing\narray, set the  syncSource  parameter. Removing an excluded namespace requires a full resync. Without the  syncSource  parameter, the request fails. If your new list only  adds  to the existing array, don't\nset  syncSource . includedNamespaces array of strings Conditional List of database and collection names to  include  from the\nbackup. Each string represents one namespace. Namespaces use the\nformat of  {database}  or  {database}.{collection} . This parameter must meet the following conditions: Cloud Manager  accepts this parameter for backup jobs running MongoDB\n FCV  4.0 or earlier.  Cloud Manager  ignores this parameter when\nbacking up MongoDB databases running  FCV (Feature Compatibility Version)  4.2 or later. Cloud Manager  accepts this parameter or  excludedNamespaces , not\nboth. Cloud Manager  requires the new full list of included namespaces,\nincluding any already found in the array. If the new list adds any namespaces from existing array,\nset the  syncSource  parameter. Adding an included namespace requires a full resync. Without the  syncSource  parameter, the request fails. If the new list only removes namespaces from the existing\narray, don't set  syncSource . password string Conditional Password to use to connect to the sync source database.  Cloud Manager \nrequires this parameter when the sync store  mongod  instances\nrequire clients to authenticate. preferredMember string Optional Cluster member that a user designates as the preferred replica\nset member to create snapshots. You can set the preferred\nmember using the  console .\nView available replica set members that can act as a preferred\nmember using the  Get one backup config endpoint . provisioned boolean Conditional Flag that indicates if  Cloud Manager  has provisioned the resources\nneeded to store a backup. sslEnabled boolean Optional Flag that indicates if  TLS (Transport Layer Security)  is enabled for the sync source\ndatabase. statusName string Optional Current (or desired) status of the backup configuration.  Cloud Manager \naccepts: INACTIVE PROVISIONING STARTED STOPPED TERMINATING storageEngineName string Optional Storage engine used for the backup.  Cloud Manager  accepts: MEMORY_MAPPED WIRED_TIGER syncSource string Conditional mongod  instance to get backup data from.  Cloud Manager  accepts either\na specific hostname or one of:  PRIMARY  and  SECONDARY . Cloud Manager  requires this parameter if\n \"storageEngineName\" : \"WIRED_TIGER\" . username string Conditional Name of the user to use to connect to the sync source database.\n Cloud Manager  requires this parameter when the sync store  mongod \ninstances require clients to authenticate. Send this parameter to  Cloud Manager  when updating the backup\nconfiguration for a replica set or sharded cluster that  Cloud Manager \n doesn't  manage. Name Type Description authMechanismName string Name of the authentication mechanism to use when connecting to\nthe sync source database.  Cloud Manager  returns this parameter if the\nsync store uses authentication. clusterId string Unique identifier of the cluster to which this backup\nconfiguration applies. excludedNamespaces array of strings List of database names and collection names to omit from\nthe backup. Each string is a namespace in the form of\n {database}  or  {database}.{collection} . includedNamespaces array of strings List of database names and collection names to include in\nthe backup. Each string is a namespace in the form of\n {database}  or  {database}.{collection} . links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . preferredMember string Cluster member that a user designates as the preferred replica\nset member to create snapshots. You can set the preferred\nmember using the  console .\nView available replica set members that can act as a preferred\nmember using the  Get one backup config endpoint . projectId string Unique identifier of the project that owns this backup\nconfiguration. provisioned boolean Flag that indicates if  Cloud Manager  has provisioned the resources\nneeded to store a backup.  Cloud Manager  returns this parameter when the\namount of data to be backed up exceeds a certain threshold. sslEnabled boolean Flag that indicates if  TLS (Transport Layer Security)  is enabled for the sync source\ndatabase. statusName string Current (or desired) status of the backup configuration. storageEngineName string Storage engine used for the backup. The following request sets the preferred member. When each snapshot starts,  Cloud Manager  selects a replica set member\nto run the snapshot. This automatically selected member should have the\nleast performance impact on the replica set. You can override the\ndefault selection. Use  default selection  whenever possible. This choice\nensures backup availability. The following response includes preferred member. When each snapshot starts,  Cloud Manager  selects a replica set member\nto run the snapshot. This automatically selected member should have the\nleast performance impact on the replica set. You can override the\ndefault selection. Use  default selection  whenever possible. This choice\nensures backup availability.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{projectId}/backupConfigs/{clusterId}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/backupConfigs/{clusterId}\"\n     --data '\n       {\n         \"statusName\": \"STARTED\",\n         \"storageEngineName\": \"WIRED_TIGER\",\n         \"syncSource\": \"primary\"\n       }'"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/backupConfigs/{clusterId}\"\n     --data '\n       {\n         \"preferredMember\":\"<HOSTNAME>:<PORT>\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"authMechanismName\" : \"NONE\",\n  \"clusterId\" : \"{clusterId}\",\n  \"encryptionEnabled\" : false,\n  \"excludedNamespaces\" : [ ],\n  \"groupId\" : \"{projectId}\",\n  \"links\" : [ {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/backupConfigs/{clusterId}\",\n  \"rel\" : \"self\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/clusters/{clusterId}\",\n    \"rel\" : \"http://mms.mongodb.com/cluster\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}\",\n    \"rel\" : \"http://mms.mongodb.com/group\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/   {projectId}/backupConfigs/{clusterId}/snapshotSchedule\",\n    \"rel\" : \"http://mms.mongodb.com/snapshotSchedule\"\n  } ],\n  \"sslEnabled\" : false,\n  \"statusName\" : \"STARTED\",\n  \"storageEngineName\" : \"WIRED_TIGER\"\n}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"authMechanismName\" : \"NONE\",\n  \"clusterId\" : \"{clusterId}\",\n  \"encryptionEnabled\" : false,\n  \"excludedNamespaces\" : [ ],\n  \"groupId\" : \"{projectId}\",\n  \"links\" : [ {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/backupConfigs/{clusterId}\",\n  \"rel\" : \"self\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}/clusters/{clusterId}\",\n    \"rel\" : \"http://mms.mongodb.com/cluster\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/{projectId}\",\n    \"rel\" : \"http://mms.mongodb.com/group\"\n  }, {\n    \"href\" : \"http://cloud.mongodb.com/api/public/v1.0/groups/   {projectId}/backupConfigs/{clusterId}/snapshotSchedule\",\n    \"rel\" : \"http://mms.mongodb.com/snapshotSchedule\"\n  } ],\n  \"sslEnabled\" : false,\n  \"statusName\" : \"STARTED\",\n  \"storageEngineName\" : \"WIRED_TIGER\",\n  \"preferredMember\":\"{HOSTNAME}:{PORT}\"\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup/get-all-backup-configs-for-group",
            "title": "Get All Backup Configurations for One Project",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject to which the backup configuration applies. The following query parameters are optional: Name Type Necessity Description Default pageNum number Optional One-based integer that returns a subsection of results. 1 itemsPerPage number Optional Number of items to return per page, up to a maximum of 500. 100 pretty boolean Optional Flag that indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope : true  in the\nquery. For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. false backupJobsEnabledOnly boolean Optional Flag indicating whether to exclude daemons not enabled for\nbacking up databases from the response. Set this to  false  to\ninclude daemon configurations with the  backupJobsEnabled \nflag set to  false . true This endpoint doesn't use HTTP request body parameters. Name Type Description groupId string Unique 24-hexadecimal digit string that identifies the\nproject that owns this backup configuration. clusterId string Unique 24-hexadecimal digit string that identifies the cluster\nwhose backup configuration you want to find. statusName string Current (or desired) status of the backup configuration.\nPossible values are: INACTIVE PROVISIONING STARTED STOPPED TERMINATING storageEngineName string Storage engine used for the backup. Possible values are: MEMORY_MAPPED WIRED_TIGER sslEnabled boolean Flag that indicates whether  TLS (Transport Layer Security)  is enabled for the sync source\ndatabase. excludedNamespaces string array List of database names and collection names to omit from the\nbackup. Each string is a namespace in the form of  <database>  or\n <database>.<collection> . If this field is present the\n includedNamespaces  field cannot be present. You must send the new full list of excluded namespaces, including any\nthat were already listed. If the new list removes any namespaces from the previous list, you must\nalso set the  syncSource  field, as the removal of an excluded\nnamespace necessitates a full resync. Without the  syncSource  field,\nthe request will fail. If the new list only adds to the previous list, you do not need to set\n syncSource . includedNamespaces string array List of database names and collection names to include in the\nbackup. Each string is a namespace in the form of  <database> \nor  <database>.<collection> . Any namespace  not listed  in this\narray  will not be backed up . If this field is present the\n excludedNamespaces  field cannot be present. You must send the new full list of included namespaces, including any\nthat were already listed. If the new list adds any namespaces to the previous list, you must\nalso set the  syncSource  field, as the addition of an included\nnamespace necessitates a full resync. Without the  syncSource  field,\nthe request will fail. If the new list only removes namespaces from the previous list, you do\nnot need to set  syncSource .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/backupConfigs"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"totalCount\" : 3,\n  \"results\" : [ {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID1}\",\n    \"statusName\" : \"STARTED\",\n    \"storageEngineName\" : \"WIRED_TIGER\",\n    \"sslEnabled\" : false,\n    \"excludedNamespaces\" : [ ],\n    \"includedNamespaces\" : [ ],\n    \"links\" : [ ]\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID2}\",\n    \"statusName\" : \"STARTED\",\n    \"storageEngineName\" : \"MEMORY_MAPPED\",\n    \"sslEnabled\" : false,\n    \"excludedNamespaces\" : [ ],\n    \"includedNamespaces\" : [ ],\n    \"links\" : [ ]\n  }, {\n    \"groupId\" : \"{PROJECT-ID}\",\n    \"clusterId\" : \"{CLUSTER-ID3}\",\n    \"statusName\" : \"STOPPED\",\n    \"storageEngineName\" : \"WIRED_TIGER\",\n    \"sslEnabled\" : false,\n    \"excludedNamespaces\" : [ ],\n    \"includedNamespaces\" : [ ],\n    \"links\" : [ ]\n  } ],\n  \"links\" : [ ]\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/backup/update-one-snapshot-schedule-by-cluster-id",
            "title": "Update the Snapshot Schedule",
            "headings": [
                "Resource",
                "Request Parameters",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Parameter Type Necessity Description PROJECT-ID string Required Unique identifier for the project that holds the cluster with\nthe snapshot schedule you want to update. CLUSTER-ID string Required Unique indentifier of the cluster whose snapshot schedule\nyou want to update. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description clusterCheckpointIntervalMin number Optional Number of minutes between successive cluster checkpoints. This\nonly applies to sharded clusters. This number determines the\ngranularity of point-in-time restores for sharded clusters.\nYou can set a value of  15 ,  30 , or  60 . You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. clusterId string Optional Unique identifier of the cluster to which this backup\nconfiguration applies. dailySnapshotRetentionDays number Optional Number of days to retain daily snapshots. You can set a value\nbetween  1  and  365 , inclusive. Setting  dailySnapshotRetentionDays  to  0  disables this\nrule. fullIncrementalDayOfWeek string Optional Day of the week when  Cloud Manager  takes a full snapshot. This\nensures a recent complete backup.  Cloud Manager  sets the default\nvalue to a random weekday. groupId string Optional Unique identifier of the project that owns the backup\nconfiguration. links array of objects Optional One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . monthlySnapshotRetentionMonths number Optional Number of months to retain monthly snapshots. You can set a\nvalue between  1  and  36 , inclusive. Setting  monthlySnapshotRetentionMonths  to  0  disables this rule. snapshotIntervalHours number Optional Number of hours between snapshots. You can set a value of\n 6 ,  8 ,  12 , or  24 . snapshotRetentionDays number Optional Number of days to keep recent snapshots. You can set a value\nbetween  2  and  5 , inclusive. weeklySnapshotRetentionWeeks number Optional Number of weeks to retain weekly snapshots. You can set a value\nbetween  1  and  52 , inclusive. Setting  weeklySnapshotRetentionWeeks  to  0  disables\nthis rule. Name Type Description clusterCheckpointIntervalMin number Number of minutes between successive cluster checkpoints. This\nonly applies to sharded clusters. This number determines the\ngranularity of point-in-time restores for sharded clusters.\n Cloud Manager  may return values of  15 ,  30 , or  60 . You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. clusterId string Unique identifier of the cluster to which this backup\nconfiguration applies. dailySnapshotRetentionDays number Number of days to retain daily snapshots.  Cloud Manager  may return\nvalues between  1  and  365 , inclusive. Setting  dailySnapshotRetentionDays  to  0  disables this\nrule. fullIncrementalDayOfWeek string Day of the week when  Cloud Manager  takes a full snapshot. This\nensures a recent complete backup.  Cloud Manager  sets the default\nvalue to a random weekday. groupId string Unique identifier of the project that owns the backup\nconfiguration. links array of objects One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . monthlySnapshotRetentionMonths number Number of months to retain monthly snapshots.  Cloud Manager  may return\nvalues between  1  and  36 , inclusive. Setting  monthlySnapshotRetentionMonths  to  0  disables this rule. pointInTimeWindowHours number Number of hours in the past for which a point-in-time snapshot\ncan be created. You cannot change this value for a snapshot. snapshotIntervalHours number Number of hours between snapshots.  Cloud Manager  may return values of\n 6 ,  8 ,  12 , or  24 . snapshotRetentionDays number Number of days to keep recent snapshots.  Cloud Manager  may return values\nbetween  2  and  5 , inclusive. weeklySnapshotRetentionWeeks number Number of weeks to retain weekly snapshots.  Cloud Manager  may return\nvalues between  1  and  52 , inclusive. Setting  weeklySnapshotRetentionWeeks  to  0  disables\nthis rule.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/snapshotSchedule"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/backupConfigs/{CLUSTER-ID}/snapshotSchedule\" \\\n     --data '\n       {\n         \"fullIncrementalDayOfWeek\":\"TUESDAY\",\n         \"snapshotIntervalHours\": 8,\n         \"dailySnapshotRetentionDays\": 15,\n         \"monthlySnapshotRetentionMonths\": 6\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"clusterId\" : \"{CLUSTER-ID}\",\n  \"dailySnapshotRetentionDays\" : 15,\n  \"fullIncrementalDayOfWeek\":\"TUESDAY\",\n  \"groupId\" : \"{PROJECT-ID}\",\n  \"links\" : [],\n  \"monthlySnapshotRetentionMonths\" : 6,\n  \"pointInTimeWindowHours\": 24,\n  \"snapshotIntervalHours\" : 8,\n  \"snapshotRetentionDays\" : 2,\n  \"weeklySnapshotRetentionWeeks\" : 4\n}"
                }
            ],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/events/get-one-event-for-project",
            "title": "Get One Project Event",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Your API Key must have the  Project Read Only  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description groupId string Unique identifier of the project associated with the\ndesired event. eventId string Unique identifier of the desired event. The following query parameters are optional: Query Parameter Type Description Default pretty boolean Displays response in a  prettyprint  format. false envelope boolean Specifies whether or not to wrap the response in an  envelope . false includeRaw boolean Specifies whether to include the  raw  document in the output.\nThe  raw  document contains additional meta information about\nthe event. The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. false This endpoint doesn't use HTTP request body parameters. Name Type Description alertId string Unique identifier for the alert associated with this event. alertConfigId string Unique identifier for the alert configuration associated with\nthe  alertId . apiKeyId string Unique identifier for the  API Key \nthat triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  userId  field. clusterId string ID of the cluster to which this event applies. clusterName string Name of the cluster to which this event applies. collection string Name of the collection on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this event was triggered. currentValue object Current value of the metric that triggered this event. number Value of the metric. string Relevant units for the value. Accepted values are: A metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS database string Name of the database on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . eventTypeName string Name of the circumstance that triggered this event. To review the types of events that generate alerts, see\n Alert Types . groupId string ID of the project in which this event occurred. hostId string ID of the host on which this event occurred. hostname string Hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address of the host\non which this event occurred. id string Unique identifier for this event. invoiceId string Unique identifier of the invoice associated with this event. isGlobalAdmin boolean Flag indicating whether the user who triggered this event is a\nMongoDB employee. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the threshold. For possible values, see below. opType string Type of operation that generated the event. This field is\npresent when the  eventTypeName  is either  DATA_EXPLORER \nor  DATA_EXPLORER_CRUD . paymentId string Unique identifier of the invoice payment associated with this\nevent. port integer Port of the host associated with this event. publicKey string Public key associated with the\n API Key  that triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  username  field. raw document Additional meta information about the event. This field only\nappears when the  includeRaw  query parameter is  true . The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. remoteAddress string IP address associated with the  Cloud Manager  user (userId) who\ntriggered the event. replicaSetName string Name of the replica set. shardName string The name of the shard associated with the event. targetPublicKey string Public key of the API Key targeted by the event. targetUsername string Username for the  Cloud Manager  user targeted by this event. teamId string Unique identifier for the  Cloud Manager  team associated with this event. userId string Unique identifier for the  Cloud Manager  user who triggered this\nevent. If this field is present in the response,  Cloud Manager  does not\nreturn the  apiKeyId  field. username string Username for the  Cloud Manager  user who triggered this event. If this field is present in the response,  Cloud Manager  does not return\n publicKey  field. accessListEntry string Access list entry of the API Key targeted by the event.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{groupId}/events/{eventId}"
                },
                {
                    "lang": "console",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events/{eventId}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"created\" : \"2020-07-13T21:28:37Z\",\n  \"diffs\" : [ {\n    \"id\" : \"admin@admin\",\n    \"name\" : null,\n    \"params\" : [ {\n      \"display\" : \"Added Privilege\",\n      \"new\" : \"config.system.sessions: moveChunk\",\n      \"old\" : null,\n      \"param\" : \"config.system.sessions: moveChunk\"\n    }, {\n      \"display\" : \"Added Privilege\",\n      \"new\" : \"config.system.sessions: splitChunk\",\n      \"old\" : null,\n      \"param\" : \"config.system.sessions: splitChunk\"\n    }, {\n      \"display\" : \"Added Privilege\",\n      \"new\" : \"config.system.sessions: splitVector\",\n      \"old\" : null,\n      \"param\" : \"config.system.sessions: splitVector\"\n    } ],\n    \"priviileges\" : [ {\n      \"actions\" : [ \"moveChunk\" ],\n      \"resource\" : {\n        \"collection\" : \"system.sessions\",\n        \"db\" : \"config\"\n      }\n    }, {\n      \"actions\" : [ \"moveChunk\" ],\n      \"resource\" : {\n        \"collection\" : \"\",\n        \"db\" : \"\"\n      }\n    }, {\n      \"actions\" : [ \"enableSharding\" ],\n      \"resource\" : {\n        \"cluster\" : true\n      }\n    }, {\n      \"actions\" : [ \"cleanupOrphaned\" ],\n      \"resource\" : {\n        \"cluster\" : true\n      }\n    }, {\n      \"actions\" : [ \"flushRouterConfig\" ],\n      \"resource\" : {\n        \"cluster\" : true\n      }\n    }, {\n      \"actions\" : [ \"splitChunk\" ],\n      \"resource\" : {\n        \"collection\" : \"system.sessions\",\n        \"db\" : \"config\"\n      }\n    }, {\n      \"actions\" : [ \"splitChunk\" ],\n      \"resource\" : {\n        \"collection\" : \"\",\n        \"db\" : \"\"\n      }\n    }, {\n      \"actions\" : [ \"splitVector\" ],\n      \"resource\" : {\n        \"collection\" : \"system.sessions\",\n        \"db\" : \"config\"\n      }\n    }, {\n      \"actions\" : [ \"viewRole\" ],\n      \"resource\" : {\n        \"collection\" : \"\",\n        \"db\" : \"\"\n      }\n    } ],\n    \"roles\" : [ {\n      \"db\" : \"admin\",\n      \"role\" : \"readWriteAnyDatabase\"\n    }, {\n      \"db\" : \"admin\",\n      \"role\" : \"dbAdminAnyDatabase\"\n    }, {\n      \"db\" : \"admin\",\n      \"role\" : \"enableSharding\"\n    }, {\n      \"db\" : \"admin\",\n      \"role\" : \"backup\"\n    }, {\n      \"db\" : \"admin\",\n      \"role\" : \"clusterMonitor\"\n    } ],\n    \"status\" : \"MODIFIED\",\n    \"type\" : \"ROLES\"\n  }\n}"
                }
            ],
            "preview": "Your API Key must have the Project Read Only role to\nsuccessfully call this resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/events/get-one-event-for-org",
            "title": "Get One Organization Event",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Your API Key must have the  Organization Member  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description orgId string Unique identifier of the organization associated with the\ndesired event. eventId string Unique identifier of the desired event. The following query parameters are optional: Query Parameter Type Description Default pretty boolean Displays response in a  prettyprint  format. false envelope boolean Specifies whether or not to wrap the response in an  envelope . false includeRaw boolean Specifies whether to include the  raw  document in the output.\nThe  raw  document contains additional meta information about\nthe event. The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. false This endpoint doesn't use HTTP request body parameters. Name Type Description alertId string Unique identifier for the alert associated with this event. alertConfigId string Unique identifier for the alert configuration associated with\nthe  alertId . apiKeyId string Unique identifier for the  API Key \nthat triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  userId  field. clusterId string ID of the cluster to which this event applies. clusterName string Name of the cluster to which this event applies. collection string Name of the collection on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this event was triggered. currentValue object Current value of the metric that triggered this event. number Value of the metric. string Relevant units for the value. Accepted values are: A metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS database string Name of the database on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . eventTypeName string Name of the circumstance that triggered this event. To review the types of events that generate alerts, see\n Alert Types . groupId string ID of the project in which this event occurred. hostId string ID of the host on which this event occurred. hostname string Hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address of the host\non which this event occurred. id string Unique identifier for this event. invoiceId string Unique identifier of the invoice associated with this event. isGlobalAdmin boolean Flag indicating whether the user who triggered this event is a\nMongoDB employee. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the threshold. For possible values, see below. opType string Type of operation that generated the event. This field is\npresent when the  eventTypeName  is either  DATA_EXPLORER \nor  DATA_EXPLORER_CRUD . paymentId string Unique identifier of the invoice payment associated with this\nevent. port integer Port of the host associated with this event. publicKey string Public key associated with the\n API Key  that triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  username  field. raw document Additional meta information about the event. This field only\nappears when the  includeRaw  query parameter is  true . The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. remoteAddress string IP address associated with the  Cloud Manager  user (userId) who\ntriggered the event. replicaSetName string Name of the replica set. shardName string The name of the shard associated with the event. targetPublicKey string Public key of the API Key targeted by the event. targetUsername string Username for the  Cloud Manager  user targeted by this event. teamId string Unique identifier for the  Cloud Manager  team associated with this event. userId string Unique identifier for the  Cloud Manager  user who triggered this\nevent. If this field is present in the response,  Cloud Manager  does not\nreturn the  apiKeyId  field. username string Username for the  Cloud Manager  user who triggered this event. If this field is present in the response,  Cloud Manager  does not return\n publicKey  field. accessListEntry string Access list entry of the API Key targeted by the event.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{orgId}/events/{eventId}"
                },
                {
                    "lang": "console",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{orgId}/events/{eventId}?pretty=true\" \\"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertConfigId\": \"{alertConfigId}\",\n  \"alertId\": \"{alertId}\",\n  \"clusterId\": \"{clusterId}\",\n  \"clusterName\": \"Test Cluster\",\n  \"created\": \"2018-06-11T12:34:56Z\",\n  \"currentValue\": {\n    \"number\": 50,\n    \"units\": \"RAW\"\n  },\n  \"eventTypeName\": \"OUTSIDE_METRIC_THRESHOLD\",\n  \"groupId\": \"{groupId}\",\n  \"hostId\": \"{hostId}\",\n  \"hostname\": \"db.example.com\",\n  \"id\": \"{globalAlertId}\",\n  \"invoiceId\": \"{invoiceId}\",\n  \"isGlobalAdmin\": false,\n  \"maintenanceWindowId\": \"{maintenanceWindowId}\",\n  \"metricName\": \"OPCOUNTER_CMD\",\n  \"orgId\": \"{orgId}\",\n  \"paymentId\": \"{paymentId}\",\n  \"port\": 27017,\n  \"remoteAddress\": \"192.168.1.1\",\n  \"replicaSetName\": \"rs1\",\n  \"shardName\": \"sh1\",\n  \"userId\": \"{userId}\",\n  \"username\": \"john.doe@example.com\",\n  \"targetUsername\": \"jane.doe@example.com\",\n  \"teamId\": \"{teamId}\"\n}"
                }
            ],
            "preview": "Your API Key must have the Organization Member role to\nsuccessfully call this resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/events/get-all-events-for-org",
            "title": "Get All Organization Events",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Your API Key must have the  Organization Member  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 This endpoint doesn't use HTTP request path parameters. This endpoint accepts the following query parameters to filter\nreturned events: Name Type Description Default eventType string Return only events of the specified types. To review the types of events that generate alerts, see\n Alert Types . includeRaw boolean Specifies whether to include the  raw  document in the output.\nThe  raw  document contains additional meta information about\nthe event. The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. false minDate string Return only events for which the created date is greater than\nor equal to the specified  Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time) . maxDate string Return only events for which the created date is less than or\nequal to the specified  Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time) . This endpoint also accepts the query parameters common to all endpoints\nthat return lists of values: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Each  result  is one event. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description alertId string Unique identifier for the alert associated with this event. alertConfigId string Unique identifier for the alert configuration associated with\nthe  alertId . apiKeyId string Unique identifier for the  API Key \nthat triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  userId  field. clusterId string ID of the cluster to which this event applies. clusterName string Name of the cluster to which this event applies. collection string Name of the collection on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this event was triggered. currentValue object Current value of the metric that triggered this event. number Value of the metric. string Relevant units for the value. Accepted values are: A metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS database string Name of the database on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . eventTypeName string Name of the circumstance that triggered this event. To review the types of events that generate alerts, see\n Alert Types . groupId string ID of the project in which this event occurred. hostId string ID of the host on which this event occurred. hostname string Hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address of the host\non which this event occurred. id string Unique identifier for this event. invoiceId string Unique identifier of the invoice associated with this event. isGlobalAdmin boolean Flag indicating whether the user who triggered this event is a\nMongoDB employee. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the threshold. For possible values, see below. opType string Type of operation that generated the event. This field is\npresent when the  eventTypeName  is either  DATA_EXPLORER \nor  DATA_EXPLORER_CRUD . paymentId string Unique identifier of the invoice payment associated with this\nevent. port integer Port of the host associated with this event. publicKey string Public key associated with the\n API Key  that triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  username  field. raw document Additional meta information about the event. This field only\nappears when the  includeRaw  query parameter is  true . The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. remoteAddress string IP address associated with the  Cloud Manager  user (userId) who\ntriggered the event. replicaSetName string Name of the replica set. shardName string The name of the shard associated with the event. targetPublicKey string Public key of the API Key targeted by the event. targetUsername string Username for the  Cloud Manager  user targeted by this event. teamId string Unique identifier for the  Cloud Manager  team associated with this event. userId string Unique identifier for the  Cloud Manager  user who triggered this\nevent. If this field is present in the response,  Cloud Manager  does not\nreturn the  apiKeyId  field. username string Username for the  Cloud Manager  user who triggered this event. If this field is present in the response,  Cloud Manager  does not return\n publicKey  field. accessListEntry string Access list entry of the API Key targeted by the event.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{orgId}/events"
                },
                {
                    "lang": "console",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{orgId}/events?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertConfigId\": \"{alertConfigId}\",\n  \"alertId\": \"{alertId}\",\n  \"clusterId\": \"{clusterId}\",\n  \"clusterName\": \"Test Cluster\",\n  \"created\": \"2018-06-11T12:34:56Z\",\n  \"currentValue\": {\n    \"number\": 50,\n    \"units\": \"RAW\"\n  },\n  \"eventTypeName\": \"OUTSIDE_METRIC_THRESHOLD\",\n  \"groupId\": \"{groupId}\",\n  \"hostId\": \"{hostId}\",\n  \"hostname\": \"db.example.com\",\n  \"id\": \"{globalAlertId}\",\n  \"invoiceId\": \"{invoiceId}\",\n  \"isGlobalAdmin\": false,\n  \"maintenanceWindowId\": \"{maintenanceWindowId}\",\n  \"metricName\": \"OPCOUNTER_CMD\",\n  \"orgId\": \"{orgId}\",\n  \"paymentId\": \"{paymentId}\",\n  \"port\": 27017,\n  \"remoteAddress\": \"192.168.1.1\",\n  \"replicaSetName\": \"rs1\",\n  \"shardName\": \"sh1\",\n  \"userId\": \"{userId}\",\n  \"username\": \"john.doe@example.com\",\n  \"targetUsername\": \"jane.doe@example.com\",\n  \"teamId\": \"{teamId}\"\n}"
                }
            ],
            "preview": "Your API Key must have the Organization Member role to\nsuccessfully call this resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/events/get-all-events-for-project",
            "title": "Get All Project Events",
            "headings": [
                "Required Roles",
                "Request",
                "Request Path Parameters",
                "Request Query Parameters",
                "Unique Query Parameters",
                "Common Query Parameters",
                "Request Body Parameters",
                "Response",
                "Response Document",
                "results Embedded Document",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Your API Key must have the  Project Read Only  role to\nsuccessfully call this resource. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Description groupId string Unique identifier of the project associated with the\ndesired event. This endpoint accepts the following query parameters to filter\nreturned events: Name Type Description Default eventType string Return only events of the specified types. To review the types of events that generate alerts, see\n Alert Types . includeRaw boolean Specifies whether to include the  raw  document in the output.\nThe  raw  document contains additional meta information about\nthe event. The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. false minDate string Return only events for which the created date is greater than\nor equal to the specified  Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time) . maxDate string Return only events for which the created date is less than or\nequal to the specified  Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time) . This endpoint also accepts the query parameters common to all endpoints\nthat return lists of values: Name Type Description Default pageNum integer Page number (1-index based). 1 itemsPerPage integer Number of items to return per page, up to a maximum of 500. 100 pretty boolean Indicates whether the response body should be in a\n prettyprint  format. false envelope boolean Indicates whether or not to wrap the response in an envelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  \"envelope\" : true  in the\nquery. For endpoints that return one result, response body\nincludes: For endpoints that return a list of results, the  results \nobject is an envelope.  Cloud Manager  adds the  status  field to the\nresponse body. status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body None This endpoint doesn't use HTTP request body parameters. Each  result  is one event. The response  JSON (Javascript Object Notation)  document includes an array of  result \nobjects, an array of  link  objects and a count of the total\nnumber of  result  objects retrieved. Name Type Description results array Array includes one object for each item detailed in the\n results  Embedded Document  section. links array Array includes one or more links to sub-resources\nand/or related resources. The relations between  URL (Uniform Resource Locator) s are\nexplained in the  Web Linking Specification . totalCount number Integer count of the total number of items in the result set. It\nmay be greater than the number of objects in the\n results  array if the entire result set is paginated. Name Type Description alertId string Unique identifier for the alert associated with this event. alertConfigId string Unique identifier for the alert configuration associated with\nthe  alertId . apiKeyId string Unique identifier for the  API Key \nthat triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  userId  field. clusterId string ID of the cluster to which this event applies. clusterName string Name of the cluster to which this event applies. collection string Name of the collection on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . created string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when this event was triggered. currentValue object Current value of the metric that triggered this event. number Value of the metric. string Relevant units for the value. Accepted values are: A metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS database string Name of the database on which the event occurred. This field\ncan be present when the  eventTypeName  is either\n DATA_EXPLORER  or  DATA_EXPLORER_CRUD . eventTypeName string Name of the circumstance that triggered this event. To review the types of events that generate alerts, see\n Alert Types . groupId string ID of the project in which this event occurred. hostId string ID of the host on which this event occurred. hostname string Hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address of the host\non which this event occurred. id string Unique identifier for this event. invoiceId string Unique identifier of the invoice associated with this event. isGlobalAdmin boolean Flag indicating whether the user who triggered this event is a\nMongoDB employee. links object array One or more links to sub-resources and/or related resources. All\n links  arrays in responses include at least one link called\n self . The relationships between  URL (Uniform Resource Locator) s are explained in the\n Web Linking Specification . metricName string Name of the measurement whose value went outside the threshold. For possible values, see below. opType string Type of operation that generated the event. This field is\npresent when the  eventTypeName  is either  DATA_EXPLORER \nor  DATA_EXPLORER_CRUD . paymentId string Unique identifier of the invoice payment associated with this\nevent. port integer Port of the host associated with this event. publicKey string Public key associated with the\n API Key  that triggered this event. If this field is present in the response,  Cloud Manager  does not return\nthe  username  field. raw document Additional meta information about the event. This field only\nappears when the  includeRaw  query parameter is  true . The values in the  raw  document are subject to change. Do\nnot rely on  raw  values for formal monitoring. remoteAddress string IP address associated with the  Cloud Manager  user (userId) who\ntriggered the event. replicaSetName string Name of the replica set. shardName string The name of the shard associated with the event. targetPublicKey string Public key of the API Key targeted by the event. targetUsername string Username for the  Cloud Manager  user targeted by this event. teamId string Unique identifier for the  Cloud Manager  team associated with this event. userId string Unique identifier for the  Cloud Manager  user who triggered this\nevent. If this field is present in the response,  Cloud Manager  does not\nreturn the  apiKeyId  field. username string Username for the  Cloud Manager  user who triggered this event. If this field is present in the response,  Cloud Manager  does not return\n publicKey  field. accessListEntry string Access list entry of the API Key targeted by the event.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{groupId}/events"
                },
                {
                    "lang": "console",
                    "value": "curl --user \"{publicKey}:{privateKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events?pretty=true&pageNum=1&itemsPerPage=100\",\n    \"rel\" : \"self\"\n  }, {\n    \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events?pretty=true&itemsPerPage=100&pageNum=2\",\n    \"rel\" : \"next\"\n  } ],\n  \"results\" : [ {\n    \"created\" : \"2020-07-13T21:28:37Z\",\n    \"diffs\" : [ {\n      \"id\" : \"admin@admin\",\n      \"name\" : null,\n      \"params\" : [ {\n        \"display\" : \"Added Privilege\",\n        \"new\" : \"config.system.sessions: moveChunk\",\n        \"old\" : null,\n        \"param\" : \"config.system.sessions: moveChunk\"\n      }, {\n        \"display\" : \"Added Privilege\",\n        \"new\" : \"config.system.sessions: splitChunk\",\n        \"old\" : null,\n        \"param\" : \"config.system.sessions: splitChunk\"\n      }, {\n        \"display\" : \"Added Privilege\",\n        \"new\" : \"config.system.sessions: splitVector\",\n        \"old\" : null,\n        \"param\" : \"config.system.sessions: splitVector\"\n      } ],\n      \"priviileges\" : [ {\n        \"actions\" : [ \"moveChunk\" ],\n        \"resource\" : {\n          \"collection\" : \"system.sessions\",\n          \"db\" : \"config\"\n        }\n      }, {\n        \"actions\" : [ \"moveChunk\" ],\n        \"resource\" : {\n          \"collection\" : \"\",\n          \"db\" : \"\"\n        }\n      }, {\n        \"actions\" : [ \"enableSharding\" ],\n        \"resource\" : {\n          \"cluster\" : true\n        }\n      }, {\n        \"actions\" : [ \"cleanupOrphaned\" ],\n        \"resource\" : {\n          \"cluster\" : true\n        }\n      }, {\n        \"actions\" : [ \"flushRouterConfig\" ],\n        \"resource\" : {\n          \"cluster\" : true\n        }\n      }, {\n        \"actions\" : [ \"splitChunk\" ],\n        \"resource\" : {\n          \"collection\" : \"system.sessions\",\n          \"db\" : \"config\"\n        }\n      }, {\n        \"actions\" : [ \"splitChunk\" ],\n        \"resource\" : {\n          \"collection\" : \"\",\n          \"db\" : \"\"\n        }\n      }, {\n        \"actions\" : [ \"splitVector\" ],\n        \"resource\" : {\n          \"collection\" : \"system.sessions\",\n          \"db\" : \"config\"\n        }\n      }, {\n        \"actions\" : [ \"viewRole\" ],\n        \"resource\" : {\n          \"collection\" : \"\",\n          \"db\" : \"\"\n        }\n      } ],\n      \"roles\" : [ {\n        \"db\" : \"admin\",\n        \"role\" : \"readWriteAnyDatabase\"\n      }, {\n        \"db\" : \"admin\",\n        \"role\" : \"dbAdminAnyDatabase\"\n      }, {\n        \"db\" : \"admin\",\n        \"role\" : \"enableSharding\"\n      }, {\n        \"db\" : \"admin\",\n        \"role\" : \"backup\"\n      }, {\n        \"db\" : \"admin\",\n        \"role\" : \"clusterMonitor\"\n      } ],\n      \"status\" : \"MODIFIED\",\n      \"type\" : \"ROLES\"\n    }, {\n      \"id\" : \"sample-dataset-load@admin\",\n      \"name\" : null,\n      \"params\" : [ ],\n      \"priviileges\" : null,\n      \"roles\" : [ {\n         \"db\" : \"admin\",\n         \"role\" : \"readWriteAnyDatabase\"\n      } ],\n      \"status\" : \"NEW\",\n      \"type\" : \"USERS\"\n    }, {\n      \"id\" : \"10.16.0.6482-1\",\n      \"name\" : null,\n      \"params\" : [ {\n        \"display\" : \"Version\",\n        \"new\" : \"10.16.0.6482-1\",\n        \"old\" : \"10.12.0.6179-1\",\n        \"param\" : \"version\"\n      } ],\n      \"status\" : \"MODIFIED\",\n      \"type\" : \"AUTOMATION_AGENT\"\n    } ],\n    \"eventTypeName\" : \"AUTOMATION_CONFIG_PUBLISHED_AUDIT\",\n    \"groupId\" : \"{groupId}\",\n    \"id\" : \"{eventId}\",\n    \"isGlobalAdmin\" : false,\n    \"links\" : [ {\n      \"href\" : \"https://cloud.mongodb.com/api/public/v1.0/groups/{groupId}/events/{eventId}\",\n      \"rel\" : \"self\"\n    } ]\n  }],\n  \"totalCount\" : 1\n}"
                }
            ],
            "preview": "Your API Key must have the Project Read Only role to\nsuccessfully call this resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/update-agent-versions",
            "title": "Update Agent Versions",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This endpoint updates the MongoDB Agent and tools to the latest\nversions available at the time of the request: After this request completes,  Cloud Manager  modifies the agent configuration\nand saves the updated version. MongoDB Agent BI Connector MongoDB Database Tools This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier of the  group  that owns the automation\nconfiguration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Necessity Description automationAgentVersion string Optional Version to which you want to update the MongoDB Agent. biConnectorVersion string Optional Version to which you want to update the  BI Connector . mongoDbToolsVersion string Optional Version to which you want to update the\n MongoDB Database Tools Parameter Type Description automationAgentVersion string Version of the MongoDB Agent in the specified project. backupAgentVersion string Version of the Backup Agent in the specified project.  Cloud Manager  has\nremoved the Backup Agent, so this parameter should return\n null . biConnectorVersion string Version of the  MongoDB Connector for BI  in the specified project. mongoDbToolsVersion string Version of the MongoDB Database Tools in the specified project. monitoringAgentVersion string Version of the Monitoring Agent in the specified project.  Cloud Manager \nhas removed the Monitoring Agent, so this parameter should\nreturn  null .",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{PROJECT-ID}/automationConfig/updateAgentVersions"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicApiKey}:{privateApiKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig/updateAgentVersions?pretty=true\" \\\n     --data '{\n       \"automationAgentVersion\": \"11.11.0.7355\"\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"automationAgentVersion\": \"11.11.0.7355\",\n  \"backupAgentVersion\" : null,\n  \"biConnectorVersion\" : \"2.14.0\",\n  \"mongoDbToolsVersion\" : null,\n  \"monitoringAgentVersion\" : null\n}"
                }
            ],
            "preview": "This endpoint updates the MongoDB Agent and tools to the latest\nversions available at the time of the request:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/automation-config-parameters",
            "title": "Automation Configuration Parameters",
            "headings": [
                "Configuration Version",
                "Download Base",
                "MongoDB Versions Specifications",
                "Automation",
                "MongoDB Processes",
                "Cluster Wide",
                "Replica Sets",
                "Sharded Clusters",
                "Cluster Balancer",
                "Authentication",
                "LDAP",
                "TLS (Transport Layer Security)",
                "MongoDB Roles",
                "Kerberos",
                "Indexes"
            ],
            "paragraphs": "This page describes the parameters that comprise the automation\nconfiguration. To review additional examples, see\n mms-api-examples . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. This lists the version of the automation configuration. Name Type Necessity Description version integer Required Revision of this automation configuration file. Cloud Manager  downloads automatic versions and runs starting scripts in the directory set in  options.downloadBase . Name Type Necessity Description options object Required Path for automatic downloads of new versions. options.downloadBase string Required Directory on Linux and UNIX platforms for\nautomatic version downloads and startup scripts. The  mongoDbVersions[n]  array defines specification objects for\nthe MongoDB instances found in the  processes  array. Each\nMongoDB instance in the  processes  array must have a\nspecification object in this array. Name Type Necessity Description mongoDbVersions[n] array of objects Required Specification objects for the MongoDB instances found in the\n processes  array. Each MongoDB instance in  processes  must\nhave a specification object in  mongoDbVersions[n] . mongoDbVersions[n].name string Required Name of the specification object. The specification object is\nattached to a MongoDB instance through the instance's\n processes.version  parameter in this configuration. mongoDbVersions[n].builds[k] array of objects Required Builds available for this MongoDB instance. mongoDbVersions[n].builds[k].platform string Required Platform for this MongoDB instance. mongoDbVersions[n].builds[k].url string Required URL (Uniform Resource Locator)  from which to download MongoDB for this instance. mongoDbVersions[n].builds[k].gitVersion string Required Commit identifier that identifies the state of the code used\nto build the MongoDB process. The MongoDB  buildInfo  command returns the gitVersion\nidentifier. mongoDbVersions[n].builds[k].modules array Required List of modules for this version. Corresponds to the  modules \nparameter that the  buildInfo  command returns. mongoDbVersions[n].builds[k].architecture string Required Processor's architecture.  Cloud Manager  accepts  amd64  or\n ppc64le . mongoDbVersions[n].builds[k].bits integer Deprecated Processor's bus width. Don't remove or make modifications to\nthis parameter. mongoDbVersions[n].builds[k].win2008plus Boolean Optional Set to  true  if this is a Windows build that requires either\nWindows 7 later or Windows Server 2008 R2 or later. mongoDbVersions[n].builds[k].winVCRedistUrl string Optional URL (Uniform Resource Locator)  from which the required version of the Microsoft Visual\nC++ redistributable can be downloaded. mongoDbVersions[n].builds[k].winVCRedistOptions array of strings Optional String values that list the command-line options to be specified\nwhen running the Microsoft Visual C++ redistributable installer.\nEach command-line option is a separate string in the array. mongoDbVersions[n].builds[k].winVCRedistDll string Optional Name of the Microsoft Visual C++ runtime DLL file that the agent\nchecks to determine if a new version of the Microsoft Visual C++\nredistributable is needed. mongoDbVersions[n].builds[k].winVCRedistVersion string Optional Minimum version of the Microsoft Visual C++ runtime DLL that\nmust be present to skip over the installation of the Microsoft\nVisual C++ redistributable. agentVersion  specifies the version of the MongoDB Agent. While you can update the MongoDB Agent version through this\nconfiguration property, you should use the\n Update Agent Versions \nendpoint to ensure your versions are up to date. Name Type Necessity Description agentVersion object Optional Version of the MongoDB Agent to run. If the running version\ndoes not match this setting, the MongoDB Agent downloads the\nspecified version, shuts itself down, and starts the new\nversion. agentVersion.name string Optional Desired version of the MongoDB Agent. agentVersion.directoryUrl string Optional URL (Uniform Resource Locator)  from which to download the MongoDB Agent. The  processes  array determines the configuration of your MongoDB\ninstances. Using this array, you can: Restore an instance. Start an  initial sync \nprocess on one or more MongoDB instances. Name Type Necessity Description processes array Required Contains objects that define the  mongos  and  mongod  instances\nthat  Cloud Manager  monitors. Each object defines a different instance. processes[n].args2_6 object Required MongoDB configuration object for MongoDB versions 2.6 and later. The  processes.args2_6  object accepts most MongoDB\nsettings and parameters for MongoDB versions 2.6 and later.\nTo learn more, see  MongoDB Settings and Automation Support . processes[n].alias string Optional Hostname alias (often a  DNS (Domain Name System)  CNAME) for the host on which the\nprocess runs. If an alias is specified, the MongoDB Agent prefers\nthis alias over the hostname specified in  processes.hostname \nwhen connecting to the host. You can also specify this alias in\n replicaSets.host  and  sharding.configServer . processes[n].authSchemaVersion integer Required Schema version of the user credentials for MongoDB database\nusers. This should match all other elements of the  processes \narray that belong to the same cluster. Cloud Manager  accepts  3  and  5  for this parameter. MongoDB 3.x and 4.x clusters default to  5 . MongoDB 2.6 clusters default to   3 . Upgrade to SCRAM-SHA-1 \nin the MongoDB 3.0 release notes. processes[n].backupRestoreUrl string Optional Delivery  URL (Uniform Resource Locator)  for the restore.  Cloud Manager  sets this when creating a\nrestore. To cancel an in-progress restore operation, set this\noption to  CANCEL . Automate Backup Restoration through the API . processes[n].cluster string Conditional Name of the sharded cluster. Set this value to the same value in\nthe  sharding.name  parameter in the  sharding  array for\nthe  mongos . Required  for a  mongos . Not needed  for a  mongod . defaultRWConcern.defaultReadConcern.level string Optional Consistency and isolation properties set for the data read from\nreplica sets and replica set shards.  MongoDB Atlas  accepts the following values: \"available\" \"local\" \"majority\" defaultRWConcern.defaultWriteConcern.j boolean Optional Flag that indicates whether the write acknowledgement must be\nwritten to the\n on-disk journal . defaultRWConcern.defaultWriteConcern.w string Optional Desired number of mongod instances that must acknowledge a write\noperation in a replica sets and replica set shards.  MongoDB Atlas  accepts the\n following values : Any number 0 or greater \"majority\" defaultRWConcern.defaultWriteConcern.wtimeout number Optional Desired time limit for the write concern \nexpressed in milliseconds. Set this value when you set\n defaultRWConcern.defaultWriteConcern.w  to a value greater\nthan  1 . processes[n].disabled Boolean Optional Flag that indicates if this process should be shut down. Set to\n true  to shut down the process. processes[n].featureCompatibilityVersion string Required Version of MongoDB with which this process has feature\ncompatibility. Changing this value can enable or disable certain\nfeatures that persist data incompatible with MongoDB versions\nearlier or later than the  featureCompatibilityVersion  you\nchoose. Cloud Manager  accepts  3.2 ,  3.6 ,  4.0  and\n 4.2  as parameter values. If you have an\nexisting deployment,  Cloud Manager  only accepts a\n featureCompatibilityVersion  equal to or one release older\nthan the MongoDB version you deployed. To learn which of\nthese parameter values is supported for each MongoDB version,\nand which features each of these values enable or disable,\nsee  setFeatureCompatibilityVersion  in the\nMongoDB Manual. Cloud Manager  sets this parameter to match the MongoDB version for new\ndeployments. Cloud Manager  doesn't automatically increment this parameter when you\nupgrade a host from one MongoDB version to the next. setFeatureCompatibilityVersion processes[n].hostname string Required Name of the host that serves this process. This defaults to\n localhost . processes[n].lastCompact string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last reclaimed free space on a\ncluster's disks. During certain operations, MongoDB might move\nor delete data but it doesn't free the currently unused space.  Cloud Manager \nreclaims the disk space in a rolling fashion across members of\nthe replica set or shards. To reclaim this space: To remove any ambiguity as to when you intend to reclaim the\nspace on the cluster's disks, specify a time zone with your\n ISO 8601  timestamp. For example, to set\n processes.lastCompact \nto 28 January 2021 at  2:43:52 PM US Central Standard Time, use\n \"processes.lastCompact\" : \"2021-01-28T14:43:52-06:00\" Immediately, set this value to the current time as an\n ISO 8601  timestamp. Later, set this value to a future  ISO 8601  timestamp.  Cloud Manager \nreclaims the space after the current time passes the provided\ntimestamp. processes[n].lastRestart string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last restarted this process. If you\nset this parameter to the current timestamp,  Cloud Manager  forces a\nrestart of this process after you upload this configuration.\nIf you set this parameter for multiple processes in the same\ncluster, the  Cloud Manager  restarts the selected processes in a rolling\nfashion across members of the replica set or shards. processes[n].lastResync string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  of the last\n initial sync \nprocess that  Cloud Manager  performed on the node. To trigger the init sync process on the node immediately, set\nthis value to the current time as an  ISO 8601  timestamp. If you set this parameter: Use this parameter with caution. During\n initial sync ,\nAutomation removes the entire contents of the node's\n dbPath  directory. On the secondary node, the MongoDB Agent checks whether the\nspecified timestamp is later than the time of the last resync,\nand if confirmed, starts init sync on this node. To set  processes.lastResync  on the secondary node to 28\nMay 2021 at 2:43:52 PM US CentralStandard Time, use: \"processes.lastResync\" : \"2021-05-28T14:43:52-06:00\" . If the MongoDB Agent confirms that this timestamp is later\nthan the recorded time of the last resync, it starts init\nsync on the node. On the primary node, the MongoDB Agent waits until you ask the\nprimary node to become the secondary with the\n rs.stepDown()  method, and then starts init sync on\nthis node. On all of the nodes in the same cluster, including the\nprimary, the MongoDB Agent checks whether the specified\ntimestamp is later than the time of the last resync, and if\nconfirmed, starts init sync on the secondary nodes in a\nrolling fashion. The MongoDB Agent waits until you ask the\nprimary node to become the secondary with the\n rs.stepDown()  method, and then starts init sync on\nthis node. Initial Sync processes[n].lastKmipMasterKeyRotation string Optional Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  last rotated the master  KMIP (Key Management Interoperability)  key. If\nyou set this parameter to the current timestamp,  Cloud Manager  rotate the key after you upload this configuration. processes[n].logRotate object Optional MongoDB configuration object for rotating the MongoDB logs of a\nprocess. processes[n].logRotate.\nnumTotal integer Optional Total number of log files that  Cloud Manager  retains. If you don't set\nthis value, the total number of log files defaults to  0 .\n Cloud Manager  bases rotation on your other  processes.logRotate \nsettings. processes[n].logRotate.\nnumUncompressed integer Optional Maximum number of total log files to leave uncompressed,\nincluding the current log file. The default is  5 . processes[n].logRotate.\npercentOfDiskspace number Optional Maximum percentage of total disk space that  Cloud Manager  can use to\nstore the log files expressed as decimal. If this limit is\nexceeded,  Cloud Manager  deletes compressed log files until it meets this\nlimit.  Cloud Manager  deletes the oldest log files first. The default is  0.02 . processes[n].logRotate.\nsizeThresholdMB number Required Maximum size in MB for an individual log file before  Cloud Manager \nrotates it.  Cloud Manager  rotates the log file immediately if it meets\nthe value given in either this  sizeThresholdMB  or the\n processes.logRotate.timeThresholdHrs  limit. processes[n].logRotate.\ntimeThresholdHrs integer Required Maximum duration in hours for an individual log file before the\nnext rotation. The time is since the last rotation. Cloud Manager  rotates the log file once the file meets either this\n timeThresholdHrs  or the\n processes.logRotate.sizeThresholdMB  limit. processes[n].manualMode Boolean Optional Flag that indicates if MongoDB Agent automates this process. This defaults to  false . Set to  true  to disable Automation on this process. The\nMongoDB Agent takes no further actions on this process. Set to  false  to enable Automation on this process. The\nMongoDB Agent automates actions on this process. processes[n].name string Required Unique name to identify the instance. processes[n].numCores integer Optional Number of cores that  Cloud Manager  should bind to this process. The\nMongoDB Agent distributes processes across the cores as evenly as\npossible. processes[n].processType string Required Type of MongoDB process being run.  Cloud Manager  accepts  mongod  or\n mongos  for this parameter. processes[n].version string Required Name of the  mongoDbVersions  specification used with this\ninstance. clusterWideConfigurations  specifies the parameters to set across a\nreplica set or sharded cluster without requiring a  rolling restart . Name Type Necessity Description replicaSetID/clusterName object Optional The change stream options to apply to the replica set or sharded\ncluster. MongoDB Agent only checks if this configuration is in a\nvalid  JSON (Javascript Object Notation)  format but doesn't check the values for correctness. changeStreamOptions.preAndPostImages.expireAfterSeconds number Required Retention policy of change stream pre- and post-images in\nseconds. If you omit the value, the cluster retains the\npre- and post-images until it removes the corresponding change\nstream events from the oplog. If you remove this value, MongoDB Agent only removes this\nparameter from its automation configuration, but not from the\nserver. changeStreamOptions . The  replicaSets  array defines each replica set's configuration.\nThis field is required for deployments with replica sets. Name Type Necessity Description replicaSets array Optional Configuration of each\n replica set . The MongoDB Agent uses the values in this\narray to create valid  replica set configuration\ndocuments . The agent\nregularly checks that replica sets are configured correctly.\nIf a problem occurs, the agent reconfigures the replica set\naccording to its configuration document. The array can\ncontain the following top-level fields from a replica set\nconfiguration document:  _id ;  version ; and\n members . replSetGetConfig replicaSets[n]._id string Required The name of the replica set. replicaSets[n].protocolVersion string Optional Protocol version \nof the replica set. replicaSets[n].members array Optional Objects that define each member of the replica set. The\n members.host  field must specify the host replSetGetConfig . replSetGetConfig . replicaSets[n].members[m]._id integer Optional Any positive integer that indicates the member of the replica\nset. replicaSets[n].members[m].host string Optional Hostname, and port number when applicable, that serves this\nreplica set member. replicaSets[n].members[m].arbiterOnly boolean Optional Flag that indicates whether this replica set member acts as an\narbiter. replicaSets[n].members[m].buildIndexes boolean Optional Flag that indicates whether the  mongod  process builds indexes\non this replica set member. replicaSets[n].members[m].hidden boolean Optional Flag that indicates whether the replica set allows this member to\naccept read operations. replicaSets[n].members[m].priority number Optional Relative eligibility for  Cloud Manager  to select this replica set member\nas a primary. Larger number increase eligibility. This value can\nbe between 0 and 1000, inclusive for data-bearing nodes.\nArbiters can have values of 0 or 1. replicaSets[n].members[m].tags object Optional List of user-defined labels and their values applied to this\nreplica set member. replicaSets[n].members[m].secondaryDelaySecs integer Optional Amount of time in seconds that this replica set memberr should\nlag behind the primary. replicaSets[n].members[m].votes number Optional Quantity of votes this replica set member can cast for a replica\nset election. All data bearing nodes can have 0 or 1 votes.\nArbiters always have 1 vote. replicaSets[n].force object Optional Instructions to the MongoDB Agent to force a replica set to use\nthe  Configuration Version  specified in\n replicaSets.force.CurrentVersion . With this object, the MongoDB Agent can force a replica set to\naccept a new configuration to recover from a state in which a\nminority of its members are available. replicaSets[n].force.currentVersion integer Optional Configuration Version  that the\nMongoDB Agent forces the replica set to use. Set to  -1  to\nforce a replica set to accept a new configuration. Forcing a replica set reconfiguration might lead to a\n rollback  of majority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have\nquestions about the potential impacts of this operation. The  sharding  array defines the configuration of each sharded\ncluster. This parameter is required for deployments with sharded\nclusters. Name Type Necessity Description sharding array of objects Optional Objects that define the configuration of each\n sharded cluster . Each object in the array contains the\nspecifications for one cluster. The MongoDB Agent regularly\nchecks each cluster's state against the specifications. If the\nspecification and cluster don't match, the agent will change the\nconfiguration of the cluster, which might cause the balancer to\nmigrate chunks. sharding.managedSharding boolean Conditional Flag that indicates whether  Cloud Manager  Automation manages all\n sharded collections \nand  tags  in the deployment sharding.name string Conditional Name of the cluster. This must correspond with the value in\n processes.cluster  for a  mongos . sharding.configServerReplica string Conditional Name of the  config server replica set . You can add this array parameter if your config server runs as a replica set. If you run legacy mirrored config servers that\ndon't run as a replica set, use  sharding.configServer . sharding.configServer array of strings Conditional Names of the config server hosts. The host names match the names\nused in each host's  processes.name  parameter. If your sharded cluster runs MongoDB 3.4 or later, use\n sharding.configServerReplica . sharding.collections array of objects Conditional Objects that define the sharded  collections \nand their  shard keys . sharding.collections._id string Conditional namespace  of the sharded collection. The namespace\nis the combination of the database name and the name of the\ncollection. For example,  testdb.testcoll . sharding.collections.key array of arrays Conditional Collection's  shard keys . It contains: One array if your cluster uses one shard key. Multiple arrays if your cluster uses a compound shard key. sharding.collections.unique boolean Conditional Flag that indicates whether MongoDB\n enforces uniqueness for the shard key . sharding.shards array of objects Conditional Cluster's  shards . sharding.shards._id string Conditional Name of the shard. sharding.shards.rs string Conditional Name of the shard's replica set. This is specified in the\n replicaSets._id  parameter. sharding.shards.tags array of strings Conditional Zones assigned to this shard. You can add this array parameter if you use\n zoned sharding . sharding.tags array of objects Conditional Definition of zones for\n zoned sharding . Each object in\nthis array defines a zone and configures the shard key range\nfor that zone. sharding.tags.ns string Conditional Namespace  of the collection that uses zoned\nsharding. The namespace combines the database name and the name\nof the collection. testdb.testcoll sharding.tags.min array Conditional Minimum value of the shard key range. Specify the field name, field type, and value in a document of the\nfollowing form. fieldType  must be one of the following: value  must be passed in as a string value. To use a compound shard key, specify each field in a separate document, as\nshown in the example after this table. For more information on shard keys, see\n Shard Keys  in the MongoDB manual. string integer long double decimal date timestamp oid minKey maxKey sharding.tags.max array Conditional Maximum value of the shard key range. Specify the field name, field type, and value in a document of the\nfollowing form. fieldType  must be one of the following: value  must be passed in as a string value. To use a compound shard key, specify each field in a separate document, as\nshown in the example after this table. For more information on shard keys, see\n Shard Keys  in the MongoDB manual. string integer long double decimal date timestamp oid minKey maxKey sharding.tags.tag string Conditional Name of the  zone  associated\nwith the shard key range specified by  sharding.tags.min  and\n sharding.tags.max . The following example configuration defines a compound shard key\nrange with a min value of  { a : 1, b : ab }  and a max value of\n { a : 100, b : fg } . The example defines the range on the\n testdb.test1  collection and assigns it to zone  zone1 . The  balancer  object is optional and defines balancer settings for each cluster. Name Type Necessity Description balancer object Optional Parameters named according to clusters, each parameter\ncontaining an object with the desired balancer settings for the\ncluster. The object uses the  stopped  and  activeWindow \nparameters, as described in the procedure to schedule the\nbalancing window in\n this tutorial \nin the MongoDB manual. Cloud Manager  doesn't require the  auth  object. This object defines\n authentication-related  settings. Name Type Necessity Description auth object Optional Defines  authentication-related \nsettings. If you omit this parameter, skip the rest of this section. auth.authoritativeSet boolean Conditional Sets whether or not  Cloud Manager  enforces a consistent set of managed\nMongoDB users and roles in all managed deployments in the\nproject. auth.authoritativeSet  defaults to  false . Required if  \"auth\" : true . If  \"auth.authoritativeSet\" : true , then  Cloud Manager \n enforces consistent users and roles . If  \"auth.authoritativeSet\" : false , then  Cloud Manager \n doesn't enforce consistent users and roles . auth.autoUser string Conditional Username that the Automation uses when connecting to an\ninstance. Required if  \"auth\" : true . auth.autoPwd string Conditional Password that the Automation uses when connecting to an\ninstance. Required if  \"auth\" : true . auth.disabled boolean Optional Flag indicating if auth is disabled. If not specified,\n disabled  defaults to  false . auth.deploymentAuthMechanisms array of strings Conditional Lists the supported authentication mechanisms for the processes\nin the deployment. Required if  \"auth\" : true . Specify: Value Authentication Mechanism MONGODB-CR SCRAM-SHA-1 SCRAM-SHA-256 SCRAM-SHA-256 MONGODB-X509 x.509 Client Certificate PLAIN LDAP GSSAPI Kerberos auth.autoAuthMechanisms array of strings Conditional Sets the authentication mechanism used by the Automation.\nIf not specified,  disabled  defaults to  false . Required if  \"auth\" : true . Specify: This parameter contains more than one element only when\nit's configured for both SCRAM-SHA-1 and SCRAM-SHA-256. Value Authentication Mechanism MONGODB-CR SCRAM-SHA-1 SCRAM-SHA-256 SCRAM-SHA-256 MONGODB-X509 x.509 Client Certificate PLAIN LDAP GSSAPI Kerberos auth.key string Conditional Contents of the key file that  Cloud Manager  uses to authenticate to the\nMongoDB processes. Required if  \"auth\" : true  and  \"auth.disabled\" : false . If you change the  auth.key  value, you must change the\n auth.keyfile  value. auth.keyfile string Conditional Path and name of the key file that  Cloud Manager  uses to authenticate to\nthe MongoDB processes. Required if  \"auth\" : true  and  \"auth.disabled\" : false . If you change the  auth.keyfile  value, you must change the\n auth.key  value. string Optional New password that the Automation uses when connecting to an\ninstance. To rotate passwords without losing the connection: Set  auth.newAutoPwd  and leave  auth.autoPwd  with its\ncurrent password. Wait for the goal state. auth.newAutoPwd  copies over the  auth.autoPwd \npassword automatically. You can set this option only when you include SCRAM-SHA-1\nor SCRAM-SHA-256 as one of the authentication\nmechanisms for the Automation in  auth.autoAuthMechanisms . auth.newKey string Optional Contents of a new key file that you want  Cloud Manager  to use to\nauthenticate to the MongoDB processes. When you set this option,  Cloud Manager  rotates the key that the\napplication uses to authenticate to the MongoDB processes in\nyour deployment. When all MongoDB Agents use the new key,  Cloud Manager \nreplaces the value of  auth.key  with the new key that you\nprovided in  auth.newKey  and removes  auth.newKey  from the\nautomation configuration. auth.usersDeleted array of objects Optional Objects that define the authenticated users to be deleted from\nspecified databases or from all databases. This array must\ncontain  auth.usersDeleted.user  and\n auth.usersDeleted.dbs . auth.usersDeleted[n].user string Optional Username of user that  Cloud Manager  should delete. auth.usersDeleted[n].dbs array of strings Optional List the names of the databases from which  Cloud Manager  should delete\nthe authenticated user. auth.usersWanted array of objects Optional Contains objects that define authenticated users to\nadd to specified databases. Each object must have the\n auth.usersWanted[n].db ,  auth.usersWanted[n].user , and\n auth.usersWanted[n].roles  parameters, and then have exactly one\nof the following parameters:  auth.usersWanted[n].pwd ,\n auth.usersWanted[n].initPwd , or\n auth.usersWanted[n].userSource . auth.usersWanted[n].db string Conditional Database to which to add the user. auth.usersWanted[n].user string Conditional Name of the user that  Cloud Manager  should add. auth.usersWanted[n].roles array Conditional List of the  roles  to be assigned to the user\nfrom the user's database, which is specified in\n auth.usersWanted[n].db . auth.usersWanted[n].pwd string Conditional 32-character hex  SCRAM-SHA-1  hash of the password\ncurrently assigned to the user. Cloud Manager  doesn't use this parameter to set or change a password. Required if: \"auth\" : true , \"auth.deploymentAuthMechanisms\" : \"MONGODB-CR\" , and \"auth.usersWanted[n].initPwd\"  is unset. auth.usersWanted[n].initPwd string Conditional Cleartext password that you want to assign to the user. Required if: \"auth\" : true , \"auth.deploymentAuthMechanisms\" : \"MONGODB-CR\" , and \"auth.usersWanted[n].pwd\"  is unset. auth.usersWanted[n].userSource string Deprecated No longer supported. auth.usersWanted[n].otherDBRoles object Optional If you assign the user's database  \"auth.usersWanted[n].db\" :\n\"admin\" , then you can use this object to assign the user roles\nfrom other databases as well. The object contains key-value\npairs where the key is the name of the database and the value is\nan array of string values that list the roles be assigned from\nthat database. auth.usersWanted[n].authenticationRestrictions array of documents Optional Authentication restrictions that the host enforces on the\nuser. If a user inherits multiple roles with incompatible authentications\nrestrictions, that user becomes unusable. For example, if a user\ninherits one role in which the  clientSource  field is  [198.51.100.0] \nand another role in which the  clientSource  field is  [203.0.113.0] ,\nthe server is unable to authenticate the user. For more information about authentication in MongoDB, see\n Authentication . auth.usersWanted[n].authenticationRestrictions[k].clientSource array of strings Conditional If present when authenticating a user, the host verifies that\nthe given list contains the client's IP address  CIDR (Classless Inter-Domain Routing)  range. If\nthe client's IP address is not present, the host does not\nauthenticate the user. auth.usersWanted[n].authenticationRestrictions[k].serverAddress array of strings Conditional Comma-separated array of IP addresses to which the client can\nconnect. If present, the host verifies that  Cloud Manager  accepted the\nclient's connection from an IP address in the given array. If\nthe connection was accepted from an unrecognized IP address, the\nhost doesn't authenticate the user. The  ldap  object enables  LDAP (Lightweight Directory Access Protocol)  authorization. This\nobject is optional. To learn more, see  Enable LDAP Authentication for your  Cloud Manager  Project . Name Type Necessity Description ldap object Optional Object that contains the settings to enable and configure  LDAP (Lightweight Directory Access Protocol) \nauthorization. ldap.servers string Conditional Comma-separated string that contains one or more  LDAP (Lightweight Directory Access Protocol)  servers\nin  <host>:<port>  format to execute queries against. You can\nuse  setParameter  to configure this setting on a running\nsystem. For  LDAP (Lightweight Directory Access Protocol)  authorization, you must specify this setting. ldap.timeoutMS long Optional Amount of time in milliseconds that MongoDB waits for an  LDAP (Lightweight Directory Access Protocol) \nserver to respond to a request before timing out. You can use\n setParameter  to configure this setting on a running system.\nBy default, MongoDB times out after ten seconds. ldap.bindMethod string Optional Human-readable string that indicates whether to use simple\nauthentication or an  SASL (Simple Authentication and Security Layer)  protocol to authenticate itself. You\ncan specify  simple  or  sasl . By default, MongoDB uses\nsimple authentication. ldap.bindSaslMechanisms string Optional String that contains a comma-separated list of  SASL (Simple Authentication and Security Layer)  mechanisms\nfor MongoDB to attempt authentication against the  LDAP (Lightweight Directory Access Protocol) \nserver while binding. By default, MongoDB uses  DIGEST-MD5  to\nbind. ldap.bindQueryUser string Conditional LDAP (Lightweight Directory Access Protocol)  entity domain name that MongoDB binds as when it connects\nto an  LDAP (Lightweight Directory Access Protocol)  server. You can use  setParameter  to configure\nthis setting on a running system. For MongoDB to bind with\nauthentication credentials, you must specify this setting. ldap.bindQueryPassword string Conditional Password that MongoDB binds with when it connects to an  LDAP (Lightweight Directory Access Protocol) \nserver. You can use  setParameter  to configure this setting\non a running system. For MongoDB to bind with a password, you\nmust specify this setting. ldap.userCacheInvalidationPeriod integer Optional Interval that MongoDB waits between user cache flushes. When the\nexternal user cache is flushed, the next operation that an\n LDAP (Lightweight Directory Access Protocol)  authorized user makes requires a reaquisition of roles.\nIf you specify a high value, you might decrease the load on\nyour  LDAP (Lightweight Directory Access Protocol)  servers and increase the amount of time needed to\nsynchronize MongoDB roles with  LDAP (Lightweight Directory Access Protocol)  group membership. By\ndefault, MongoDB waits 30 seconds between cache flushes. ldap.authzQueryTemplate string Conditional RFC 4516  formatted  URL (Uniform Resource Locator)  of the  LDAP (Lightweight Directory Access Protocol)  query to\nexecute to obtain  LDAP (Lightweight Directory Access Protocol)  groups relative to the  ldap.server \nsetting. In this  URL (Uniform Resource Locator) , the placeholder token string  {USER} \nis replaced with the acquired user domain name. You can use\n setParameter  to configure this setting on a running system.\nFor  LDAP (Lightweight Directory Access Protocol)  authorization, you must specify this setting. ldap.userToDNMapping array Optional JSON (Javascript Object Notation) -formatted array that contains the ordered transformations\nthat MongoDB applies to authenticate MongoDB user names to match\ntheir domain names. You can specify this setting if you use an\nalternate authentication method, or if the user name passed to\nMongoDB for authentication doesn't match the  LDAP (Lightweight Directory Access Protocol)  domain name.\nYou can use  setParameter  to configure this setting on a\nrunning system. By default, MongoDB uses user names as the\ndomain names for automatic  LDAP (Lightweight Directory Access Protocol)  authorization. The  tls  object enables  TLS (Transport Layer Security)  for encrypting connections. This\nobject is optional. Name Type Necessity Description tls object Optional Enables  TLS (Transport Layer Security)  for encrypting connections. To use  TLS (Transport Layer Security) , choose a\npackage that supports  TLS (Transport Layer Security) . All platforms that support\n MongoDB Enterprise  also support\n TLS (Transport Layer Security) . tls.CAFilePath string Conditional Absolute file path to the certificate used to authenticate\nthrough  TLS (Transport Layer Security) . Required if you set\n tls.clientCertificateMode . tls.clientCertificateMode string Conditional Declaration as to whether connections to  Cloud Manager  require a  TLS (Transport Layer Security) \ncertificate.  Cloud Manager  accepts  OPTIONAL  and  REQUIRE .\nRequired if you set  tls.CAFilePath . The  roles  array is optional and describes user-defined roles. Name Type Necessity Description roles array of objects Optional Roles and privileges that MongoDB has assigned to a cluster's\nuser-defined roles. Each object describes a different\nuser-defined role. Objects in this array contain the same fields\nas documents in the  system roles collection , except for the  _id \nfield. roles[n].role string Conditional Name of the user-defined role. roles[n].db string Conditional Database to which the user-defined role belongs. roles[n].privileges array of documents Conditional Privileges  this role can perform. roles[n].privileges[k].resource string Conditional Specifies the resources upon which the privilege  actions \napply. roles[n].privileges[k].actions string Conditional Actions permitted on the resource. Privilege Actions roles[n].roles array of documents Conditional Roles from which this role  inherits \nprivileges. roles[n].authenticationRestrictions array of documents Optional Authentication restrictions that the MongoDB server enforces on\nthis role. If a user inherits multiple roles with incompatible authentications\nrestrictions, that user becomes unusable. For example, if a user\ninherits one role in which the  clientSource  field is  [198.51.100.0] \nand another role in which the  clientSource  field is  [203.0.113.0] ,\nthe server is unable to authenticate the user. For more information about authentication in MongoDB, see\n Authentication . roles[n].authenticationRestrictions[k].clientSource array of strings Conditional If present, when authenticating a user, the MongoDB server\nverifies that the client's IP address is either in the given\nlist or belongs to a  CIDR (Classless Inter-Domain Routing)  range in the list. If the client's\nIP address is not present, the MongoDB server does not\nauthenticate the user. roles[n].authenticationRestrictions[k].serverAddress array of strings Conditional Comma-separated array of IP addresses to which the client can\nconnect. If present, the MongoDB server verifies that it\naccepted the client's connection from an IP address in the given\narray. If the MongoDB server accepts a connection from an\nunrecognized IP address, the MongoDB server does not\nauthenticate the user. The  kerberos  object is optional and defines a kerberos service name used in authentication. Name Type Necessity Description kerberos object Optional Key-value pair that defines the kerberos service name\nagents use to authenticate via kerberos. kerberos.serviceName string Required Label that sets: The service name that the agents use to authenticate to a\n mongod  or  mongos  via Kerberos. The  saslServiceName  option in the\n MongoDB Server Parameters . The  indexConfigs  array is optional and defines indexes to be built for specific replica sets. Name Type Necessity Description indexConfigs array of objects Optional Specific indexes to be built for specific replica sets. indexConfigs.key array of arrays Required Keys in the index. This \"array of arrays\" contains a single\narray if the index has just one key. indexConfigs.rsName string Required Replica set on which MongoDB builds the index. indexConfigs.dbName string Required Database that MongoDB indexes. indexConfigs.collectionName string Required Collection that MongoDB indexes. indexConfigs.collation object Optional Language-specific rules to use when sorting and matching\nstrings if the index uses\n collation . If you include the  indexConfigs.collation  object, you must\ninclude the  indexConfigs.collation.locale  parameter. All\nother parameters are optional. If you don't include the  indexConfigs.collation  object, the\nindex can't include collation. indexConfigs.collation.locale string Required Locale that the  ICU  defines. The MongoDB Server Manual lists the supported locales in its\n Collation Locales and Default Parameters section . To specify simple binary comparison, set this value to\n simple . indexConfigs.collation.caseLevel boolean Optional Flag that indicates how the index uses case comparison. If you set this parameter to  true , the index uses case\ncomparison. This parameter applies only if you set\n indexConfigs.collation.strength  to  1  or  2 . Collation indexConfigs.collation.caseFirst string Optional Sort order of case differences during tertiary level\ncomparisons. The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.strength number Optional Level of comparison to perform. Corresponds to\n ICU Comparison Levels . The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.numericOrdering boolean Optional Flag that indicates how to compare numeric strings. The default is  false . Value Collation Method Example true numeric strings compared as numbers 10  >  2 . false numeric strings compared as strings 10  <  2 . Collation indexConfigs.collation.alternate string Optional Setting that determines how collation should consider whitespace\nand punctuation as base characters during comparisons. The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.maxVariable string Optional Characters the index can ignore. This parameter applies only if\n indexConfigs.collation.alternate  is set to  shifted . The MongoDB Server Manual lists the possible values in its\n Collation section . indexConfigs.collation.normalization boolean Optional Flag that indicates if the text should be normalized. If you set this parameter to  true , collation: Checks if text requires  normalization . Performs normalization Collation Collation indexConfigs.collation.backwards boolean Optional Flag that indicates how the index should handle diacritic\nstrings. Collation indexConfigs.options document Required Index options that the  MongoDB Go Driver \nsupports.",
            "code": [
                {
                    "lang": "json",
                    "value": "\"version\" : \"<integer>\""
                },
                {
                    "lang": "json",
                    "value": "\"options\" : {\n  \"downloadBase\" : \"<string>\",\n}"
                },
                {
                    "lang": "json",
                    "value": "\"mongoDbVersions[n]\" : [\n  {\n   \"name\" : \"<string>\",\n    \"builds\" : [\n      {\n       \"platform\" : \"<string>\",\n        \"url\" : \"<string>\",\n        \"gitVersion\" : \"<string>\",\n        \"modules\" : [ \"<string>\", ... ],\n        \"architecture\" : \"<string>\",\n        \"bits\" : \"<integer>\",\n        \"win2008plus\" : \"<Boolean>\",\n        \"winVCRedistUrl\" : \"<string>\",\n        \"winVCRedistOptions\" : [ \"<string>\", ... ],\n        \"winVCRedistDll\" : \"<string>\",\n        \"winVCRedistVersion\" : \"<string>\"\n      },\n      ...\n    ],\n  },\n  ...\n]"
                },
                {
                    "lang": "json",
                    "value": "\"agentVersion\" : {\n  \"name\" : \"<string>\",\n  \"directoryUrl\" : \"<string>\"\n}"
                },
                {
                    "lang": "yaml",
                    "value": "\"processes\": [{\n  \"<args>\": {},\n  \"alias\": \"<string>\",\n  \"authSchemaVersion\": \"<integer>\",\n  \"backupRestoreUrl\": \"<string>\",\n  \"cluster\": \"<string>\",\n  \"defaultRWConcern\": {\n    \"defaultReadConcern\": {\n      \"level\": \"<string>\"\n    },\n    \"defaultWriteConcern\": {\n      \"j\": \"<boolean>\",\n      \"w\": \"<string>\",\n      \"wtimeout\": \"<integer>\"\n    }\n  }\n  \"disabled\": \"<Boolean>\",\n  \"featureCompatibilityVersion\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"lastCompact\" : \"<dateInIso8601Format>\",\n  \"lastRestart\" : \"<dateInIso8601Format>\",\n  \"lastResync\" : \"<dateInIso8601Format>\",\n  \"lastKmipMasterKeyRotation\" : \"<dateInIso8601Format>\",\n  \"logRotate\": {\n    \"sizeThresholdMB\": \"<number>\",\n    \"timeThresholdHrs\": \"<integer>\",\n    \"numUncompressed\": \"<integer>\",\n    \"percentOfDiskspace\": \"<number>\",\n    \"numTotal\": \"<integer>\"\n  },\n  \"manualMode\": \"<Boolean>\",\n  \"name\": \"<string>\",\n  \"numCores\": \"<integer>\",\n  \"processType\": \"<string>\",\n  \"version\": \"<string>\"\n}]"
                },
                {
                    "lang": "json",
                    "value": "\"clusterWideConfigurations\" : {\n  \"<replicaSetID/clusterName>\": {\n    \"changeStreamOptions\": {\n      \"preAndPostImages\": {\n        \"expireAfterSeconds\": <integer>\n      }\n    }\n  }\n}"
                },
                {
                    "lang": "json",
                    "value": "\"replicaSets\":\n[\n  {\n    \"_id\": \"<string>\",\n    \"protocolVersion\": \"<string>\",\n    \"members\":\n    [\n      {\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      },{\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      },{\n        \"_id\": \"<integer>\",\n        \"host\": \"<string>\",\n        \"arbiterOnly\": \"<boolean>\",\n        \"buildIndexes\": \"<boolean>\",\n        \"hidden\": \"<boolean>\",\n        \"priority\": \"<number>\",\n        \"tags\": \"<object>\",\n        \"secondaryDelaySecs\": \"<integer>\",\n        \"votes\": \"<number>\"\n      }\n    ],\n    \"force\":\n    {\n      \"currentVersion\": \"<integer>\"\n    }\n  }\n]"
                },
                {
                    "lang": "json",
                    "value": "\"sharding\" : [\n  {\n    \"managedSharding\" : <boolean>,\n    \"name\" : \"<string>\",\n    \"configServerReplica\" : \"<string>\",\n    \"collections\" : [\n      {\n        \"_id\" : \"<string>\",\n        \"key\" : [\n          [ \"shard key\" ],\n          [ \"shard key\" ],\n          ...\n        ],\n        \"unique\" : <boolean>\n      },\n      ...\n    ],\n    \"shards\" : [\n      {\n        \"_id\" : \"<string>\",\n        \"rs\" : \"<string>\",\n        \"tags\" : [ \"<string>\", ... ]\n      },\n      ...\n    ],\n    \"tags\" : [\n      {\n        \"ns\" : \"<string>\",\n        \"min\" : [\n          {\n            \"parameter\" : \"<string>\",\n            \"parameterType\" : \"<string>\",\n            \"value\" : \"<string>\"\n          }\n        ],\n        \"max\" : [\n          {\n            \"parameter\" : \"<string>\",\n            \"parameterType\" : \"<string>\",\n            \"value\" : \"<string>\"\n          }\n        ],\n        \"tag\" : \"<string>\"\n      },\n      ...\n    ]\n  },\n  ...\n]"
                },
                {
                    "lang": "cfg",
                    "value": "{\n  \"field\" : <string>,\n  \"fieldType\" : <string>,\n  \"value\" : <string>\n}"
                },
                {
                    "lang": "cfg",
                    "value": "{\n  \"field\" : <string>,\n  \"fieldType\" : <string>,\n  \"value\" : <string>\n}"
                },
                {
                    "lang": "json",
                    "value": "\"tags\" : [\n  {\n    \"ns\" : \"testdb.test1\",\n    \"min\" : [\n      {\n        \"parameter\" : \"a\",\n        \"parameterType\" : \"integer\",\n        \"value\" : \"1\"\n      },\n      {\n        \"parameter\" : \"b\",\n        \"parameterType\" : \"string\",\n        \"value\" : \"ab\"\n      }\n    ],\n    \"max\" : [\n      {\n        \"parameter\" : \"a\",\n        \"parameterType\" : \"integer\",\n        \"value\" : \"100\"\n      },\n      {\n        \"parameter\" : \"b\",\n        \"parameterType\" : \"string\",\n        \"value\" : \"fg\"\n      }\n    ],\n    \"tag\" : \"zone1\"\n  }\n]"
                },
                {
                    "lang": "json",
                    "value": "\"balancer\": {\n  \"<clusterName1>\": {},\n  \"<clusterName2>\": {},\n  ...\n}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"auth\": {\n    \"authoritativeSet\": \"<boolean>\",\n    \"autoUser\": \"<string>\",\n    \"autoPwd\": \"<string>\",\n    \"disabled\": \"<boolean>\",\n    \"deploymentAuthMechanisms\": [\"<string>\", \"<string>\"],\n    \"autoAuthMechanisms\": [\"<string>\"],\n    \"key\": \"<string>\",\n    \"keyfile\": \"<string>\",\n    \"newAutoPwd\": \"<string>\",\n    \"newKey\": \"<string>\",\n    \"usersDeleted\": [{\n      \"user\": \"<string>\",\n      \"dbs\": [\"<string>\", \"<string>\"]\n    }],\n    \"usersWanted\": [{\n      \"authenticationRestrictions\": [{\n        \"clientSource\": [\"(IP | CIDR range)\", \"(IP | CIDR range)\"],\n        \"serverAddress\": [\"(IP | CIDR range)\", \"(IP | CIDR range)\"]\n      }],\n      \"db\": \"<string>\",\n      \"initPwd\": \"<string>\",\n      \"otherDBRoles\": {\n        \"<string>\": [\"<string>\", \"<string>\"]\n      },\n      \"roles\": [{\n        \"db\": \"<string>\",\n        \"role\": \"<string>\"\n      }],\n      \"pwd\": \"<string>\",\n      \"user\": \"<string>\"\n    }]\n  }\n}"
                },
                {
                    "lang": "json",
                    "value": " \"ldap\": {\n   \"servers\": \"<host>:<port>, <host>:<port>\",\n   \"timeoutMS\": \"<time>\",\n   \"bindMethod\": \"<sasl/simple>\",\n   \"bindSaslMechanisms\": \"<sasl-mechanism>, <sasl-mechanism>\",\n   \"bindQueryUser\": <ldap-dn>\",\n   \"bindQueryPassword\": \"<password>\",\n   \"userCacheInvalidationPeriod\": \"<interval>\",\n   \"authzQueryTemplate\": \"<rfc-4516-url>\",\n   \"userToDNMapping\": [\n             {\n                     \"match\": \"<ECMAScript-regex>\",\n                     \"<substition/ldapQuery>\": \"<DN-string/RFC4516-encoded-LDAP-query>\"\n             }\n   ]\n}"
                },
                {
                    "lang": "json",
                    "value": "\"tls\" : {\n  \"CAFilePath\" : \"<string>\"\n}"
                },
                {
                    "lang": "json",
                    "value": "\"roles\" : [\n  {\n    \"role\" : \"<string>\",\n    \"db\" : \"<string>\",\n    \"privileges\" : [\n      {\n        \"resource\" : { ... },\n        \"actions\" : [ \"<string>\", ... ]\n      },\n      ...\n    ],\n    \"roles\" : [\n      {\n        \"role\" : \"<string>\",\n        \"db\" : \"<string>\"\n      }\n    ]\n    \"authenticationRestrictions\" : [\n     {\n      \"clientSource\": [(\"<IP>\" | \"<CIDR range>\"), ...],\n      \"serverAddress\": [(\"<IP>\" | \"<CIDR range>\"), ...]\n    }, ...\n  ]\n  },\n  ...\n]"
                },
                {
                    "lang": "json",
                    "value": "\"kerberos\": {\n  \"serviceName\": \"<string>\"\n}"
                },
                {
                    "lang": "json",
                    "value": "\"indexConfigs\": [{\n  \"key\": [\n    [\"<string>\", \"<value>\"]\n  ],\n  \"rsName\": \"<string>\",\n  \"dbName\": \"<string>\",\n  \"collectionName\": \"<string>\",\n  \"collation\": {\n    \"locale\": \"<string>\",\n    \"caseLevel\": <boolean>,\n    \"caseFirst\": \"<string>\",\n    \"strength\": <number>,\n    \"numericOrdering\": <boolean>,\n    \"alternate\": \"<string>\",\n    \"maxVariable\": \"<string>\",\n    \"normalization\": <boolean>,\n    \"backwards\": <boolean>\n  },\n  \"options\": {\n    \"<key>\": \"<value>\"\n  }\n}]"
                }
            ],
            "preview": "This page describes the parameters that comprise the automation\nconfiguration.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/automation-config-example",
            "title": "Example Automation Configuration",
            "headings": [],
            "paragraphs": "Pass the automation configuration using  curl  with the\n --data-binary @<configuration>  option. The exact fields included in\nan automation configuration depend on the  Cloud Manager  project. This example uses  ...  when a field has multiple entries and also in\nplace of some field values. Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. Automation Configuration Parameters .",
            "code": [
                {
                    "lang": "json",
                    "value": "{\n  \"options\" : {\n    \"downloadBase\" : \"/var/lib/mongodb-mms-automation\",\n  },\n  \"mongoDbVersions\" : [\n    {\n      \"name\" : \"3.2.0\",\n      \"builds\" : [\n        {\n          \"platform\" : \"windows\",\n          \"url\" : \"https ://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-3.2.0.zip\",\n          \"gitVersion\" : \"45d947729a0315accb6d4f15a6b06be6d9c19fe7\",\n          \"architecture\" : \"amd64\",\n          \"bits\" : 64,\n          \"win2008plus\" : true\n        },\n        ...\n      ],\n    },\n    ...\n  ],\n  \"agentVersion\" : {\n  \"directoryUrl\" : \"https://s3.amazonaws.com/mongodb-mms-build-agent/releases/prod/\",\n  \"name\" : \"2.6.4.1612-1\"\n  },\n  \"monitoringVersions\" : [\n    {\n      \"name\" : \"4.1.0.251-1\",\n      \"hostname\" : \"example.net\",\n      \"baseUrl\" : null\n    },\n    ...\n  ],\n  \"backupVersions\" : [\n    {\n      \"name\" : \"4.1.0.347-1\",\n      \"hostname\" : \"example.net\",\n      \"baseUrl\" : null\n    },\n    ...\n  ],\n  \"processes\" : [\n    {\n      \"name\" : \"MyCLUSTER_MySHARD_0_0\",\n      \"processType\" : \"mongod\",\n      \"version\" : \"2.6.7\",\n      \"hostname\" : \"testAutoAPI-0.dns.placeholder\",\n      \"logRotate\" : {\n        \"sizeThresholdMB\" : 1000,\n        \"timeThresholdHrs\" : 24\n      },\n      \"authSchemaVersion\" : 1,\n      \"args2_6\" : {\n        \"net\" : {\n          \"port\" : 27017\n        },\n        \"storage\" : {\n          \"dbPath\" : \"/data/MyCLUSTER_MySHARD_0_0\"\n        },\n        \"systemLog\" : {\n          \"path\" : \"/data/MyCLUSTER_MySHARD_0_0/mongodb.log\",\n          \"destination\" : \"file\"\n        },\n        \"replication\" : {\n          \"replSetName\" : \"MySHARD_0\"\n        },\n        \"operationProfiling\" : {}\n      }\n    },\n    ...\n  ],\n  \"replicaSets\" : [\n    {\n      \"_id\" : \"MySHARD_0\",\n      \"members\" : [\n        {\n          \"_id\" : 0,\n          \"host\" : \"MyCLUSTER_MySHARD_0_0\",\n          \"priority\" : 1,\n          \"votes\" : 1,\n          \"secondaryDelaySecs\" : 0,\n          \"hidden\" : false,\n          \"arbiterOnly\" : false\n        },\n        {\n          \"_id\" : 1,\n          \"host\" : \"MyCLUSTER_MySHARD_0_1\",\n          \"priority\" : 1,\n          \"votes\" : 1,\n          \"secondaryDelaySecs\" : 0,\n          \"hidden\" : false,\n          \"arbiterOnly\" : false\n        },\n        {\n          \"_id\" : 2,\n          \"host\" : \"MyCLUSTER_MySHARD_0_2\",\n          \"priority\" : 1,\n          \"votes\" : 1,\n          \"secondaryDelaySecs\" : 0,\n          \"hidden\" : false,\n          \"arbiterOnly\" : false\n        }\n      ]\n    },\n    ...\n  ],\n  \"sharding\" : [\n    {\n      \"name\" : \"myShardedCluster\",\n      \"configServer\" : [\n        \"MyCLUSTER_MyCONFIG_SERVER_6\",\n        \"MyCLUSTER_MyCONFIG_SERVER_7\",\n        \"MyCLUSTER_MyCONFIG_SERVER_8\"\n      ],\n      \"shards\" : [\n        {\n          \"_id\" : \"MySHARD_0\",\n          \"rs\" : \"MySHARD_0\"\n        },\n        {\n          \"_id\" : \"MySHARD_1\",\n          \"rs\" : \"MySHARD_1\"\n        }\n      ]\n    }\n  ],\n  \"balancer\" : { ... },\n  \"auth\" : {\n    \"authoritativeSet\" : false,\n    \"disabled\" : true\n    \"usersDeleted\" : [ ],\n    \"usersWanted\" : [ ]\n  },\n  \"tls\" : { ... },\n  \"roles\" : [\n    {\n      \"role\" : ... ,\n      \"db\" : ... ,\n      \"privileges\" : [ ... ],\n      \"roles\" : [ ... ]\n    },\n    ...\n  ],\n  \"kerberos\" : {\n    \"serviceName\" : ...\n  },\n  \"indexConfigs\" : [ ]\n}"
                }
            ],
            "preview": "Pass the automation configuration using curl with the\n--data-binary @<configuration> option. The exact fields included in\nan automation configuration depend on the Cloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/update-backup-log-attributes",
            "title": "Update Backup Configuration Settings",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\n project  that owns the configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour backup settings differ from those of the\n MongoDB Agent . Configure this\noption when upgrading from legacy agents to the MongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mothership string mothershipResponseHeaderTimeout integer https boolean httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gsapiServiceName string sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean sslTrustedMMSBackupServerCertificate string logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the backup log. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nbackup logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint. Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour backup settings differ from those of the\n MongoDB Agent . Configure this\noption when upgrading from legacy agents to the MongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mothership string mothershipResponseHeaderTimeout integer https boolean httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gsapiServiceName string sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean sslTrustedMMSBackupServerCertificate string logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the backup log. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nbackup logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint. This endpoint returns an empty  JSON (Javascript Object Notation)  object.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{PROJECT-ID}/automationConfig/backupAgentConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicApiKey}:{privateApiKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig/backupAgentConfig?pretty=true\" \\\n     --data '{\n       \"configOverrides\" : {\n         \"mmsBaseUrl\" : \"http://new.example.org\"\n       },\n       \"logPath\": \"/var/log/mongodb-mms-automation/backup-agent.log\",\n       \"logRotate\": {\n         \"sizeThresholdMB\": 1000,\n         \"timeThresholdHrs\": 12\n       },\n       \"username\": \"mms-automation\"\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "This resource requires the Project Automation Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/get-backup-log-attributes",
            "title": "Get Backup Configuration Settings",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\n project  that owns the configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour backup settings differ from those of the\n MongoDB Agent . Configure this\noption when upgrading from legacy agents to the MongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mothership string mothershipResponseHeaderTimeout integer https boolean httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gsapiServiceName string sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean sslTrustedMMSBackupServerCertificate string logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the backup log. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nbackup logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/automationConfig/backupAgentConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicApiKey}:{privateApiKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig/backupAgentConfig?pretty=true\" \\\n     --output currentBackupConfig.json"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"logPath\": \"/var/log/mongodb-mms-automation/backup-agent.log\",\n  \"logPathWindows\": \"%SystemDrive%\\\\MMSAutomation\\\\log\\\\mongodb-mms-automation\\\\backup-agent.log\",\n  \"logRotate\": {\n    \"sizeThresholdMB\": 1000.0,\n    \"timeThresholdHrs\": 24\n  },\n  \"username\": \"mms-automation\"\n}"
                }
            ],
            "preview": "This resource requires the Project Automation Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/get-automation-config",
            "title": "Get the Automation Configuration",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier of the  group  that owns the automation\nconfiguration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. To review these parameters, see\n Automation Configuration Parameters . To review an example of this configuration, see\n Example Automation Configuration .",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/automationConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicApiKey}:{privateApiKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "This resource requires the Project Automation Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/get-monitoring-log-attributes",
            "title": "Get Monitoring Configuration Settings",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\n project  that owns the configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour monitoring settings differ from those of the\n MongoDB Agent . Configure\nthis option when upgrading from legacy agents to the\nMongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mmsBaseUrl string httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gssapiServiceName string useSslForAllConnections boolean sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean enableMunin boolean logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the monitoring\nlog. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nmonitoring logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{publicApiKey}:{privateApiKey}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig?pretty=true\" \\\n     --output currentMonitoringConfig.json"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"logPath\": \"/var/log/mongodb-mms-automation/monitoring-agent.log\",\n  \"logPathWindows\": \"%SystemDrive%\\\\MMSAutomation\\\\log\\\\mongodb-mms-automation\\\\monitoring-agent.log\",\n  \"logRotate\": {\n    \"sizeThresholdMB\": 1000.0,\n    \"timeThresholdHrs\": 24\n  },\n  \"username\": \"mms-automation\"\n}"
                }
            ],
            "preview": "This resource requires the Project Automation Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/update-monitoring-log-attributes",
            "title": "Update Monitoring Configuration Settings",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique 24-hexadecimal digit string that identifies the\n project  that owns the configuration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false To change these settings with the MongoDB Agent, include one or more\nof these parameters in the request body. Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour monitoring settings differ from those of the\n MongoDB Agent . Configure\nthis option when upgrading from legacy agents to the\nMongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mmsBaseUrl string httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gssapiServiceName string useSslForAllConnections boolean sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean enableMunin boolean logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the monitoring\nlog. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nmonitoring logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint. Parameter Type Necessity Description configOverrides object Optional List of MongoDB Agent settings that you need to change because\nyour monitoring settings differ from those of the\n MongoDB Agent . Configure\nthis option when upgrading from legacy agents to the\nMongoDB Agent. Setting Data Type mmsGroupId string mmsApiKey string mmsBaseUrl string httpProxy string krb5Principal string krb5Keytab string krb5ConfigLocation string gssapiServiceName string useSslForAllConnections boolean sslClientCertificate string sslClientCertificatePassword string sslTrustedServerCertificates string sslRequireValidServerCertificates boolean enableMunin boolean logPath string Optional Absolute file path to which this MongoDB Agent writes its logs.\nIf this is not specified, the log writes to standard error\n( stderr ) on UNIX- and Linux-based systems and to the Event\nLog on Windows systems. logRotate object Optional Thresholds after which this MongoDB Agent rotates the monitoring\nlog. integer Optional Maximum size, in MB, of a log file before this MongoDB Agent\nrotates the logs. integer Optional Number of hours after which this MongoDB Agent rotates the log\nfile. username string Optional MongoDB user in the application database that manages the\nmonitoring logs. If you use the  API (Application Programming Interface)  to enable authentication for the\nMongoDB Agent, set this parameter to  mms-automation  when\nexecuting this endpoint. This endpoint returns an empty  JSON (Javascript Object Notation)  object.",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig/monitoringAgentConfig\"\n     --data '{\n       \"configOverrides\" : {\n         \"mmsBaseUrl\" : \"http://new.example.org\"\n       },\n       \"logPath\": \"/var/log/mongodb-mms-automation/monitoring-agent.log\",\n       \"logRotate\": {\n         \"sizeThresholdMB\": 1000,\n         \"timeThresholdHrs\": 12\n       },\n       \"username\": \"mms-automation\"\n     }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "This resource requires the Project Automation Admin role.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/automation-config/update-automation-config",
            "title": "Update the Automation Configuration",
            "headings": [
                "Required Roles",
                "Resource",
                "Request",
                "Path Parameters",
                "Query Parameters",
                "Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Use  PUT  to update a project's automation configuration.  Don't \nuse  PATCH . To see a tutorial on how to update an automation configuration, see\n Update the Automation Configuration . To make updates to the MongoDB Agent  other than \n hostname , you must do so through a different endpoint. When you submit updates,  Cloud Manager  makes internal modifications to the data\nand then saves your new configuration version. The MongoDB Agents continuously poll  Cloud Manager  for changes to the\nconfiguration and fetch configuration updates when they occur. The\nAgents then adjust the states of their live processes to match. Cloud Manager  might add a field to each specified community MongoDB version\nto indicate where the Agents download them from. There is  no protection  in the Cloud Manager Administration API to prevent\nconcurrent modifications. If two administrators both start with a\nconfiguration based on the current version, make their own\nmodifications, and then submit their modifications, the later\nmodification wins. The automation configuration provides the sole means to enabling\nauthentication on your clusters using the  API (Application Programming Interface) . To enable\nauthentication, first call the following endpoints with\n \"username\": \"mms-automation\" : Update the current backup log settings Update the current monitoring log settings This resource requires the  Project Automation Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Name Type Necessity Description PROJECT-ID string Required Unique identifier of the  group  that owns the automation\nconfiguration. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false To review these parameters, see\n Automation Configuration Parameters . To review these parameters, see\n Automation Configuration Parameters . The following replaces the automation configuration with the updated\nconfiguration saved in  /Users/admin/updated-conf.json . For an\nexample of an updated configuration document, see\n Example Automation Configuration . To review an example of this configuration, see\n Example Automation Configuration .",
            "code": [
                {
                    "lang": "http",
                    "value": "PUT /groups/{PROJECT-ID}/automationConfig"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --include \\\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data-binary \"@/Users/admin/updated-conf.json\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Use PUT to update a project's automation configuration. Don't\nuse PATCH.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/update-one-invitation",
            "title": "Update One Organization Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates one pending invitation to the  Cloud Manager  organization that you\nspecify. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description roles array of strings Required Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. Cloud Manager  replaces the  roles  in the invitation with\nthose that you provide in this request. Ensure that you include all roles that you want to assign the\nuser in this request. username string Required Username of the user whose invitation you want to update. In\n Cloud Manager , an invited user's username is the email address to\nwhich  Cloud Manager  sent the invitation. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the organization. orgId string Unique 24-hexadecimal digit string that identifies the\norganization. orgName string Name of the organization. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Unique 24-hexadecimal digit strings that identify the teams\nthat the user was invited to join. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /orgs/{ORG-ID}/invites"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invites?pretty=true\" \\\n     --data '\n       {\n         \"roles\": [\n           \"ORG_OWNER\"\n         ],\n         \"username\": \"wyatt.smith@example.com\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n   \"createdAt\": \"2021-02-18T21:05:40Z\",\n   \"expiresAt\": \"2021-03-20T21:05:40Z\",\n   \"id\": \"{INVITATION-ID}\",\n   \"inviterUsername\": \"admin@example.com\",\n   \"orgId\": \"{ORG-ID}\",\n   \"orgName\": \"{ORG-NAME}\",\n   \"roles\": [\n     \"ORG_OWNER\"\n   ],\n   \"teamIds\": [],\n   \"username\": \"wyatt.smith@example.com\"\n}"
                }
            ],
            "preview": "Updates one pending invitation to the Cloud Manager organization that you\nspecify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/update-one-invitation-by-id",
            "title": "Update One Organization Invitation by Invitation ID",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates one pending invitation by  {INVITATION-ID}  to the  Cloud Manager \norganization that you specify. Use the  Get All Organization Invitations  endpoint to retrieve IDs for\nall pending organization invitations. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description roles array of strings Required Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. Cloud Manager  replaces the  roles  in the invitation with\nthose that you provide in this request. Ensure that you include all roles that you want to assign the\nuser in this request. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the organization. orgId string Unique 24-hexadecimal digit string that identifies the\norganization. orgName string Name of the organization. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Unique 24-hexadecimal digit strings that identify the teams\nthat the user was invited to join. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /orgs/{ORG-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invites/{INVITATION-ID}?pretty=true\" \\\n     --data '\n       {\n         \"roles\": [\n           \"ORG_OWNER\"\n         ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T21:05:40Z\",\n  \"expiresAt\": \"2021-03-20T21:05:40Z\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"orgId\": \"{ORG-ID}\",\n  \"orgName\": \"{ORG-NAME}\",\n  \"roles\": [\n    \"ORG_OWNER\"\n  ],\n  \"teamIds\": [],\n  \"username\": \"wyatt.smith@example.com\"\n}"
                }
            ],
            "preview": "Updates one pending invitation by {INVITATION-ID} to the Cloud Manager\norganization that you specify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/get-one-invitation",
            "title": "Get One Organization Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve details for one pending invitation to the specified  Cloud Manager \norganization. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the organization. orgId string Unique 24-hexadecimal digit string that identifies the\norganization. orgName string Name of the organization. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Unique 24-hexadecimal digit strings that identify the teams\nthat the user was invited to join. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invites/{INVITATION-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T21:05:40Z\",\n  \"expiresAt\": \"2021-03-20T21:05:40Z\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"orgId\": \"{ORG-ID}\",\n  \"orgName\": \"{ORG-NAME}\",\n  \"roles\": [\n    \"ORG_MEMBER\"\n  ],\n  \"teamIds\": [],\n  \"username\": \"wyatt.smith@example.com\"\n}"
                }
            ],
            "preview": "Retrieve details for one pending invitation to the specified Cloud Manager\norganization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/get-all-invitations",
            "title": "Get All Organization Invitations",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves all pending invitations to the specified  Cloud Manager \norganization. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false username string Optional Email address of the invited user. This is the address to which\n Cloud Manager  sent the invite. If omitted,  Cloud Manager  returns all pending invitations. This endpoint doesn't use HTTP request body parameters. The response  JSON (Javascript Object Notation)  document includes an array of objects.\nEach object represents one invitation to the  Cloud Manager  project. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the organization. orgId string Unique 24-hexadecimal digit string that identifies the\norganization. orgName string Name of the organization. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Unique 24-hexadecimal digit strings that identify the teams\nthat the user was invited to join. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /orgs/{ORG-ID}/invites"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invites?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "[\n  {\n    \"createdAt\": \"2021-02-18T18:51:46Z\",\n    \"expiresAt\": \"2021-03-20T18:51:46Z\",\n    \"id\": \"{INVITATION-ID-1}\",\n    \"inviterUsername\": \"admin@example.com\",\n    \"orgId\": \"{ORG-ID}\",\n    \"orgName\": \"{ORG-NAME}\",\n    \"roles\": [\n      \"GROUP_OWNER\"\n    ],\n    \"teamIds\": [],\n    \"username\": \"jane.smith@example.com\"\n  },\n  {\n    \"createdAt\": \"2021-02-18T21:28:38Z\",\n    \"expiresAt\": \"2021-03-20T21:28:38Z\",\n    \"id\": \"{INVITATION-ID-2}\",\n    \"inviterUsername\": \"admin@example.com\",\n    \"orgId\": \"{ORG-ID}\",\n    \"orgName\": \"{ORG-NAME}\",\n    \"roles\": [\n      \"ORG_MEMBER\"\n    ],\n    \"teamIds\": [],\n    \"username\": \"john.smith@example.com\"\n  },\n  {\n    \"createdAt\": \"2021-02-18T21:05:40Z\",\n    \"expiresAt\": \"2021-03-20T21:05:40Z\",\n    \"id\": \"{INVITATION-ID-3}\",\n    \"inviterUsername\": \"admin@example.com\",\n    \"orgId\": \"{ORG-ID}\",\n    \"orgName\": \"{ORG-NAME}\",\n    \"roles\": [\n      \"ORG_MEMBER\"\n    ],\n    \"teamIds\": [],\n    \"username\": \"wyatt.smith@example.com\"\n  }\n]"
                }
            ],
            "preview": "Retrieves all pending invitations to the specified Cloud Manager\norganization.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/delete-one-invitation",
            "title": "Delete One Organization Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Deletes one pending invitation to the specified  Cloud Manager  organization.\nYou can't delete an invitation that a user has accepted. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint returns an empty  JSON (Javascript Object Notation)  object.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /orgs/{ORG-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invitations/{INVITATION-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 204 No Content\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Deletes one pending invitation to the specified Cloud Manager organization.\nYou can't delete an invitation that a user has accepted.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/organizations/create-one-invitation",
            "title": "Invite One User to a Cloud Manager Organization",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Invites one user to the  Cloud Manager  organization that you specify. The user must accept the invitation to access the  Cloud Manager  organization. You can successfully call this endpoint with the\n Organization User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description ORG-ID string Required Unique 24-hexadecimal digit string that identifies the\norganization. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description roles array of strings Required Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Optional Unique 24-hexadecimal digit strings that identify the teams that\nyou invite the user to join. username string Required Email address of the invited user. This is the address to which\n Cloud Manager  sends the invite. If the user accepts the invitation, they log in to  Cloud Manager \nwith this username. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the organization. orgId string Unique 24-hexadecimal digit string that identifies the\norganization. orgName string Name of the organization. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. teamIds array of strings Unique 24-hexadecimal digit strings that identify the teams\nthat the user was invited to join. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /orgs/{ORG-ID}/invites"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/orgs/{ORG-ID}/invites?pretty=true\" \\\n     --data '\n       {\n         \"roles\": [\n            \"ORG_MEMBER\"\n         ],\n         \"username\": \"wyatt.smith@example.com\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T21:05:40Z\",\n  \"expiresAt\": \"2021-03-20T21:05:40Z\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"orgId\": \"{ORG-ID}\",\n  \"orgName\": \"{ORG-NAME}\",\n  \"roles\": [\n    \"ORG_MEMBER\"\n  ],\n  \"teamIds\": [],\n  \"username\": \"wyatt.smith@example.com\"\n}"
                }
            ],
            "preview": "Invites one user to the Cloud Manager organization that you specify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/get-one-invitation",
            "title": "Get One Project Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve details for one pending invitation to the specified\n Cloud Manager  project. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. groupId string Unique 24-hexadecimal digit string that identifies the project. groupName string Name of the project. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the project. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invites/{INVITATIO-ID}?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T18:51:46Z\",\n  \"expiresAt\": \"2021-03-20T18:51:46Z\",\n  \"groupId\": \"{GROUP-ID}\",\n  \"groupName\": \"group\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"roles\": [\n    \"GROUP_OWNER\"\n  ],\n  \"username\": \"jane.smith@example.com\"\n}"
                }
            ],
            "preview": "Retrieve details for one pending invitation to the specified\nCloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/update-one-invitation",
            "title": "Update One Project Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates one pending invitation to the  Cloud Manager  project that you\nspecify. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description roles array of strings Required Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these\nroles to them. Cloud Manager  replaces the  roles  in the invitation with\nthose that you provide in this request. Ensure that you include all roles that you want to assign the\nuser in this request. username string Required Username of the user whose invitation you want to update. In\n Cloud Manager , an invited user's username is the email address to\nwhich  Cloud Manager  sent the invitation. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. groupId string Unique 24-hexadecimal digit string that identifies the project. groupName string Name of the project. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the project. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{GROUP-ID}/invites"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invites/{INVITATION-ID}?pretty=true\" \\\n     --data '\n       {\n         \"roles\": [\n           \"GROUP_OWNER\"\n         ],\n         \"username\": \"jane.smith@example.com\"\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T18:51:46Z\",\n  \"expiresAt\": \"2021-03-20T18:51:46Z\",\n  \"groupId\": \"{GROUP-ID}\",\n  \"groupName\": \"group\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"roles\": [\n    \"GROUP_OWNER\"\n  ],\n  \"username\": \"jane.smith@example.com\"\n}"
                }
            ],
            "preview": "Updates one pending invitation to the Cloud Manager project that you\nspecify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/update-one-invitation-by-id",
            "title": "Update One Project Invitation by Invitation ID",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Updates one pending invitation by  {INVITATION-ID}  to the  Cloud Manager \nproject that you specify. Use the  Get All Project Invitations  endpoint to retrieve IDs\nfor all pending project invitations. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Body Parameter Type Necessity Description roles array of strings Required Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these\nroles to them. Cloud Manager  replaces the  roles  in the invitation with\nthose that you provide in this request. Ensure that you include all roles that you want to assign the\nuser in this request. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. groupId string Unique 24-hexadecimal digit string that identifies the project. groupName string Name of the project. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the project. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "PATCH /groups/{GROUP-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request PATCH \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invites/{INVITATION-ID}?pretty=true\" \\\n     --data '\n       {\n         \"roles\": [\n           \"GROUP_OWNER\"\n         ]\n       }'"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T18:51:46Z\",\n  \"expiresAt\": \"2021-03-20T18:51:46Z\",\n  \"groupId\": \"{GROUP-ID}\",\n  \"groupName\": \"group\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"roles\": [\n    \"GROUP_OWNER\"\n  ],\n  \"username\": \"jane.smith@example.com\"\n}"
                }
            ],
            "preview": "Updates one pending invitation by {INVITATION-ID} to the Cloud Manager\nproject that you specify.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/get-all-invitations",
            "title": "Get All Project Invitations",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieves all pending invitations to the specified  Cloud Manager  project. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false username string Optional Email address of the invited user. This is the address to which\n Cloud Manager  sent the invite. If omitted,  Cloud Manager  returns all pending invitations. This endpoint doesn't use HTTP request body parameters. The response  JSON (Javascript Object Notation)  document includes an array of objects. Each object\nrepresents one invitation to the  Cloud Manager  project. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. groupId string Unique 24-hexadecimal digit string that identifies the project. groupName string Name of the project. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the project. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "GET /groups/{GROUP-ID}/invites"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invites?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 200 OK\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "[\n  {\n    \"createdAt\": \"2021-02-18T18:51:46Z\",\n    \"expiresAt\": \"2021-03-20T18:51:46Z\",\n    \"groupId\": \"{GROUP-ID}\",\n    \"groupName\": \"group\",\n    \"id\": \"{INVITATION-ID}\",\n    \"inviterUsername\": \"admin@example.com\",\n    \"roles\": [\n      \"GROUP_OWNER\"\n    ],\n    \"username\": \"jane.smith@example.com\"\n  },\n  {\n    \"createdAt\": \"2021-02-18T21:05:40Z\",\n    \"expiresAt\": \"2021-03-20T21:05:40Z\",\n    \"groupId\": \"{GROUP-ID}\",\n    \"groupName\": \"group\",\n    \"id\": \"{INVITATION-ID}\",\n    \"inviterUsername\": \"admin@example.com\",\n    \"roles\": [\n      \"GROUP_READ_ONLY\"\n    ],\n    \"username\": \"john.smith@example.com\"\n  }\n]"
                }
            ],
            "preview": "Retrieves all pending invitations to the specified Cloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/delete-one-invitation",
            "title": "Delete One Project Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Deletes one pending invitation to the  Cloud Manager  project that you\nspecify. You can't delete an invitation that a user has accepted. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. INVITATION-ID string Required Unique 24-hexadecimal digit string that identifies the\ninvitation. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false This endpoint doesn't use HTTP request body parameters. This endpoint does not have response elements. This endpoint returns an empty  JSON (Javascript Object Notation)  object.",
            "code": [
                {
                    "lang": "http",
                    "value": "DELETE /groups/{GROUP-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invitations/{INVITATION-ID}\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 204 No Content\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                }
            ],
            "preview": "Deletes one pending invitation to the Cloud Manager project that you\nspecify. You can't delete an invitation that a user has accepted.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/api/invitations/projects/create-one-invitation",
            "title": "Create One Project Invitation",
            "headings": [
                "Required Roles",
                "Resource",
                "Request Path Parameters",
                "Request Query Parameters",
                "Request Body Parameters",
                "Response",
                "Example Request",
                "Example Response",
                "Response Header",
                "Response Body"
            ],
            "paragraphs": "Retrieve details for one pending invitation to the specified\n Cloud Manager  project. You can successfully call this endpoint with the\n Project User Admin  role. Base URL:  https://cloud.mongodb.com/api/public/v1.0 Path Element Type Necessity Description GROUP-ID string Required Unique 24-hexadecimal digit string that identifies the\nproject. The following query parameters are optional: Name Type Necessity Description Default pretty boolean Optional Flag indicating whether the response body should be in a\n prettyprint  format. false envelope boolean Optional Flag that indicates whether or not to wrap the response in an\nenvelope. Some  API (Application Programming Interface)  clients cannot access the  HTTP (Hypertext Transfer Protocol)  response headers or\nstatus code. To remediate this, set  envelope=true  in the\nquery. For endpoints that return one result, the response body\nincludes: Name Description status HTTP (Hypertext Transfer Protocol)  response code envelope Expected response body false Name Type Description roles array of strings Cloud Manager   roles  to assign to the invited\nuser. If the user accepts the invitation,  Cloud Manager  assigns these\nroles to them. username string Email address to which  Cloud Manager  sent the invitation. The user\nuses this email address as their  Cloud Manager  username if they\naccept this invitation. Name Type Description createdAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when  Cloud Manager  sent the invitation. expiresAt string Timestamp in  ISO 8601  date and time format in  UTC (Coordinated Universal Time)  when the invitation expires. Users have 30 days to accept an invitation to an  Cloud Manager \nproject. groupId string Unique 24-hexadecimal digit string that identifies the project. groupName string Name of the project. id string Unique 24-hexadecimal digit string that identifies the\ninvitation. inviterUsername string Cloud Manager  user who invited  username  to the project. roles array of strings Cloud Manager   roles  to assign to the\ninvited user. If the user accepts the invitation,  Cloud Manager  assigns these roles\nto them. username string Email address to which  Cloud Manager  sent the invitation. If the user accepts the invitation, they use this email address as\ntheir  Cloud Manager  username.",
            "code": [
                {
                    "lang": "http",
                    "value": "POST /groups/{GROUP-ID}/invites/{INVITATION-ID}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest --include \\\n     --header \"Accept: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{GROUP-ID}/invites?pretty=true\""
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json;charset=ISO-8859-1\nDate: {dateInUnixFormat}\nWWW-Authenticate: Digest realm=\"MMS Public API\", domain=\"\", nonce=\"{nonce}\", algorithm=MD5, op=\"auth\", stale=false\nContent-Length: {requestLengthInBytes}\nConnection: keep-alive"
                },
                {
                    "lang": "http",
                    "value": "HTTP/1.1 201 Created\nVary: Accept-Encoding\nContent-Type: application/json\nStrict-Transport-Security: max-age=300\nDate: {dateInUnixFormat}\nConnection: keep-alive\nContent-Length: {requestLengthInBytes}\nX-MongoDB-Service-Version: gitHash={gitHash}; versionString={ApplicationVersion}"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"createdAt\": \"2021-02-18T18:51:46Z\",\n  \"expiresAt\": \"2021-03-20T18:51:46Z\",\n  \"groupId\": \"{GROUP-ID}\",\n  \"groupName\": \"group\",\n  \"id\": \"{INVITATION-ID}\",\n  \"inviterUsername\": \"admin@example.com\",\n  \"roles\": [\n    \"GROUP_OWNER\"\n  ],\n  \"username\": \"jane.smith@example.com\"\n}"
                }
            ],
            "preview": "Retrieve details for one pending invitation to the specified\nCloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/troubleshooting/backup",
            "title": "Backup",
            "headings": [
                "Run Backups with FCV (Feature Compatibility Version) 4.2 or Later with MongoDB Community"
            ],
            "paragraphs": "MongoDB has a special license to use MongoDB Enterprise for backups. To learn more about this license, see\n Cloud Manager Backup Agreement Overview",
            "code": [],
            "preview": "MongoDB has a special license to use MongoDB Enterprise for backups.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/troubleshooting/getting-started",
            "title": "Getting Started",
            "headings": [
                "Authentication Errors",
                "Check Agent Output or Log",
                "Ensure Connectivity Between Agent and Monitored Hosts",
                "Ensure Connectivity Between Agent and Cloud Manager Server",
                "Allow Agent to Discover Hosts and Collect Initial Data"
            ],
            "paragraphs": "To begin troubleshooting, complete these tasks to check for common,\neasily fixed problems: If your MongoDB instances run with authentication enabled, ensure  Cloud Manager \nhas the MongoDB credentials. To learn more, see\n Configure MongoDB Authentication and Authorization . If you continue to encounter problems, check the agent's output for\nerrors. To learn more, see\n Agent Logs  for more information. Ensure the system running the agent can resolve and connect to the\n ~bin.mongod  processes. If you install multiple Monitorings, ensure that  each  Monitoring can reach every\n ~bin.mongod  process in the deployment. To confirm, log into the system where the agent is running and issue a\ncommand in the following form: Replace  <hostname>  with the hostname and  <port>  with the\nport that the database is listening on. Cloud Manager  does not support port forwarding. Verify that the Monitoring can connect on TCP port 443\n(outbound) to the  Cloud Manager  server (i.e.  api-agents.mongodb.com .) Allow the agent to run for 5 to 10 minutes to allow host discovery and\ninitial data collection.",
            "code": [
                {
                    "lang": "sh",
                    "value": "mongosh <hostname>:<port>"
                }
            ],
            "preview": "To begin troubleshooting, complete these tasks to check for common,\neasily fixed problems:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/troubleshooting/authentication",
            "title": "Authentication",
            "headings": [
                "Two-Factor Authentication",
                "Missed SMS (short message service) Authentication Tokens",
                "Delete or Reset Two-Factor Authentication",
                "Restore Lost Access to Organizations and Projects"
            ],
            "paragraphs": "If are using  SMS (short message service) , but do not receive the authentication tokens via\n SMS (short message service) : Authenticator applications are the preferred method to  SMS (short message service)  for\ntwo-factor authentication.  SMS (short message service)  is an older protocol with many\nknown security vulnerabilities. The U.S.\n NIST (National Institute for Standards and Technology) \nadvised abandoning  SMS (short message service)  for  2FA (two-factor authentication)  in section  5.1.3.2  of its\n Digital Identity Guidelines . Refer to the  Manage Your Two-Factor Authentication Options \npage for more details about using two-factor authentication. This\npage includes any limitations which may affect  SMS (short message service)  delivery times. Enter the  SMS (short message service)  phone number with country code first followed by the\narea code and the phone number. If you are outside of the United States or Canada, include  011 \nand the  country code   because  Cloud Manager \nuses the U.S.-based  Twilio  to send text\nmessages. As an alternative to your non-U.S. telephone number, use\na  Google Voice  telephone number. If you do not receive the authentication token in a reasonable\namount of time  contact Support \nto rule out  SMS (short message service)  message delivery delays. For New Zealand enter  01164  before the phone number. To learn more about limits of  SMS (short message service)  for  2FA (two-factor authentication) , see\n SMS delivery considerations . To delete or reset two-factor authentication, go to\n https://account.mongodb.com/account/reset/mfa/cloud .\nThe reset button deletes your existing two-factor authentication\nsettings and provides the option to create new ones. If you created your  Cloud Manager  account using a Gmail or Google Apps\naccount, the following can cause you to lose access to your\norganizations and projects: To re-gain access to your organizations and projects: The Google email address with which you signed up differs from the\nemail address associated to your account. This is most often the\ncase with Gmail or Google Apps aliases. Your username or email domain has changed in Google Apps. Ask a user with the  Organization Owner  to invite you\nto the organization to which you lost access, or Contact MongoDB Support .",
            "code": [],
            "preview": "If you created your Cloud Manager account using a Gmail or Google Apps\naccount, the following can cause you to lose access to your\norganizations and projects:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/troubleshooting/monitoring",
            "title": "Monitoring",
            "headings": [
                "Alerts",
                "Cannot Turn Off Email Notifications",
                "Receive Duplicate Alerts",
                "Receive \"Host has low open file limits\" or \"Too many open files\" error messages",
                "Deployments",
                "Monitoring Fails to Collect Data",
                "Deployments Aren't Visible",
                "Deployment Not Added",
                "Accidental Duplicate mongod",
                "Monitorings Can't Detect Deployments",
                "Can't Delete a Deployment",
                "Projects",
                "Additional Information on Projects"
            ],
            "paragraphs": "For resolutions to alert conditions, see also  Resolve Alerts . For information on creating and managing alerts, see\n Configure Alert Settings  and\n Manage Alerts . There are at least two ways to turn off alert notifications: Remove the deployment from your  Cloud Manager  account. See  Stop Managing and/or Monitoring One Deployment . Disable or delete the alert configuration. See\n Configure Alert Settings . Turn off alerts for a specific host. See\n Disable Alerts for a Specific Process . If the notification email list contains multiple email-groups, one or\nmore people may receive multiple notifications of the same alert. These error messages appear on the  Deployment  page, under\na host's name. They appear if the number of available connections does\nnot meet the  Cloud Manager -defined minimum value. These errors are not\ngenerated by the  mongos  instance and, therefore, not\nappear in  mongos  log files. On a host by host basis, the Monitoring compares the number of\nopen file descriptors and connections to the maximum connections\nlimit. The max open file descriptors ulimit parameter directly affects\nthe number of available server connections. The agent calculates\nwhether or not enough connections exist to meet the  Cloud Manager -defined\nminimum value. In ping documents, for each node and its  serverStatus.connections \nvalues, if the sum of the  current  value plus the  available \nvalue is less than the  maxConns  configuration value set for a\nmonitored host, the Monitoring will send a\n Host has low open file limits  or\n Too many open files  message to  Cloud Manager . Ping documents are data sent by Monitorings to  Cloud Manager . To view\nping documents: To prevent this error, we recommend you set  ulimit  open files to\n 64000 . We also recommend setting the  maxConns  command in  mongosh \nto at least the recommended settings. To learn more, see\n the MongoDB ulimit reference page  and\nthe  the MongoDB maxConns reference page . To access this feature, you must be have the\n Project Owner  or  Project Data Access Admin \n Cloud Manager  user roles. Click the  Deployment  page. Click the host's name. Click  Last Ping . Possible causes for this state: The Monitoring can't connect to the server because of\nnetworking restrictions or issues (i.e. firewalls, proxies,\nrouting.) Your database is running with  TLS (Transport Layer Security) . You must enable  TLS (Transport Layer Security)  either\nglobally or on a per-host basis. To learn more, see\n Configure MongoDB Agent to Use TLS  and\n Enable TLS for a Deployment . Your database is running with authentication. You must supply\n Cloud Manager  with the authentication credentials for the host. See\n Configure MongoDB Authentication and Authorization . The following factors can cause problems with the Monitoring detecting\ndeployments: To fix this issue: Click  Deployment . Click the  Processes  tab Click  Add Deployment . In the  New Deployment  window, specify the following\nvalues: deployment type internal hostname internal port If appropriate: Add the database username and password. Enable  TLS (Transport Layer Security)  to connect with your Monitoring. You don't need to restart your Monitoring when you\nadd (or remove) a deployment. If you add the deployment after a crash and restart the\nMonitoring, you might not see the hostname on the\n Deployment  page.  Cloud Manager  detects the deployment as a\nduplicate and suppresses its data. To reset: Click  Settings . Click  Project Settings . Click  Reset Duplicates . If your deployments exist across multiple data centers, ensure\nthat all of your deployments can be discovered by all of your\nMonitorings. In rare cases, the  ~bin.mongod  is brought down and the\nreplica set is reconfigured. The down deployment can't be deleted\nand returns the following error message: Contact  MongoDB Support  for help with deleting these deployments. This deployment cannot be deleted because it is enabled\nfor backup. Create a project to monitor additional segregated systems or\nenvironments for servers, agents, users, and other resources. API (Application Programming Interface)  keys are unique to each project. Each project requires its own agent with the appropriate  API (Application Programming Interface)  keys. Within each project, the agent needs to be able to connect to all hosts it monitors in the project. To learn more about creating and managing projects, see\n Projects . Firewalls may separate your deployment among two or more\nenvironments. In this case, you would need two or more separate\n Cloud Manager  projects.",
            "code": [],
            "preview": "For resolutions to alert conditions, see also Resolve Alerts.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/troubleshooting/automation",
            "title": "Automation",
            "headings": [
                "Automation Runs Only on 64-bit Architectures",
                "Using Own Hardware",
                "Networking",
                "Connectivity to MongoDB Ports",
                "Intra-cluster Connectivity Issue",
                "Frequent Automation Connections",
                "Automation Configuration",
                "Sizing",
                "Frequent Connection Timeouts",
                "Deployments",
                "Deployment Change Unable to Complete / Not Proceeding",
                "MongoDB Agents Are Down or Not Communicating",
                "MongoDB Agents need to communicate",
                "MongoDB Agents Do Not Need to Communicate",
                "MongoDB Agent Permissions",
                "Remove Problematic MongoDB Hosts",
                "Ensure TLS Certificates Contain a Subject Alternative Name",
                "Store Configuration Files in Memory for Existing Clusters"
            ],
            "paragraphs": "Cloud Manager  Automation allows you to deploy, configure, and manage MongoDB\ndeployments with the  Cloud Manager  UI.  Cloud Manager  Automation relies on an\nMongoDB Agent, which must be installed on every server in the\ndeployment. The MongoDB Agents periodically poll the  Cloud Manager  service\nto determine the current goal, and continually report their status to\n Cloud Manager . Cloud Manager  provides only 64-bit downloads of the MongoDB Agent. If you deploy Automation manually, ensure that you have one\nMongoDB Agent on every server. If you deploy the agent manually, you must create MongoDB's\n dbPath  and the directory for the MongoDB binaries and\nensure that the user running the agent owns these\ndirectories. If you install using the  rpm  package, the agent runs as the\n mongod  user; if using the  deb  package, the agent runs as the\n mongodb  user. If you install using the  tar.gz  archive file,\nyou can run the agent as any user. All hosts must be able to allow communication between MongoDB\nports. The default is  27017 , but you can configure alternate port\nranges in the  Cloud Manager  interface. The MongoDB Agent  must  be able to connect to\n cloud.mongodb.com  on port  443  ( HTTPS (Hypertext Transfer Protocol Secure) ).\nFor more information on access to ports and IP addresses, see\n Security Overview . When performing a rolling update, the MongoDB Agent tries to avoid\ndowntime. It needs to collect state from other members of the cluster.\nA connectivity issue (between  mongod s and  mongos es), such as\nhostname resolution or misconfigured firewall, may prevent the\nMongoDB Agent from determining the remote processes state and\ncompleting the change. To ensure all members of the cluster can communicate with each other: For a non-sharded cluster: Log into each  mongod . From that  mongod  host, log into all the other members of the\nreplica set. For a sharded cluster: Log into each  mongod . From that  mongod  host, log into all the other members of the\nshard. Log into each  mongos . From that the  mongos  host: Log into the other  mongos  hosts. Log into all the other members of each shard. MongoDB Agent gathers the state from each member of the cluster every 10\nseconds to ensure that the environment is in the expected state. As\npart of this assessment, MongoDB Agent creates a connection, checks\ncertain files to determine state, and then closes the connection. These\nfrequent, short-lived connections are part of MongoDB Agent's routine\nactivity and should not impact performance. After completing the automation configuration, ensure that the\ndeployment plan satisfies the needs of your deployment. Check\nhostnames and ports before confirming the deployment. Ensure that you provision hosts with enough space to run MongoDB\nand support the requirements of your data set. Ensure that you provision a sufficient number of hosts to run your\ndeployment. Each  ~bin.mongod  should run on its own host. The MongoDB Agent may frequently time out of connections for one or\nmore of the following reasons: By default, connections time out after 40 seconds. MongoDB recommends\ngradually increasing the value of the  dialTimeoutSeconds \nMongoDB Agent configuration setting to prevent frequent premature\nconnection timeouts. However, increasing this value also increases the\ntime required to deploy future configuration changes. Experiment with\nsmall, incremental increases until you determine the optimum value for\nyour deployment. To learn more, see  dialTimeoutSeconds  in MongoDB Agent\nConnection Settings. Connection timeouts High network latency High server load Large SSL keys Insufficient CPU speed A banner that displays\n We have detected a potential problem while deploying... \nappears when certain conditions apply. These are some examples. If you have added or restarted a deployment and the deployment remains\nin the  In Progress  state for several minutes, the banner displays. At this point, you have four options: If you shut down the deployment and still cannot find a solution,\n remove the deployment  from\n Cloud Manager . Click  View Diagnostics . The  View Diagnostics  modal displays any errors that may\nhave happened during deployment. Click  View Status . The  Automation Status  modal displays the deployment\nprocesses, when they last reported their deployment status, what\ntask they are trying to complete, and the deployment status. You can\nfilter the results in the following ways: To learn more about the status of any of the individual processes,\nyou can click the ellipsis icon and select either\n View Details  or  View Agent Logs . Type a hostname in the  Filter processes  search bar. Select one or more process types from the  Process Type \ndropdown. Select one or more automation states from the\n Automation State  dropdown. View Details  shows what the deployment plan for the\nprocess is and which stage of that plan the MongoDB Agent\ncurrently is. View Agent Logs  opens a new browser window with the\n Deployment  >  Agents  >\n Agent Logs  screen shown and the contents of the\nMongoDB Agent log displayed by default. Click the\n View  menu to select a different agent log. Click  View Agent Logs . A new browser window opens with the  Deployment  >\n Agents  >  Agent Logs  screen shown and the\ncontents of the MongoDB Agent log displayed by default. Click\nthe  View  menu to select a different agent log. Click  Allow Override & Edit Configuration . If you diagnose an error and need to correct the deployment\nconfiguration, follow the procedure to\n edit the deployment . If Automation Module of MongoDB Agent can't communicate with the\n Cloud Manager   API endpoint  or the MongoDB\nServer processes,  Cloud Manager  displays a warning banner in the Project. You\ncan resolve this in one of two ways depending upon whether or not you\nexpect the MongoDB Agents to be communicating: If the MongoDB Agent(s) should be communicating with the  Cloud Manager \nhost or MongoDB instances, confirm the following for each MongoDB Agent: The Agent is up and running on each host. The Agent and the  Cloud Manager   API endpoint \ncan  communicate . If Automation Module of MongoDB Agent(s) should be communicating with\nthe  Cloud Manager   API endpoint  or MongoDB\nServer processes, confirm the following for each automated MongoDB\nServer deployment: Click the  Allow Editing & Override Current Configuration \nlink in the warning banner. Remove all processes \n( mongod   and   mongos ) running on the hosts that serve the\nunneeded MongoDB Agents. A permissions issue may prevent automation from completing a change. If\n View Status  or  View Diagnostics  report an\npermissions-related error (such as  open /data/db/mongod.lock:\npermission denied ), ensure that the MongoDB Agent user owns and has\nread and write permissions to the  dbpath  and  logpath  files. You can use the console or the  API (Application Programming Interface)  to remove stale, broken, or\nproblematic hosts from automation. This may include the circumstance\nwhen the MongoDB Agent can't be reached. To remove a problematic host using the console: To remove a problematic host using the  API (Application Programming Interface) : Navigate to your project. Click  Servers . Find your problematic host. Click  , then  Remove Server . Cloud Manager  displays the\n Are you sure you want to remove this server>  modal. Enter the provided hostname into the\n Enter the host name  field an click  Remove \nif you want to remove this server. If you don't want to remove the server, click  Cancel . Cloud Manager  removes all monitoring data for this host when you click\n Remove .  Cloud Manager  provides no confirmation or\ncancellation for this action. Click  Review & Deploy  to review your changes. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . Cloud Manager  removes all processes and agents at this time. If you want to make further configuration changes,\nclick  Cancel . Get the current automation config . Edit the automation configuration  JSON (Javascript Object Notation)  file. Remove the stale node from\n processes  and\n replica sets . Update the automation config file . Wait for a few minutes. Check the  Agents  view. Confirm the host no longer appears on the list of Agents. The MongoDB Agent from\n version 11.11.0.7349-1  requires\n TLS (Transport Layer Security)  certificates to include a value in the Subject Alternative\nName field. Before upgrading to  MongoDB Agent 11.11.0.7355  or\nlater, make sure that all  TLS (Transport Layer Security)  certificates used in your MongoDB\ndeployment contain a  SAN (Subject Alternative Name) .  MongoDB wrote the MongoDB Agent the Go language. Go 1.17 removed the\nability to use  X.509 CommonName field as a hostname  when no  SAN (Subject Alternative Name)  exists. When clients validate  TLS (Transport Layer Security)  certificates, the client checks the\nhostname or hostnames to which the certs apply from the values in\nthe cert's  SAN (Subject Alternative Name)  or Subject Distinguished Name (DN) fields. When\ncreating  TLS (Transport Layer Security)  certificates, some people would use the Subject\nCommon Name (CN) field to store the hostname. CNs have limitations\nthat make them a poor choice to store hostnames. These limits\ninclude a 64-character maximum length and no support for Name\nConstraints.  RFC 2818  deprecated using CN to store\nhostnames in May 2000. This RFC required clients to fall back to the\nCN if the certificate had no values in the  SAN (Subject Alternative Name)  field.\n RFC 6125  removed the requirement in 2011. Go 1.15 disables adherence to  RFC 2818  and uses the\n RFC 6125  practice of making CN optional. In practice,\nthis change requires you to either add  SAN (Subject Alternative Name)  values or enable\nthe use of CNs. Go 1.17 removes the workaround to use the CN if no SAN exists. With the current version of the MongoDB Agent, you  must  use\n SAN (Subject Alternative Name) . To learn more, see\n Fraser Tweedale's blog post on this topic If you use  Cloud Manager  version 4.2 or versions 4.4.0 - 4.4.6, you may encounter\nerrors when setting  enableLocalConfigurationServer  to  true \nand restarting your MongoDB Agent. This issue only affects existing clusters where\n enableLocalConfigurationServer  is set to  true  after the cluster\nis created. Setting this value before creating the cluster does not trigger\nthis issue. To safely change this setting for existing clusters: For more information on storing configuration files in memory,\nsee  Configure How the MongoDB Agent Manages Config Files and Passwords . At the end of your MongoDB Agent\n configuration file , add: Shut down  each process managed\nby the MongoDB Agent. Restart the MongoDB Agent by running the following command: Restart  the MongoDB processes that you\nshut down. Verify that the  automation-mongod.conf  file has the\n __rest  expansion directive.",
            "code": [
                {
                    "lang": "ini",
                    "value": "enableLocalConfigurationServer=true"
                },
                {
                    "lang": "ini",
                    "value": "service mongodb-mms-automation-agent restart"
                }
            ],
            "preview": "Cloud Manager Automation allows you to deploy, configure, and manage MongoDB\ndeployments with the Cloud Manager UI. Cloud Manager Automation relies on an\nMongoDB Agent, which must be installed on every server in the\ndeployment. The MongoDB Agents periodically poll the Cloud Manager service\nto determine the current goal, and continually report their status to\nCloud Manager.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-mongodb-32-eol",
            "title": "FAQ: Automation EoL for MongoDB 3.2",
            "headings": [
                "What is happening?",
                "When is this happening?",
                "What does \u201cunmanaged\u201d mean?",
                "What are my options to prepare for November 12?",
                "What about Backup and Monitoring?",
                "My config servers use SCCC (Sync Cluster Connection Configuration), not CSRS (Config Servers as Replica Sets). Do I need to change that?"
            ],
            "paragraphs": "This addresses common questions about Automation End of Life for MongoDB 3.2 in Cloud Manager. The Automation Agent is ending support for MongoDB 3.2 in Cloud\nManager. MongoDB 3.2 reached its\n End of Life in September of 2018 .\nAddition support was provided via Automation for a year in order to\nprovide time to upgrade to a supported version of MongoDB. On November 12, 2019 MongoDB Servers running 3.2 in Cloud Manager will\nbe unmanaged, meaning removed from Automation. It means Automation will no longer manage your MongoDB 3.2 deployments.\nTo use Automation again in Cloud Manager -- to return to management --\nafter November 12, one must either manually upgrade the cluster(s) and\nand then reimport the cluster(s) to be managed or move to MongoDB\u2019s\nDatabase as a Service Offering, MongoDB Atlas. Unmanaged simply means removed from Automation, your MongoDB\ninstallation will not be impacted in any other way. You have two possible paths forward, the choice is yours: Upgrade your 3.2 cluster  to a\nsupported MongoDB Version (3.4 and up) before November 12 via Cloud\nManager. Transition to MongoDB\u2019s Database as a Service, MongoDB Atlas, using\nthe incredibly easy to use Live Migrate: If the 3.2 cluster is a replica set you can use\n Live Migrate  as is to move to Atlas. If the 3.2 cluster is a sharded cluster you must upgrade it to MongoDB 3.4 ,\nthen use Live Migrate . While backup and monitoring are not directly impacted by this EoL any\nMonitoring or Backup features that you utilize that depend on\nAutomation provided services will no longer function after November 12\nfor 3.2 deployments. This includes, but is not limited to: MongoDB log management, Data Explorer, Performance Advisor, and Automated Restores. In ending the life of MongoDB 3.2, MongoDB also removes the ability to\nuse Automation to convert from  SCCC (Sync Cluster Connection Configuration)  to  CSRS (Config Servers as Replica Sets) . Impacted users were notified in May 2019 to provide additional time\nsince this is a required step before upgrading further. If you wish to\nuse Automation to convert your config servers follow\n this tutorial . After conversion, follow one of the options under the question\n What are my options to prepare for November 12? . If you do not convert the config servers with Automation before\nNovember 12, you must convert the config servers manually and upgrade\nto a supported MongoDB version before you can re-import your\nconfiguration for  Cloud Manager  to manage.",
            "code": [],
            "preview": "This addresses common questions about Automation End of Life for MongoDB 3.2 in Cloud Manager.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-backup",
            "title": "FAQ: Backup and Restore",
            "headings": [
                "Requirements",
                "What MongoDB Permissions does Backup Require?",
                "How Does Cloud Manager Measure Data Size?",
                "Does Backup Work with All Types of Deployments?",
                "Why Does The Backup Feature Not Support Standalone Deployments?",
                "Operations",
                "Will Backup Impact My Production Databases?",
                "Is my data safe?",
                "Is there a limit to Backup size?",
                "How Do I Maintain a Replica Set with Backup enabled?",
                "How much does it cost to use Cloud Manager Backup?",
                "Legacy Backup Agent",
                "Where Should I Run The Backup Agent?",
                "Can I Run the Backup and Monitoring Agents on a Single System?",
                "Can I Run Multiple Backup Agents to Achieve High Availability?",
                "Does the Backup Agent Modify My Database?",
                "How Does the Initial Backup Sync Impact Database Performance?",
                "Does the Backup Support TLS?",
                "Namespace Filters",
                "How Can I Prevent Cloud Manager from Backing Up a Collection?",
                "How Can I Change which Namespaces Are Backed Up?",
                "Data Restoration",
                "How Does Cloud Manager Provide Point-in-Time Restores?",
                "Can I Take Snapshots More Frequently than Every 6 Hours?",
                "Can I Set My Own Snapshot Retention Policy?",
                "How many copies of my data does Cloud Manager store?",
                "How Long Does It Take to Create a Restore Snapshot?",
                "Does the Backup Feature Perform Any Data Validation?",
                "How Do I Restore a Snapshot?",
                "What Is Delivered when I Restore a Snapshot?",
                "How Does Cloud Manager Roll Back Backed-up Data?",
                "What Conditions Require a Resync?"
            ],
            "paragraphs": "This FAQ addresses common questions about  Cloud Manager  and how it backs up and\nrestores databases and collections. The introduction of the MongoDB Agent and the new backup process for\nMongoDB 4.2 with a  FCV  of  4.2  have changed some of these\nanswers. Those answers have admonitions explaining the impact of these\nnew features to existing answers. If you are backing up a MongoDB instance that has authentication\nenabled, the MongoDB Agent requires the privileges described for the\nMongoDB Agent backup function. User Privilege Roles in MongoDB . Cloud Manager  uses the following conversions to measure snapshot size and to\nmeasure how much oplog data has been processed: 1 MB = 1024  2  bytes (1 MiB) 1 GB = 1024  3  bytes (1 GiB) 1 TB = 1024  4  bytes (1 TiB) For MongoDB 4.2 and later, see\n Backup Considerations for Databases . For any MongoDB with  FCV (Feature Compatibility Version)  of  4.0  and earlier databases, Backup\ndoesn't support standalone deployments. Backup has full\nsupport for replica sets and sharded clusters. Cloud Manager  copies data from the  oplog  to provide a continuous backup\nwith point-in-time recovery.  Cloud Manager  does not support backup of standalone\nhosts because they do not have an  oplog . To support backup with\na single  ~bin.mongod  instance, you can run a one-member\nreplica set. Convert a Standalone to a Replica Set The Backup feature typically has minimal impact on production MongoDB\ndeployments. This impact performs similar to that of adding a new\n secondary  to a  replica set . By default, the agent performs its initial sync, the most\nresource intensive operation for backups, against a secondary member of\nthe replica set to limit its impact. You may optionally configure the\nagent to perform the initial sync against the replica set's\n primary , although this increases the impact of the initial\nsync operation. This answer applies only to databases running MongoDB with  FCV (Feature Compatibility Version) \nof  4.0  and earlier Yes,  Cloud Manager  uses enterprise-grade hardware co-located in secure data\ncenters to store all user data. The Backup transmits all data\nusing SSL. The data is stored and processed on encrypted volumes.\n Cloud Manager  requires two-factor authentication to provide any data for\nrestores. There is currently no limit on the total size of snapshot storage.\nBackup works best for deployments whose total size is less than 2 TB. If you wish to use the Backup feature for a larger deployment, please\n contact us  for more\ninformation. Most operations in a replica set are replicated via the oplog and are\nthus captured by the backup process. Some operations, however, make\nchanges that are  not  replicated: for these operations you  must \nhave  Cloud Manager \n resync from your current replica set \nto include the changes. The following operations are not replicated and therefore require\nresync: Renaming or deleting a database by deleting the data files in the\ndata directory. As an alternative, remove databases using an\noperation that MongoDB will replicate, such as\n db.dropDatabase()  from  mongosh . Changing any data while the instance is running as a\n standalone . Rolling index builds. Using  compact  or  repairDatabase  to reclaim\na significant amount of space. Resync is not strictly necessary after  compact  or\n repairDatabase  operations but will ensure that the\n Cloud Manager  copy of the data is resized, which means quicker restores\nand lower cost. Maintenance Operations for Replica Set Members . The pricing for  Cloud Manager  Backup is based on snapshot size, schedule, and\nretention policy. See  Backup Pricing . Backup capability has been moved to the MongoDB Agent with Backup\nactivated. This replaces the individual Backup Agent. This information\ncovers issues unique to the legacy Backup Agent. All of this\ninformation applies to MongoDB databases running  FCV (Feature Compatibility Version)  of  4.0  or\nearlier. Run the Backup Agent on a host that: Is separate from your MongoDB instances. This avoids system resource\ncontention. Can connect to your MongoDB instances. Check network settings for\nconnections between the agent and MongoDB hosts. For a list of\nneeded ports, see\n open ports for agents . Has at least 2 CPU cores and 3 GB of RAM above platform\nrequirements. With each backup job it runs, the Backup Agent further\nimpacts host performance. There is no technical restriction that prevents the Backup Agent and\nthe Monitoring from running on a single system or host. However,\nboth agents have resource requirements, and running both on a single\nsystem can affect the ability of these agents to support your\ndeployment in  Cloud Manager . The resources required by the Backup Agent depend on rate and size\nof new oplog entries (i.e. total oplog gigabyte/hour produced.)\nThe resources that the Monitoring requires depends on the number\nof monitored  ~bin.mongod  instances and the total number of\n databases  provided by the  ~bin.mongod \ninstances. You can run multiple Backup Agents for high availability. If you do,\nthe Backup Agents must run on different hosts. When you run multiple Backup Agents, only one agent per project is the\n primary agent . The primary agent performs the backups. The\nremaining agents are completely idle, except to log their status as\nstandbys and to periodically ask  Cloud Manager  whether they should become the\nprimary. The Backup Agent writes a small token called a  checkpoint  into\nthe oplog of the source database at a regular interval. These tokens\nprovide a heartbeat for backups and have no effect on the source\ndeployment. Each token is less than 100 bytes. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. Checkpoints The impact of the initial backup synchronization should be similar to\nsyncing a new secondary replica set member. The Backup Agent does not\nthrottle its activity, and attempts to perform the sync as quickly as\npossible. Backup  always  connects to the  Cloud Manager  servers using an  TLS (Transport Layer Security) \n( HTTPS (Hypertext Transfer Protocol Secure) ) connection. Backup can connect to replica sets and shared clusters\nconfigured with  TLS (Transport Layer Security) . Namespace filtering is supported only for  Cloud Manager  versions\n 6.0.8  and later. Your MongoDB deployments must have\n featureCompatibilityVersion  values of  4.0  and earlier,\nor  6.0.1  and later. Cloud Manager  provides a  namespaces filter  that\nallows you to specify which collections or databases to back up. To edit the filter, see  Edit a Backup's Settings . Changing the\n namespaces filter  might necessitate a\nresync. If so,  Cloud Manager  handles the resync. Cloud Manager  produces a copy of your data files that you can use to seed a\nnew deployment. When you trigger the restore,  Cloud Manager  creates a link to this snapshot.\nOnce clicked,  Cloud Manager  retrieves chunks from the Snapshot Store and\nstreams them to the target host. The MongoDB Backup Restore Utility running on that host then downloads\nand applies oplog entries to reach the specified point in time. Cloud Manager  can build a restore to any point in time within a 24-hour\nperiod by replaying the oplog to the desired time. To learn how to restore replica sets and sharded clusters, see\n Restore MongoDB Deployments . No.  Cloud Manager  does not support a snapshot schedule more frequent than\nevery 6 hours. For more information, see\n Snapshot Frequency and Retention Policy . Yes. You can change the schedule through the  Edit Snapshot\nSchedule  menu option for a backed-up deployment.\nAdministrators can change the  snapshot frequency and retention\npolicy  through the\n snapshotSchedule resource  in\nthe API. Customizing snapshot frequency and retention policies give you greater\ncontrol over your  backup costs . Although we only charge you for only one copy of the data,  Cloud Manager \nstores at least 3 copies of your data in at least 2 geographic\nlocations to ensure redundancy. Cloud Manager  transmits all backups in a compressed form from the  Cloud Manager  host\nto your infrastructure. Within the U.S.,  Cloud Manager  sends snapshots at 50 to 100 Mbps. Assuming a\ncompression factor of 4x and transmission speeds of 50 Mbps,\ntransmitting a 250 GB snapshot takes 2.5 hours. In addition, point-in-time restores depend upon the amount the oplog\nentries that your host must apply to the received snapshot to roll\nforward to the requested point-in-time of the backup. Backup conducts basic corruption checks and provides an alert if any\ncomponent (e.g. the agent) is down or broken, but does not perform\nexplicit data validation. When it detects corruption,  Cloud Manager  errs on\nthe side of caution and invalidates the current backup and sends an\nalert. You can request a restore via  Cloud Manager , where you can then choose which\nsnapshot to restore and how you want  Cloud Manager  to deliver the restore. All\nrestores require 2-factor authentication. If you have SMS set up,  Cloud Manager \nwill send an authorization code via SMS. You must enter the\nauthorization code into the backup interface to begin the restore\nprocess. From India, use Google Authenticator for two-factor\nauthentication. Google Authenticator is more reliable than\nauthentication with SMS text messages to Indian mobile phone\nnumbers (i.e. country code 91). Cloud Manager  delivers restores as  tar.gz  archives of MongoDB data files. To learn more about restores, see\n Restore MongoDB Deployments . If your MongoDB deployment experiences a\n rollback , then  Cloud Manager  also\nrolls back the backed-up data. Cloud Manager  detects the rollback when a\n tailing cursor  finds a mismatch in\ntimestamps or hashes of write operations.  Cloud Manager  enters a rollback\nstate and tests three points in the oplog of your replica set's\n primary  to locate a common point in history.  Cloud Manager  rollback\ndiffers from MongoDB  secondary  rollback in that the common\npoint does not necessarily have to be the most  recent  common point. When  Cloud Manager  finds a common point, the service invalidates oplog entries\nand snapshots beyond that point and rolls back to the most recent\nsnapshot before the common point.  Cloud Manager  then resumes normal backup\noperations. If  Cloud Manager  cannot find a common point, a\n resync  is required. If the Backup Agent's  tailing cursor  cannot\nkeep up with your deployment's  oplog , then you must\n resync your backups . This scenario might occur if: This feature is incompatible with MongoDB 4.2 with  FCV (Feature Compatibility Version)  of  4.2 . Your application periodically generates a lot of data, shrinking the\nprimary's oplog window to the point that data is written to the\noplog faster than  Cloud Manager  can consume it. If the Backup Agent is running on an under-provisioned or over-used\nmachine and cannot keep up with the oplog activity. If the Backup Agent is down for a period of time longer than the\noplog size allows. If you bring down your agents, such as for\nmaintenance, restart them in a timely manner. For more information\non oplog size, see\n Replica Set Oplog  in the MongoDB\nmanual. If you delete all replica set data and deploy a new replica set with\nthe same name, as might happen in a test environment where\ndeployments are regularly torn down and rebuilt. If there is a rollback, and  Cloud Manager  cannot find a common point in the\noplog. If an oplog event tries to update a document that does not exist in\nthe backup of the replica set, as might happen if syncing from a\nsecondary that has inconsistent data with respect to the primary. If you\n create an index in a rolling fashion .",
            "code": [],
            "preview": "This FAQ addresses common questions about Cloud Manager and how it backs up and\nrestores databases and collections.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-mongodb-34-eol",
            "title": "FAQ: Automation EoL for MongoDB 3.4",
            "headings": [
                "What is happening?",
                "When is this happening?",
                "What does \u201cunmanaged\u201d mean?",
                "What are my options to prepare for February 10?",
                "What about Backup and Monitoring?"
            ],
            "paragraphs": "This addresses common questions about Automation End of Life for MongoDB 3.4 in Cloud Manager. The Automation Agent is ending support for MongoDB 3.4 in Cloud\nManager. MongoDB 3.4 will reach its\n End of Life in February of 2022 . Starting on February 10, 2022 MongoDB Servers running 3.4 in Cloud\nManager will be unmanaged, meaning removed from Automation. It means Automation will no longer manage your MongoDB 3.4 deployments. To use Automation in Cloud Manager after February 10, 2022, you must\nmanually upgrade the cluster(s) and reimport the cluster(s) to be\nmanaged. Unmanaged simply means removed from Automation, your MongoDB\ninstallation will not be impacted in any other way. Upgrade your 3.4 cluster  to a\nsupported MongoDB Version (3.6 or later) before February 10 via Cloud\nManager. Backup and monitoring are not directly impacted by this EoL. Any\nMonitoring or Backup features you use that depend on Automation provided\nservices will no longer function after February 10 for 3.4 deployments.\nThis includes, but is not limited to: MongoDB log management, Data Explorer, Performance Advisor, and Automated Restores.",
            "code": [],
            "preview": "This addresses common questions about Automation End of Life for MongoDB 3.4 in Cloud Manager.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-mongodb-agent",
            "title": "FAQ: MongoDB Agent",
            "headings": [
                "General",
                "What is the MongoDB Agent?",
                "When was the MongoDB Agent in Cloud Manager launched?",
                "When must I switch to the MongoDB Agent?",
                "Can I update per cluster or per node?",
                "Did the Cloud Manager UI change?",
                "Does the Cloud Manager API support the MongoDB Agent?",
                "Can I programmatically upgrade to MongoDB Agent via the API?",
                "Does the new installer use a different filename?",
                "I have a PEM Key File and Password(s) set for my legacy Automation, Monitoring or Backup Agents? What should I know when I switch to the MongoDB Agent?",
                "I only use the legacy Monitoring Agent, what does this mean for me?",
                "I only use the legacy Monitoring and Backup Agents, what does this mean for me?",
                "My clusters are already managed using all 3 legacy Agents, what will happen?",
                "What about the three MongoDB Agent Users?"
            ],
            "paragraphs": "This addresses common questions about the MongoDB Agent. The MongoDB Agent helps you manage, monitor, and back up your MongoDB\ninstances. Cloud Manager  rolled out the MongoDB Agent between May and June 2019.\nYou must update as soon as possible to the MongoDB Agent because\nthe legacy Agents are now EOL. Now. Any legacy agent update requires switching to the MongoDB Agent.\nYou must update all clusters in the project. Once updated, the\n Cloud Manager  console renders the new interface for the MongoDB Agent. No. Updates to MongoDB Agent must be done for all clusters in a project\nsimultaneously. Yes. The Agent(s) and Servers tabs were updated to reflect this change. Yes. Yes. No. The name for the installer is  mms-automation  to make the update\neasier. When you switch to using the MongoDB Agent, these settings are preserved.\nIf you previously set a  PEM (Privacy-Enhanced Mail)  Key File and Password in the  Security  >\n Settings  section of  Cloud Manager ,  Cloud Manager  uses the current Automation\nAgent's  PEM (Privacy-Enhanced Mail)  key file and Password as the MongoDB Agent  PEM (Privacy-Enhanced Mail)  Key File\nand Password. Any existing Monitoring and Backup  PEM (Privacy-Enhanced Mail)  Key File and password(s) are\nexported into the new custom configuration section for  Monitoring and\nBackup  on the MongoDB Agent UI page. A warning displays in the\n Configure Cloud Manager Agents  section\n( Security  >  Settings )\nthat the values from the custom configuration section override these values. The MongoDB Agent provides support in this case. The process of switching\nto using the MongoDB Agent proceeds as follows: From this point forward, the MongoDB Agent updates itself after you\nchoose the  Confirm and Deploy  option for the new version.\nYou no longer need to download the MongoDB Agent each time a new version\nbecomes available! When the MongoDB Agent is available, you see the banner\nnotification that your Monitoring Agent is out of date. When you are ready to switch, click  Update  in the\nbanner. A workflow that guides you through the update process\nstarts. Read a MongoDB Agent description with a link to documentation. Specify custom Monitoring configuration options that you use for\nyour  Cloud Manager  project. Download and install the MongoDB Agent.  Cloud Manager  verifies that the\nMongoDB Agent is installed correctly on the list of specified servers. Previously configured  authentication methods continue to work.\nYou provide the MongoDB authentication information in\n Monitoring Settings  uder the   menu. Once you install the MongoDB Agent on a server, the MongoDB Agent enables\nthe Monitoring for projects where Monitoring  existed as a\nstandalone Agent before switching to theMongoDB Agent. The MongoDB Agent puts the previously used  Monitoring Agents into\nstandby mode and no longer shows them in the UI. The previously used standalone Monitoring Agents can no longer monitor\ninstances. You can stop and remove them when ready. The MongoDB Agent supports this use case. The flow for switching to the\nMongoDB Agent proceeds as follows: From this point forward, the MongoDB Agent updates itself if you choose\nto use the  Confirm and Deploy  option for a new version. You\nno longer need to download the MongoDB Agent each time a new version\nbecomes available! When the MongoDB Agent is available, you see the banner\nnotification that your Monitoring and Backup Agents are out of date. When you are ready to update, click  Update  in the\nbanner. A workflow that guides you through the update process\nstarts. Read MongoDB Agent description with a link to documentation. Specify custom Monitoring and Backup configuration options that you\nuse for your  Cloud Manager  project. Download and install the MongoDB Agent.  Cloud Manager \nverifies that the MongoDB Agent been installed correctly on the\nlist of known servers. Previous authentication methods continue to work. You provide\nMongoDB authentication information in  Monitoring Settings \nunder the   menu. To specify Backup user\nsettings, go to  Backup  under  Options  >\n  >  Edit Credentials . Once the MongoDB Agent is installed on a server, it enables the\nMonitoring and Backup in projects where the Agents were previously\nconfigured. The MongoDB Agent puts the previously used  Monitoring and Backup Agents\ninto standby mode and no longer shows them in the UI. The previously\nused standalone Monitoring Agents can no longer monitor instances.\nYou can stop and remove them when ready. The update flow proceeds as follows: From this point forward, the MongoDB Agent works as a single process for\nAutomation, Monitoring, and Backup. When the MongoDB Agent is available, you see the banner\nnotification that your legacy Agents are out of date. When you are ready to update, click  Update  in the\nbanner. A workflow that guides you through the update process\nstarts. Read the MongoDB Agent description with link to documentation. Review  a list of your current servers and update them to the\nMongoDB Agent. As a part of this update process the MongoDB Agent: Stops any legacy Monitoring and Backup Agents. Enables Monitoring and Backup on the servers where Monitoring\nand  Backup were running as Agents. Removes the binaries for the stopped Monitoring and Backup Agents. Unlocks the  mms-monitoring-agent  or  mms-backup-agent \nusers in your MongoDB instances so you can delete them, if\ndesired. The MongoDB Agent uses the  mms-automation  user to\nconnect to your instances. MongoDB consolidated the three MongoDB users that the legacy Automation\nAgent used ( mms-automation ,  mms-monitoring-agent ,\n mms-backup-agent ) into one user. This user,  mms-automation , can\nautomate, monitor, and back up instances. MongoDB didn't remove the previous\nMongoDB users in case you use those users in other projects. However,\n Cloud Manager  unlocked these users in its interface as part of the update so that\nyou may delete them. I mostly manage my clusters with the Automation Agent but I have a\nStandalone legacy Backup and Monitoring Agents, what does this mean for me?\n---------------------------------------------------------------------------------------------------------------------------------------------------------- You get both update flows: one for any standalone Agent, as described in\nthe previous sections: I only use the legacy Monitoring Agent, what does this mean for me?  or I only use the legacy Monitoring and Backup Agents, what does this mean for me? For those servers where Automation manages legacy Monitoring and Backup Agents,\nsee\n My clusters are already managed using all 3 Agents, what will happen? .",
            "code": [],
            "preview": "This addresses common questions about the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-monitoring",
            "title": "FAQ: Monitoring and Alerts",
            "headings": [
                "Host Configuration",
                "How do I add a new host or server?",
                "Can I monitor Kerberos-enabled instances?",
                "Monitoring",
                "Do I need an agent for every MongoDB instance?",
                "Where should I run the agent?",
                "Can I run the agent on an AWS micro server?",
                "Why can't the agent connect to my host?",
                "Why does the agent connect with hostnames instead of IP addresses?",
                "How do I setup and configure the agent?",
                "How do I disable Monitoring in Cloud Manager?",
                "Data Presentation",
                "What are all those vertical bars in my charts?",
                "Data Retention",
                "What is the data retention policy for Cloud Manager?",
                "Alerts",
                "What do the alert conditions mean?",
                "What alerts are configured by default?"
            ],
            "paragraphs": "This addresses common questions about  Cloud Manager  and how it monitors\nMongoDB instances and alerts you of issues with those deployments. See  Add Existing MongoDB Processes to  Cloud Manager . Yes.  Cloud Manager  does support monitoring for Kerberos-enabled MongoDB\ninstances. To learn how this works, see\n Configure the MongoDB Agent for Kerberos . No. In your  Cloud Manager  project, a single agent connects to all\nMongoDB databases. Configure firewalls to allow the\nagent to connect across data centers and servers. Beginning with agent version 5.0.0, you can activate Monitoring with multiple agents\nto distribute monitoring assignments and provide failover.\n Cloud Manager  distributes monitoring assignments among up to 100 running\nagents. If you run more than 100 agents, the\nadditional agents behave as \"standby\" agents.\nFor details, see  Manage Monitoring Function . Cloud Manager Premium  uses 10-second granularity for monitoring\nmetrics. The amount of resources the agent requires varies depending\non infrastructure size, the number of servers and the databases it is\nmonitoring. Run the agent on an existing machine with additional\ncapacity that  does not  run a  mongod  instance. You may\nalso run the agent on a smaller dedicated instance. The agent load scales with the number of monitored  mongod \nplus  mongos  processes and the number of databases in your MongoDB\nenvironment. For production environments, it is recommended to install the\nagent on a dedicated server, and not on the\nthe same host as a data bearing  mongod  instance. This\nallows you to perform maintenance on the  mongod  and its\nhost without affecting the monitoring for your deployment.\nAdditionally, an agent may contend for resources with the\n mongod . You can install the agent on the same system as an\n arbiter , a  mongos , or an application server depending on the\nrequirements of these services and available resources. If you monitor five or fewer  mongod  instances, you can use an  AWS (Amazon Web Services) \nmicro server. The most common problem is that the agent is unable to resolve the\nhostname of the host. Check DNS and the  /etc/hosts  file. The second most common problem is that there are firewall rules in\nplace that prohibit access to the host from the agent. To test the connection, login to the host running the agent and try\nto connect using  mongosh : Cloud Manager  does not support port forwarding. By default, the agent resolves hostnames to connect. If\nthe agent cannot connect by resolving a hostname, you can force the\nagent to prefer an IP address over its corresponding\nhostname for a specific IP address. Preferred hostnames also allow you\nto specify the hostname to use for servers with multiple aliases. This\nprevents servers from appearing multiple times under different names\nin the  Cloud Manager  interface. To create a preferred hostname, go to\n Project Settings  and add a\n Preferred Hostnames  entry. For details, see\n Edit Project Settings See the  README  file included in the agent download. See  Deactivate Monitoring . A  red bar  indicates a server restart. A  orange bar  indicates the server is now a primary. A  brown bar  indicates the server is now a secondary. Cloud Manager  retains two distinct types of data: metrics, which describe\nusage; and snapshots, which back up your data. Data-retention policies, as defined in the  Terms of Service , are\nalways subject to change. Cloud Manager  preserves: Cloud Manager  preserves metric data at the granularities specified for your  Cloud Manager  plan\nSee  Monitoring Metrics Per  Cloud Manager  Plan . Data-retention policies,\nas defined in the  Terms of Service , are always subject to change. Snapshots according to their  retention policy . For a reference on the alert conditions, see  Review Alert Conditions . See  Configure Alert Settings  for the default alert\nconfigurations as well as steps to add new alerts or modify existing\nalerts, including modifying the alert frequency.",
            "code": [
                {
                    "lang": "sh",
                    "value": "mongosh <hostname>:<port>/test"
                }
            ],
            "preview": "This addresses common questions about Cloud Manager and how it monitors\nMongoDB instances and alerts you of issues with those deployments.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-billing",
            "title": "FAQ: Billing",
            "headings": [
                "Why did my Cloud Manager payment fail?"
            ],
            "paragraphs": "Payments will fail if there is an issue with your\n Payment Method . To learn how to verify your\n Payment Method  and retry your payment, see\n Retry a Failed Payment . Customers in the European Economic Area (EEA) may experience payment\nfailures due to Strong Customer Authentication (SCA), a European\nregulatory requirement. To learn how to authenticate a credit card and\ncomply with  SCA (Strong Customer Authentication) , see\n Strong Customer Authentication (SCA) .",
            "code": [],
            "preview": "Payments will fail if there is an issue with your\nPayment Method. To learn how to verify your\nPayment Method and retry your payment, see\nRetry a Failed Payment.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-automation",
            "title": "FAQ: Automation",
            "headings": [
                "What versions of MongoDB does Cloud Manager manage?",
                "How does Cloud Manager manage MongoDB deployments?",
                "How does Cloud Manager perform maintenance on cluster nodes?",
                "How many agents do I need?",
                "Is any MongoDB data transferred by the agent?",
                "Will Cloud Manager handle failures during an upgrade?",
                "What types of deployment can I create in Cloud Manager?",
                "Can I deploy MongoDB to a cloud provider with Cloud Manager?",
                "How does an AWS security group affect access to MongoDB instances?"
            ],
            "paragraphs": "This addresses common questions about  Cloud Manager  and its Automation\nfeatures. Cloud Manager  can automate management operations for your monitored MongoDB\nprocesses, allowing you to reconfigure, stop, and restart MongoDB\nthrough the  Cloud Manager  interface. Cloud Manager  Automation can run only on 64-bit architectures. For specific  Cloud Manager  functions and supported MongoDB versions, see\n MongoDB Compatibility Matrix . After you provision servers in  Cloud Manager  or deploy the agent\nin the environment of the MongoDB deployment, each agent\nperiodically communicates with  Cloud Manager  and performs any required work. Agents constantly reassess their environment to adapt their work as\nnecessary. As part of this routine activity, the agent establishes\nfrequent short-lived connections to the cluster members. If an agent\nencounters an issue, such as network connectivity problems or  Cloud Manager \nfailure, the agents adjust their work to compensate and safely arrive at\ntheir goal state. Agents create plans to move from their current state to a goal state.\nPlans execute in steps, where each step is autonomous and independent\nof other steps. For an installation, the plan involves downloading MongoDB, starting\nthe process with the appropriate command line options, initializing\nthe replica set, waiting for a healthy majority. The configuration\nreaches goal state when the replica set is active and has a healthy\nmajority. Cloud Manager  performs a  rolling restart  when you perform maintenance\non nodes in a cluster. The agent updates nodes in a cluster one-by-one,\nalways maintaining a primary node, until all nodes are updated to\nmaintain cluster availability during a maintenance period. For each secondary node in the cluster, the agent: After the secondary nodes are updated, the agent: In  Cloud Manager , the agent performs rolling restarts on cluster nodes for\nmaintenance tasks, including the following: Restarts the  mongod  process running on the node in  standalone \nmode. Performs the maintenance task. Restarts the  mongod  process running on the node in  replSet \nmode. Steps the primary down using the  rs.stepDown()  command. Triggers an election for a new primary node. Performs the maintenance task on the former primary node. Restarts the  mongod  process running on the former primary node in\n replSet  mode to join the cluster as a secondary node. Rotating  KMIP (Key Management Interoperability)  keys. Rotating keyfiles. Changing  mongod  configuration arguments. Upgrading or downgrading  TLS (Transport Layer Security) ,  auth , or  clusterAuth  mode. Changing the MongoDB version. Changing the oplog size. Removing a process from a replica set. Cancelling a restore from backup. Enabling the Profiler Prepare for Cluster Maintenance To use Automation, you must have an agent running on every host where\na managed MongoDB instance runs. Agents do  not  transmit any data records from a MongoDB deployment.\nThe agents only communicate deployment configuration information and\nMongoDB logs. Generally speaking, yes. The design of the management and automation\ncomponents of  Cloud Manager  do not account for  all  possible failures; however\nthe architecture of the system can work around many types of failures. Using  Cloud Manager , you can configure all MongoDB deployment types: sharded\nclusters, replica sets, and standalones. The shards in a sharded cluster  must  be replica sets. That is, a\nshard cannot be a standalone  mongod . If you must run a shard\nas a single  mongod  (which provides  no  redundancy or\nfailover), run the shard as a single-member replica set. You may not upgrade a sharded MongoDB deployment to version 3.4 if\nthe deployment uses mirrored  mongod  instances as config\nservers. To allow the sharded deployment to be upgraded, see\n Convert Config Servers to a Replica Set . The\nconversion requires that the sharded deployment run MongoDB version\n3.2.4 or later. Deployments running previous versions must upgrade\nto version 3.2.4 before an upgrade to version 3.4. Yes. See  Provision Servers . The AWS security group affects whether MongoDB instances can\ncommunicate with each other within the deployment and affects access to\nthe deployment from MongoDB clients, such as  mongosh  or a\n driver . For complete\ndocumentation on configuring security group rules for  Cloud Manager  access,\nsee  Firewall Configuration .",
            "code": [],
            "preview": "This addresses common questions about Cloud Manager and its Automation\nfeatures.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "reference/faq/faq-administration",
            "title": "FAQ: Administration",
            "headings": [
                "How do I create a MongoDB Cloud Manager account?",
                "Can I reset my password?",
                "How do I add a user to my organization or project?",
                "Can I configure multiple Google Authenticator apps to use the same account?",
                "How do I close my Cloud Manager project?",
                "How do I subscribe to the Cloud Manager Status page?",
                "As an existing Cloud Manager account holder, how do I create a new MongoDB Atlas organization?"
            ],
            "paragraphs": "This addresses how to administer  Cloud Manager  users, organizations, and\nprojects. To get started with  Cloud Manager , see  Start a Free Trial . Yes, see  Edit Personal Settings . For instructions on adding users to your organization or project, see\n Cloud Manager  Access . Yes. By selecting the  Can't scan the barcode?  option during\nthe procedure to  Configure Two-Factor Authentication . The option\nprovides a common key that multiple Google Authenticator apps can use. A user with the  Project Owner  access for the projects can\nclose a project. You can delete a project from the project's  Settings  page.\nFor details, see  Delete One Project . The operation cannot be undone. Subscribe to  http://status.cloud.mongodb.com/rss \nto receive  Cloud Manager  status updates. In  Cloud Manager : Click on your user name in the upper-right hand corner. Select  Organizations . Click  New Organization . Organizations  and  Projects",
            "code": [],
            "preview": "This addresses how to administer Cloud Manager users, organizations, and\nprojects.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "billing/invoices",
            "title": "View or Download Your Invoices",
            "headings": [
                "Current Invoice",
                "View Your Current Invoice",
                "Navigate to the Billing page.",
                "Click View Current Invoice.",
                "Download Your Current Invoice",
                "Navigate to the Billing page.",
                "Click View Current Invoice.",
                "Choose the format of your invoice.",
                "Past Invoices",
                "View Past Invoices",
                "Navigate to the Billing page.",
                "Click the Invoices tab.",
                "Filter your list of invoices, if desired.",
                "Open your desired invoice.",
                "Download Past Invoices",
                "Navigate to the Billing page.",
                "Click the Invoices tab.",
                "Filter your list of invoices, if desired.",
                "Download your desired invoice."
            ],
            "paragraphs": "Cloud Manager  charges for services provided at the\n organization  level.  Cloud Manager  posts charges the\nday after you incur the charges. To view your organization's current invoice: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Cloud Manager  displays the current invoice. The  Running Invoice Total  doesn't include applied\ncredits. To download the charges and payments for your current invoice: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Cloud Manager  displays the current invoice. The  Running Invoice Total  doesn't include applied\ncredits. Find  Export To  heading in the upper right corner of\nthe  Invoice  page. To the right of  Export To , click the button for the\nfile format in which you want to download the invoice. Your\nchoices include: PDF TXT CSV To view all invoices for your  Cloud Manager  organization: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Cloud Manager  displays a list of your invoices. You can filter the invoices by status and date. To filter by status, click the  Status  drop-down and\nselect the status to which you want to limit the results: Status Invoice Type Pending Invoices still pending payment. Free Invoices with a total charge of  $0.00 . Successful Invoices that are paid. To filter by invoice date, set the  From  or\n To  date inputs to the required date range. If you leave  From  blank,  Cloud Manager  sets the lower\ndate boundary to the organization's creation date. If you leave  To  blank,  Cloud Manager  sets the upper date\nboundary to the current date. For the desired invoice, click the link shown in either the\n Invoice Date  or  Invoice Period  columns. To download a past invoices for your  Cloud Manager  organization: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Cloud Manager  displays a list of your invoices. You can filter the invoices by status and date. To filter by status, click the  Status  drop-down and\nselect the status to which you want to limit the results: Status Invoice Type Pending Invoices still pending payment. Free Invoices with a total charge of  $0.00 . Successful Invoices that are paid. To filter by invoice date, set the  From  or\n To  date inputs to the required date range. If you leave  From  blank,  Cloud Manager  sets the lower\ndate boundary to the organization's creation date. If you leave  To  blank,  Cloud Manager  sets the upper date\nboundary to the current date. For the desired invoice, click one of the invoice format buttons in\nits  Download As  column. These file formats include: PDF TXT CSV",
            "code": [],
            "preview": "Cloud Manager charges for services provided at the\norganization level. Cloud Manager posts charges the\nday after you incur the charges.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "billing/international-billing",
            "title": "Process International Payments",
            "headings": [
                "Strong Customer Authentication",
                "Verify SCA Compliance",
                "Edit Payment Method",
                "Failed Payment Email",
                "Click the link in the failed payment email.",
                "Click the Invoice Date of the failed invoice.",
                "Click the Invoices tab.",
                "Retry the failed payment.",
                "Retry Failed Payment",
                "VAT ID Number",
                "Contact Support"
            ],
            "paragraphs": "SCA (Strong Customer Authentication)  is a new European regulatory requirement to reduce fraud and make\nonline payments more secure. All payment service providers are required\nto build additional authentication into their checkout flow once  SCA (Strong Customer Authentication) \ngoes into effect. Customers in European Economic Area (EEA) may be\nrequired to authenticate their credit cards depending on the card's\nissuer, starting September 14, 2019. If your credit card issuer\nrequires authentication, review the following\n Verify SCA Compliance  to continue paying for  MongoDB Cloud Manager  seamlessly\nwith a credit card. Marketing emails have been sent out to affected customers announcing\nthe policy change and the steps necessary to comply with  SCA (Strong Customer Authentication) . To authenticate your credit card to comply with Strong Customer\nAuthentication: Existing users can edit their  Payment Method  to\nauthenticate a new credit card or reauthenticate an existing credit\ncard to comply with  SCA (Strong Customer Authentication) . To learn more, see\n View and Edit Your Billing Profile . Cloud Manager  sends an email after a payment failure with a link to\nyour invoices. Existing users can authenticate a credit card when\nretrying a failed payment. To retry the failed payment from the failed\npayment email: Cloud Manager  displays a list of your invoices. Under the  Payments  section, click  Retry \nnext to the failed payment. Existing users can authenticate a credit card when retrying a failed\npayment. To learn more, see  Retry a Failed Payment . If your organization's billing or invoice address falls within the\nEuropean Union, add your  VAT (value-added tax)  ID Number on the\n Payment Method  or the  Billing Profile  modal. Cloud Manager  displays the  VAT (value-added tax)  field only if you select a country other\nthan the United States. If your country is a member of the  EU (European Union) ,\n MongoDB Atlas  charges  VAT (value-added tax)  if: You don't enter a  VAT (value-added tax)  ID Number. You have an invalid  VAT ID Number . Your company's billing or invoice address is in Ireland. Contact  MongoDB Support  for further assistance.",
            "code": [],
            "preview": "SCA (Strong Customer Authentication) is a new European regulatory requirement to reduce fraud and make\nonline payments more secure. All payment service providers are required\nto build additional authentication into their checkout flow once SCA (Strong Customer Authentication)\ngoes into effect. Customers in European Economic Area (EEA) may be\nrequired to authenticate their credit cards depending on the card's\nissuer, starting September 14, 2019. If your credit card issuer\nrequires authentication, review the following\nVerify SCA Compliance to continue paying for MongoDB Cloud Manager seamlessly\nwith a credit card.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/pricing",
            "title": "Process Payment for Cloud Manager",
            "headings": [
                "Pricing and Billing",
                "Server Pricing",
                "Backup Pricing",
                "Size",
                "Snapshot Frequency and Retention",
                "Lowering the Monthly Rate",
                "Frequency and Retention Settings",
                "Excluding Databases or Collections",
                "View Your Plan Type",
                "Your Billing Profile",
                "View and Edit Your Billing Profile",
                "Navigate to the Billing page.",
                "Click Edit in the Payment Method card.",
                "Update your Invoice Address details as needed.",
                "Accept or decline your changes.",
                "Payment Method",
                "Set Payment Method",
                "Navigate to the Billing page.",
                "Click Edit in the Payment Method card.",
                "Update your Billing Address details as needed.",
                "Click Next.",
                "Update your Payment Method details as needed.",
                "Accept or decline your changes.",
                "Apply Credits or Activate a Prepaid Plan",
                "Navigate to the Billing Overview.",
                "Click either the Apply Code or Activate Plan button.",
                "Enter your Activation Code.",
                "Click Submit.",
                "Retry a Failed Payment",
                "Navigate to the Billing page.",
                "Verify your Payment Method.",
                "Click the Invoices tab.",
                "Retry the payment."
            ],
            "paragraphs": "Cloud Manager  bills customers at the organization level. Each organization has\nits own account, plan, and billing method. All projects in an\norganization share the same billing settings. Visit  MongoDB Pricing  to learn about\ncurrent pricing. Cloud Manager  charges your credit card once each month. Level Monthly Charge Basis Cloud Manager  Standard Server Hours  and  Backup Pricing Cloud Manager  Premium Backup Pricing Cloud Manager  charges self-serve customers mid-month if they exceeded their\n PENDING_INVOICE_OVER_THRESHOLD \nthreshold. After successful payment, this threshold increases. These charges apply to  Cloud Manager  Standard. The monthly charges include a charge per billable host.  Cloud Manager  charges\nfor a host if it runs a  mongod  process and bears data.  Cloud Manager  doesn't\ncharges for config servers, arbiters and  mongos  routers. Cloud Manager  annualizes the monthly rate per host then divides by  365 *\n24  to calculate an  Hourly Server Rate  per host.  Cloud Manager  samples\nyour account once every hour to determine the count of running hosts. The following settings affect backup pricing: Snapshot size Snapshot frequency and retention Using  queryable backups  doesn't\naffect your backup pricing. Monthly backup costs are based on the uncompressed size of your most\nrecent set of snapshots. The cost per GB per month for backup pricing is as specified on\n MongoDB Cloud Manager web site . The monthly\nrate is annualized and then divided by 365 to arrive at a Daily Backup\nRate per GB. The first 1 GB per replica set is free. The size of the snapshot is roughly equivalent to the size of all\ndocuments and all indexes for all the databases backed up. To retrieve\nthe size of the documents and indexes for a given database in\ngigabytes, you can issue the  db.stats()  method and\nsum the  dataSize  and  indexSize  fields. Cloud Manager  bases this rate on taking 28 snapshots at steady state: This creates a total  28  snapshots ( 8 + 7 + 2 + 11 ).  Cloud Manager \nadjusts the backup rate each day based on the following formula: Six-hour snapshots are kept for two days Daily snapshots for one week Weekly snapshots for one month Monthly for one year Snapshot Frequency and Retention Policy . Lowering snapshot frequency or retaining fewer snapshots lowers the\ncost per gigabyte. Retaining an increased number of snapshots or\nincreasing the snapshot retention increases the cost per gigabyte. To change a backed-up deployment's schedule, see\n Edit Snapshot Schedule and Retention Policy Administrators can change\n snapshot frequency and retention \nthrough the\n snapshotSchedule resource  in\nthe  API (Application Programming Interface) . Lowering snapshot frequency increases how long it takes to\nbuild a point-in-time restore. To reduce the size of your snapshots, you can exclude non-mission\ncritical databases and collections from your backup. To learn how to exclude databases or collections, see\n Edit the Namespaces Filter . Cloud Manager  displays your plan at the top left the  Cloud Manager  page. Details on each plan, see\n MongoDB Cloud Manager web site . Monitoring metrics for each plan, see\n Monitoring Metrics Per  Cloud Manager  Plan . To view and edit your billing profile: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Field Necessity Action Billing Email Address Required Type the email address to which  Cloud Manager  should send\n billing alerts . Country Required Select the country for your billing address. You can also\nstart typing the name of the country and then select it from\nthe filtered list of countries. Address Line 1 Required Type the mailing address for your billing address. Address Line 2 Optional Type an additional line for the mailing address for your\nbilling address. City Required Type the name of the city for your billing address. State/Province/Region Required Type or select the political subdivision in which your billing\naddress exists. The label and field change depending on what\nyou selected as your  Country : If you select  United States  as your  Country , this\nlabel changes to  State . The field changes to a dropdown\nmenu of U.S. states. You can also start typing the name of\nthe state and then select it from the filtered list of\nstates. If you select  Canada  as your  Country , this label\nchanges to  Province . The field changes to a dropdown\nmenu of Canadian provinces. You can also start typing the\nname of the province and then select it from the filtered\nlist of provinces. If you select any other country as your  Country , this\nlabel changes to  State/Province/Region . The field\nchanges to a text box. Type the name of your province,\nstate, or region in this box. ZIP or Postal Code Required Type the ZIP (U.S.) or Postal Code (other countries) for your\nbilling address. VAT Number Conditional Cloud Manager  displays the  VAT ID  field if you\nselect a country other than the United States. To learn more about VAT, see\n VAT ID . If your country is a member of the  EU (European Union) ,\n MongoDB Atlas  charges  VAT (value-added tax)  if: You don't enter a  VAT (value-added tax)  ID Number. You have an invalid  VAT ID Number . Your company's billing or invoice address is in Ireland. To accept your changes, click  Submit . To decline your changes, click  Cancel . To pay for your  Cloud Manager  usage, you can pay with an\n accepted payment method . MongoDB accepts the following payment methods through the  Cloud Manager \nconsole: To set your payment method: You must be an  Organization Owner \nor  Organization Billing Admin  to set a payment method. Credit card PayPal Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Field Necessity Action Country Required Select the country for your billing address. You can also\nstart typing the name of the country and then select it from\nthe filtered list of countries. VAT ID Conditional Cloud Manager  displays the  VAT ID  field if you\nselect a country other than the United States. To learn more about VAT, see\n VAT ID . If your country is a member of the  EU (European Union) ,\n MongoDB Atlas  charges  VAT (value-added tax)  if: You don't enter a  VAT (value-added tax)  ID Number. You have an invalid  VAT ID Number . Your company's billing or invoice address is in Ireland. Address Line 1 Required Type the mailing address for your billing address. Address Line 2 Optional Type an additional line for the mailing address for your\nbilling address. City Required Type the name of the city for your billing address. State/Province/Region Required Type or select the political subdivision in which your billing\naddress exists. The label and field change depending on what\nyou selected as your  Country : If you select  United States  as your  Country , this\nlabel changes to  State . The field changes to a dropdown\nmenu of U.S. states. You can also start typing the name of\nthe state and then select it from the filtered list of\nstates. If you select  Canada  as your  Country , this label\nchanges to  Province . The field changes to a dropdown\nmenu of Canadian provinces. You can also start typing the\nname of the province and then select it from the filtered\nlist of provinces. If you select any other country as your  Country , this\nlabel changes to  State/Province/Region . The field\nchanges to a text box. Type the name of your province,\nstate, or region in this box. ZIP or Postal Code Required Type the ZIP (U.S.) or Postal Code (other countries) for your\nbilling address. Click the radio button for  Credit Card  or\n Paypal . If you selected  Credit Card , type values for the\nfollowing fields: Field Necessity Action Name on Card Required Type the name that appears on your credit card. Card Number Required Type the 16-digit number that appears on your\ncredit card. American Express uses a 15-digit number. Expiration Date Required Type the expiration date for your credit card in the\ntwo-digit month and two-digit year format. CVC (Card Verification Code) Required Type the three-digit number on the back of your credit\ncard. American Express uses a 4-digit number found on\nthe front of the credit card. If you selected  PayPal : Click  Pay with PayPal . Complete the actions on the PayPal website. All projects within your organization share the same billing\nsettings, including payment method. To accept your changes, click  Submit . To decline your changes, click  Cancel . Through  MongoDB Sales , you can pay using\na: Currency other than  USD (U.S. Dollar) . Method other than a credit card or PayPal. To apply credits or activate a prepaid plan purchased from\nMongoDB Sales: You must be an  Organization Owner \nor  Organization Billing Admin  to activate a subscription. You can enter an activation code through either one. If you receive notification of a failed payment,\n verify  that  Cloud Manager  has your current credit\ncard information and retry the payment: Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. View the payment method displayed in the  Payment Method \ncard. If this method appears incorrect, click  Edit  in\nthat card. Cloud Manager  displays a list of your invoices. Locate the row with the failed payment. Click  Retry . Customers in the European Economic Area (EEA) may experience payment\nfailures due to Strong Customer Authentication (SCA), a European\nregulatory requirement. To learn how to authenticate a credit card and\ncomply with  SCA (Strong Customer Authentication) , see\n Strong Customer Authentication (SCA) .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.stats(1024*1024*1024).dataSize + db.stats(1024*1024*1024).indexSize"
                },
                {
                    "lang": "text",
                    "value": "backupRatePerMonth = $1.25 + ((snapshotAtSteadyState \u00f7 28) \u00d7 $1.25)"
                }
            ],
            "preview": "Cloud Manager bills customers at the organization level. Each organization has\nits own account, plan, and billing method. All projects in an\norganization share the same billing settings.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/two-factor-authentication",
            "title": "Manage Your Two-Factor Authentication Options",
            "headings": [
                "Configure Two-Factor Authentication",
                "Go to your Cloud Manager Two-Factor Authentication settings.",
                "Enable Two-Factor Authentication.",
                "Configure Voice/SMS Authentication.",
                "Go to your Cloud Manager Two-Factor Authentication settings.",
                "Enable Two-Factor Authentication.",
                "Configure your Cloud Manager 2FA (two-factor authentication) settings.",
                "On your mobile device or web browser, install Google Authenticator.",
                "Add Cloud Manager to Google Authenticator.",
                "Download and install the Yubico Authenticator.",
                "Insert your Yubikey into a USB port.",
                "Go to your Cloud Manager Two-Factor Authentication settings.",
                "Enable Two-Factor Authentication.",
                "Configure your Cloud Manager 2FA (two-factor authentication) settings.",
                "Add Cloud Manager to the Yubikey.",
                "Two-Factor Authentication on a Shared Account",
                "Generate New Recovery Codes",
                "Go to your Cloud Manager Two-Factor Authentication settings.",
                "Edit your Two-Factor Authentication settings.",
                "Click Show Recovery Codes.",
                "Reset Legacy Two Factor Authentication"
            ],
            "paragraphs": "Two-factor authentication provides a second layer of security for your\n Cloud Manager  account. Cloud Manager  requires  2FA (two-factor authentication)  to help users control access to their  Cloud Manager \naccounts. To log into  Cloud Manager , a user must provide their password (\"something\nyou know\"), as well as a second time-sensitive verification code,\ndelivered during authentication (\"something you have\"). By requiring\nboth factors,  Cloud Manager  can grant authentication requests with a higher\ndegree of confidence. After you enter your username and password, you are prompted for a\nsix-digit time-sensitive verification code. This code is sent to a\nseparate device, such as a mobile phone or security token, that you\ncan read and enter into  Cloud Manager  and complete your login. Cloud Manager  provides the following sources for  2FA (two-factor authentication)  verification codes: Legacy  2FA (two-factor authentication)  is deprecated. If you currently have legacy  2FA (two-factor authentication) \nenabled you can continue to use it, but it is recommended that you\nswitch  to  multi-factor authentication . To use\n multi-factor authentication ,  disable legacy two-factor authentication \nand  enable multi-factor authentication  instead. Google manages your  2FA (two-factor authentication) . You can't use  Cloud Manager \n two factor authentication \nand won't be prompted for  a Cloud Manager   2FA (two-factor authentication)  verification when you\nlog into  Cloud Manager . Google should verify your identity using\n Google 2-Step Verification If an  Organization Owner  enables  multi-factor authentication  for an\n organization , all\norganization members must enable  multi-factor authentication  individually to access the\norganization. Organization members who have not enabled  MFA (Multi-Factor Authentication)  are\nable to access  Cloud Manager , but not the organization for which  MFA (Multi-Factor Authentication)  is\nrequired. When  Cloud Manager  prompts you for a verification code,\n Cloud Manager  sends the 6-digit verification code using text\n( SMS (short message service) ) to the provided phone number. The cellular carrier's  SMS (short message service)  rates apply. When  Cloud Manager  prompts you for a verification code,\n Cloud Manager  calls the provided phone number. An automated\nsystem repeats the 6-digit verification code a total of\nthree times before hanging up. The cellular carrier's Voice Call rates apply. Cloud Manager  users who operate within a geographic region\nwith limited cellular service coverage or reliability may\nencounter delays in receiving the  2FA (two-factor authentication)  code via  SMS (short message service)  or\nVoice. Consider using a  2FA (two-factor authentication)  app or device instead. When  Cloud Manager  prompts you for a verification code, you can\nprovide one that is generated in a  2FA (two-factor authentication)  app. You must pair\nthe  2FA (two-factor authentication)  app with  Cloud Manager  first. This tutorial uses the  Google Authenticator  mobile app. There are other mobile device apps and web browser plug-ins\nthat provide  2FA (two-factor authentication)  capabilities. You can use any that support\nthe  TOTP (Time-based One-Time Password) . You can pair only one app with  Cloud Manager  at any one time. When  Cloud Manager  prompts you for a verification code, you can\nprovide one that is generated in a  2FA (two-factor authentication)   PIV (Personal Identity Verification)  device. You\nmust pair the  PIV (Personal Identity Verification)  device app with  Cloud Manager  first using an\n 2FA (two-factor authentication)  app. These devices must support  TOTP (Time-based One-Time Password) . This procedure uses a YubiKey security key, specifically\nthose that work with\n Authenticator Codes .\nOther  2FA (two-factor authentication)   PIV (Personal Identity Verification)  hardware devices that use  TOTP (Time-based One-Time Password)  should\nwork in a similar fashion. MongoDB does not endorse the aforementioned service, and\nits reference is intended only as informational. Defer to\nyour organization's procedures in selecting the\nappropriate vendor or service for supporting  2FA (two-factor authentication)  via\nsmart card or similar device. In  Cloud Manager , click your username in the top-right corner\nand select  Two-Factor Authentication . Click  2FA  in the left navigation pane. Click  Enable 2FA  or click  . When prompted for verification: If you are setting up  2FA (two-factor authentication) , enter your password. If you are editing your  2FA (two-factor authentication)  settings, enter a  2FA (two-factor authentication)  code. Click  Verify . Cloud Manager  automatically verifies the code and saves your settings. Click  Primary Method Click  Voice/SMS Number . In the  Enter your phone number  box, enter your\npreferred mobile phone number. Select your preferred method of receiving codes: Text Message (SMS)   or Voice Call (US / Canada Only) Click  Verify . Once you receive the verification code, enter that code into the\ninto the  Verify your code  boxes. Each digit is\nentered in its own box. In  Cloud Manager , click your username in the top-right corner\nand select  Two-Factor Authentication . Click  2FA  in the left navigation pane. Click  Enable 2FA  or click  . When prompted for verification: If you are setting up  2FA (two-factor authentication) , enter your password. If you are editing your  2FA (two-factor authentication)  settings, enter a  2FA (two-factor authentication)  code. Click  Verify . Click  Primary Method . Click  Google Authenticator . Although only  Google Authenticator  is displayed in the\nUI, any  TOTP (Time-based One-Time Password)  mobile app or web browser plug-in may be used. Wherever you see the phrase  Google Authenticator  in this\nprocedure, you can substitute the name of your preferred  2FA (two-factor authentication) \napp. App iOS Android Windows Phone Blackberry Google Authenticator Link Link Duo Mobile Link Link Link Authy Link Link Microsoft Authenticator Link Link Link Gauth Link Cloud Manager  automatically verifies the code and saves your settings. Start Google Authenticator. Click  + . Choose how to pair the Google Authenticator app with  Cloud Manager . If your mobile device or web browser supports scanning barcodes,\nclick  Scan a barcode . Enable the device's camera, if prompted, and point the device\nat the  Cloud Manager  page to capture the barcode. If your mobile device or web browser does not support scanning\nbarcodes, or if you prefer to enter a key, click\n Enter provided key . After the barcode is scanned or account and key are entered,\nthe Google Authenticator app produces a 6-digit code\nto verify the pairing. Cloud Manager  displays the  Cloud Manager   Account  with a\n Key . In Google Authenticator, click\n Enter provided key \nthen enter the account and key. (Duo Mobile, Authy and other apps have similar prompts.) Once you receive the verification code, enter that code into the\ninto the  Verify your code  boxes. Each digit is\nentered in its own box. Pairing third-party applications with  Duo Mobile Pairing third-party applications with  Authy Pairing third-party applications with  Microsoft Authenticator From a web browser, download the\n Yubico Authenticator \napplication. Double-click on the installer and follow the prompts. In  Cloud Manager , click your username in the top-right corner\nand select  Two-Factor Authentication . Click  2FA  in the left navigation pane. Click  Enable 2FA  or click  . When prompted for verification: If you are setting up  2FA (two-factor authentication) , enter your password. If you are editing your  2FA (two-factor authentication)  settings, enter a  2FA (two-factor authentication)  code. Click  Verify . Click  Primary Method . Click  Google Authenticator . Cloud Manager  automatically verifies the code and saves your settings. Start the Yubico Authenticator. Make sure that your web browser is open to your  Cloud Manager \n Two-Factor Authentication  modal with the\n Google Authenticator  button selected. From the  File  menu in Yubico Authenticator, select\n Scan QR code... . In the  New credential  dialog box, confirm the\nfollowing settings: Option Accepted Value Keep Default? Issuer The name you want to display in the Yubico Authenticator\napplication for  Cloud Manager . Your choice Account name Your  Cloud Manager  username. Yes Secret key Token generated from the QR code. Yes Type Method that determines when to generate a new code. Yes Algorithm Encryption algorithm the token uses. Yes Period Duration that each verification code is valid. Yes Digits Number of digits in the verification code. Yes Requires touch Indicates user must be touching the contacts on the\nYubikey when verification code is accepted. User choice Click  Save credential . The verification code displays in the Yubico Authenticator under\nthe heading you gave  Cloud Manager  as the  Issuer . Once you receive the verification code, enter that code into the\ninto the  Verify your code  boxes. Each digit is\nentered in its own box. You can copy the code from the Yubico Authenticator\napplication. Click the name you gave as  Issuer \nthen select  Copy to Clipboard  from the\n Edit  menu. A global team that shares the same  Cloud Manager  account can use Google\nAuthenticator and use the same seed code for all team members. To\ngenerate a common seed code that all team members can use, select the\n Can't scan the barcode?  link when\n Configuring Two-Factor Authentication with Google Authenticator . As a backup, you can generate recovery codes to use in place of a sent\ncode when you do not have access to a phone,  2FA (two-factor authentication)  app or  2FA (two-factor authentication)  device. Each recovery code is single-use, and you\nshould save these codes in a secure place. When you generate new\nrecovery codes, you invalidate previously generated ones. In  Cloud Manager , click your username in the top-right corner\nand select  Two-Factor Authentication . Click  2FA  in the left navigation pane. Click   to the right of\n Two Factor Authentication . When prompted for verification, enter a  2FA (two-factor authentication)  code then click\n Verify . Each time you expand this box,  Cloud Manager  generates a new set of codes. Keep the codes in a safe place. Each code can be used in conjunction\nwith your username and password to not only access  Cloud Manager  but to\nreset your security settings on  Cloud Manager . If you have legacy  2FA (two-factor authentication)  enabled and you lose access to your  2FA (two-factor authentication)  device,\nyou can reset  2FA (two-factor authentication)  for your account. Because legacy  2FA (two-factor authentication)  is deprecated, you cannot re-establish it after you\nreset it. Instead, you can  enable multi-factor authentication . The following procedure resets legacy  2FA (two-factor authentication)  for your  Cloud Manager  account.\nTo edit  multi-factor authentication  settings, see  multi-factor authentication . Log in to  Cloud Manager  with your username and password. When the  2FA (two-factor authentication)  prompt displays: Click the  Reset your two-factor authentication  link. Click  Cloud Manager user? Click here  at the\nbottom of the  Reset Two Factor Authentication \nmodal. Type your  Cloud Manager  username. Click  Reset Two Factor Authentication . Cloud Manager  emails a link to the e-mail account associated with the  Cloud Manager \nusername. Check your email. Click the link that  Cloud Manager  sent to start the  2FA (two-factor authentication)  reset procedure. Follow the directions on the  2FA (two-factor authentication)  reset page. After completing the\nreset procedure,  Cloud Manager  allows you to log in to the  Cloud Manager  account\nwithout requiring a  2FA (two-factor authentication)  code.",
            "code": [],
            "preview": "Two-factor authentication provides a second layer of security for your\nCloud Manager account.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/backup-preparations",
            "title": "Backup Preparations",
            "headings": [
                "Backup Sizing Recommendation",
                "Snapshot Frequency and Retention Policy",
                "Limits",
                "Encryption",
                "Backup Considerations",
                "Consistency and Snapshots",
                "Databases Running FCV 4.2 and Later",
                "Backup Features Supported at Present",
                "Requirements and Limitations",
                "Databases Running FCV 4.0 and Earlier",
                "Garbage Collection of Expired Snapshots",
                "Namespaces Filter",
                "Storage Engine",
                "Resyncing Production Deployments",
                "Checkpoints",
                "Snapshots when Agent Can't Stop Balancer",
                "Snapshots when Agent Can't Contact a mongod"
            ],
            "paragraphs": "Before backing up your cluster or replica set, decide how to back up\nthe data and what data to back up. This page describes items you must\nconsider before starting a backup. To learn how Backup works, see\n Backup . When sizing the backup of your data, keep the  replica set \nsize to 2 TB or less of  uncompressed data . If\nyour database increases beyond 2 TB of uncompressed data: Shard the database Keep each shard to 2 TB or less of uncompressed data These size recommendations are a best practice. They are not a\nlimitation of the MongoDB database or  Cloud Manager . Backup and restore can use large amounts of CPU, memory, storage,\nand network bandwidth. Your stated network throughput, such as 10 Gbps or 100 Gbps, is\na  theoretical  maximum. That value doesn't account for sharing\nor throttling of network traffic. Consider the following scenario: A  full  backup of your data would take  more than 30 hours to\ncomplete .  This doesn't account for disk read and write speeds, which can be,\nat most, 3 Gbps reads and 1 Gbps writes for a single or mirrored\nNVMe storage device. The time required to complete each successive incremental backup\ndepends on write load. If you  shard this database \ninto 4 shards, each shard runs its backup separately. This results\nin a backup that takes less than 8 hours to complete. You want to back up a 2 TB database. Your hosts support a 10 Gbps TCP connection from  Cloud Manager  to its\nbackup storage. The network connection has very low packet loss and a low round\ntrip delay time. These throughput figures were calculated using the  Network\nThroughput Calculator  and\nassume no additional network compression. By default,  Cloud Manager  takes a base snapshot of your data every 6 hours. If desired, administrators can change the frequency of base snapshots\nto 6, 8, 12, or 24 hours.  Cloud Manager  creates snapshots automatically on a\nschedule; you cannot take snapshots on demand. Cloud Manager  retains snapshots for the time periods listed in the following\ntable. If you  terminate a deployment's backup ,\n Cloud Manager  immediately deletes the snapshots that are within the dates\nof the current retention policy. If you  stop a deployment's backup ,  Cloud Manager  stops\ntaking new snapshots but retains existing snapshots until their listed\nexpiration date. You can change a backed-up deployment's schedule through its\n Edit Snapshot Schedule  menu option, available through the\n Backup  page. Administrators can change snapshot frequency\nand retention through the\n snapshotSchedule resource in the API . You can't change the reference time for a snapshot in  Cloud Manager . Snapshot Default Retention Policy Maximum Retention Policy Base snapshot 2 days 5 days (30 days if frequency is 24 hours) Daily snapshot 7 days 1 year Weekly snapshot 4 weeks 1 year Monthly snapshot 13 months 7 years Changes to the snapshot schedule affect your  snapshot storage\ncosts . Cloud Manager  does not backup deployments where the total number of\ncollections on the deployment meets or exceeds  100,000 . Cloud Manager  does not replicate index collection options. You can't store backups using WiredTiger encryption.\nYou can store backups using the WiredTiger storage\nengine if you don't enable encryption. If you restore\nfrom a backup, you restore unencrypted files. For clusters running MongoDB version 4.2 or and later: For clusters running MongoDB version 4.0 and earlier: Cloud Manager  maintains\n causal consistency \nwhen taking snapshots except for size statistics reported by  collStats \nand  db.[collection].count() . Size statistics reported\nby  collStats  and  db.[collection].count()  may be inccurate. Cloud Manager  coordinates the time across all\nshards for sharded clusters. This ensures that snapshots include all documents written to every\nshard and node as of the scheduled snapshot time. Cloud Manager  maintains crash-consistent snapshots. Cloud Manager  takes snapshots from each of the shards for sharded clusters\nand the Config Server Replica Sets at approximately the same time. Feature Databases running FCV 4.2 and later Databases running FCV 4.0 and earlier Backs up Data using WiredTiger Snapshots Backs up Data using the Backup Daemon Backs up Replica Sets Backs up Sharded Clusters Can Filter using Namespaces  Can Specify Sync Source Database Can Restore Data to Specific Point in Time  Can Perform Incremental Backups  Supports Snapshots that use  KMIP (Key Management Interoperability)  Encryption  Supports Snapshots that use Local Key Encryption  Supports Saving to blockstore snapshot storage Supports Saving to  S3 (Simple Storage Service)  Snapshot Storage Supports Saving to File System Storage  Supports Databases running MongoDB Enterprise Supports Databases running MongoDB Community Requires a MongoDB Agent with\n backup enabled  on every  mongod \ncluster node Namespace filtering is supported only for  Cloud Manager  versions\n6.0.8 and later. Your MongoDB deployments must have\n featureCompatibilityVersion  values of  4.0  and earlier,\nor  6.0.1  and later. Performing a  PIT (point in time)  restore requires  Ops Manager  4.2.13 or later. Cloud Manager  requires a full backup for your first backup, after a\nsnapshot has been deleted, and if the blockstore block size has\nbeen changed. Incremental backups reduce network transfer and\nstorage costs. This feature works with: MongoDB 4.0 and earlier. MongoDB 4.2.6 or later if running  FCV  4.2 or later. Querying an encrypted snapshot requires\n MongoDB Enterprise  4.2.9 and later\nor 4.4.0 and later. FCV  4.2 and later backups don't support\n local key encryption . Backups to a  FCV  4.2 or later database to a File\nSystem Store ignore\n File System Store Gzip Compression Level . To run backups and restores if you are running MongoDB 4.2 or later\nwith  FCV  4.2 or later, you: Must run  MongoDB Enterprise . Must account for the change in blockstore block size. If you\ndidn't set your block size and used the default, that block size\nchanges from 64 KB to 1 MB. This can impact storage usage. Must ensure the hostnames in your replica set configuration match\nthe hostnames that the MongoDB Agent uses, or that your\n host mappings  contain the correct hostnames. You\ncan use  rs.conf()  to verify\nyour replica set configuration. Can use namespace filter lists to define the\n namespaces  included in a backup only if you are\nrunning MongoDB 6.0 or later. Snapshots taken on versions MongoDB 4.2\nthrough 5.0 always include all namespaces. Don't need a sync source database. When taking a Snapshot,  Cloud Manager \nselects the replica set member with the least performance impact\nand greatest storage-level duplication of Snapshot data. Must deploy a MongoDB Agent with every  mongod  node in\nthe cluster. If  Cloud Manager  doesn't manage your cluster: Grant  the\n backup  and  clusterAdmin  roles to the\nMongoDB user that runs backups. Ensure that the operating system user that runs the MongoDB Agent\nhas read permission for all data files (including journal files)\nof the deployment. The following considerations apply when your databases run any version\nof MongoDB 4.0 or earlier or when they run MongoDB 4.2 with\n \"featureCompatibilityVersion\" : 4.0 Only sharded clusters or replica sets can be backed up. To back up a\nstandalone  mongod  process, you must\n convert it to a single-member replica set . Cloud Manager  manages expired snapshots using groom jobs. These groom jobs act\ndifferently depending upon which snapshot store contains the snapshots: Snapshot Store How Groom Jobs Work MongoDB Blockstore Uses additional disk space up to the amount of living blocks for\neach job. Filesystem Snapshot stores Deletes expired snapshots S3 snapshot stores May use additional disk space if  Cloud Manager  creates a snapshot while\nthe groom job runs.  Cloud Manager  can run concurrent groom jobs on S3\nsnapshot stores. The namespaces filter lets you specify which databases and collections\nto back up. You create either a  Blacklist  of those to\nexclude or a  Whitelist  of those to include. You make your\nselections when starting a backup and can later edit them as needed. If\nyou change the filter in a way that adds data to your backup, a resync\nis required. Use the blacklist to prevent backup of collections that contain logging\ndata, caches, or other ephemeral data. Excluding these kinds of\ndatabases and collections will allow you to reduce backup time and\ncosts. Using a blacklist is often preferable to using a whitelist as a\nwhitelist requires you to intentionally opt in to every namespace you\nwant backed up. Namespace filtering is supported only for  Cloud Manager  versions\n 6.0.8  and later. Your MongoDB deployments must have\n featureCompatibilityVersion  values of  4.0  and earlier,\nor  6.0.1  and later. To back up MongoDB clusters, use the\n WiredTiger storage engine  storage engine. If your current backing databases use MMAPv1, upgrade to WiredTiger: With WiredTiger,  Cloud Manager  limits backups to deployments with fewer than\n100,000 files. Files includes collections and indexes. MongoDB 4.2 removes MMAPv1 storage. To learn more about storage\nengines, see  Storage  in the MongoDB manual. Change Sharded Cluster to WiredTiger Change Replica Set to WiredTiger For production deployments,  resync  all\nbacked up replica sets periodically, such as once a year. When you resync,\ndata is read from a secondary in each replica set. During resync,\nno new snapshots are generated. You may also want to resync your backup if you: Reduce the size of the data, such that the size of  Cloud Manager 's copy of the\ndata on disk is also reduced. Create a  TTL index , which periodically\ndeletes documents. Drop a collection \n(MMAPv1 only). Run a  sharded cluster , and move chunks\nfrom a particular shard. Switch storage engines, if you want  Cloud Manager  to provide snapshots\nin the new storage engine format. Build an Index on a replica set in a rolling fashion . For  sharded clusters , checkpoints provide\nadditional restore points between snapshots. With checkpoints enabled,\n Cloud Manager  creates restoration points at configurable intervals of every 15,\n30 or 60 minutes between snapshots. To enable checkpoints, see\n enable checkpoints . To create a checkpoint,  Cloud Manager  stops the  balancer  and inserts a\ntoken into the  oplog  of each  shard  and  config server  in the cluster. These checkpoint tokens are lightweight and don't\naffect performance or disk use. Backup doesn't require checkpoints, and they are disabled by default. Restoring from a checkpoint requires  Cloud Manager  to apply the  oplog \nof each shard and config server to the last snapshot captured before\nthe checkpoint. Restoration from a checkpoint takes longer than\nrestoration from a snapshot. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. For  sharded clusters  running with FCV 4.0 or\nearlier,  Cloud Manager  disables the  balancer  before taking a cluster\nsnapshot. In certain situations, such as a long migration or no running\n mongos ,  Cloud Manager  tries to disable the balancer but cannot. In\nsuch cases,  Cloud Manager  continues to take cluster snapshots but flags the\nsnapshots that may have incomplete or inconsistent data. Cluster\nsnapshots taken during an active balancing operation run the risk of\ndata loss or orphaned data. For  sharded clusters , if the Backup can't\nreach a  mongod  process, whether a shard or config server, then\nthe agent can't insert a synchronization  oplog  token. In these\ncases,  Cloud Manager  doesn't create the snapshot and displays a warning message.",
            "code": [],
            "preview": "Before backing up your cluster or replica set, decide how to back up\nthe data and what data to back up. This page describes items you must\nconsider before starting a backup.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/api",
            "title": "Public API (Application Programming Interface) Principles",
            "headings": [
                "HTTP (Hypertext Transfer Protocol) Methods",
                "JSON (Javascript Object Notation)",
                "Request Rules",
                "Response Conventions",
                "Linking",
                "Lists",
                "Envelopes",
                "Pretty Printing",
                "Response Codes",
                "Errors",
                "Authentication",
                "Automation",
                "Rate Limiting",
                "Additional Information"
            ],
            "paragraphs": "The  Cloud Manager  Public  API (Application Programming Interface)  follows the  REST (Representational State Transfer)  architecture principles to\nexpose internal resources that provide programmatic access to  Cloud Manager 's\nfeatures. The  API (Application Programming Interface)  has the following features: As with changes made through the web interface, changes made through the\nAPI are subject to  Cloud Manager   pricing . If you add\nservers and incur charges, you must have a valid credit card on file\nwith  Cloud Manager  or risk having your account  locked . All entities are expressed in  JSON (Javascript Object Notation) . Each  Cloud Manager  user or application needing to connect to  Cloud Manager \nmust\n generate an API key \nbefore accessing the  Cloud Manager   API (Application Programming Interface) . To ensure that your  public API key  is never sent over the\nnetwork,  API (Application Programming Interface)  requests are authenticated using\n HTTP Digest Authentication . Using a consistent linking mechanism, you can browse the entire API\nby starting at the root resource and following links to related\nresources. Each  Cloud Manager  user's  API (Application Programming Interface)  capabilities match the permissions that\ntheir  Cloud Manager  Roles  grant. A user with the  Project Read Only  role cannot modify\nany resource within that project whether through the  Cloud Manager  UI or\nthe  API (Application Programming Interface) . The  Cloud Manager   API (Application Programming Interface)  can secure access to the Cloud Manager Administration API through an\n API Access List . This list\nrestricts access to the  API (Application Programming Interface)  to specific  IP (Internet Protocol)  or  CIDR (Classless Inter-Domain Routing) \naddresses. Each  API (Application Programming Interface)  key has its own Cloud Manager Administration API access list. When\nyou create a new organization using the  Cloud Manager  UI, the  MongoDB Atlas \nenables the  API (Application Programming Interface)  access list requirement by default. To learn more, see  (Optional) Require an API Access List for Your Organization . You can access the  API (Application Programming Interface)  only via  HTTPS (Hypertext Transfer Protocol Secure) , which ensures all\ndata sent over the network is fully encrypted using  TLS (Transport Layer Security) . All resources support a subset of these common  HTTP (Hypertext Transfer Protocol)  Methods: Method Purpose GET Retrieve the  JSON (Javascript Object Notation)  representation of a resource. POST Create a new resource using the provided  JSON (Javascript Object Notation)  representation. PUT Replace a resource with the provided  JSON (Javascript Object Notation)  representation. PATCH Update the specified fields in a resource using the provided\n JSON (Javascript Object Notation)  representation. DELETE Remove a resource. HEAD Retrieve the response header without the  JSON (Javascript Object Notation)  representation\nof the resource. All entities are represented in  JSON (Javascript Object Notation) . The following rules for\nrequests and conventions of responses apply: When sending  JSON (Javascript Object Notation)  to the server via  POST  or  PUT , make sure\nto specify the correct content type request header:\n Content-Type: application/json When sending dates to the server (as query parameters or fields in\n POST  or  PATCH  request entities), use dates formatted\naccording to the  ISO 8601  standard. If you don't specify a time\nzone,  Cloud Manager  assumes  UTC (Coordinated Universal Time) . Include a time zone designator to avoid\nany ambiguity. In some cases, a timestamp is returned as a  JSON (Javascript Object Notation)  representation of\na  BSON timestamp , most notably in the backup resources. This\nrepresentation of a  BSON (Binary Javascript Object Notation)  timestamp provides a  JSON (Javascript Object Notation)  document as\nan object with two fields: September 27, 2018 is expressed as  2018-09-27 . September 27, 2018 at 4:00 PM EDT is expressed (with time zone)\nas  2018-09-27T16:00-04:00 . Field Definition date Seconds since the UNIX Epoch increment An incrementing 32-bit integer ordinal for operations within\na given second. The third operation at September 27, 2018 at 4:00 PM EDT is expressed (with time zone) as Invalid fields are  rejected  rather than  ignored . You attempt to create a new entity and misspell one of the\nfields, or if you attempt to update an existing entity and\ninclude a field that cannot be modified, the  Cloud Manager  responds with\nan  HTTP (Hypertext Transfer Protocol)  400 status code and an error message stating which\nfield was invalid. All dates are returned as  ISO 8601 -formatted strings designated\nin  UTC (Coordinated Universal Time) . Fields that contain numeric values in a particular unit are named so\nas to disambiguate the unit being used. A host's uptime is returned in millseconds, so the name of the\nhost entity field is  uptimeMsec . Fields that do not have a current value are returned with an\nappropriate default value. Fields that do not have a sensible default value are omitted from\nthe entity. Cloud Manager  does not have any statistics for a newly discovered host,\nso any statistics-related fields have a value of zero. A host that is not using authentication omits the  username \nfield from the returned entity. The fields in the  JSON (Javascript Object Notation)  documents that the  Cloud Manager  returns are\nin alphabetical order. The order could change. Do not depend on the\norder of the fields. Each resource includes one or more links to sub-resources and/or related resources. Links are placed in the  links  field of an entity, which is an\narray of link relation objects. Each link relation has two fields: All entities include at least one link relation called  self , which\nis simply its own  URL (Uniform Resource Locator) . When an entity is part of a list (i.e., when\nrequesting all hosts in a project), then it only includes the  self \nlink relation. To learn more, see the  Web Linking Specification . A host has a link to the project it belongs to, the replica set it\nbelongs to, and so on. Field Definition rel Name (or type) of the relation. Many of these are\nconsidered Extension Relation Types and are prefixed by\n http://mms.mongodb.com . href Target  URL (Uniform Resource Locator) . This is a portion of a  host  resource with a few links: Although the\n Web Linking Specification \ndescribes a format for including links in the  HTTP (Hypertext Transfer Protocol)  response\nheaders, it is not required. To make the  API (Application Programming Interface)  easily browsable, it\nincludes the links in the response body rather than in the response\nheaders. Some resources return a list of entities. When a list of entities is expected in a response, the results are\nreturned in batches bounded by two query parameters: The response entity contains three fields: If you make a request for a list of entities and there are no results,\nthen the  API (Application Programming Interface)  responds with an  HTTP (Hypertext Transfer Protocol)  200 status code and an empty\n results  array. It does  not  respond with a 404 in this case,\nsince the list of entities may not be empty at some point in the\nfuture. If you had requested a list of entities in a context that does not\nexist (i.e., the list of hosts for a non-existent project), then this\nresults in a an  HTTP (Hypertext Transfer Protocol)  404 response status. You can request a list of all  hosts  in a  project . Field Definition pageNum Page number (1-based). Defaults to 1 if not specified. itemsPerPage Number of items to return per page, up to a maximum of 500.\nDefaults to 100 if not specified. Field Definition totalCount Total number of items in the entire result set. If a project has a total of 57 hosts, and you make a request\nwith  pageNum=6  and  itemsPerPage=10 , then\n totalCount  is  57 . results Result set, which is an array of entity documents. links Contains one to three link relations: previous  for the previous page of results\n(omitted for the first page); next  for the next page of results\n(omitted for the last page); self  for the current page (always present). This is an  HTTP (Hypertext Transfer Protocol)  response for the second page of 10 hosts in a\nproject with a total of 57 hosts: Some clients may not be able to access the  HTTP (Hypertext Transfer Protocol)  response headers\nand/or status code. In that case, you can request that the response\ninclude an  envelope , which is simply an extra layer of information\nin the  JSON (Javascript Object Notation)  document that contains any relevant details that would\nnormally be in the response headers. By default, the  API (Application Programming Interface)  does  not  include the response in an envelope.\nTo request one, simply add the query parameter  envelope=true . For responses that contain a single entity, the envelope contains two\nfields: For responses that contain a list of entities, there is already an\nenvelope that wraps the results, so specifying  envelope=true  as a\nquery parameter in this case only adds the  status  field to the\nexisting envelope. Field Definition status HTTP (Hypertext Transfer Protocol)  status code. content Requested entity. By default, extraneous whitespace is stripped from the  JSON (Javascript Object Notation)  that\n Cloud Manager  returns. To ask for pretty-printed  JSON (Javascript Object Notation) , simply append the\n pretty=true  query parameter to any request: All the examples in this document show pretty-printed  JSON (Javascript Object Notation)  for\nclarity, although some example  URL (Uniform Resource Locator) s  may not contain this\nadditional query parameter . Responses utilize the standard  HTTP (Hypertext Transfer Protocol)  response codes, including: Code Meaning Notes 200 OK The request was successful. This is the typical response to a\nsuccessful  GET  request. 201 Created A new resource was created. This is the typical response to a\nsuccessful  POST  request. 202 Accepted A request for an asynchronous operation was accepted. 400 Bad Request Something was wrong with the client request. 401 Unauthorized Authentication is required but was not present in the request.\nTypically this means that the digest authentication information\nwas omitted from the request, the provided credentials are\nincorrect, or the user associated with the given  API (Application Programming Interface)  key is\nnot allowed to access the requested resource. 403 Forbidden Access to the specified resource is not permitted. 404 Not Found The requested resource does not exist. 405 Method Not Allowed The  HTTP (Hypertext Transfer Protocol)  method is not supported for the specified resource.\nKeep in mind that each resource may only support a subset of\n HTTP (Hypertext Transfer Protocol)  methods. You are not allowed to  DELETE  the\n root  resource. 409 Conflict This is typically the response to a request to create or modify\na property of an entity that is unique when an existing entity\nalready exists with the same value for that property. If you attempt to\n create a project \nwith the same name as an existing project, the request fails. 5xx Various server errors Something unexpected went wrong. Try again later and consider\nnotifying  Cloud Manager  Support. When a request results in an error, the response body contains a  JSON (Javascript Object Notation) \ndocument with additional details about what went wrong. The document\ncontains five fields: To review the list of codes, see  Cloud Manager Administration API Error Codes . Field Data Type Definition detail string Human-readable description of the  API (Application Programming Interface)  request error. error integer HTTP (Hypertext Transfer Protocol)   status code . errorCode string Named constant representing the  API (Application Programming Interface)  request error as shown in\n Cloud Manager Administration API Error Codes . parameters array of strings List of parameters passed in the  API (Application Programming Interface)  request. reason string HTTP (Hypertext Transfer Protocol)   status code definition . Cloud Manager  returns this response body for an incorrectly formatted\nrequest: As previously mentioned, the  Cloud Manager   API (Application Programming Interface)  uses  HTTP (Hypertext Transfer Protocol)  Digest\nAuthentication. The details of digest authentication are beyond the\nscope of this document, but it essentially requires a username and a\npassword which are hashed using a unique server-generated value called\na  nonce . The username is the username of a registered  Cloud Manager \naccount, and the password is a  public API key  associated\nwith that account. Keep the following points in mind: The server-generated nonce is used by the client to hash the\nusername and password before sending them back to the server to\nauthenticate a request. The nonce is only valid for a short amount\nof time as per the digest authentication specification. This is to\nprevent replay attacks, so you cannot cache a nonce and use it\nforever. Using digest authentication in combination with  HTTPS (Hypertext Transfer Protocol Secure)  provides\nan extra layer of security by ensuring that a password is never\ntransmitted back to the server. Some resource methods require even more security and are additionally\nprotected by  access lists \nthat allow access to the resource only from the  IP (Internet Protocol)  addresses\nlisted. Each user configures their own access list of  IP (Internet Protocol) \naddresses that allow access to the resource. The  Cloud Manager  has a concept of  roles , which allow more\nfine-grained control of the operations a user is allowed to perform.\nThe  API (Application Programming Interface)  resources also enforce the same authorization rules, so\nthe resources and methods that can be accessed by an  API (Application Programming Interface)  key are\ngoverned by the roles granted to the associated user. To  DELETE  a host, the user that owns the  API (Application Programming Interface)  key used to\nmake the request must be a  Project Monitoring Admin \nor  Project Owner  in the project to which the host\nbelongs. Many resources are tied to a project (former known as a  group ),\nas evidenced by  URL (Uniform Resource Locator) s of the following form: For these resources, the user tied to the  API (Application Programming Interface)  key must be a member of the project. Otherwise  Cloud Manager  responds with an  HTTP (Hypertext Transfer Protocol)  401 error. The  Automation Configuration Resource  and\n Get Automation Status of Latest Plan  resources provide endpoints\nthat let you modify a project's deployment and retrieve deployment\nstatus. You can modify a deployment by sending a new\n automation configuration  to\n Cloud Manager . The automation configuration is where you describe and\nconfigure the MongoDB processes to be deployed.  Cloud Manager  refers to this\nas the deployment's \"goal state.\" When you submit a new automation\nconfiguration through the  API (Application Programming Interface) , the Automations adjust the\ncurrent state of the system to match the goal state. There is no protection in the  API (Application Programming Interface)  to prevent concurrent\nmodifications. If two administrators both start with a\nconfiguration based on the current version, make their own\nmodifications, and then submit their modifications, the later\nmodification wins. Certain resources are subject to rate limiting. For resources that are rate limited,  Cloud Manager  allows up to 100\nrequests per minute  per project . Keep in mind that a Public  API (Application Programming Interface) \nKey is assigned to a  Cloud Manager  user, but that user may access multiple\nprojects. If you exceed the rate limit, the  API (Application Programming Interface)  returns an  HTTP (Hypertext Transfer Protocol) \n 429 Too Many Requests  response code. Consider two users: A and B. User A belongs to project X, and user B belongs to projects X\nand Y. At 1:00:00pm, User A makes 50 requests to a rate limited\nresource in project X, all of which complete by 1:00:20pm. At 1:00:30pm, User B attempts to make 60 requests to a rate\nlimited resource in project X. Since User A has already used up 50 requests within the\n1:00pm minute for project X, the last 10 requests User B\nattempts to make are rejected. However, User B can make\nrequests to a rate limited resource in project Y, since each\nproject maintains a separate request counter. At 1:01pm, requests to project X may proceed, because the\nrequest counter used for rate limiting reset each minute. See  Cloud Manager Administration API Resources  for a complete reference\nof all resources available in the  Cloud Manager  Public  API (Application Programming Interface) .",
            "code": [
                {
                    "lang": "json",
                    "value": "{ date: 2018-09-27T16:00-04:00, increment: 3 }"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"id\": \"xxx\",\n  \"projectId\": \"yyy\",\n  \"hostname\": \"mongodb.example.com\",\n  \"port\": 27017,\n  \"links\": [\n    {\n      \"rel\": \"self\",\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/projects/xxx/hosts/yyy\"\n    },\n    {\n      \"rel\": \"http://mms.mongodb.com/project\",\n      \"href\": \"https://cloud.mongodb.com/api/public/v1.0/projects/xxx\"\n    }\n  ]\n}"
                },
                {
                    "lang": "json",
                    "value": "{\n\n  \"totalCount\": 57,\n  \"results\": [\n    {\n      \"id\": \"yyy\",\n      \"projectId\": \"xxx\",\n      // additional host properties...\n    },\n    // additional host documents...\n  ],\n  \"links\": [\n    {\n      \"rel\" : \"self\",\n      \"href\" : \"https://www.mongodb.com/api/public/v1.0/projects/xxx/hosts?pageNum=2&itemsPerPage=10\"\n    },\n    {\n      \"rel\": \"previous\",\n      \"href\": \"https://www.mongodb.com/api/public/v1.0/projects/xxx/hosts?itemsPerPage=10&pageNum=1\"\n    },\n    {\n      \"rel\": \"next\",\n      \"href\": \"https://www.mongodb.com/api/public/v1.0/projects/xxx/hosts?itemsPerPage=10&pageNum=3\"\n    }\n  ]\n}"
                },
                {
                    "lang": "shell",
                    "value": "curl --user '{USERNAME}:{APIKEY}' --digest \\\n --header 'Accept: application/json' \\\n --include \\\n --request GET \"https://cloud.mongodb.com/api/public/v1.0?pretty=true\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"detail\" : \"Cannot find resource /api/public/v1.0/softwareComponents/version.\",\n  \"error\" : 404,\n  \"errorCode\" : \"RESOURCE_NOT_FOUND\",\n  \"parameters\" : [ \"/api/public/v1.0/softwareComponents/version\" ],\n  \"reason\" : \"Not Found\"\n}"
                },
                {
                    "lang": "shell",
                    "value": "/api/public/v1.0/groups/{PROJECT-ID}/"
                }
            ],
            "preview": "The Cloud Manager Public API (Application Programming Interface) follows the REST (Representational State Transfer) architecture principles to\nexpose internal resources that provide programmatic access to Cloud Manager's\nfeatures.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/slack-integration",
            "title": "Integrate with Slack",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Retrieve your Cloud Manager redirect URL.",
                "Create a Slack app.",
                "Configure app permissions.",
                "Manage app distribution.",
                "Retrieve your Client ID and Client Secret.",
                "Set your Cloud Manager slack.oauth2.clientId and slack.oauth2.clientSecret.",
                "Perform the integration."
            ],
            "paragraphs": "You can integrate  Cloud Manager  with   Slack  to receive\n Cloud Manager  alerts in your Slack channel. To integrate  Cloud Manager  with Slack, you must: Have a  Slack workspace . Have  sufficient permissions to install a Slack app in your workspace . To integrate  Cloud Manager  with Slack and receive alerts in your Slack channel: Navigate to your  Cloud Manager  Application. In the  Cloud Manager  Application, click the  Admin  link in the upper\nright corner of the page. Click the  General  tab and then click\n Ops Manager Config . Copy the URL in the  URL To Access Ops Manager . The URL is required in a later step. Navigate to  Your Apps . Click  Create New App . The  Create an app \nmodal displays. Click  From scratch .\nThe  Name app & choose workspace  modal displays. In the  App Name  field, enter a name for your Slack app. From the  Pick a workspace to develop your app in:  dropdown,\nselect an available Slack workspace. Click  Create App . The app configuration page displays. Click  Permissions  under the  Add features and\nfunctionality  section. The  OAuth & Permissions  page displays. Under the  Redirect URLs  section,\nclick  Add New Redirect URL . A text field displays. Enter the text description, such as:  URL To Access Ops Manager \nand click  Add . Click  Save URLs . Navigate to the  Scopes  section\nand locate  User Token Scopes . Click  Add an OAuth Scope . A dropdown list of available\nOAuth scopes displays. From the dropdown, select the  chat:write  scope. Return to the app configuration page. Navigate to the  Basic Information  section\nand click  Manage Distribution . Click  Distribute app  and review the available\ndistribution options.\nYou can share your app with your workspace, other workspaces on\nyour grid, or other workspaces outside your grid. Return to the app configuration page. Navigate to the  App Credentials  section and copy the value\nof the  Client ID  field. Copy the value of the  Client Secret  field. The  Client ID  and  Client Secret  are required in\nthe next step. Navigate to your  Cloud Manager  Application. In the  Cloud Manager  Application, click the  Admin  link in the\nupper right corner of the page. Click the  General  tab\nand then click  Ops Manager Config . From the list of tabs at the top of the page, select  Custom . In the displayed  Key  text box,\nenter  slack.oauth2.clientId . In the displayed  Value  text box, enter your\n Client ID  value. Click  Add Option . In the displayed  Key  text box,\nenter  slack.oauth2.clientSecret . In the displayed  Value  text box, enter your\n Client Secret  value. Click  Save . Complete the steps to  modify Slack integration settings .",
            "code": [],
            "preview": "You can integrate Cloud Manager with  Slack to receive\nCloud Manager alerts in your Slack channel.",
            "tags": "slack, integration, add slack, integrate with slack",
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/security",
            "title": "Security Overview",
            "headings": [
                "TLS (Transport Layer Security) Encryption",
                "Access Control and Authentication",
                "SCRAM-SHA-1 and SCRAM-SHA-256",
                "LDAP (Lightweight Directory Access Protocol)",
                "Kerberos"
            ],
            "paragraphs": "Cloud Manager  provides configurable encryption, authentication, and\nauthorization to ensure the security of your MongoDB Agents and\nMongoDB deployments.  Cloud Manager  supports  TLS ,\n SCRAM-SHA-1 and SCRAM-SHA-256 ,  LDAP (Lightweight Directory Access Protocol) , and\n Kerberos . Cloud Manager  can use  TLS (Transport Layer Security)  for encrypting communications for when the\nMongoDB Agent connects to: Cloud Manager . MongoDB instances that use  TLS (Transport Layer Security) . You must set each MongoDB host's\n Use TLS  setting in  Cloud Manager  and must configure the agent's\n TLS (Transport Layer Security)  settings. See\n Configure MongoDB Agent to Use TLS . MongoDB uses Role-Based Access Control (RBAC) to determine access to\na MongoDB system. When run with access control, MongoDB requires\nusers to authenticate themselves and then determines that user's\npermissions. If your MongoDB deployment uses authentication and the MongoDB Agent: Uses Automation to manage the deployment,  Cloud Manager  creates the\nappropriate MongoDB user, gives it all necessary roles, and\nauthenticates to the deployments as that MongoDB user. Does not use Automation to manage the deployment, you must create a\nMongoDB user for the MongoDB Agent Monitoring and Backup functions\nwith  appropriate access . Kerberos and  LDAP (Lightweight Directory Access Protocol)  authentication are available with\n MongoDB Enterprise  only. Cloud Manager  can use the  SCRAM-SHA-1  and  SCRAM-SHA-256 \nauthentication mechanisms to authenticate a user on a MongoDB\ndeployment. If your MongoDB deployment uses  SCRAM  authentication and the\nMongoDB Agent: To learn about SCRAM, see the\n SCRAM page  in the MongoDB manual. Uses Automation to manage the deployment,  Cloud Manager  creates the\nappropriate MongoDB user and gives it all necessary roles. Does not use Automation to manage the deployment, you must\n create a MongoDB user \nfor the MongoDB Agent Monitoring and Backup functions. The MongoDB Agent can use the  LDAP (Lightweight Directory Access Protocol)  authentication mechanism to\nauthenticate to the MongoDB deployment. If your MongoDB deployment uses  LDAP (Lightweight Directory Access Protocol)  for authentication, you must\n create a MongoDB user for the MongoDB Agent \nand specify the host's authentication settings when you: Add a MongoDB host \nor Edit the settings \nfor an existing host. The MongoDB Agent can use the Kerberos authentication mechanism to\nauthenticate to the MongoDB deployment. If your MongoDB deployment uses Kerberos for authentication, you must: Create the Kerberos UPN for the MongoDB Agent Create a MongoDB user for that Kerberos UPN Use the same Kerberos  UPN (User Principal Name)  for Automation and Backup functions. Edit the agent's configuration file Specify the host's authentication settings when you: Add a host  or Edit the settings \nfor an existing host.",
            "code": [],
            "preview": "Cloud Manager provides configurable encryption, authentication, and\nauthorization to ensure the security of your MongoDB Agents and\nMongoDB deployments. Cloud Manager supports TLS,\nSCRAM-SHA-1 and SCRAM-SHA-256, LDAP (Lightweight Directory Access Protocol), and\nKerberos.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "core/multi-factor-authentication",
            "title": "Manage Your Multi-Factor Authentication Options",
            "headings": [
                "Considerations",
                "Set Up Backup Multi-Factor Authentication Methods",
                "Prerequisites",
                "Disable Legacy Two-Factor Authentication",
                "Configure Multi-Factor Authentication",
                "Navigate to the Account Security page.",
                "Set up an authentication method.",
                "Set up another authentication method.",
                "Remove an Authentication Method"
            ],
            "paragraphs": "Multi-factor authentication provides an additional layer of security for\nyour  Cloud Manager  account. When  MFA (Multi-Factor Authentication)  is enabled, a user must provide their password as well\nas verification from another mechanism. Cloud Manager  provides the following factors for  multi-factor authentication : If an  Organization Owner  enables  multi-factor authentication , all members of\nthat organization must also enable  MFA (Multi-Factor Authentication)  before they can\naccess the organization. Okta Verify Mobile App Google Authenticator Email While you can set up one, some, or all of the available methods, we\nstrongly recommend that you set up at least two methods. When  Cloud Manager \nrequires  multi-factor authentication , it offers you the choice of which method to use. If you\nhave less than two methods set up,  Cloud Manager  prompts you to set up\n multi-factor authentication  and a backup method at login. Enable a minimum of two methods so that you can still access your\naccount if you lose access to one method. If you currently have  legacy two-factor authentication  set up for your account, you must disable it before\nyou set up  multi-factor authentication . To disable legacy  2FA (two-factor authentication) , navigate to your  User Preferences \npanel. Click on the dropdown menu labeled with your name in the upper right\ncorner of the  Cloud Manager  UI. Click  Legacy 2FA  in the dropdown menu. Click the   icon to edit your legacy  2FA (two-factor authentication) \nsettings. In the upper-right corner of the  Cloud Manager  UI, click the dropdown menu\nlabeled with your name. Click the  Manage your MongoDB Account  button. Click  Security  in the left-side navigation. Choose your preferred authentication method. Click  Set up  to the right of your chosen method. Follow the procedure for your chosen method: Download the Okta Verify app to your mobile device. Add a new account to the app. Scan the displayed bar code. Download the Google Authenticator app to your mobile\ndevice. Tap the  +  icon to add an account. Scan the displayed bar code. Enter the six-digit verification code. Check the email address you used to sign up for your\nMongoDB account. The verification email will arrive from the address\n mongodb-account@mongodb.com . You may need to\nensure that you can receive email from the  mongodb.com  domain. Enter the six-digit verification code. After you set up your first authentication method, repeat the steps\nto set up another method. To remove an authentication method from your account, click the\n  icon next to the method you want to remove. You must authenticate with an existing authentication method before\nremoving an authentication method.",
            "code": [],
            "preview": "Multi-factor authentication provides an additional layer of security for\nyour Cloud Manager account.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/reopen-locked-account",
            "title": "Reopen a Locked Account",
            "headings": [
                "Overview",
                "Reopen an Account",
                "Navigate to the Billing page.",
                "Click Edit in the Payment Method card.",
                "Update your Billing Address details as needed.",
                "Click Next.",
                "Update your Payment Method details as needed.",
                "Accept or decline your changes."
            ],
            "paragraphs": "Cloud Manager  will lock a organization's account if the associated credit card\nexpires. If you have received a message that your account is locked for failure\nto pay, please update your credit card information. Click your desired organization from the    Organizations  menu  menu if you\ndon't see it displayed. Click  Billing . The  Overview  tab should be selected and that page\ndisplayed. If it isn't, click  Overview . When you select an invoice, the sidebar shows a\n Billing  option. You can click this link as well. Field Necessity Action Country Required Select the country for your billing address. You can also\nstart typing the name of the country and then select it from\nthe filtered list of countries. VAT ID Conditional Cloud Manager  displays the  VAT ID  field if you\nselect a country other than the United States. To learn more about VAT, see\n VAT ID . If your country is a member of the  EU (European Union) ,\n MongoDB Atlas  charges  VAT (value-added tax)  if: You don't enter a  VAT (value-added tax)  ID Number. You have an invalid  VAT ID Number . Your company's billing or invoice address is in Ireland. Address Line 1 Required Type the mailing address for your billing address. Address Line 2 Optional Type an additional line for the mailing address for your\nbilling address. City Required Type the name of the city for your billing address. State/Province/Region Required Type or select the political subdivision in which your billing\naddress exists. The label and field change depending on what\nyou selected as your  Country : If you select  United States  as your  Country , this\nlabel changes to  State . The field changes to a dropdown\nmenu of U.S. states. You can also start typing the name of\nthe state and then select it from the filtered list of\nstates. If you select  Canada  as your  Country , this label\nchanges to  Province . The field changes to a dropdown\nmenu of Canadian provinces. You can also start typing the\nname of the province and then select it from the filtered\nlist of provinces. If you select any other country as your  Country , this\nlabel changes to  State/Province/Region . The field\nchanges to a text box. Type the name of your province,\nstate, or region in this box. ZIP or Postal Code Required Type the ZIP (U.S.) or Postal Code (other countries) for your\nbilling address. Click the radio button for  Credit Card  or\n Paypal . If you selected  Credit Card , type values for the\nfollowing fields: Field Necessity Action Name on Card Required Type the name that appears on your credit card. Card Number Required Type the 16-digit number that appears on your\ncredit card. American Express uses a 15-digit number. Expiration Date Required Type the expiration date for your credit card in the\ntwo-digit month and two-digit year format. CVC (Card Verification Code) Required Type the three-digit number on the back of your credit\ncard. American Express uses a 4-digit number found on\nthe front of the credit card. If you selected  PayPal : Click  Pay with PayPal . Complete the actions on the PayPal website. All projects within your organization share the same billing\nsettings, including payment method. To accept your changes, click  Submit . To decline your changes, click  Cancel .",
            "code": [],
            "preview": "Cloud Manager will lock a organization's account if the associated credit card\nexpires.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-mongodb-agent-for-kerberos",
            "title": "Configure the MongoDB Agent for Kerberos",
            "headings": [
                "Prerequisites",
                "Configure KDC to Issue Tickets with Four-Hour Minimum Lifetime",
                "Add Kerberos as Authentication Mechanism for Deployment",
                "Configure MongoDB Agent Host to Use Kerberos",
                "Procedures",
                "Create Kerberos User Principal for the MongoDB Agent",
                "Create or choose a Kerberos User Principal Name (UPN (User Principal Name)) for the MongoDB Agent.",
                "Generate a keytab file for the Kerberos UPN (User Principal Name) of the MongoDB Agent.",
                "Create a User and Assign Roles for the MongoDB Agent UPN"
            ],
            "paragraphs": "MongoDB Enterprise  supports\nKerberos.  Kerberos  is a network\nauthentication protocol. The MongoDB Agent can authenticate to\nMongoDB instances that run Kerberos. Kerberos tickets can authenticate users for a limited time. You must\n configure the Kerberos Key Distribution Center (KDC) \nto issue tickets that are valid for four hours or longer. The\nMongoDB Agent periodically renews the ticket. The  KDC (Key Distribution Center)  service provides\nsession tickets and temporary session keys to users and hosts. For the purposes of this tutorial, you must ensure the following: To learn how to enable Kerberos authentication, see\n Enable Kerberos Authentication for your  Cloud Manager  Project . The MongoDB Agent interacts with the MongoDB databases in your\ndeployment as a MongoDB user would. As a result, you must configure\nyour MongoDB deployment and the MongoDB Agent to support authentication. You can specify the deployment's authentication mechanisms when\n adding  the\ndeployment, or you can  edit the settings  for an existing\ndeployment. At minimum, the deployment must enable the authentication\nmechanism you want the MongoDB Agent to use. The MongoDB Agent can use\nany supported  authentication mechanism . Your deployment supports Kerberos authentication and MongoDB Agent uses Kerberos authentication. Two Kerberos-related files must be installed on any host running\nMonitoring or Backup: Create or configure the\n krb5.conf \nKerberos configuration file. Platform Default Path Notes Linux /etc/krb5.conf Windows %WINDIR%\\krb5.ini This is the default path for non-Active Directory-based\nKerberos implementations. Refer to the documentation for your\nKerberos implemention for your version of Windows to find out\nwhere the Kerberos configuration file is stored. On Linux systems: ensure  kinit \nbinary is located at  /usr/bin/kinit .  kinit \nobtains or renews a Kerberos ticket-granting ticket, which\nauthenticates the Agent using Kerberos. An  UPN (User Principal Name)  is formatted in two parts so the service can be uniquely\nidentified across the Kerberos realm: Component Description Service name The name of one service a host is providing to the Kerberos\nrealm, such as  pop  or  ftp . Kerberos realm A set of managed hosts and services that share the same\nKerberos database. By Kerberos naming convention, the  <KERBEROS_REALM> \nmust be in all  UPPERCASE . In a Kerberos realm set as  EXAMPLE.COM , the MongoDB Agent\nwould set its  UPN (User Principal Name)  to:  mongodb-agent@EXAMPLE.COM Generate a  keytab \nfile ( *.keytab ) for the MongoDB Agent  UPN (User Principal Name)  and copy it to the\nhost that runs the MongoDB Agent. Ensure that the operating system\nuser that runs the MongoDB Agent is the same operating system user\nthat owns the  keytab  file. When Automation is activated,  Cloud Manager  manages MongoDB Agent authentication. To configure Kerberos for MongoDB Agent authentication, see\n Enable Kerberos Authentication for your  Cloud Manager  Project . After creating the Kerberos  UPN (User Principal Name)  for the MongoDB Agent, create a\nMongoDB user on your deployment that corresponds to the MongoDB Agent's\n UPN (User Principal Name)  and grant it privileges. Where you create the MongoDB user depends upon whether or not you are\nusing  LDAP authorization . If you are using  LDAP (Lightweight Directory Access Protocol)  authorization in your MongoDB deployment,\nyou must create an  LDAP (Lightweight Directory Access Protocol)  user and  LDAP (Lightweight Directory Access Protocol)  group for the\nMongoDB Agent on the  LDAP (Lightweight Directory Access Protocol)  server. After creating the  LDAP (Lightweight Directory Access Protocol)  user\nand group, map the  LDAP (Lightweight Directory Access Protocol)  group to a MongoDB role in your\ndeployment's  admin  database. For the MongoDB user representing the MongoDB Agent: When using  LDAP (Lightweight Directory Access Protocol)  Authorization, do not create  any  MongoDB\nusers in the  $external  database. MongoDB 3.4 and later\ndoes not start if a MongoDB user exists in the  $external \ndatabase and  LDAP (Lightweight Directory Access Protocol)  authorization is enabled. Create a new  LDAP (Lightweight Directory Access Protocol)  user on your  LDAP (Lightweight Directory Access Protocol)  server named with the\nMongoDB Agent's  UPN (User Principal Name) . Create an  LDAP (Lightweight Directory Access Protocol)  group whose name matches the MongoDB Agent's\nrole. Create the MongoDB Agent's role in your  admin  database with\nthe appropriate permissions. When Automation is activated, Automation automatically\ncreates a role for for the MongoDB Agent user for  LDAP (Lightweight Directory Access Protocol)  authentication. Assign the  LDAP (Lightweight Directory Access Protocol)  user to the  LDAP (Lightweight Directory Access Protocol)  group. To learn how to: See Create an  LDAP (Lightweight Directory Access Protocol)  user Documentation for your  LDAP (Lightweight Directory Access Protocol)  implementation. Create an  LDAP (Lightweight Directory Access Protocol)  group Documentation for your  LDAP (Lightweight Directory Access Protocol)  implementation. Assign the appropriate roles for the MongoDB Agent Required Access for MongoDB Agent . Map an  LDAP (Lightweight Directory Access Protocol)  group and MongoDB role LDAP Roles section  of the\n LDAP authorization  page in the MongoDB\nmanual. Configure  LDAP (Lightweight Directory Access Protocol)  authorization without  Cloud Manager  automation LDAP Authorization  page in the MongoDB\nmanual. If you are not using  LDAP (Lightweight Directory Access Protocol)  authorization, you must add the\nMongoDB Agent's  UPN (User Principal Name)  as a user in  $external  database in your\nMongoDB deployment. Without  LDAP (Lightweight Directory Access Protocol)  authorization, MongoDB uses\nthe  $external  database to authenticate a user against\nKerberos. From  mongosh , issue the following commands to create the MongoDB\nuser: To discover the appropriate roles for the MongoDB Agent, see\n Required Access for MongoDB Agent .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n  {\n    user : \"<Kerberos Principal>\",\n    roles : [\n      { role : \"clusterAdmin\", db : \"admin\" },\n      { role : \"readWriteAnyDatabase\", db : \"admin\" },\n      { role : \"userAdminAnyDatabase\", db : \"admin\" },\n      { role : \"dbAdminAnyDatabase\", db : \"admin\" },\n      { role : \"backup\", db : \"admin\" },\n      { role : \"restore\", db : \"admin\" }\n    ]\n  }\n)"
                }
            ],
            "preview": "MongoDB Enterprise supports\nKerberos. Kerberos is a network\nauthentication protocol. The MongoDB Agent can authenticate to\nMongoDB instances that run Kerberos.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-mongodb-agent-for-ldap",
            "title": "Configure MongoDB Agent for LDAP",
            "headings": [
                "Prerequisites",
                "Configure Deployments to Use Authentication",
                "Set Require TLS Certificate Environment Variable",
                "Considerations",
                "Create and Configure User in MongoDB"
            ],
            "paragraphs": "If your MongoDB deployment enforces access control, the MongoDB Agent\nmust authenticate to MongoDB as a user with the proper access. If you\nuse  Automation ,  Cloud Manager  takes care of this for you. MongoDB Enterprise supports simple and SASL binding to  LDAP (Lightweight Directory Access Protocol)  servers\nvia  saslauthd  and operating system libraries: MongoDB Agent support authenticating to MongoDB instances using  LDAP (Lightweight Directory Access Protocol) . MongoDB Enterprise for Linux can bind to an  LDAP (Lightweight Directory Access Protocol)  server either\nvia  saslauthd  or via operating system libraries. MongoDB Enterprise for Windows can bind to an  LDAP (Lightweight Directory Access Protocol)  server via the\noperating system libraries. With Automation,  Cloud Manager  manages MongoDB Agent authentication for\nyou. To learn more about authentication, see  Enable LDAP Authentication for your  Cloud Manager  Project . The MongoDB Agent interacts with the MongoDB databases in your\ndeployment as a MongoDB user would. As a result, you must configure\nyour MongoDB deployment and the MongoDB Agent to support authentication. You can specify the deployment's authentication mechanisms when\n adding  the\ndeployment, or you can  edit the settings  for an existing\ndeployment. At minimum, the deployment must enable the authentication\nmechanism you want the MongoDB Agent to use. The MongoDB Agent can use\nany supported  authentication mechanism . On the MongoDB Agent hosts, you must set the\n TLS_REQCERT \nenvironment variable to  demand . You can use your application to set this environment variable. In a Red Hat Enterprise Linux host, open the\n /etc/openldap/ldap.conf  file and add the following setting and\nvalue: If Automation does not manage your deployment, you must configure\n LDAP (Lightweight Directory Access Protocol)  authentication separately for each function. To  configure LDAP authentication , add a host or edit\nan existing host's configuration. To automate MongoDB instances that use  LDAP (Lightweight Directory Access Protocol)  authentication, add\na MongoDB user that possesses the required roles and privileges\nto the  $external  database in MongoDB. The  $external \ndatabase allows  mongod  to consult an external source, such as\nan  LDAP (Lightweight Directory Access Protocol)  server, to authenticate. Use the following commands to create the users from  mongosh : To learn more about the required access, see\n Required Access for MongoDB Agent . To back up MongoDB 4.0 or later instances that use  LDAP (Lightweight Directory Access Protocol) \nauthentication, add a user that possess the required roles\nto the  $external  database in MongoDB. The  $external \ndatabase stores credentials for external authentication and\nauthorization details. Use the following  mongosh  command to create the user: To learn more about the required access, see\n Required Access for MongoDB Agent Backup To monitor MongoDB 4.0 or later instances that use  LDAP (Lightweight Directory Access Protocol) \nauthentication, add a user to the  $external  database in\nMongoDB. The  $external  database stores credentials for\nexternal authentication and authorization details. Assign\nthis user the roles provided in the following example. Use the following  mongosh  command to create the user: To learn what roles this function requires, see\n Monitoring settings .",
            "code": [
                {
                    "lang": "sh",
                    "value": "TLS_REQCERT demand"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n  {\n    user : \"<username>\",\n    roles : [\n      { role : \"clusterAdmin\", db : \"admin\" },\n      { role : \"readWriteAnyDatabase\", db : \"admin\" },\n      { role : \"userAdminAnyDatabase\", db : \"admin\" },\n      { role : \"dbAdminAnyDatabase\", db : \"admin\" },\n      { role : \"backup\", db : \"admin\" },\n      { role : \"restore\", db : \"admin\" }\n    ]\n  }\n)"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n    {\n      user : \"<username>\",\n      roles: [ {\n        role: \"clusterAdmin\", db: \"admin\"\n      } ]\n    }\n)"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n   {\n     user: \"<username>\",\n     roles: [ {\n       role: \"backup\", db: \"admin\"\n     } ]\n   }\n)"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n    {\n      user : \"<username>\",\n      roles: [ { role: \"clusterMonitor\", db: \"admin\" } ]\n    }\n)"
                }
            ],
            "preview": "On the MongoDB Agent hosts, you must set the\nTLS_REQCERT\nenvironment variable to demand.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-users",
            "title": "Cloud Manager Access",
            "headings": [
                "Considerations",
                "Google Accounts",
                "MongoDB Atlas Users",
                "Add Users to Cloud Manager",
                "Manage User Access to an Organization",
                "Add Users to an Organization",
                "Navigate to the Users tab for your organization.",
                "Specify User.",
                "Choose the roles for the new Users.",
                "Invite the Users.",
                "View Active Users and Pending Invitations in an Organization",
                "Navigate to the Users tab for your organization.",
                "Optional: To cancel an invitation, click  to the right of the pending user.",
                "Edit User's Role in an Organization",
                "Navigate to the Users tab for your organization.",
                "Click Edit Permissions next to the organization you want to modify.",
                "Select the new role or roles for the user from the menu.",
                "Click the checkmark to save.",
                "Remove Users from an Organization",
                "Navigate to the Users tab for your organization.",
                "Click  to the right of the user.",
                "Click Remove User from Organization.",
                "Manage Team Access to an Organization",
                "Create a Team",
                "Navigate to the Teams tab for your organization.",
                "Create a new team.",
                "Manage Team Members",
                "Navigate to the Teams tab for your organization.",
                "Add or remove users from a team.",
                "To add a member to a team",
                "To delete a member from a team",
                "Rename a Team",
                "Navigate to the Teams tab for your organization.",
                "Rename the team.",
                "Delete a Team",
                "Navigate to the Teams tab for your organization.",
                "Delete the team.",
                "Manage Application Access to an Organization",
                "Manage Access to a Project",
                "View Who Can Access a Project",
                "Navigate to the Users tab for your organization.",
                "Click the tab for Users, Teams, or API Keys to see the appropriate access.",
                "View Active Users and Pending Invitations to Project",
                "Navigate to the Users tab for your project.",
                "Optional: To cancel an invitation, click  to the right of the pending user.",
                "Add Users or Teams to a Project",
                "Navigate to the Users tab for your project.",
                "Specify User or Team.",
                "Choose the new roles for the User or Team.",
                "Invite the Users or Create the Teams.",
                "Remove Users or Teams from a Project",
                "Navigate to the Users tab for your project.",
                "Navigate to the appropriate tab for the resource you want to remove:",
                "Click  to the right of the user or team to remove.",
                "Confirm the removal.",
                "Edit a User's or Team's Role in a Project",
                "Navigate to the Users tab for your organization.",
                "Click Edit Permissions next to the organization you want to modify.",
                "Select the new role or roles for the user from the menu.",
                "Click the checkmark to save.",
                "Manage Application Access to a Project"
            ],
            "paragraphs": "To access  a Cloud Manager  organization or the project within that organization,\n a Cloud Manager  user must be a member of that organization. Depending on the\nuser's  role in the organization , the  Cloud Manager \nuser may also need to be a member of the project to access a project. A Cloud Manager  user can be a member of multiple projects and multiple\norganizations. If  a Cloud Manager  user is a member of a project, the user's\naccess to the project is determined their\n role in the project . Within an organization, you can group users into teams. Users can\nbelong to multiple teams. Teams can be assigned to multiple projects.\nThe team's  project role  sets the team members'\naccess to the project. Cloud Manager  users are separate from  MongoDB users . You can register with and login using your Google account or using your\nemail account. If you register with your Google Account, the following differences\napply when using your Google account with  Cloud Manager : Google manages your user details, email address, and password. You\ncan't change this information using the  Cloud Manager  console or  API (Application Programming Interface) . Google manages your  2FA (two-factor authentication) . You can't use  Cloud Manager \n two factor authentication \nand won't be prompted for  a Cloud Manager   2FA (two-factor authentication)  verification when you\nlog into  Cloud Manager . Google should verify your identity using\n Google 2-Step Verification Google creates a new  Cloud Manager  account if you change your Google\nAccount email address. Ask your  Organization Owner  or\nMongoDB Support to link this new account with your existing\norganizations and projects. You can unlink your Google Account from  Cloud Manager . Refer to the\n Google Account Help article \nto unlink your  Cloud Manager  account from your Google Account. If you use  MongoDB Atlas , use your  MongoDB Atlas  credentials to log in to\n Cloud Manager . You can then create a new  MongoDB Atlas  project from  Cloud Manager . You must invite users to  Cloud Manager  projects and organizations. The\nfollowing procedures result in an email invitation being sent to the\nusers you want to add. The users must accept your invitation to join\na project or an organization. Users can create accounts using: The  Cloud Manager \n account registration page \nor jira.mongodb.org . If you create an account in  Jira  or make any changes to that\naccount from  within   Jira , it can take up to 30 minutes for\nthat change to propagate to  Cloud Manager . During this window you cannot\nadd the user to a project in  Cloud Manager . Also, passwords changed in\n Jira  are subject to the same propagation delay for  Cloud Manager \naccounts. To invite a new user to a project, see  Add Users or Teams to a Project . To invite a new user to an organization, see\n Add Users to an Organization . To perform any of the following actions, you must have the\n Organization Owner  role. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. If it is not already displayed, click the  Users  tab. Select  Invite Users  from the  Manage \nbutton menu. From the  Add Users  page, enter the new user's\nemail address or  Jira  username in the combo box. If the console finds a connected  Jira  account,  Cloud Manager \ninvites the user to the  Cloud Manager   project. If the user accepts\nthe invite, that user is added to the corresponding  Jira \ngroup. After typing in the email address or  Jira  username, you\nmust either press  Enter  or click on the email\naddress or  Jira  username beneath the  New User \nheader under the combo box. Repeat for any additional users. By default, each user is given the  Organization Member \nrole. To change or add additional roles for each user, click the\nrole dropdown menu, then select the checkboxes for each  role  you want the user to have in the organization. Click  Add Users to Organization . Cloud Manager  sends an e-mail to the selected users inviting them to join\nthe project. Invited users do not have access to the project until\nthey accept the invitation. Invitations expire after 30 days. To view users in an organization: This page lists: If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Users who are members of your  Cloud Manager  organization. Pending users who have not accepted to the invitation to join the\norganization or project within the organization. To edit roles through  Cloud Manager  for the organization: If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. If it is not already displayed, click the  Users  tab. You cannot remove the last  Organization Owner  from an\norganization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. If it is not already displayed, click the  Users  tab. In an organization, you can group its users into teams to facilitate\nadding and granting roles to multiple users to projects. You assign\nproject access at the team level. All users in the team share the same\nproject access. Organization users can belong to multiple teams. To perform any of the following actions, you must have the\n Organization Owner  role. There is an upper limit of 250 teams per organization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the  Teams  tab. Click  Create Team . From the  Create a Team  page, enter the your team name\nin the  Name Your Team  box. The name must be unique\nwithin an organization. To add existing organization users to the team, click in the\n Add Members  box and either start typing their  Cloud Manager \nusername or click on the name of a user that appears in\nthe combo box. Click  Create Team  to confirm. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the  Teams  tab. Click the name of the team you wish to modify. Click  Add Members . Type the name or email of the user from the combo box. You can only add users who are part of the organization. Users who have not accepted an invitation to join the\norganization cannot be added as team members. Click  Add Members . Repeat for additional team members. Click   to the right of the member. Removing a user from the team removes the user's project\nassignments granted by the team membership. If a user is assigned to a project through both a team and\nindividual assignment, removing the user from a team does not\nremove the user's assignment to that project. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the  Teams  tab. For the team you wish to rename: Click   in the  Actions  column. Click  Rename Team . Enter a new name for the team. The team name must be unique within the organization. Click  Rename Team . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the  Teams  tab. For the team you wish to delete: Click   next to the team that you want to delete. Confirm that you wish to proceed with team deletion. For users belonging the team, deleting a team removes the\nusers' project assignments granted by that team membership. To learn how to manage an Application's Access to an Organization\nusing  API (Application Programming Interface)  Keys, see: To manage  API (Application Programming Interface)  Keys for an Organization, you must have the\n Organization Owner  role. Create an API Key in an Organization View the Details of an API Key in an Organization Change an API Key in an Organization Delete an API Key from an Organization To perform any of the following actions, you must have either the\n Project Owner  or  Project User Admin  role. To view which users, teams, or  API (Application Programming Interface)  Keys can access a project: If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. If it is not already displayed, click the  Users  tab. Each tab lists the project's users, teams, or  API (Application Programming Interface)  Keys along with\ntheir  project roles  and corresponding\n actions . The  Users  tab also lists any outstanding invitations to\nusers to join the project and any requests from users who want to join\nthe project. A user can request to join a project when they first\nregister for  Cloud Manager . Individual users are ordered by status. They appear in the following\nsequence: Cloud Manager  displays the  Name  of users who have not accepted\ntheir invitation as  Pending User  and their role as\n --invite sent-- . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Users currently in your project. Users with pending invitations to join your project. Users requesting to join your project. If the  Cloud Manager  finds a connected  Jira  account,  Cloud Manager  adds the user\nto the  Jira  group associated to the  Cloud Manager  project and organization. There is an upper limit of 250 users per team. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. If it is not already displayed, click the  Users  tab. To add an individual user: Select  Invite Users  from the  Manage \nbutton menu. From the  Add Users  page, enter the new user's\nemail address or  Jira  username in the combo box. If the console finds a connected  Jira  account,  Cloud Manager \ninvites the user to the  Cloud Manager   project. If the user accepts\nthe invite, that user is added to the corresponding  Jira \ngroup. After typing in the email address or  Jira  username, either\npress  Enter  or click on the email address or\n Jira  username beneath the  New User  header under\nthe combo box. Repeat for any additional users. To add a team: Select  Create Team  from the  Manage \nbutton menu. Enter the team's name in the  Name Your Team  box. Enter the new team member's email address or  Jira  username\nin the  Add Members  combo box. If the console finds a connected  Jira  account,  Cloud Manager \ninvites the user to the  Cloud Manager   project. If the user accepts\nthe invite, that user is added to the corresponding  Jira \ngroup. After typing in the email address or  Jira  username, either\npress  Enter  or click on the email address or\n Jira  username beneath the  New User  header under\nthe combo box. Repeat for any additional team members. By default, each user and team is given the  Project\nMember  role. To change or add additional roles for each user or\nteam, click on the role dropdown menu, then select the checkboxes for\neach  role  you want the user or team to\nhave in the project. All team members share the roles assigned to the team on this\nproject. For a new user, click  Add Users to Project . Cloud Manager  sends an e-mail to the selected users inviting them to join\nthe project. Invited users do not have access to the project until\nthey accept the invitation. Invitations expire after 30 days. For a new team, click  Create Team . If the added user does not belong to the project's organization,\n Cloud Manager  adds the user to the organization. You cannot remove the last  Project Owner  from an\norganization. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. If it is not already displayed, click the  Users  tab. If it is not already displayed and you want to remove a user, click\nthe  Users  tab. If you want to remove a team, click the  Teams  tab. To confirm a user removal, click\n Remove User from Organization . To confirm a team removal, click\n Delete Team .\" To edit roles through  Cloud Manager , for the project: If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. If it is not already displayed, click the  Users  tab. To learn how to manage a Application's Access to an Project using  API (Application Programming Interface) \nKeys, see: To manage  API (Application Programming Interface)  Keys for an Organization, you must have the\n Project User Admin  role. Create an API Key for a Project View the Details of an API Key in a Project Change an API Key's Roles in a Project Delete an API Key from a Project",
            "code": [],
            "preview": "To access a Cloud Manager organization or the project within that organization,\na Cloud Manager user must be a member of that organization. Depending on the\nuser's role in the organization, the Cloud Manager\nuser may also need to be a member of the project to access a project.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/stop-restart-terminate-backup",
            "title": "Stop, Restart, or Terminate a Backup",
            "headings": [
                "Stop Backup for a Deployment",
                "Click Continuous Backup, then the Overview tab.",
                "On the line listing the process, click the ellipsis icon and click Stop.",
                "Click the Stop button.",
                "Restart Backup for a Deployment",
                "Click Continuous Backup, then the Overview tab.",
                "On the line listing the process, click the ellipsis icon and click Restart.",
                "Select a Sync source and click Restart.",
                "Terminate a Deployment's Backups",
                "Click Continuous Backup, then the Overview tab.",
                "Click the  next to the backup.",
                "Click the Stop button.",
                "Once the backup has stopped, click the backup's ellipsis icon and click Terminate.",
                "Click the Terminate button."
            ],
            "paragraphs": "When you stop backups for a replica set or sharded cluster  Cloud Manager  stops\ntaking new snapshots but retains existing snapshots until their listed\nexpiration date. If you later restart backups for replica set or cluster,  Cloud Manager  might\nperform an  inital sync , depending on how much time has elapsed. If you  terminate  a backup,  Cloud Manager  immediately  deletes all the\nbackup's snapshots. If prompted for an authentication code, enter the code and click\n Verify . Click  Stop  again. If you terminate a backup,  Cloud Manager  immediately deletes the backup's\nsnapshots. The next backup job runs as a full backup rather than an\nincremental backup. If prompted for an authentication code, enter the code and click\n Verify . Click  Stop  again.",
            "code": [],
            "preview": "When you stop backups for a replica set or sharded cluster Cloud Manager stops\ntaking new snapshots but retains existing snapshots until their listed\nexpiration date.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/profile-database",
            "title": "Profile Databases",
            "headings": [
                "Considerations",
                "Security",
                "system.profile Collection",
                "Resource Consumption Impact",
                "Data Collection",
                "Data Display",
                "Time to Propagate Changes to the MongoDB Agent",
                "Rolling Restart of mongod Processes",
                "Enable Profiling",
                "Profiler Interface",
                "Profiling Chart",
                "Set Chart Filters",
                "Change Slow Operations Threshold",
                "Request Index Suggestions",
                "Profiling Table"
            ],
            "paragraphs": "A  database profiler \ngathers statistics about writes, cursors, and commands on one running\n mongod  instance. Cloud Manager  can collect and display statistics from any of your  mongod \ninstances that have profiling enabled.  Cloud Manager  displays this data in the\n Profiler  section of an instance's  Metrics  page.\nTo access an instance's metrics, click the  Metrics  button\nfor that instance. The  Profiler  displays one aspect, like  Operation Execution\nTime , that could slow database operations over a set time frame. It\ndisplays this data in both a chart and a table that each can filter on\naspect and time frame. The Profiler suggests indexes for your databases\nto improve the performance of slow operations. This feature is available only with Cloud Manager Premium, which\ncomes with certain MongoDB subscriptions. To learn more about\n Cloud Manager  Premium,  Contact MongoDB . Profile data may include sensitive information including the content of\ndatabase queries. Ensure that exposing this data to  Cloud Manager  is consistent\nwith your information security practices. The MongoDB profiler stores data in the\n system.profile <<database>.system.profile>  collection.  Cloud Manager \ncaps this  collection  to 1 MB as a default.\nYou may increase the size of this collection up to 4 MB. When collecting data from the profiler,  Cloud Manager  ignores operations on\nthe  system.profile <<database>.system.profile>  collection,\nsuch as Monitoring queries of the\n system.profile <<database>.system.profile>  collection. The profiler consumes resources which may slow MongoDB performance.\nConsider the resource impact before enabling profiling. Every minute, the agent queries the\n system.profile <<database>.system.profile>  collection for the\nlast 20 documents created. Monitoring sends\n those documents  to  Cloud Manager . Cloud Manager  samples profile documents until it samples either all documents\nreturned or 4 MB of returned document data. This 4 MB limit may be\nreached if you increase the collection's size to 4 MB  and  your\ndatabase creates large\n profiler documents . Monitoring tries to minimize its effect on the monitored systems.\nIf polling profile data slows database performance,  Cloud Manager  throttles how\noften it collects data. Database Profiler \nin the MongoDB Manual. Cloud Manager  displays no more than 10,000 data points in the\n Profiler  charts. With profiling enabled, configuration changes made in  Cloud Manager  can\ntake up to 2 minutes to propagate to the agent and 1 more minute before\nprofiling data appears in the  Cloud Manager  interface. Cloud Manager  performs a  rolling restart  of the  mongod  processes in\nyour cluster when you enable or disable database profiling. If your\ncluster is a replica set, a  replica set election  occurs as a byproduct of the restart.\nThis one-time operation is in addition to the time required to\npropogate configuration changes to the Automation. To enable profiling: Once you enable profiling, your  mongod  instance collects profile\ndata for operations longer than the  slow operation threshold  and reports them to  Cloud Manager . The threshold for slow\noperations applies to the entire  mongod  instance.  Cloud Manager  defaults this\nthreshold to 100 ms. Click  Deployment , the  Processes  tab, and\nthen the  Topology  view. On the line listing the process for which you want to enable\nprofiling, click  Metrics . Click the  Profiler  tab above the charts. Toggle  Profiling  to  On . The Profiler has two sections to the page that display database profile\ninformation: a chart and a table. Each can display different data. Above the chart, select the metric and time period you want to see. Select the metric from the  Display  menu. Accepted\noptions are: Operation Execution Time (default) Keys Examined Docs Returned Examined:Returned Ratio Num Yields Response Length Select the time period from the  View Last  menu.\nAccepted options are: 24 hr (default) 12 hr 6 hr 1 hr 15 min To change the slow operations threshold: When you change the threshold, you change it for all databases on the\ninstance. Click the  Milliseconds  button to the right of the\n For Operations Longer Than  label to open the\n Specify the Threshold for Slow Operations  modal. Change the  Set the Threshold for Slow Operations  to your\ndesired number of milliseconds. Click  Apply  if you want to change the threshold. Click\n Cancel  to close the modal without changing the\nthreshold. Based on the Profiler data, you may want to improve the performance of\nslow queries. Click  Calculate Suggested Indexes  to direct  Cloud Manager  to\nanalyze your databases. After the analysis completes, the\n Suggested Indexes for Improving Query Performance  modal\ndisplays. This modal offers suggested indexes with the appropriate database\ncommands to created those indexes. After you have finished using the suggested indexes, click\n OK  to close the modal. Above the table, select the namespace, operation type, and metric you\nwish to profile: Click  All Namespaces  to change which combination of\ndatabases and collections to profile. Click  All Operations  to change which operations you want\nto profile. Click  Operation Execution Time  to change which metric\nyou want to profile. Accepted options are: Operation Execution Time (default) Keys Examined Docs Returned Examined:Returned Ratio Num Yields Response Length",
            "code": [],
            "preview": "A database profiler\ngathers statistics about writes, cursors, and commands on one running\nmongod instance.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-kerberos-authentication-for-group",
            "title": "Enable Kerberos Authentication for your Cloud Manager Project",
            "headings": [
                "Overview",
                "Considerations",
                "Procedures",
                "Configure an Existing Linux Deployment for Kerberos-based Authentication",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the process, click Modify.",
                "Expand the Advanced Configuration Options section.",
                "Set the kerberosKeytab option.",
                "Enable Kerberos for your Cloud Manager Project",
                "Navigate to the Security Settings dialog for your deployment.",
                "Optional: Specify the TLS (Transport Layer Security) Settings.",
                "Choose the authentication mechanism.",
                "Configure the LDAP Authorization Settings.",
                "Configure Kerberos (GSSAPI) for the Agents.",
                "Click Save Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Create MongoDB Roles for LDAP Groups. (Optional)"
            ],
            "paragraphs": "MongoDB Enterprise \nsupports authentication using a Kerberos service. Kerberos is an\nindustry standard authentication protocol for large client/server\nsystems. To authenticate MongoDB with Kerberos, you must: The  Kerberos Authentication  section of the\nMongoDB Manual provides more detail about using MongoDB with Kerberos. Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. Setting up and configuring a Kerberos deployment is beyond the scope\nof this document. This tutorial assumes you have configured a\nKerberos principal for each Agent and you have a valid\nkeytab file for each Agent. Have a properly configured Kerberos deployment, Configure  Kerberos service principals  for MongoDB, and Add the  Kerberos user principals  for the Agents. This tutorial describes how to enable Kerberos for one of your  Cloud Manager \nprojects and how to configure your  Cloud Manager  Agents to connect to your\nKerberos-enabled deployment. Kerberos (GSSAPI)  is only available on MongoDB Enterprise builds. If\nyou have existing deployments running on a MongoDB Community\nbuild, you must  upgrade them to MongoDB Enterprise  before you can enable\n Kerberos (GSSAPI)  for your  Cloud Manager  project. If you want to\n reset Authentication and TLS settings \nfor your project, first\n unmanage any MongoDB deployments \nthat  Cloud Manager  manages in your project. These procedures describe how to configure and enable Kerberos\nauthentication when using Automation. If  Cloud Manager  does  not  manage your\nMonitoring or Backups, you must manually configure them to\nauthenticate using Kerberos. See\n Configure the MongoDB Agent for Kerberos  for instructions. If you use  Cloud Manager  to manage existing deployments on Linux in your project, all\nMongoDB deployments in the project must be configured for Kerberos\nauthentication before you can enable Kerberos authentication for your\nproject. When you have configured the Kerberos options for each deployment,\nyou can proceed to enable Kerberos for your  Cloud Manager  project. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. If  kerberosKeytab  is not already set: Click  Add Option . Expand the  Select a Startup Option  list. Search for and select the  kerberosKeytab  option, then\nclick  Add . In the  kerberosKeytab  column, provide the absolute\npath to the keytab file. Click  Save . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . TLS is not required for use with  Kerberos (GSSAPI)  authentication. Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. In the  MongoDB Agent Connections to Deployment  section,\nselect  Kerberos (GSSAPI) . Input your  SASL Service Name . The  SASL Service Name  is the Kerberos Service Principal Name for  mongod \nor  mongos . If you are not using LDAP authorization, you must add users to the\n $external  database in your MongoDB deployment. For an example, see\n Kerberos Authentication . Skip this step if you don't want to enable LDAP authorization. Starting with MongoDB 3.4, you can\nauthenticate users using LDAP, Kerberos, and X.509 certificates\nwithout requiring local user documents in the  $external \ndatabase as long as you enable LDAP authorization first. When such a user successfully\nauthenticates, MongoDB performs a query against the LDAP server to\nretrieve all groups which that LDAP user possesses and transforms those\ngroups into their equivalent MongoDB roles. Enter values for the following fields: Setting Value LDAP Authorization Toggle to  ON  to enable LDAP authorization. Authorization Query Template Specify a template for an LDAP\nquery URL to retrieve a list of LDAP groups for an LDAP\nuser. You can enable more than one authentication mechanism for your\nMongoDB deployment, but the  Cloud Manager  Agents can only use  one \nauthentication mechanism. Select  Kerberos (GSSAPI)  to connect to your\nMongoDB deployment. Select the  Kerberos (GSSAPI)  option from the  Agent Auth Mechanism \nsection. Provide credentials for the MongoDB Agent: If using Linux, configure: If using Windows, configure: Setting Value MongoDB Agent Kerberos Principal The Kerberos Principal. MongoDB Agent Keytab Path The path for the Agent's Keytab. Setting Value MongoDB Agent Username The Active Directory user name. MongoDB Agent Password The Active Directory password. Domain The NetBIOS name of a domain in Active Directory Domain\nServices. Must be in all capital letters. Otherwise, click  Cancel  and you can make\nadditional changes. After enabling LDAP Authorization, you need to\n create custom MongoDB roles \nfor each LDAP Group you specified for LDAP Authorization.",
            "code": [],
            "preview": "MongoDB Enterprise\nsupports authentication using a Kerberos service. Kerberos is an\nindustry standard authentication protocol for large client/server\nsystems.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-x509-authentication-for-group",
            "title": "Enable x.509 Authentication for your Cloud Manager Project",
            "headings": [
                "Prerequisites",
                "Procedures",
                "Prepare an Existing Deployment for x.509 Certificate Authentication",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the process, click Modify.",
                "Expand the Advanced Configuration Options section.",
                "Set the TLS (Transport Layer Security)/SSL (Secure Sockets Layer) startup options.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Configure an Existing Deployment for x.509 Member Certificate Authentication",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the process, click Modify.",
                "Expand the Advanced Configuration Options section.",
                "Set the x.509 startup options.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Enable x.509 Client Certificate Authentication for your Cloud Manager Project",
                "Navigate to the Security Settings dialog for your deployment.",
                "Specify the TLS (Transport Layer Security) Settings.",
                "Choose the authentication mechanism.",
                "Configure the LDAP Authorization Settings.",
                "Configure X.509 Client Certificate (MONGODB-X509) for the Agents.",
                "Click Save Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Create MongoDB Roles for LDAP Groups. (Optional)"
            ],
            "paragraphs": "MongoDB supports x.509 client and member certificate authentication for\nuse with a secure  TLS/SSL connection .\nThe x.509 authentication allows users and other members to authenticate\nto servers with certificates rather than with a username and password. Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. A full description of\n Transport Layer Security ,\n public key infrastructure ,\n X.509  certificates, and\n Certificate Authorities \nexceeds the scope of this tutorial. This tutorial assumes prior\nknowledge of  TLS (Transport Layer Security)  and access to valid X.509 certificates. These procedures describe how to configure and enable x.509\nauthentication when using Automation. If  Cloud Manager  does  not  manage your\nagents, you must manually configure them to use x.509 authentication. To learn more, see\n Configure the MongoDB Agent for X.509 Authentication . Using x.509 client certificate authentication requires  TLS (Transport Layer Security) / SSL (Secure Sockets Layer) .\nIf  Cloud Manager  manages one or more existing deployments,  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  must\nbe enabled on each process in the MongoDB deployment before\nenabling x.509 authentication. If  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  is already enabled, you may skip this procedure. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click  Add Option  to add each of the following options: Option Required Value tlsMode Required Select  requireTLS . tlsCertificateKeyFile Required Provide the absolute path to the server certificate. tlsCertificateKeyFilePassword Required Provide the PEM key file password if you encrypted it. The encrypted private key for the  .pem  certificate file\nmust be in  PKCS #8 \n PBES2  format. tlsFIPSMode Optional Select  true  if you want to\n enable FIPS mode . After adding each option, click  Add . When you have added the required options, click  Save . Otherwise, click  Cancel  and you can make\nadditional changes. When you have configured the  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  options for each deployed\nprocess, you can proceed to enable x.509 authentication for your  Cloud Manager \nproject. This procedure is optional. It enables members of a replica set or sharded cluster to also use x.509 certificates to authenticate each other. If it is not configured, replica set and sharded cluster members can still authenticate with each other using  keyFile  authentication. If you enable x.509 member certificate authentication for any\ndeployment in a project, you can't disable x.509 member certificate\nauthentication for the deployment or disable\nx.509 client authentication at the project level. Enabling x.509 member certificate authentication for a deployment in\na project doesn't enable or require x.509 member certificate\nauthentication for other deployments in the project. You can\noptionally enable each other deployment in the project to use x.509\nmember certificate authentication. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click  Add Option  to add each option. Option Value clusterAuthMode Select  x509 . clusterFile Provide the path to the member PEM Key file. After each option, click  Add . Otherwise, click  Cancel  and you can make\nadditional changes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. In the  MongoDB Agent Connections to Deployment  section,\nselect  X.509 Client Certificate (MONGODB-X509) . If you are not using LDAP authorization, you must add users to the\n $external  database in your MongoDB deployment. For an example, see\n x.509 Client Certificate Authentication . Skip this step if you don't want to enable LDAP authorization. Starting with MongoDB 3.4, you can\nauthenticate users using LDAP, Kerberos, and X.509 certificates\nwithout requiring local user documents in the  $external \ndatabase as long as you enable LDAP authorization first. When such a user successfully\nauthenticates, MongoDB performs a query against the LDAP server to\nretrieve all groups which that LDAP user possesses and transforms those\ngroups into their equivalent MongoDB roles. Enter values for the following fields: Setting Value LDAP Authorization Toggle to  ON  to enable LDAP authorization. Authorization Query Template Specify a template for an LDAP\nquery URL to retrieve a list of LDAP groups for an LDAP\nuser. You can enable more than one authentication mechanism for your MongoDB\ndeployment, but the  Cloud Manager  Agents can only use  one  authentication\nmechanism. Select  X.509 Client Certificate (MONGODB-X509)  to connect to your MongoDB deployment. Select the  X.509 Client Certificate (MONGODB-X509)  option from the  Agent Auth Mechanism \nsection. Provide credentials for the MongoDB Agent: Setting Value MongoDB Agent Username Enter the LDAPv3 distinguished name derived from the Agent's\nPEM Key file. MongoDB Agent Certificate File Provide the path and filename for the Agent's PEM Key file\non the server on the line for the appropriate operating\nsystem. MongoDB Agent Certificate Password Provide the password to the PEM Key file if it was\nencrypted. Otherwise, click  Cancel  and you can make\nadditional changes. After enabling LDAP Authorization, you need to\n create custom MongoDB roles \nfor each LDAP Group you specified for LDAP Authorization.",
            "code": [],
            "preview": "MongoDB supports x.509 client and member certificate authentication for\nuse with a secure TLS/SSL connection.\nThe x.509 authentication allows users and other members to authenticate\nto servers with certificates rather than with a username and password.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/restore-single-database",
            "title": "Restore a Single Database or Collection",
            "headings": [
                "Considerations",
                "Restore a Database or Collection from Queryable Backup",
                "Go to Backup view and click the Overview tab.",
                "Open a Backup Tunnel to the Queryable Snapshot.",
                "Use mongodump to export a single database or collection from the queryable backup.",
                "Use mongorestore to restore the single database or collection.",
                "Terminate the queryable instance."
            ],
            "paragraphs": "To restore a single database or a collection (or specific documents)\nfrom a snapshot, you can use the\n Queryable Backup  to export a\nsingle database or collection to restore to the target deployment. Before you attempt a restore, ensure the host for your target\ndeployment has sufficient storage space for the restore files and the\nrestored database, plus additional space for dataset growth. Use\n db.stats()  to find the current\ndatabase size. Use the latest versions of  MongoDB Database Tools , which include\n mongodump  and  mongorestore .\nUse the latest version of  mongosh . Older versions of  mongodump  include an issue\nthat can cause keys in collection options to be dumped in the wrong order.\nTo learn more, see  TOOLS-3411 . You can use a  queryable backup snapshot \nto export data for a database or a collection and restore to the target\ndeployment. The following procedure connects to the queryable backup\ninstance via  Cloud Manager -provided tunnel  . For the deployment whose backup you want to query, click\n  under  Options  column then select\n Query . You can also click the deployment to view its snapshots and click\nthe  Query  button under the  Actions  column. Select the snapshot to query and click  Next . Start  the process to query a snapshot. You will be\nprompted for 2-factor verification. Select  Backup Tunnel  as the connection method to the\nqueryable snapshot.  Select your Platform and download. Uncompress the downloaded file. Open a terminal or command prompt and go to the uncompressed\n<tunnel> directory. Run the executable to start the tunnel. The default port for the tunnel is  27017 . To change the port,\nuse the  --local  flag, as in the following example: If you change the port, you must include the port information\nwhen connecting. Include the following  mongodump  options to\nconnect to the tunnel  : --port  set to the port for the tunnel --db  set to the name of the database to export --out  set to an empty directory to\noutput the data dump. Ensure that the user running  mongodump  can write to\nthe specified directory. To connect to a tunnel running on port  27020  to dump out\ndata from the  test  database to\n /mydata/restoredata/  directory: mongodump  outputs the  test  database files into the\n /mydata/restoredata/test/  directory. If the  mongodump  is not in your  PATH , specify the path\nfor the tool. include the following options to connect to the tunnel  : --port  set to the port for the tunnel. --db  set to the name of the database to export. --collection  for a single\ncollection. --out  set to an empty directory to\noutput the data dump. Ensure that the user running  mongodump  can\nwrite to the specified directory. To connect to a tunnel running on port  27020  to dump out\ndata from the  restaurants  collection from  test \ndatabase to  /mydata/restoredata/  directory: mongodump  outputs the  restaurants  collection data into\nthe  /mydata/restoredata/test/restaurants.bson  file. For example, to restore from the  /mydata/restoredata/test \ndirectory to a new database  restoredTest : The example assumes that the destination replica set's primary or\nthe destination sharded cluster's  mongos  listens on port\n 27017 . For example, to restore from the\n /mydata/restoredata/test/restaurants.bson  data file to a new\ncollection  rest2  in the  test2  database: The example assumes that the destination replica set's primary or\nthe destination sharded cluster's  mongos  listens on port\n 27017 . Include the following   mongorestore  options: Optionally, you can include  --drop  to\ndrop the database in the destination cluster if the database\nalready exists. --port  set to the port of the destination cluster. --db  set to the name of the destination database. Include the following  mongorestore  options: Optionally, you can include  --drop  to\ndrop the collection in the destination cluster if the collection\nalready exists. --port  set to the port of the destination cluster. --db  set to the name of the destination database. Once you have finished, you can terminate the\nqueryable instance: Go to the  Restore History  and hover over the\n Status  column for the deployment item. Click  Cancel . Alternatively, instead of connecting via the tunnel, you can\n connect directly  to the\nqueryable backup, using the X.509 PEM files provided. If connecting\ndirectly to the queryable backup, you must specify the hostname and\nport, the TLS/SSL option, and the X.509 certificates. If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "./<tunnel executable> --local localhost:27020"
                },
                {
                    "lang": "sh",
                    "value": "mongodump --port <port for tunnel> --db <single-database> --out <data-dump-path>"
                },
                {
                    "lang": "sh",
                    "value": "mongodump --port 27020 --db test --out /mydata/restoredata/"
                },
                {
                    "lang": "sh",
                    "value": "mongodump --port <port for tunnel> \\\n          --db <single-database> \\\n          --collection <collection-name> \\\n          --out <data-dump-path>"
                },
                {
                    "lang": "sh",
                    "value": "mongodump --port 27020 \\\n          --db test \\\n          --collection restaurants \\\n          --out /mydata/restoredata/"
                },
                {
                    "lang": "sh",
                    "value": "mongorestore --port <port> --db <destination database> <data-dump-path/database> --drop"
                },
                {
                    "lang": "sh",
                    "value": "mongorestore --port 27017 --db restoredTest /mydata/restoredata/test --drop"
                },
                {
                    "lang": "sh",
                    "value": "mongorestore --port <port> --db <destination database> --collection <collection-name> <data-dump-path/dbname/collection.bson> --drop"
                },
                {
                    "lang": "sh",
                    "value": "mongorestore --port 27017 --db test2 --collection rest2 /mydata/restoredata/test/restaurants.bson --drop"
                }
            ],
            "preview": "To restore a single database or a collection (or specific documents)\nfrom a snapshot, you can use the\nQueryable Backup to export a\nsingle database or collection to restore to the target deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-agent-api-key",
            "title": "Manage Agent API Keys",
            "headings": [
                "Overview",
                "View Agent API Keys",
                "Create Agent API Key",
                "Go to the Agent API Keys Tab.",
                "Click Generate.",
                "Enter a description.",
                "Copy and record the key.",
                "Delete Agent API Key",
                "Go to the Agent API Keys Tab.",
                "Delete the Agent API key.",
                "Confirm."
            ],
            "paragraphs": "An Agent API key is a unique identifier that the Automation,\nMonitoring, and Backup Agents for a project use to authenticate\nthemselves to  Cloud Manager . A project can have multiple Agent API keys. Any of\nthe project's agents can use any of the Agent API keys associated with\nthe project. With the new Agent API Key model, multiple Agent API Keys can be\nassociated with a project. This gives users the ability to perform\nAgent key rotation. In addition, the new Agent API Key model improves on security as the\nkeys are displayed only once upon creation and  Cloud Manager   no longer\nstores or displays these keys. You can manage your Agent API keys from the  Agent API\nKeys  tab. From the  Deployment  view, click on the\n Agents  tab, and then the  Agent API Keys  tab. The tab displays a list of existing Agent API keys. The keys\nthemselves are redacted. However, the list displays the description\nand creation details. Only the project's owner can create an Agent API key. You can\ngenerate an Agent API Key while installing an agent if you\nare the project owner and the project has either no Agent API keys\nor just the Original Group API key. From the  Deployment  view, click on the  Agents  tab, and then  Agent API Keys . Enter a description for the key. The description acts as an identifier for the key as\nthe key is shown only once upon generation. The description has a limit of 1000 characters. Copy and record the key when it is generated. After you have  recorded the key, click  Close . When you generate an Agent API Key,  Cloud Manager  displays it  one time\nonly . You must copy this key. Treat it like a password; store\nit in a secure place.  Cloud Manager  never displays the full key again. From the  Deployment  view, click on the  Agents  tab, and then   Agent API Keys . For the key you wish to delete, click the gear button under the\n Actions  column and select  Delete .",
            "code": [],
            "preview": "An Agent API key is a unique identifier that the Automation,\nMonitoring, and Backup Agents for a project use to authenticate\nthemselves to Cloud Manager. A project can have multiple Agent API keys. Any of\nthe project's agents can use any of the Agent API keys associated with\nthe project.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/view-snapshots",
            "title": "View a Backup's Snapshots",
            "headings": [
                "Overview",
                "Procedure",
                "Click Continuous Backup, then the Overview tab.",
                "On the line listing the process, click the ellipsis icon and click View All Snapshots."
            ],
            "paragraphs": "By default,  Cloud Manager  takes a base snapshot of a backed-up deployment every 6\nhours and retains snapshots as described in\n Snapshot Frequency and Retention Policy . Administrators can change the\nfrequency and retention settings. You can view all available snapshots, as described here.",
            "code": [],
            "preview": "By default, Cloud Manager takes a base snapshot of a backed-up deployment every 6\nhours and retains snapshots as described in\nSnapshot Frequency and Retention Policy. Administrators can change the\nfrequency and retention settings.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/remove-process-from-monitoring",
            "title": "Remove a Process from Monitoring",
            "headings": [
                "Monitored Processes",
                "Remove a Process from Monitoring",
                "Navigate to the Clusters view for your deployment.",
                "Click Modify in the cluster from which you want to remove a process.",
                "In Member Configuration, click the ellipsis icon next to the process that you want to remove and select Remove from Cluster.",
                "Click Remove from Cluster in the verification dialog.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm and Deploy to deploy your changes.",
                "Click the ellipsis next to the standalone process, and select Remove from Cloud Manager."
            ],
            "paragraphs": "Removing a process from monitoring means  Cloud Manager  no longer displays\nits status or tracks its metrics. You must  terminate the\ndeployment's backups  before you can remove a\nmonitored deployment. Follow this procedure to remove one monitored process from  Cloud Manager . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. For replica sets, select  Remove from Replica Set .\nFor  mongod  processes in a sharded replica set, select\n Remove From Shard . For  mongos  processes,\nselect  Remove from Cluster . For replica sets, select  Remove from Replica Set .\nFor  mongod  processes in a sharded replica set, select\n Remove From Shard . For  mongos  processes,\nselect  Remove from Cluster . The process that you removed earlier now appears as a standalone\nprocess. However,  mongos  processes are automatically removed\nfrom the cluster and do not appear.",
            "code": [],
            "preview": "Removing a process from monitoring means Cloud Manager no longer displays\nits status or tracks its metrics. You must terminate the\ndeployment's backups before you can remove a\nmonitored deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/edit-deployment",
            "title": "Edit a Deployment's Configuration",
            "headings": [
                "Considerations",
                "Apply Changes to Cluster or Member",
                "MongoDB Version",
                "Backup Considerations for MongoDB Versions",
                "Storage Engine",
                "Fixed Properties",
                "Deployment Topology",
                "Project-Level Modifications",
                "Multiple Modifications",
                "Force Reconfigure",
                "Removing a Shard",
                "Removing Multiple Replica Set Members",
                "Prerequisites",
                "Procedure",
                "Navigate to the Deployment page for your project.",
                "On the line listing the deployment item, click Modify.",
                "Modify the Standalone Settings.",
                "Modify Advanced Configuration Options.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Navigate to the Deployment page for your project.",
                "On the line listing the deployment item, click Modify.",
                "Modify Cluster-Wide Settings.",
                "Configure Each Replica Set Member.",
                "Configure your Replication Settings.",
                "Modify Advanced Configuration Options.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Navigate to the Deployment page for your project.",
                "On the line listing the deployment item, click Modify.",
                "Configure Cluster-Wide Settings.",
                "Configure Each Shard in Your Cluster.",
                "Configure Each Configuration Server in Your Cluster.",
                "Configure Each mongos in Your Cluster.",
                "Configure Each Replica Set in your Cluster.",
                "Modify Advanced Configuration Options.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "You can modify a deployment's configuration and topology, including its\nMongoDB versions, storage engines, and numbers of hosts or shards. You\ncan make modifications at all levels of a deployment's topology from a\ntop-level  sharded cluster  or\n replica set  to lower levels, such as a replica set within a\nsharded cluster, or an individual process within a replica set. You can\nalso modify  standalone  processes. If you make configuration changes to an individual MongoDB\nprocess within a cluster, any future changes to the cluster no longer apply to the child process. If you turn off journaling for a replica set member and\nthen later change the journal commit interval for the\nreplica set, the change does not apply to the member. To choose which versions of MongoDB are available to  Cloud Manager , see\n Add a Custom MongoDB Build . Check the following documents for any considerations or\ncompatibility issues before changing a deployment's MongoDB version: The MongoDB Release Notes The documentation for your driver. MongoDB Compatibility Matrix Plan the version change during a predefined maintenance window. Change the MongoDB version on a staging environment before changing a\nproduction environment. Your staging environment should mirror your\nproduction environment. This can help avoid compatibility issues\nthat may result in downtime for your production deployment. Follow the  MongoDB release notes  when\nperforming manual upgrades of  replica sets  and\n sharded clusters . You cannot downgrade a MongoDB deployment: From version 5.0 to any version before 4.4.0 From version 4.4 to any version before 4.2.6 From version 4.2 to any version 4.0.12 (for Windows) or 4.0.7\n(for Linux) From version 4.0 to any version before 3.6.23 To learn more about backup considerations, see\n Backup Considerations . If you choose to upgrade to MongoDB 4.2 with\n \"featureCompatibilityVersion\" : 4.2 ,  Cloud Manager  displays a modal that\nasks you to agree to the  special license  that MongoDB, Inc.\ngrants to use MongoDB Enterprise for backups. If you run or upgrade to MongoDB 3.0 or later and modify the MongoDB\nstorage engine,  Cloud Manager  shuts down and restarts the MongoDB process. For\na multi-member replica set,  Cloud Manager  performs a rolling\n inital sync  of each member. Cloud Manager  creates backup directories during the migration from one storage\nengine to the other if the host has adequate disk space. If disk space\nis insufficient, no backups are taken.  Cloud Manager   does not  delete the\nbackup directories once the migration is complete. You can keep or\ndelete the previous backup directories. The backup directories are\nlocated in  the  mongod 's data directory. Before you can change the  storage engine  for a standalone\ninstance or replica set, you must give the Automation write access to\nthe MongoDB  data directory 's  parent  directory. The agent\ncreates a temporary backup of the data in the parent directory when\nupdating the storage engine. Storage engine changes on standalone\ninstances also require adequate disk space to perform a full  /mongodump \nand  /mongorestore . This disk space is then restored to the\ninstance after the storage engine configuration change.  Cloud Manager   does not \ndelete the backup directories. You cannot change the storage engine on a  config server . For\nmore information on storage engines and the available options, see\n Storage  in the MongoDB manual. MongoDB removed support for the MMAPv1 storage engine in MongoDB 4.2.\nIf you\n edit your deployment's configuration \nto change your storage engine to  WiredTiger Storage Engine ,  Cloud Manager \nrestarts the MongoDB processes. If the data directory was  /data/process , the backup would be\n /data/process.bak.UNIQUENAME . The  UNIQUENAME  is a random\nstring that  Cloud Manager  generates. You cannot modify the following settings after a deployment has been\ncreated: You  can  modify the following deployment settings: database path The hostname,  bind_ip  or\n port  to which a MongoDB process is\nassigned log path  at the process level advanced options You can make modifications at all levels of a deployment's topology,\nincluding child processes. To modify the topology or processes, use this tutorial or one of the\nmore specific tutorials: Migrate a Replica Set Member to a New Server Convert a Standalone to a Replica Set Some modifications that affect a deployment occur at the project level.\nThe following changes affect every MongoDB process in the project. For\nthese changes, use the specified tutorials: To enable  TLS (Transport Layer Security)  for the deployment, see\n Enable TLS for a Deployment . To enable authentication for the deployment, see\n Enable Authentication for  a Cloud Manager  Project . To add or modify MongoDB users and roles for the deployment, see\n Manage MongoDB Users . You can combine multiple modifications into one deployment. When you click  Review Changes , the review displays all the\nchanges on one screen for you to confirm before deploying. You could make all the following modifications before clicking the\n Review Changes  button: Add the latest stable version of MongoDB to the\n Add a Custom Build . Enable  TLS (Transport Layer Security)  for the deployment's MongoDB processes. Add a new sharded cluster running the latest stable version of\nMongoDB from above. For Replica Sets and Sharded Clusters Only The MongoDB Agent can force a replica set to accept a new configuration\nwhen you set the  Force Reconfigure  Replication Setting to\n Yes . Only force a reconfiguration to recover a replica set from a\nstate in which a minority of its members are available. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the\nMongoDB Manual. For Sharded Clusters Only When you remove a shard, any unsharded databases in that shard are\nmoved to a remaining shard using the\n movePrimary  command. All sharded collections remain online and available during the shard\nremoval process. However, read and write operations sent to unsharded\ncollections during the  movePrimary  operation can result in\nunexpected behavior, including failure of the migration or loss of\ndata. We recommend moving the primary shard for any databases containing\nunsharded collections before removing the shard. To learn more about removing shards, see\n Remove Shards from an Existing Sharded Cluster . You can remove or migrate multiple replica set members at once, but a majority of the\nvoting members must remain. If you need to remove more voting members, remove\nthem one at a time. To learn more about voting, see  Replica Set High Availability  and  Replica Set Elections . You have a four-node replica set. All nodes are voting members. You can\nremove only one node, which preserves the majority of three out of four\nvoting nodes. You can remove another node from the remaining\nthree-node replica set afterward. This preserves the majority of the\nremaining voting nodes. You have a four-node replica set. Three nodes are voting members and\none node is a non-voting member. You can remove one voting member\nand one non-voting member at the same time. This preserves the\nmajority of two out of three voting nodes. Your deployment must be running a version of the\nAutomation that is compatible with  Cloud Manager . If\nyour deployment is not running a compatible version of the\nagent,  Cloud Manager  displays a banner prompting you to update your\nagents. Select the type of deployment you want to edit: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. The  Standalone Settings  section contains the following\nconfiguration settings: Setting Description Hostname Hostname to which  Cloud Manager  deploys the  mongod . This hostname\ncan be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6) \naddress. You can only deploy to hosts under  Cloud Manager  automation.\nFor complete documentation on adding servers to  Cloud Manager \nautomation, see  Provision Servers for Automation . Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Version Select the MongoDB server version of the  ~bin.mongod  process. Version Select the MongoDB server version of the  ~bin.mongod  process. Auth Schema Version Select the schema for storing the user for storing the user data for\nyour deployment. If you are upgrading from a MongoDB version older\nthan 3.0, MongoDB 3.0+ uses a different schema for user data\nthan previous versions. For compatibility information, see the\n Security Changes \nin the MongoDB 3.0 release notes. Feature Compatibility Version Select the  Feature Compatibility Version  of the\ndeployment.  Cloud Manager  displays this field if your deployment runs\nMongoDB version 3.4 or later. Log File Specify the full path to the  ~bin.mongod  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n ~bin.mongod  must have permission to read and write to the\nspecified file. The  ~bin.mongod  have its own unique log file. If deploying multiple\n ~bin.mongod  processes to the same host, ensure each  ~bin.mongod  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n ~bin.mongod  to store its logfile to  /var/log/mongodb/  as\n mongo.log . The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: For descriptions of the available  Advanced\nConfiguration Options , see\n Advanced Options for MongoDB Deployments . Click  Add Option . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to the process. Cloud Manager  redirects you to the  Deployment  page, where you must\nreview your changes before deploying the updated configuration. Otherwise, click  Cancel  and you can make\nadditional changes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. The  Replica Set Configuration  section contains the\nfollowing cluster-wide configuration settings. Setting Description Auth Schema Version Select the schema for storing the user for storing the user data for\nyour deployment. If you are upgrading from a MongoDB version older\nthan 3.0, MongoDB 3.0+ uses a different schema for user data\nthan previous versions. For compatibility information, see the\n Security Changes \nin the MongoDB 3.0 release notes. Feature Compatibility Version Select the  Feature Compatibility Version  of the\ndeployment.  Cloud Manager  displays this field if your deployment runs\nMongoDB version 3.4 or later. Replica Set Settings Displays an table of each process associated with the replica\nset. You can configure the MongoDB server version, data directory,\nand log path of each process. Process Name Hostname and port of a  mongod  process. This hostname can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address.  Cloud Manager \ninitially groups each process under the replica set name. Click the\n  to the left of the replica set name to display\nall  mongod  processes in the replica set. Cloud Manager  applies any settings configured for the replica set to all\nof its associated processes. Version Select the MongoDB server version of the  ~bin.mongod  process. Version Select the MongoDB server version of the  ~bin.mongod  process. Log File Specify the full path to the  ~bin.mongod  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n ~bin.mongod  must have permission to read and write to the\nspecified file. The  ~bin.mongod  have its own unique log file. If deploying multiple\n ~bin.mongod  processes to the same host, ensure each  ~bin.mongod  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n ~bin.mongod  to store its logfile to  /var/log/mongodb/  as\n mongo.log . Cloud Manager  lists each replica set member under the\n MongoD Settings  heading of the\n Member Configuration  section. Each replica set member\nhas the following configurable options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Replica Set Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. The  Replication Settings  section contains the following\nconfiguration options for the replica set: Setting Description Protocol Version Select the replication protocol version used by the replica set.\nThis setting corresponds to the\n protocolVersion \nreplica set configuration option. For more information, see  Replica Set Protocol Versions . Chaining Allowed Specify  true  to allow  secondary \nmembers to replicate from other secondary members. This setting\ncorresponds to the\n chainingAllowed \nreplica set configuration option. Write Concern Majority Journal Default Determines the behavior of\n {w:\"majority\"} \nwrite concern if the write concern does not explicitly\nspecify the journal option\n j . This setting corresponds to the\n writeConcernMajorityJournalDefault \nreplica set configuration option. Heartbeat Timeout (secs) Specify the number of seconds that the replica set members wait for\na successful heartbeat from each other. This setting corresponds to\nthe  heartbeatTimeoutSecs \nreplica set configuration option. Election Timeout (ms) Specify the time limit in milliseconds for detecting when a replica\nset's  primary  is unreachable. This setting corresponds to\nthe  electionTimeoutMillis \nreplica set configuration option. CatchUp Timeout (ms) Specify the time limit in milliseconds for a newly elected\n primary  to sync, or catch up, with the other replica\nset members that may have more recent writes. This setting\ncorresponds to the\n catchUpTimeoutMillis \nreplica set configuration option. CatchUp Takeover Delay (ms) Specify the time in milliseconds a node waits to initiate a\n catchup takeover  after determining it is ahead of the\ncurrent  primary . This setting corresponds to the\n catchUpTakeoverDelayMillis \nreplica set configuration option. Last Error Defaults Specify the default  write concern  for the replica set. The\nreplica set uses this write concern only when write operations or\n getLastError  specify\nno other write concern. If this option is not set, the default write concern for the\nreplica set only requires confirmation from the  primary . Specify this option in the form of a document, i.e.,  {\"w\":2} . Force Reconfigure Specify that you want to force a reconfiguration of the replica\nset. When set to  Yes , the MongoDB Agent forces the replica set\nto accept a new configuration even if a majority of its members are\nunavailable. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Server Manual. The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: Cloud Manager  lists each process in the cluster grouped logically. Click\nthe grey arrow to the left of the logical grouping to display\nits sub-groupings and processes. You can modify the advanced options\nfor each process individually as necessary. For descriptions of the available  Advanced Configuration\nOptions , see  Advanced Options for MongoDB Deployments . Click  Add Advanced Options . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to every process of the selected process type\nin the cluster. Cloud Manager  redirects you to the deployment page, where you must review\nyour changes before deploying the updated configuration. Otherwise, click  Cancel  and you can make\nadditional changes. Cloud Manager  displays the following message if you attempt to force\nreconfigure a replica set. Before you click  Confirm & Deploy , make sure that you\nunderstand the  risks  of force\nreconfiguring a replica set. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Manual. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. The  Cluster Configuration  section contains the following\ncluster-wide configuration settings. Setting Description Shard Name Prefix Specify the prefix of each  shard  in the cluster.  Cloud Manager \nnames each shard in the cluster using the  <prefix_n>  format,\nwhere  n  is a 0-indexed, monotonically increasing integer. Auth Schema Version Select the schema for storing the user for storing the user data for\nyour deployment. If you are upgrading from a MongoDB version older\nthan 3.0, MongoDB 3.0+ uses a different schema for user data\nthan previous versions. For compatibility information, see the\n Security Changes \nin the MongoDB 3.0 release notes. Feature Compatibility Version Select the  Feature Compatibility Version  of the\ndeployment.  Cloud Manager  displays this field if your deployment runs\nMongoDB version 3.4 or later. Process Name Hostname and port of a  mongod  or  mongos  associated to the\nsharded cluster. This hostname can be a hostname, an  FQDN (fully qualified domain name) , an\n IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. Cloud Manager  groups  mongod  processes under their parent replica set\nname, and  mongos  processes under  mongoses .  Cloud Manager  then\ngroups all the cluster components under the cluster name. Click the\n  to the left of a grouping to list its\nsub-groups or processes. Modifying any of the available settings\nfor a grouping changes the corresponding value in its sub-groups\nand processes. For clusters running MongoDB 3.0 or earlier,  Cloud Manager  groups\nthe config server  mongod  processes under\n configServers . Version Select the MongoDB server version of the  ~bin.mongod  or  mongos  process. Version Select the MongoDB server version of the  ~bin.mongod  or  mongos  process. Log File Specify the full path to the  mongod  or  mongos  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n mongod  or  mongos  must have permission to read and write to the\nspecified file. The  mongod  or  mongos  have its own unique log file. If deploying multiple\n mongod  or  mongos  processes to the same host, ensure each  mongod  or  mongos  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n mongod  or  mongos  to store its logfile to  /var/log/mongodb/  as\n mongo.log . From the  Member Configuration  section, click\n Shard Settings  to open the  shard  configuration\noptions.  Cloud Manager  lists each shard in the cluster and the  mongod \nprocesses associated to that shard. Each shard process has the\nfollowing options. You cannot modify options that are greyed out: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Replica Set Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. To add additional shards to the cluster: Click  Add a Shard . Under the  Cluster Configuration  section, set the\nfollowing parameters for each  mongod  in the shard: Version Data Directory Log File Cloud Manager  displays a different heading for your configuration server\nsettings depending on the MongoDB version you selected for your\nconfiguration servers. From the  Member Configuration  section, click\n Config Server Replica Set Settings  to open\nthe CSRS configuration options. Each config server\nreplica set member has the following options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Cluster Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. From the  Member Configuration  section, click\n Config Server Settings  to open the configuration\nserver options. Each configuration server has the following\noptions: Setting Description Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. From the  Member Configuration  section, click\n Mongos Settings  to open the  mongos \nconfiguration options. Each  mongos  process has the\nfollowing options. You cannot modify options that are greyed out: Setting Description Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\n mongos . The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  mongos  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  mongos  must have exclusive access to the specified port.\nIf deploying multiple  mongos  processes to a single host,\nyou must select a unique unused port for each process. Add a Mongos Click to add an additional  mongos  process. The  Replication Settings  section contains the following\nconfiguration options for each replica set in the cluster: Setting Description Protocol Version Select the replication protocol version used by the replica set.\nThis setting corresponds to the\n protocolVersion \nreplica set configuration option. For more information, see  Replica Set Protocol Versions . Chaining Allowed Specify  true  to allow  secondary \nmembers to replicate from other secondary members. This setting\ncorresponds to the\n chainingAllowed \nreplica set configuration option. Write Concern Majority Journal Default Determines the behavior of\n {w:\"majority\"} \nwrite concern if the write concern does not explicitly\nspecify the journal option\n j . This setting corresponds to the\n writeConcernMajorityJournalDefault \nreplica set configuration option. Heartbeat Timeout (secs) Specify the number of seconds that the replica set members wait for\na successful heartbeat from each other. This setting corresponds to\nthe  heartbeatTimeoutSecs \nreplica set configuration option. Election Timeout (ms) Specify the time limit in milliseconds for detecting when a replica\nset's  primary  is unreachable. This setting corresponds to\nthe  electionTimeoutMillis \nreplica set configuration option. CatchUp Timeout (ms) Specify the time limit in milliseconds for a newly elected\n primary  to sync, or catch up, with the other replica\nset members that may have more recent writes. This setting\ncorresponds to the\n catchUpTimeoutMillis \nreplica set configuration option. CatchUp Takeover Delay (ms) Specify the time in milliseconds a node waits to initiate a\n catchup takeover  after determining it is ahead of the\ncurrent  primary . This setting corresponds to the\n catchUpTakeoverDelayMillis \nreplica set configuration option. Last Error Defaults Specify the default  write concern  for the replica set. The\nreplica set uses this write concern only when write operations or\n getLastError  specify\nno other write concern. If this option is not set, the default write concern for the\nreplica set only requires confirmation from the  primary . Specify this option in the form of a document, i.e.,  {\"w\":2} . Force Reconfigure Specify that you want to force a reconfiguration of the replica\nset. When set to  Yes , the MongoDB Agent forces the replica set\nto accept a new configuration even if a majority of its members are\nunavailable. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Server Manual. The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: Cloud Manager  lists each process in the cluster grouped logically. Click\nthe grey arrow to the left of the logical grouping to display\nits sub-groupings and processes. You can modify the advanced options\nfor each process individually as necessary. For descriptions of the available  Advanced Configuration\nOptions , see  Advanced Options for MongoDB Deployments . Click  Add Advanced Options . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to every process of the selected process type\nin the cluster. Cloud Manager  redirects you to the deployment page, where you must review\nyour changes before deploying the updated configuration. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "You can modify a deployment's configuration and topology, including its\nMongoDB versions, storage engines, and numbers of hosts or shards. You\ncan make modifications at all levels of a deployment's topology from a\ntop-level sharded cluster or\nreplica set to lower levels, such as a replica set within a\nsharded cluster, or an individual process within a replica set. You can\nalso modify standalone processes.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/change-mongodb-version",
            "title": "Change the Version of MongoDB",
            "headings": [
                "Considerations",
                "Prerequisites",
                "Remove Incompatible MongoDB Features when Downgrading",
                "Unmanage, but continue to monitor, the deployment.",
                "Downgrade the Feature Compatibility Version.",
                "Import the deployment.",
                "Unmanage, but continue to monitor, the deployment.",
                "Downgrade the Feature Compatibility Version.",
                "Import the deployment.",
                "Unmanage, but continue to monitor, the deployment.",
                "Downgrade the Feature Compatibility Version.",
                "Import the deployment.",
                "Unmanage, but continue to monitor, the deployment.",
                "Downgrade the Feature Compatibility Version.",
                "Import the deployment.",
                "Unmanage, but continue to monitor, the deployment.",
                "Downgrade the Feature Compatibility Version.",
                "Import the deployment.",
                "Procedure",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the deployment item, click Modify.",
                "Verify the desired version number is in the version list.",
                "Change the version of MongoDB for the deployment.",
                "(Optional) Update the featureCompatibilityVersion.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "You can upgrade or downgrade MongoDB versions within the same Feature\nCompatibility Version (FCV) in  Cloud Manager   sharded clusters ,\n replica sets , and  standalone MongoDB instances \nwhile maximizing the availability of your deployments. You can  add custom-built versions of MongoDB \nfor  Cloud Manager  to download. If  Cloud Manager  doesn't manage your deployment, change the version of MongoDB manually.\nTo learn more, see upgrade tutorials for each  MongoDB release . Cloud Manager  doesn't support Backup, Monitoring, or Automation\nfor versions earlier than MongoDB 3.6. Check the following documents for any considerations or\ncompatibility issues before changing a deployment's MongoDB version: The MongoDB Release Notes The documentation for your driver. MongoDB Compatibility Matrix Plan the version change during a predefined maintenance window. Change the MongoDB version on a staging environment before changing a\nproduction environment. Your staging environment should mirror your\nproduction environment. This can help avoid compatibility issues\nthat may result in downtime for your production deployment. Follow the  MongoDB release notes  when\nperforming manual upgrades of  replica sets  and\n sharded clusters . You cannot downgrade a MongoDB deployment: From version 5.0 to any version before 4.4.0 From version 4.4 to any version before 4.2.6 From version 4.2 to any version 4.0.12 (for Windows) or 4.0.7\n(for Linux) From version 4.0 to any version before 3.6.23 If the MongoDB deployment has its  Feature Compatibility Version \nset to the same release series as its  Version , you must first\nmanually downgrade the instance's  featureCompatibilityVersion . To downgrade your deployment from version 7.0 to 6.0, you\nmust contact  MongoDB Support  for assistance. For\nmore information, see  Downgrade 7.0 to 6.0 . This sets the  featureCompatibilityVersion  to  6.0 . Import the deployment  back into\n Cloud Manager . Edit the deployment  in  Cloud Manager  and select\nthe downgraded version under the  Version  column. Read the  Downgrade Considerations \nand take appropriate action for unsupported features. Downgrade the 6.0 Standalone Feature Compatibility Version to 5.0 Downgrade the 6.0 Replica Set Feature Compatibility Version to 5.0 Downgrade the 6.0 Sharded Cluster Feature Compatibility Version to 5.0 This sets the  featureCompatibilityVersion  to  5.0 . Import the deployment  back into\n Cloud Manager . Edit the deployment  in  Cloud Manager  and select\nthe downgraded version under the  Version  column. Downgrade the 5.0 Standalone Feature Compatibility Version to 4.4 Downgrade the 5.0 Replica Set Feature Compatibility Version to 4.4 Downgrade the 5.0 Sharded Cluster Feature Compatibility Version to 4.4 This removes any  5.0 incompatible features  and sets the\n featureCompatibilityVersion  to  4.4 . Import the deployment  back into\n Cloud Manager . Edit the deployment  in  Cloud Manager  and select\nthe downgraded version under the  Version  column. Downgrade the 4.4 Standalone Feature Compatibility Version to 4.2 Downgrade the 4.4 Replica Set Feature Compatibility Version to 4.2 Downgrade the 4.4 Sharded Cluster Feature Compatibility Version to 4.2 This removes any  4.4 incompatible features  and sets the\n featureCompatibilityVersion  to  4.2 . Import the deployment  back into\n Cloud Manager . Edit the deployment  in  Cloud Manager  and select\nthe downgraded version under the  Version  column. Downgrade the 4.2 Standalone Feature Compatibility Version to 4.0 Downgrade the 4.2 Replica Set Feature Compatibility Version to 4.0 Downgrade the 4.2 Sharded Cluster Feature Compatibility Version to 4.0 This removes any  4.2 incompatible features  and sets the\n featureCompatibilityVersion  to  4.0 . Import the deployment  back into\n Cloud Manager . Edit the deployment  in  Cloud Manager  and select\nthe downgraded version under the  Version  column. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. In the  Cluster Configuration  section, the\n Cluster Settings  heading lists the processes with their\nnames, MongoDB versions, data directories and log files. Scroll to the  Cluster Settings  heading. Click the  Version  arrow for the first MongoDB process\nin the list. For each MongoDB process that you want to change: Click the current version number for the process. Click the desired version number. If you are upgrading to a new major version, and wish to enable\nfeatures offered in the new major version, you must also update the\n featureCompatibilityVersion . For each MongoDB deployment that you want to change: Click the current  featureCompatibilityVersion  for the\ndeployment. Click the value that matches the desired version number. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "You can upgrade or downgrade MongoDB versions within the same Feature\nCompatibility Version (FCV) in Cloud Manager sharded clusters,\nreplica sets, and standalone MongoDB instances\nwhile maximizing the availability of your deployments.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/clear-security-settings",
            "title": "Clear Security Settings",
            "headings": [
                "Overview",
                "Procedure",
                "Navigate to the Clusters view for your deployment.",
                "Select Remove from Cloud Manager.",
                "Select whether to also stop monitoring the process.",
                "Navigate to the Settings tab.",
                "Click Clear Settings.",
                "To confirm that you wish to clear the security settings, click Clear Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "Cloud Manager  enables you to  configure the security settings  that your deployments\nuse through the  Cloud Manager  user interface. If you wish to reset the security\nsettings for your deployment, you may do so using the  Clear\nSettings  button.  Clear Settings  clears all\nauthentication-related settings so you can start over from a blank\nconfiguration. Clear Settings  removes all authentication-related settings,\nincluding the authentication mechanisms for the deployment,\nautomation users and roles, and defined users for the\nMonitoring and Backups. You  cannot  reset the security settings for a deployment if your\ndeployment includes any managed processes. You may only reset the authentication settings if there are no managed\nprocesses associated with your deployment. As such, if you wish to reset\nthe security settings, you must unmanage all processes, and then use the\n Clear Settings  button to reset the security settings. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Select  Unmanage this item but continue to monitor \nand click  Remove . If prompted for an authentication code,\nenter the code. You do not need to stop monitoring a process in order to reset the\nsecurity settings. Click the  Security  tab. Click the  Settings  tab. The  Clear Settings  button resets the security settings\nfor your  Cloud Manager  deployment. If you still have managed processes, the  Clear Settings \nbutton is grayed out. Otherwise, click  Cancel  and you can make\nadditional changes. Cloud Manager  will reset all security settings. You can now edit the security\nsettings if you wish to. To resume management of any processes,\nsee:  MongoDB Agent .",
            "code": [],
            "preview": "Cloud Manager enables you to configure the security settings that your deployments\nuse through the Cloud Manager user interface. If you wish to reset the security\nsettings for your deployment, you may do so using the Clear\nSettings button. Clear Settings clears all\nauthentication-related settings so you can start over from a blank\nconfiguration.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/install-mongodb-agent-to-monitor",
            "title": "Install the MongoDB Agent to Only Monitor or Backup Deployments",
            "headings": [
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the MongoDB Agent.",
                "Install the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "(Optional) Change the location of the MongoDB Agent binaries and configuration backup files.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Navigate to the MongoDB Agent Download page.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host."
            ],
            "paragraphs": "You have a project and want to install the MongoDB Agent to monitor\nand/or back up your MongoDB deployments. You are choosing not to manage\nyour MongoDB deployments at this time. Please review the  MongoDB Agent Prerequisites \nbefore installing the MongoDB Agent. Use this procedure to install the MongoDB Agent on x86_64\narchitecture running Microsoft Windows: If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click Windows - MSI. The  MongoDB Agent Installation Instructions  box\ndisplays the following information: Some or all of these values are required in a later step. Copy these\nvalues then store them where you can access them later. Project ID \n(Required for binding to a project) API Key If you do not have an API Key, click  \n Generate Key . After the  MSI  downloads, double-click: mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi If a security warning appears, click  Run . At the  Configuration/Log Folder  step Provide the directory into which these files are saved. At the  Key Type  step, select  Agent\nAPI Key  to bind to a specific  project . Enter the appropriate agent keys. These keys are provided in the  MongoDB\nAgent Installation Instructions  modal described in\nthe previous step. Type your Project ID into the  Project ID \nfield. Type your Agent API Key into the\n Agent API Key  field. At the  MongoDB Paths  step, specify the Log\nand Backup directories At the  Windows Firewall Configuration  step,\nclick your preferred firewall configuration. If you click  Configure firewall rules allowing\naccess from only the specified |ipaddr| addresses. , type\nthe necessary  IPv4 (Internet Protocol version 4)  addresses into the provided box. (Conditional) Windows enables  Stealth Mode \nfor the Windows Firewall by default. If you have not\ndisabled it on the MongoDB host on which you are\ninstalling the MongoDB Agent, you are asked to disable\nit. Stealth Mode significantly degrades the performance\nand capability of the MongoDB Agent. Click\n Disable Stealth Mode . (Conditional) Windows does not enable  Disk Performance Counters \nby default. If you have not enabled Disk Performance\nCounters for the MongoDB host, click  Enable\nDisk Performance Counters . The MongoDB Agent\nuses these counters for some of its hardware monitoring\nactivities. Click  Install . Click  Finish  once setup is complete. After the  MSI  downloads, you can run an unattended\ninstall. You run an unattended install from the command line\nin either the command interpreter or PowerShell. To learn\nmore about unattended installs, see Microsoft's\ndocumentation on  Standard Installer Command-Line Options To run the  MSI  installer unattended from the command\nline, you invoke  msiexec.exe  with the  /q  and  /i \nflags and a combination of required and optional\nparameters: Parameter Necessity Value MMSAPIKEY Required Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. MMSGROUPID Required Unique Identifier of your  Cloud Manager  project. CONFIGLOGDIR Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent configuration file. LOGFILE Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent log MMSCONFIGBACKUP Optional Absolute file path to the  Cloud Manager  automation\nconfiguration backup  JSON (Javascript Object Notation)  file. To install the MongoDB Agent unattended, you would\ninvoke  msiexec.exe  with the following options: In the  Install Agent Instructions  modal, click\n Done . By default, the MongoDB binaries and  Cloud Manager  configuration backup\nfile are located in  %SystemDrive%\\MMSMongoDB\\versions . If you want to store these files in a different directory, follow\nthese procedures: To change the location of the MongoDB Agent Binaries To change the location of the MongoDB Agent configuration backup Windows sets the  %SystemDrive%  environment variable to the\ndrive on which you installed Windows. By default, you would be\ndirected to install Windows on the  C:  drive. To find your\n %SystemDrive% , issue with following command from  PowerShell : Click  Deployment , then  Agents , and then\n Downloads & Settings . Below the  Download Directory  heading, click\n  to the right of the path shown in\n Download Directory (Windows) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan MongoDB Agent. Use Windows Explorer to move the file or\nissue the following command from a Command Prompt or\n PowerShell : Make sure the system user that runs the MongoDB Agent can write\nto this new directory. This is usually the  SYSTEM  user,\nwhich requires no additional configuration unless you changed\nthe user. Open the  MongoDB Agent configuration file  in your preferred text\neditor. Change the  mmsConfigBackup  setting to the new path\nfor the configuration backup file. Replace  X  with the drive\nletter on which your backup is stored. Save the MongoDB Agent configuration file. Move the configuration backup file to the new directory. Use\nWindows Explorer to move the file or issue the following\ncommand from a Command Prompt or  PowerShell : Use this procedure to install the MongoDB Agent: On x86_64 architecture running Debian 8, Debian 9, Ubuntu 18.04,\nUbuntu 20.04, or Ubuntu 22.04: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click Debian 8/9, Ubuntu 16.X/18.X - DEB. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04/20.04/22.04 or Debian 9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture running Ubuntu 18.04 using a\n deb  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click Ubuntu 18.X Z-Series (s390x) - DEB. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04 for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . Use this procedure to install the MongoDB Agent: On x86_64 architecture: Running Amazon Linux using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click Amazon Linux - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . Running RHEL / CentOS 7.x, SUSE12, SUSE15, or\nAmazon Linux 2: Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal, click\n Done . On RHEL / CentOS (7.x) on PowerPC architecture\n(managing MongoDB 3.6 or later deployments): Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (7.X) Power (ppc64le) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (7.X) Power (ppc64le) - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture (managing MongoDB 4.0 or\nlater deployments): Running RHEL / CentOS 7.x/8.x using the  rpm  package manager: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL 7.X/8X Z-Series (s390x) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . On ARM64 architecture running RHEL 8.x/9.x or Amazon Linux 2: Running RHEL 8.x/9.x or Amazon Linux 2 using the  rpm \npackage manager: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal, click\n Done . Running RHEL 8.x/9.x or Amazon Linux 2 using a  tar \narchive: If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal, click\n Done . Use this procedure to install Linux systems that do not use\n deb  or  rpm  packages. If you have a project with existing deployments, you can\ninstall the MongoDB Agent on your existing deployments: Select the desired Project from the  Context \nmenu. Click  Deployment . Click  Agents . Click  Downloads & Settings . From the  Select Your Server's Operating\nSystem  menu, click Other Linux - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Generic 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal, click\n Done .",
            "code": [
                {
                    "lang": "powershell",
                    "value": "msiexec.exe /q /i \"C:\\PATH\\TO\\mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi\" MMSGROUPID=<GROUP.ID> MMSAPIKEY=<AGENT.API.ID> MMSBASEURL=\"<http://opsmanager.example.com:8080>\" LOGFILE=\"C:\\MMSData\\Server\\Log\\automation-agent.log\" MMSCONFIGBACKUP=\"C:\\MMSData\\MongoDB\\mms-cluster-config-backup.json\""
                },
                {
                    "lang": "ps1",
                    "value": "get-childitem env:SystemDrive"
                },
                {
                    "lang": "ps1",
                    "value": "md \\<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=X:\\<newPath>\\mms-cluster-config-backup.json"
                },
                {
                    "lang": "ps1",
                    "value": "move %SystemDrive%\\MMSMongoDB\\versions\\mms-cluster-config-backup.json \\<newPath>"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.ubuntu1804.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc641e.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.aarch64.amzn2.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                }
            ],
            "preview": "You have a project and want to install the MongoDB Agent to monitor\nand/or back up your MongoDB deployments. You are choosing not to manage\nyour MongoDB deployments at this time.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/unmanage-deployment",
            "title": "Stop Managing and/or Monitoring One Deployment",
            "headings": [
                "Considerations",
                "Disable All Deployments",
                "Prerequisites",
                "Procedure",
                "Navigate to the Clusters view for your deployment.",
                "Click the ... ellipsis icon next to the desired deployment.",
                "Select Remove from Cloud Manager.",
                "Choose to stop Cloud Manager from managing and/or monitoring the deployment.",
                "Confirm that you want automation and/or monitoring disabled for the deployment.",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "Cloud Manager  uses Automation to manage your deployments but can monitor and\nback up your deployments without Automation. If you no longer want to use  Cloud Manager  for one or both of these\ncapabilities, you can stop  Cloud Manager  from either: After you stop  Cloud Manager  from managing a deployment, you cannot use  Cloud Manager \nto upgrade, stop, start, or change that deployment's configuration in\nany way. If you want to\n shut down your deployment \nbefore stop  Cloud Manager  from managing it,  do that first . Otherwise, you\nmust connect to each process using  mongosh  to\n shut down the process  directly. If you stop using  Cloud Manager  to monitor your deployment, any associated\nsnapshots are deleted and all historic monitoring data is removed. Stopping  Cloud Manager  from managing or monitoring your deployment does not\naffect the deployment's  mongod  and  mongos  processes. These\nprocesses continue to run uninterrupted unless you explicitly shut it\ndown first. Managing your deployment while  still  monitoring it and backing it\nup, or Managing, monitoring,  and  backing up your deployment To unmanage all deployments at once, see  Remove Project from\nAutomation . This tutorial explains how to stop  Cloud Manager  Automation from managing your\ndeployment. You may need to complete some additional tasks before you\nremove your deployment from  Cloud Manager  Automation. The following table\nhighlights which actions you need to take before starting this\ntutorial. If you want to... You first need to... Stop monitoring a deployment Stop backing up the deployment Terminate a deployment Shut down the deployment Stop  Cloud Manager  from managing a Sharded Cluster Shut down any  mongos  processes associated with\na sharded cluster. The  Remove from Cloud Manager  option is\nunavailable for running  mongos  processes. As an alternative to disabling automation for a deployment,\nyou can temporarily  suspend \nautomation for that deployment. This is useful if you need to temporarily shut down the deployment\nfor maintenance, and do not want  Cloud Manager  to automatically start the\ndeployment back up until you are ready. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. When you stop  Cloud Manager  from managing your deployment, you must select\none of the following options: Unmanage this item in Cloud Manager but continue\nto monitor Removes the process from management only. You can no longer\ncontrol the process through  Cloud Manager , but  Cloud Manager  continues to\ndisplay its status and track its metrics. Completely remove from Cloud Manager Removes the processes from both management and monitoring.\n Cloud Manager  no longer displays the process. All backups are\nterminated and all backup snapshots are deleted. Click  Remove <Deployment> . <Deployment>  stands in for the deployment being\nremoved:  Sharded Cluster ,  Replica Set  or\n Standalone If prompted for a verification code, enter the code and then\nclick  Remove <Deployment>  again. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "Cloud Manager uses Automation to manage your deployments but can monitor and\nback up your deployments without Automation.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/edit-replica-set",
            "title": "Edit a Replica Set",
            "headings": [
                "Overview",
                "Procedures",
                "Add a Replica Set Member",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "In Member Configuration, click Add a Mongod.",
                "In Hostname, select the host that you want to add as a new member of the replica set.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Edit a Replica Set Member",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "In Member Configuration, modify the settings for the replica set member that you want to edit.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Replace a Member with an Arbiter",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "Add a new member to the replica set.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Remove the secondary member of the replica set member that you want to replace with the arbiter.",
                "Click Review & Deploy.",
                "Click Confirm & Deploy.",
                "Remove a Replica Set Member",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "In Member Configuration, click the ellipsis next to the replica set member that you want to remove and select Remove from Replica Set.",
                "Click Remove from Replica Set to confirm.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy.",
                "Edit a Cluster Configuration",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "Configure the replica set.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Edit Replication Settings",
                "Navigate to the Clusters view for your deployment.",
                "On the card with the replica set, click Modify.",
                "In Replication Settings, modify the desired replication setting.",
                "Click Save.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Additional Information"
            ],
            "paragraphs": "You can add, remove, and reconfigure members in a  replica set \ndirectly in the  Cloud Manager  console. Cloud Manager  restarts a node in a replica set or sharded cluster when you\nchange  configuraton file options \nfor the MongoDB process running on the node. The following options trigger\na restart only for the specified changes: A restarted node triggers an election if the node was the primary.\nIn addition, modifying the  member settings \nof the current primary may trigger an election. security.clusterAuthMode : Changing the value from  keyfile \nto  sendKeyFile  triggers a restart. All other changes to this\noption do not. net.tls.mode : Changing the value from  disabled  to\n allowTLS  triggers a restart. All other changes to this option\ndo not. You must have an existing server to which to deploy the new replica set\nmember. To add a member to an existing\nreplica set, increasing the size of the set: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Use the following procedure to add the host if it doesn't appear\nin the  Hostname  list: In  Hostname , select  New Server . If no hosts have yet been added to the project, the\n Hostname  list does not appear. Click\n Install Agent  instead. In the  Add New Server  dialog, select your operating\nsystem and click  Next . Follow the\n instructions to install \na MongoDB Agent on the new host. When adding a new member to a replica set, set  Build Indexes \nto  True  if you want the member's  mongod  to build indexes.\nYou cannot change this value after the Automation adds the\nnew member to the replica set. To learn more, see\n members[n].buildIndexes . If your replica set uses  TLS (Transport Layer Security) , you must create and install the\nnecessary  TLS (Transport Layer Security)  certificates on the new replica set member host first.\nThen, set the  TLS (Transport Layer Security)  settings for the  mongod  or  mongos  process\nfor the new replica set member on that host. Automation does not\ncreate and install the certificates and configure these settings\nautomatically. If you do not configure  TLS (Transport Layer Security)  on the new member,\nyou cannot add it to the existing  TLS (Transport Layer Security) -enabled replica set. To\nlearn how to enable  TLS (Transport Layer Security)  on the new replica set member, see\n Enable TLS for a Deployment . In the  Replica Set Configuration  section, complete\nthe following fields for the new member: Auth Schema Version Select the schema for storing the user data for your\ndeployment. See  Upgrade to SCRAM \nfor more information. Feature Compatibility  (Optional) Select the  feature compatibility set .\nThis field appears if your deployment MongoDB version is\n 3.4  or later. Version Select the MongoDB version for your replica set. Data Directory Specify the full path of the directory where the  mongod \nprocess will store data files. Log File Specify the location and name of the log file for the  mongod \nprocess on the new host. Otherwise, click  Cancel  and you can make\nadditional changes. To avoid disrupting majority writes, new members are now\nadded to  replica sets  as  priority=0 ,\n votes=0  until they reach secondary state, after which  Cloud Manager \nautomatically updates the configuration to match the\n priority \nand  votes  value\nspecified in the deployment. To reconfigure a member as an  arbiter ,\nsee  Replace a Member with an Arbiter If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. You can modify the following settings: Votes Specify whether the replica set member votes in elections.\nA value of  1  indicates the member votes, while a value\nof  0  indicates that the member does not vote. Priority Specify the priority of the replica set member during elections.\nNon-voting members must have a priority of  0 . Delay Specify whether the member is a delayed replica set member. Build Indexes Specify whether the replica set member builds indexes. Tags Enter JSON that defines the tag set that you want to add to the\nreplica set member. After deploying the replica set, you can't modify a replica set\nmember's  hostname  or  port . Otherwise, click  Cancel  and you can make\nadditional changes. You cannot directly reconfigure a member as an arbiter. Instead, you must must\nadd a new member to the replica set as an arbiter. Then you must shut down an\nexisting secondary. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Select  Arbiter  from the  Member  list when you\n Add a Replica Set Member . Otherwise, click  Cancel  and you can make\nadditional changes. To determine which processes are secondaries, click the  Metrics \ntab and select secondaries in  Toggle Members . Click  Modify  next to the replica set. Select  Remove from Replica Set . Click  Save . Upon completion,  Cloud Manager  removes the member from the replica set.  Cloud Manager \nconverts the member's  mongod  to a  standalone \nprocess and shuts it down. When you remove a member from a replica set,  Cloud Manager  converts the\nmember's  mongod  to a standalone process and shuts it down. When removing members, you must keep a majority of voting members active with\nrespect to the original number of voting members. Without a majority, the\nprimary replica set member steps down and the replica set becomes read-only.\nFor more information on voting, see  Replica Set Elections \nand  Replica Set High Availability  in the MongoDB Manual. Removing members might affect the ability of the replica set to acknowledge\nwrites, depending on the level of  write concern  you use. For more\ninformation, see  Write Concern  in the\nMongoDB manual. To remove a member: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Upon completion,  Cloud Manager  removes the member from the replica set.  Cloud Manager \nconverts the member's  mongod  to a  standalone \nprocess and shuts it down. To edit a cluster configuration: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. In the  Replica Set Configuration  section, complete the\nfollowing fields. Auth Schema Version Select the schema for storing the user data for your\ndeployment. Feature Compatibility  (Optional) Select the  feature compatibility set . This\nfield appears if your deployment MongoDB version is\n 3.4  or later. Version Select the MongoDB version for your replica set. Log File Specify the location and name of the log file for the\n mongod  process. The location must exist on the host. Otherwise, click  Cancel  and you can make\nadditional changes. To edit replication settings: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. If you do not see the replica set, click the  Processes  tab, then the  Topology  view. See  Replica Set Configuration Fields \nfor descriptions of all fields and which versions of MongoDB support each field. Otherwise, click  Cancel  and you can make\nadditional changes. For more information on replica set configuration options, see,\n Replica Set Configuration  in the\nMongoDB manual.",
            "code": [],
            "preview": "You can add, remove, and reconfigure members in a replica set\ndirectly in the Cloud Manager console.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/edit-host-authentication-credentials",
            "title": "Configure MongoDB Authentication and Authorization",
            "headings": [
                "Considerations",
                "Access Control Mechanisms",
                "SCRAM-SHA-1 and SCRAM-SHA-256",
                "LDAP (Lightweight Directory Access Protocol)",
                "OIDC (OpenID Connect)",
                "Kerberos",
                "X.509",
                "Edit Host Credentials"
            ],
            "paragraphs": "Your MongoDB deployments can use the access control mechanisms described\non this page. You specify the authentication settings when\n adding  the deployment.\nYou can edit the security settings after adding a deployment. If a deployment uses access control, the MongoDB Agent must\nauthenticate to the deployment as MongoDB users with appropriate access.\nEnable and configure authentication through the  Cloud Manager . With access control enabled, you must\n create MongoDB users  so that\nclients can access your databases. Cloud Manager  automatically creates a user for the MongoDB Agent when you enable access\ncontrol. The MongoDB Agent can administrate and manage other users.\nAs such, the first user you create can have any role. When you select an Authentication Mechanism for your  Cloud Manager  group, this\nenables access control for all the deployments in your  Cloud Manager  group. To avoid inconsistencies, use the  Cloud Manager  interface to manage users\nand roles for MongoDB deployments. To learn more about MongoDB access control, see the\n Authentication  and\n Authorization  pages in the MongoDB\nmanual. MongoDB supports the following implementations of challenge-response\nmechanisms for authenticating users with passwords. In the following table, the default authentication mechanism for the\nrelease series is marked with   and acceptable\nauthentication mechanisms are marked with  . To enable  SCRAM-SHA-1  or  SCRAM-SHA-256  for your  Cloud Manager  project,\ncomplete the following tasks: MongoDB Release Series MONGODB-CR SCRAM-SHA-1 SCRAM-SHA-256 5.x.x 4.4.x 4.2.x 4.0.x 3.6.x 3.4.x Enable Username and Password Authentication for your  Cloud Manager  Project . Configure MongoDB Agent for Authentication . MongoDB Enterprise  supports proxy\nauthentication of users. This allows administrators to configure a\nMongoDB cluster to authenticate users by proxying authentication\nrequests to a specified  LDAP (Lightweight Directory Access Protocol)  service. To enable  LDAP (Lightweight Directory Access Protocol)  for your  Cloud Manager  project, complete the following tasks: Enable LDAP Authentication for your  Cloud Manager  Project . Configure MongoDB Agent for LDAP . To enable  OIDC (OpenID Connect)  for your  Cloud Manager  project,  Enable OIDC Authentication for your  Cloud Manager  Project . MongoDB Enterprise \nallows authentication using OIDC. To authenticate with   OIDC , you must first register your  OIDC (OpenID Connect) \nor OAuth application with an  IdP (Identity Provider)  that supports  OIDC (OpenID Connect)  standard,\nsuch as as  Azure AD (Azure Active Directory) , Okta, and Ping\nIdentity. MongoDB Enterprise  supports\nauthentication using a Kerberos service. Kerberos is an  IETF (Internet Engineering Task Force) \n( RFC 4120 ) standard authentication protocol for large\nclient/server systems. To use MongoDB with Kerberos, you must have a properly configured\nKerberos deployment, configure  Kerberos service principals  for\nMongoDB, and add the  Kerberos user principal . To enable Kerberos for your  Cloud Manager  project, complete the following tasks: Specify Kerberos as the MongoDB process's authentication mechanism when\n adding  or\n editing  the deployment. Enable Kerberos Authentication for your  Cloud Manager  Project Configure the MongoDB Agent for Kerberos . MongoDB supports X.509 certificate authentication for use with a secure\n TLS connection . The\nX.509 client authentication allows clients to authenticate to servers\nwith certificates rather than with a username and password. To enable X.509 authentication for your  Cloud Manager  project, complete the\nfollowing tasks: You can also  use X.509 certificates for membership authentication \nfor the processes that  Cloud Manager  monitors. Enable x.509 Authentication for your  Cloud Manager  Project . Configure the MongoDB Agent for X.509 Authentication . You can configure the deployment to use the authentication mechanism\nfrom the  Cloud Manager  interface. The\n Manage MongoDB Users and Roles  tutorials describe how to\nconfigure an existing deployment to use each authentication mechanism.",
            "code": [],
            "preview": "Your MongoDB deployments can use the access control mechanisms described\non this page. You specify the authentication settings when\nadding the deployment.\nYou can edit the security settings after adding a deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-mongodb-agent-from-monitoring-agent",
            "title": "Update from the legacy Monitoring Agent",
            "headings": [
                "Procedure",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Download the MongoDB Agent.",
                "Install the MongoDB Agent.",
                "Run the MongoDB Agent Windows Installer.",
                "Finish the installation of the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "(Optional) Change the location of the MongoDB Agent binaries and configuration backup files.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Add any existing configuration options for your legacy Monitoring Agent.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Next Steps"
            ],
            "paragraphs": "You have a project with monitored MongoDB deployments that Automation\ndoes not manage and want to update to the MongoDB Agent. If you want to start or continue using Automation to manage your\nMongoDB deployments, please review the\n MongoDB Agent Prerequisites  before updating to the\nMongoDB Agent. Use this procedure to update to the MongoDB Agent on x86_64\narchitecture running Microsoft Windows: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Windows - MSI. Click  Next . The\n Install New MongoDB Agent  modal opens. The  MongoDB Agent Installation Instructions  box\ndisplays the following information: Project ID \n(Required for binding to a project) API Key If you do not have an API Key, click  \n Generate Key . Some or all of these values are required in a later step. Copy\nthese values then store them where you can access them later. After the  MSI  downloads, double-click: mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi The use of  mongodb-mms-automation  in the\nfilename is a legacy artifact and does not mean\nthat the MongoDB Agent is being installed with\nAutomation configured. If a security warning appears, click  Run . At the  Configuration/Log Folder  step Provide the directory into which these files are saved. At the  Key Type  step, select  Agent\nAPI Key  to bind to a specific  project . Enter the appropriate Agent keys. These keys are provided in the  MongoDB\nAgent Installation Instructions  modal described in\nthe previous step. Type your Project ID into the  Project ID \nfield. Type your Agent API Key into the  Agent API\nKey  field. At the  MongoDB Paths  step, specify the Log\nand Backup directories At the  Windows Firewall Configuration  step,\nclick your preferred firewall configuration. If you click  Configure firewall rules allowing\naccess from only the specified |ipaddr| addresses. , type\nthe necessary  IPv4 (Internet Protocol version 4)  addresses into the provided box. (Conditional) Windows enables  Stealth Mode \nfor the Windows Firewall by default. If you have not\ndisabled it on the MongoDB host on which you are\ninstalling the MongoDB Agent, disable it now.\nStealth Mode significantly degrades the performance\nand capability of the MongoDB Agent. Click\n Disable Stealth Mode . (Conditional) Windows does not enable  Disk Performance Counters \nby default. If you have not enabled Disk Performance\nCounters for the MongoDB host, click  Enable\nDisk Performance Counters . The MongoDB Agent\nuses these counters for some of its hardware monitoring\nactivities. Click  Install . Click  Finish  once setup is complete. After the  MSI  downloads, you can run an unattended\ninstall. You run an unattended install from the command line\nin either the Command Prompt or PowerShell. To learn\nmore about unattended installs, see Microsoft's\ndocumentation on  Standard Installer Command-Line Options To run the  MSI  installer unattended from the command\nline, invoke  msiexec.exe  with the  /q  and  /i \nflags and a combination of required and optional\nparameters: Parameter Necessity Value MMSAPIKEY Required Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. MMSGROUPID Required Unique Identifier of your  Cloud Manager  project. CONFIGLOGDIR Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent configuration file. LOGFILE Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent log MMSCONFIGBACKUP Optional Absolute file path to the  Cloud Manager  automation\nconfiguration backup  JSON (Javascript Object Notation)  file. To install the MongoDB Agent unattended,\ninvoke  msiexec.exe  with the following options: In the  Install Agent Instructions  modal, click\n Done . In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. Your system policies or practices may require the MongoDB binaries\nand  Cloud Manager  configuration backup file to be located somewhere other\nthan the default location of  %SystemDrive%\\MMSMongoDB\\versions . If you want to store these files in a different directory, follow\nthese procedures: To change the location of the MongoDB Agent Binaries To change the location of the MongoDB Agent configuration backup Windows sets the  %SystemDrive%  environment variable to the\ndrive on which you installed Windows. By default, you are\ndirected to install Windows on the  C:  drive. To find your\n %SystemDrive% , issue with following command from  PowerShell : Click  Deployment , then  Agents , and then\n Downloads & Settings . Below the  Download Directory  heading, click\n  to the right of the path shown in\n Download Directory (Windows) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan MongoDB Agent. Use Windows Explorer to move the file or\nissue the following command from a Command Prompt or\n PowerShell : Make sure that the system user that runs the MongoDB Agent can write\nto this new directory. This is usually the  SYSTEM  user,\nwhich requires no additional configuration unless you changed\nthe user. Open the  MongoDB Agent configuration file  in your preferred text\neditor. Change the  mmsConfigBackup  setting to the new path\nfor the configuration backup file. Replace  X  in the following example with the drive\nletter on which your backup is stored. Save the MongoDB Agent configuration file. Move the configuration backup file to the new directory. Use\nWindows Explorer to move the file or issue the following\ncommand from a Command Prompt or  PowerShell : Use this procedure to update to the MongoDB Agent: On x86_64 architecture running Debian 8, Debian 9, Ubuntu 18.04,\nUbuntu 20.04, or Ubuntu 22.04: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Debian 8/9, Ubuntu 16.X/18.X - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04/20.04/22.04 or Debian 9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture running Ubuntu 18.x using a\n deb  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Ubuntu 18.X Z-Series (s390x) - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04 for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Use this procedure to update to the MongoDB Agent: On x86_64 architecture: Running RHEL / CentOS 6.x using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Amazon Linux - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 6 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Running RHEL / CentOS 7.x, SUSE12, SUSE15 or\nAmazon Linux 2: Using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\n. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On RHEL / CentOS (7.x) on PowerPC architecture\n(managing MongoDB 3.4 or later deployments): Using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X) Power (ppc64le) - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture (managing MongoDB 4.0 or\nlater deployments): Running RHEL / CentOS 7.x/8.x using the\n rpm  package manager: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL 7.X/8X Z-Series (s390x) - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Use this procedure to install update to the MongoDB Agent on\nLinux systems that do not use  deb  or  rpm  packages. The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Monitoring Agent, you can add any\nMonitoring settings you had before at the  Add Custom\nConfiguration Options for your MongoDB Agent (Optional)  step. To add options that you had for your\n Monitoring Agent , under the\n Monitoring Configurations  section: You can click the   to remove any settings that\nyou have added. Type the desired\n setting  in the\n Setting  box and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Other Linux - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Generic 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. At the  Final Steps  modal, the legacy Backup and\nMonitoring Agents are put into standby mode. Click\n Finish . After the MongoDB Agent update completes: If Automation did not previously manage your Monitoring Agent,\nactivate  Backup  and/or\n Monitoring  on your MongoDB deployment. If Automation did previously manage your Monitoring\nAgent, it is now activated. To verify that Automation\nis activated, click  Deployment   \n Servers . If you want to activate Automation,\n add a deployment  to your MongoDB\nproject. Stop  and\n remove  the legacy\nMonitoring Agent. Stop  and\n remove  the legacy Backup\nAgent.",
            "code": [
                {
                    "lang": "powershell",
                    "value": "msiexec.exe /q /i \"C:\\PATH\\TO\\mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi\" MMSGROUPID=<GROUP.ID> MMSAPIKEY=<AGENT.API.ID> MMSBASEURL=\"<http://opsmanager.example.com:8080>\" LOGFILE=\"C:\\MMSData\\Server\\Log\\automation-agent.log\" MMSCONFIGBACKUP=\"C:\\MMSData\\MongoDB\\mms-cluster-config-backup.json\""
                },
                {
                    "lang": "ps1",
                    "value": "get-childitem env:SystemDrive"
                },
                {
                    "lang": "ps1",
                    "value": "md \\<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=X:\\<newPath>\\mms-cluster-config-backup.json"
                },
                {
                    "lang": "ps1",
                    "value": "move %SystemDrive%\\MMSMongoDB\\versions\\mms-cluster-config-backup.json \\<newPath>"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.ubuntu1804.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc641e.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                }
            ],
            "preview": "You have a project with monitored MongoDB deployments that Automation\ndoes not manage and want to update to the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/automate-backup-restoration-with-api",
            "title": "Automate Backup Restoration through the API",
            "headings": [
                "Prerequisites",
                "Variables for Automated Restore API Resources",
                "Procedure",
                "Retrieve the snapshot ID.",
                "Create a restore job for the snapshot."
            ],
            "paragraphs": "To restore a snapshot using the  API (Application Programming Interface) : Find the ID of the snapshot that you want to restore. Create a restore job using that snapshot ID. You must have  API (Application Programming Interface)  access. To learn how to get access, see\n Configure API Access . To find and download the snapshot, your  API (Application Programming Interface)  Key needs read access to\nsnapshots in the desired project. Grant the API Key the\n Project Read Only  role on the Project that relates to that\nsnapshot. The API resources use one or more of these variables. Replace these\nvariables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project that contains the source\ncluster for the restore job. You can find this value in the\n Project Settings  of that\nproject. CLUSTER-ID string Unique identifier of your source cluster for the restore job. TARGET-GROUP-ID string Unique identifier of your project that contains the target\ncluster for the restore job. TARGET-CLUSTER-ID string Unique identifier of your target cluster for the restore job. SNAPSHOT-ID string Unique identifier of the snapshot you want to restore. Call the  Get All Snapshots  resource to find the ID for the desired snapshot. Invoke the following command: Call the\n Create One Restore Job \nresource to request a snapshot restore. Invoke the following command: To learn more about restoring snapshots with additional examples,\nsee the\n Create One Restore Job for One Cluster \n API (Application Programming Interface)  resource page.",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/snapshots?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Accept: application/json\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/clusters/{CLUSTER-ID}/restoreJobs?pretty=true\" \\\n     --data '\n       {\n         \"delivery\" : {\n           \"methodName\" : \"AUTOMATED_RESTORE\",\n           \"targetGroupId\" : \"{TARGET-PROJECT-ID}\",\n           \"targetClusterId\" : \"{TARGET-CLUSTER-ID}\"\n         },\n         \"snapshotId\": \"{SNAPSHOT-ID}\"\n       }'"
                }
            ],
            "preview": "To restore a snapshot using the API (Application Programming Interface):",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/suspend-automation",
            "title": "Suspend or Resume Automation for a Process",
            "headings": [
                "Suspend Automation for a Process",
                "Navigate to the Clusters view for your deployment.",
                "Click the name of the deployment that contains the process that you want to suspend. Cloud Manager opens the deployment Overview.",
                "Click the Actions dropdown for the process that you want to suspend.",
                "Click Suspend.",
                "Click Suspend Automation to confirm.",
                "At the top of the deployment Overview, click Review & Deploy",
                "Click Confirm and Deploy.",
                "Resume Automation for a Process",
                "Navigate to the Clusters view for your deployment.",
                "Click the name of the deployment that contains the process that you want to resume. Cloud Manager opens the deployment Overview.",
                "Click the Actions dropdown for the process that you want to resume.",
                "Click Resume.",
                "Click Confirm.",
                "At the top of the deployment Overview, click Review & Deploy",
                "Click Confirm and Deploy.",
                "Next Steps"
            ],
            "paragraphs": "Cloud Manager  Automation enables you to configure and maintain MongoDB nodes\nand clusters. You may suspend  Cloud Manager  Automation to perform for manual\nmaintenance. Automation ignores the process until you re-enable\nAutomation's control. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. When you resume automating a process,  Cloud Manager : Reverts any manual changes. Update the process' config based on any changes that occurred\nwhile Automation was suspended. To remove a process from automation, see\n Stop Managing and/or Monitoring One Deployment .",
            "code": [],
            "preview": "Cloud Manager Automation enables you to configure and maintain MongoDB nodes\nand clusters. You may suspend Cloud Manager Automation to perform for manual\nmaintenance. Automation ignores the process until you re-enable\nAutomation's control.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/mongodb-agent-functions",
            "title": "Manage the MongoDB Agent Functions",
            "headings": [
                "Manage Backup Function",
                "Activate Backup",
                "Deactivate Backup",
                "Manage Monitoring Function",
                "Activate Monitoring",
                "Deactivate Monitoring",
                "Manage Automation Function",
                "Activate Automation"
            ],
            "paragraphs": "From your  Context  menu, click the project that has the\nhosts you want to configure. Click  Deployments . Click  Servers . On the host where you want to activate Backup, click\n . Click  Activate Backup . From the banner, click  Review & Deploy . If you want to activate Backup, click\n Confirm & Deploy .\nOtherwise click  Cancel , then  Discard Changes \nto cancel activating Backup. On the  Server  tab, the host that is tailing the oplog\nfrom each primary displays  Backup - active . Any\nother host with Backup activated displays\n Backup - standby . From your  Context  menu, click the project that has the\nhosts you want to configure. Click  Deployments . Click  Servers . On the host where you want to deactivate Backup, click\n . Click  Deactivate Backup . From the banner, click  Review & Deploy . If you want to activate Backup, click\n Confirm & Deploy .\nOtherwise click  Cancel , then  Discard Changes \nto cancel deactivating Backup. From your  Context  menu, click the project that has the\nhosts you want to configure. Click  Deployments . Click  Servers . On the host where you want to activate Monitoring, click\n . Click  Activate Monitoring . From the banner, click  Review & Deploy . If you want to activate Monitoring, click\n Confirm & Deploy .\nOtherwise click  Cancel , then  Discard Changes \nto cancel activating Monitoring. On the  Server  tab, the host that distributes\nmonitoring work to each running monitoring agent displays\n Monitoring - active . Any other host with Monitoring\nactivated displays  Monitoring - standby . You can  activate Monitoring \non multiple MongoDB Agents to distribute monitoring assignments and\nprovide failover.  Cloud Manager  distributes monitoring assignments among up\nto 100 running MongoDB Agents. Each MongoDB Agent running active\nMonitoring monitors a different set of MongoDB processes. One\nMongoDB Agent running active Monitoring per project is the primary\nMonitor. The primary Monitor reports the cluster's status to  Cloud Manager .\nAs MongoDB Agents have Monitoring enabled or disabled,  Cloud Manager \nredistributes assignments. If the primary Monitor fails,  Cloud Manager \nassigns another MongoDB Agent running active Monitoring to be the\nprimary Monitor. If you run more than 100 MongoDB Agents with active Monitoring, the\nadditional MongoDB Agents run as standby MongoDB Agents. A standby\nMongoDB Agent is idle, except to log its status as a standby and\nperiodically ask  Cloud Manager  if it should begin monitoring. If you install multiple Monitoring Agents, ensure that  all  the\nMongoDB Agents with active Monitoring can reach all the  mongod \nprocesses in the deployment. To activate Monitoring on multiple MongoDB Agents, repeat the\n activation process  on multiple\nMongoDB Agents. From your  Context  menu, click the project that has the\nhosts you want to configure. Click  Deployments . Click  Servers . On the host where you want to deactivate Monitoring, click\n . Click  Deactivate Monitoring . From the banner, click  Review & Deploy . If you want to deactivate Monitoring, click\n Confirm & Deploy .\nOtherwise click  Cancel , then  Discard Changes \nto cancel activating Monitoring. Automation is activated when you: Deploy a  standalone MongoDB instance Deploy a  replica set Deploy a  sharded cluster Import an existing MongoDB deployment  into  Cloud Manager .",
            "code": [],
            "preview": "Automation is activated when you:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-bi-connector",
            "title": "Manage BI Connector in Cloud Manager",
            "headings": [
                "Modify a BI Connector Instance",
                "Navigate to the Processes tab for your deployment.",
                "Navigate to your BI Connector instance.",
                "Modify the BI Connector instance.",
                "Click Apply Changes.",
                "Click Review & Deploy to review your changes.",
                "Terminate a BI Connector Instance",
                "Navigate to the Processes tab for your deployment.",
                "Click list.",
                "Navigate to your BI Connector instance.",
                "Terminate the BI Connector instance.",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "To modify a  BI Connector  instance: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. Click the cluster card that has the  BI Connector  instance. In the  View  field in upper-left corner, click\nthe  BI Connector  option. Click  Modify . Update any settings that you need to change. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes. To shut down a  BI Connector  instance: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. Click the cluster card that has the  BI Connector  instance. In the  View  field in upper-left corner, click\nthe  BI Connector  option. In the card for that  BI Connector  instance, click the   button and select  Terminate . In the  Terminate Cluster: <Cluster Name>  modal: Type the cluster name in the box. Click  Terminate . Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "To modify a BI Connector instance:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/create-cluster-with-api",
            "title": "Deploy a Cluster through the API",
            "headings": [
                "Prerequisites",
                "Examples",
                "Variables for Cluster Creation API Resources",
                "Prerequisites",
                "Procedures",
                "Create the Group and the User through the API",
                "Use the API to create a project.",
                "Record the values of agentApiKey and id in the returned document.",
                "Use the API to create a user in the new project.",
                "Install the MongoDB Agent on each Provisioned Host",
                "Complete the MongoDB Agent installation procedure on each host.",
                "Confirm the initial state of the automation configuration.",
                "Deploy the New Cluster",
                "Retrieve the automation configuration from Cloud Manager.",
                "Create the top level of the new automation configuration.",
                "Add the Monitoring to the automation configuration.",
                "Add the servers to the automation configuration.",
                "Add the sharded cluster topology to the automation configuration.",
                "Send the updated automation configuration.",
                "Confirm successful update of the automation configuration.",
                "Verify that the configuration update is deployed.",
                "Next Steps"
            ],
            "paragraphs": "This tutorial manipulates the  Cloud Manager Administration API's \nautomation configuration to deploy a  sharded cluster  that is\nowned by another user. The tutorial first creates a new project, then a\nnew user as owner of the project, and then a sharded cluster owned by\nthe new user. You can create a script to automate these procedures for\nuse in routine operations. To perform these steps, you must have sufficient access to  Cloud Manager . A\nuser with the  Project Owner  role has sufficient access. The procedures install a cluster with two  shards . Each\nshard comprises a three-member  replica set . The tutorial\ninstalls one  mongos  and three  config servers .\nEach component of the cluster resides on its own server, requiring a\ntotal of 10 hosts. The tutorial installs the\n MongoDB Agent  on each\nhost. Provision ten hosts to serve the components of the\n sharded cluster . For host requirements, see the\n Production Notes  in the\nMongoDB manual. Each host must provide its\n MongoDB Agent  with full\nnetworking access to the hostnames and ports of the MongoDB Agents on\nall the other hosts. Each agent runs the command  hostname -f \nto self-identify its hostname and port and report them to  Cloud Manager . To ensure agents can reach each other,\n provision the hosts using Automation .\nThis installs the MongoDB Agents with correct network access. Use\nthis tutorial to reinstall the Automations on those machines. As you work with the  API (Application Programming Interface) , you can view examples on the\n GitHub example page . The API resources use one or more of these variables. Replace these variables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project from your\nproject settings. Configure API Access  to enable you to use the\nAPI. Complete the  MongoDB Agent Prerequisites . Use the Cloud Manager Administration API to send a  projects  document to create the new project. The  API (Application Programming Interface)  returns a document that includes the project's\n agentApiKey  and  id . Record these values for use in this procedure and in other procedures\nin this tutorial. Use the  /users  endpoint to add a user to the new project. The body of the request should contain a\n users   JSON (Javascript Object Notation)  document with the user's\ninformation. Set the user's  roles.roleName  to  GROUP_OWNER  and the user's\n roles.groupId  set to the new group's'  id . To learn how to install the MongoDB Agent, follow the\n procedure for the appropriate platform . When the MongoDB Agent first runs, it downloads the\n mms-cluster-config-backup.json  file, which describes the desired\nstate of the  automation configuration . On one of the hosts, navigate to  /var/lib/mongodb-mms-automation/ \nand open  mms-cluster-config-backup.json . Confirm that the file's\n version  field is set to  1 .  Cloud Manager  automatically increments\nthis field as changes occur. To add or update a deployment, retrieve the\n configuration , make\nchanges as needed, and send the updated configuration though the  API (Application Programming Interface) \nto  Cloud Manager . The following procedure deploys an updated automation configuration\nthrough the  API (Application Programming Interface) : Use the  automationConfig \nresource to retrieve the configuration. Issue the following\ncommand, replacing the placeholders with the Variables for Cluster Creation API Resources. Validate the downloaded Automation Configuration file. Compare the  version  field of the\n currentAutomationConfig.json  with that of the Automation\nConfiguration backup file,  mms-cluster-config-backup.json . The\n version  value is the last element in both  JSON (Javascript Object Notation)  documents.\nYou can find this file on any host running the MongoDB Agent at: If the  version  values match, you are working with the current\nversion of the Automation Configuration file. Linux and macOS:  /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json Windows:  %SystemDrive%\\MMSAutomation\\versions\\mms-cluster-config-backup.json Create a document with the following fields. As you build the\nconfiguration document, refer the\n description of an automation configuration  for detailed explanations\nof the settings. For examples, see the  MongoDB Labs page . In the  monitoringVersions.hostname  field, enter the hostname of\nthe server where  Cloud Manager  should install the Monitoring. Use the fully\nqualified domain name that running  hostname -f  on the server\nreturns, as in the following: This configuration example also includes the  logPath  field, which\nspecifies the log location, and  logRotate , which specifies the\nlog thresholds. This sharded cluster has 10 MongoDB instances, as described in the\n Deploy a Cluster through the API , each running on its own\nserver. Thus, the automation configuration's  processes  array will\nhave 10 documents, one for each MongoDB instance. The following example adds the first document to the  processes \narray. Replace  <process_name_1>  with any name you choose, and\nreplace  <server1.example.com>  with the  FQDN (fully qualified domain name)  of the host. Add 9 documents: one for each MongoDB instance in your sharded\ncluster. Specify the  args2_6  syntax for the  processes.<args>  field.\nThe  processes.args2_6  object accepts most MongoDB settings and\nparameters for MongoDB versions 2.6 and later. To learn more, see\n MongoDB Settings and Automation Support . Add two replica set documents to the  replicaSets  array. Add\nthree members to each document. In the  sharding  array, add the replica sets to the shards, and\nadd the config server replica set name, as in the following: This section adds one replica set member to the first replica set\ndocument: You must include  \"protocolVersion\": 1  in the root document\nfor each replica set. Use the  automationConfig \nresource to send the updated automation configuration. Issue the following command with path to the updated configuration\ndocument and replace the placeholders with the Variables for Cluster Creation API Resources. Upon successful update of the configuration, the API returns the HTTP\n 200 OK  status code to indicate the request has succeeded. Retrieve the automation configuration from  Cloud Manager  and confirm it\ncontains the changes. To retrieve the configuration, issue the\nfollowing command, replacing the placeholders with the\nVariables for Cluster Creation API Resources. Use the  automationStatus \nresource to verify the configuration update is fully deployed. Issue\nthe following command: The  curl  command returns a  JSON (Javascript Object Notation)  object containing the\n processes  array and the  goalVersion  key and value. The\n processes  array contains a document for each server that hosts a\nMongoDB instance. The new configuration is successfully deployed when\nall  lastGoalVersionAchieved  fields in the  processes  array\nequal the value specified for  goalVersion . To view the new configuration in the  Cloud Manager  console, click\n Deployment . In this response,  processes[2].lastGoalVersionAchieved  is\nbehind  goalVersion . This indicates that the MongoDB instance\nat  server3.example.com  is running one version behind the\n goalVersion . Wait several seconds and issue the  curl \ncommand again. To make an additional version of MongoDB available in the cluster,\nsee  Update the MongoDB Version of a Deployment .",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/groups?pretty=true\" \\\n     --data '\n       {\n         \"name\": \"{GROUP-NAME}\"\n       }'"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header 'Accept: application/json' \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \"https://cloud.mongodb.com/api/public/v1.0/users?pretty=true\" \\\n     --data '\n       {\n         \"username\": \"<new_user@example.com>\",\n         \"emailAddress\": \"<new_user@example.com>\",\n         \"firstName\": \"<First>\",\n         \"lastName\": \"<Last>\",\n         \"password\": \"<password>\",\n         \"roles\": [{\n           \"groupId\": \"{PROJECT-ID}\",\n           \"roleName\": \"GROUP_OWNER\"\n         }]\n       }'"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "javascript",
                    "value": "{\n    \"options\": {\n        \"downloadBase\": \"/var/lib/mongodb-mms-automation\",\n    },\n    \"mongoDbVersions\": [],\n    \"monitoringVersions\": [],\n    \"backupVersions\": [],\n    \"processes\": [],\n    \"replicaSets\": [],\n    \"sharding\": []\n}"
                },
                {
                    "lang": "javascript",
                    "value": "\"monitoringVersions\": [\n  {\n    \"hostname\": \"<server_x.example.com>\",\n    \"logPath\": \"/var/log/mongodb-mms-automation/monitoring-agent.log\",\n    \"logRotate\": {\n      \"sizeThresholdMB\": 1000,\n      \"timeThresholdHrs\": 24\n    }\n  }\n]"
                },
                {
                    "lang": "javascript",
                    "value": "\"processes\": [\n  {\n    \"version\": \"4.0.6\",\n    \"name\": \"<process_name_1>\",\n    \"hostname\": \"<server1.example.com>\",\n    \"logRotate\": {\n      \"sizeThresholdMB\": 1000,\n      \"timeThresholdHrs\": 24\n    },\n    \"authSchemaVersion\": 5,\n    \"featureCompatibilityVersion\": \"4.0\",\n    \"processType\": \"mongod\",\n    \"args2_6\": {\n      \"net\": {\n        \"port\": 27017\n      },\n      \"storage\": {\n        \"dbPath\": \"/data/\"\n      },\n      \"systemLog\": {\n        \"path\": \"/data/mongodb.log\",\n        \"destination\": \"file\"\n      },\n      \"replication\": {\n        \"replSetName\": \"rs1\"\n      }\n    }\n  },\n]"
                },
                {
                    "lang": "javascript",
                    "value": "\"sharding\": [\n  {\n    \"shards\": [\n      {\n        \"tags\": [],\n        \"_id\": \"shard1\",\n        \"rs\": \"rs1\"\n      },\n      {\n        \"tags\": [],\n        \"_id\": \"shard2\",\n        \"rs\": \"rs2\"\n      }\n    ],\n    \"name\": \"sharded_cluster_via_api\",\n    \"configServerReplica\": \"rs-config\",\n    \"collections\": []\n  }\n]"
                },
                {
                    "lang": "javascript",
                    "value": "\"replicaSets\": [\n  {\n    \"_id\": \"rs1\",\n    \"members\": [\n      {\n        \"_id\": 0,\n        \"host\": \"<process_name_1>\",\n        \"priority\": 1,\n        \"votes\": 1,\n        \"secondaryDelaySecs\": 0,\n        \"hidden\": false,\n        \"arbiterOnly\": false\n      }\n    ],\n    \"protocolVersion\": 1\n  }\n]"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\"\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data @currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true\""
                },
                {
                    "lang": "javascript",
                    "value": "{\n  \"goalVersion\": 2,\n  \"processes\": [{\n    \"hostname\": \"server1.example.com\",\n    \"lastGoalVersionAchieved\": 2,\n    \"name\": \"ReplSet_0\",\n    \"plan\": []\n  }, {\n    \"hostname\": \"server2.example.com\",\n    \"lastGoalVersionAchieved\": 2,\n    \"name\": \"ReplSet_1\",\n    \"plan\": []\n  }, {\n     \"hostname\": \"server3.example.com\",\n     \"lastGoalVersionAchieved\": 1,\n     \"name\": \"ReplSet_2\",\n     \"plan\":[]\n  }]\n}"
                }
            ],
            "preview": "This tutorial manipulates the Cloud Manager Administration API's\nautomation configuration to deploy a sharded cluster that is\nowned by another user. The tutorial first creates a new project, then a\nnew user as owner of the project, and then a sharded cluster owned by\nthe new user. You can create a script to automate these procedures for\nuse in routine operations.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-mongodb-roles",
            "title": "Manage Custom Roles",
            "headings": [
                "Considerations",
                "Managed Users and Roles",
                "Consistent Users and Roles",
                "Enforce Consistent Set is YES",
                "Enforce Consistent Set is NO",
                "Prerequisite",
                "Create a Custom MongoDB Role",
                "Navigate to the MongoDB Roles tab for your deployment.",
                "Click Add New Role.",
                "In the Identifier field, enter the database on which to define the role and enter a name for the role.",
                "Select the privileges to grant the new role.",
                "Give a role the privileges of another role.",
                "Add a privilege directly.",
                "Click Add Privileges.",
                "Click Add Role.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Edit a Custom Role",
                "Navigate to the MongoDB Roles tab for your deployment.",
                "Click Edit next to the role you want to modify.",
                "Add or Remove privileges for that role.",
                "Give a role the privileges of another role.",
                "Add a privilege directly.",
                "Click Save Changes.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "View Privileges for a Role",
                "Remove a Custom Role",
                "Navigate to the MongoDB Roles tab for your deployment.",
                "Set the Synced value to No next to the role that you want to delete.",
                "Click Unsync to verify.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "Roles grant users access to MongoDB resources. By default, MongoDB\nprovides some  built-in roles ,\nbut if these roles cannot describe a desired privilege set, you can\ncreate custom roles. When you create a role, you specify the database to which it applies.\n Cloud Manager  stores your custom roles on all MongoDB instances in your  Cloud Manager \nproject but uniquely identifies a role by the combination of the\ndatabase name and role name. If a database with that name exists on\nmultiple deployments within your  Cloud Manager  project, the role applies to\neach of those databases. If you create a role on the  admin \ndatabase, the role applies to all  admin  databases in the\ndeployment. Roles consist of privileges that grant access to specific actions on\nspecific resources. On most databases, a resource is the database or a\ncollection, but on the  admin  database a resource can be all\ndatabases, all collections with a given name across databases, or all\ndeployments. A role can inherit privileges from other roles in its database. A role\non the  admin  database can inherit privileges from roles in other\ndatabases. MongoDB roles are separate from  Cloud Manager   roles . Any users or roles you choose to manage in an  Cloud Manager  project have their\n Synced  value set to  Yes  and are synced to all\ndeployments in the project. Any users or roles you do not choose to manage in an  Cloud Manager  project have\ntheir  Synced  value set to  No  and exist only in their\nrespective MongoDB deployments. If you toggle  Synced  to  OFF  after import, any users\nor roles you create are deleted. If you enforce a consistent set of users and roles in your project,\n Cloud Manager  synchronizes these users and roles across all deployments in that\nproject. Toggle  Enforce Consistent Set  to choose whether or\nnot to manage one set of users and roles: In a managed project,  Cloud Manager  grants all of the users and roles access to\nall deployments. All deployments that the  Cloud Manager  project manages have\nthe same set of MongoDB users and roles. Cloud Manager  limits the access to users and roles where you set\n Synced  to  Yes .  Cloud Manager  deletes all users and roles that  Cloud Manager  project doesn't manage from the deployments in your project. In a managed project,  Cloud Manager  allows each deployment to use its own set of MongoDB users and roles.  Cloud Manager  doesn't need to manage these MongoDB users and roles. To manage these\nusers and roles, you must connect direct to the MongoDB\ndeployment. Cloud Manager  grants managed MongoDB users and roles where you set\n Synced  to  Yes  access to all managed deployments. Cloud Manager  limits access of unmanaged MongoDB users and roles, where you set\n Synced  to  No , to those users' and roles' specific\ndeployments. To learn how importing MongoDB deployments can affect managing users\nand roles, see  Automation and Updated Security Settings Upon Import . Enforce Consistent Set  defaults to  NO . MongoDB access control\n must be enabled \nto apply roles. You can create roles before enabling accessing control\nor after, but they don't go into effect until you enable access\ncontrol. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Roles . A role applies to the database on which it is defined and can grant\naccess down to the collection level. The combination of the role name\nand its database uniquely identify that role. Complete the\n Identifier  fields to meet the authentication and\nauthorization methods you use: If you use neither LDAP authentication nor authorization, type the\ndatabase name in the  database \n Identifier  field and the name you want for the role in the\n name   Identifier  field. If you use LDAP authentication, but not LDAP authorization, type\n $external  in the  database   Identifier  field and\nthe name you want for the role in the  name \n Identifier  field. If you use any authentication method with LDAP Authorization, type\n admin  in the  database   Identifier  field and the\nLDAP Group DN in the  name   Identifier  field. In your LDAP server, you created an LDAP Group with a Distinguished\nName of  CN=DBA,CN=Users,DC=example,DC=com . If you want to create a\nDBA role in  Cloud Manager  linked to this LDAP Group, type  admin  in the\n database   Identifier  field and\n CN=DBA,CN=Users,DC=example,DC=com  in the  name \n Identifier  field. You can grant privileges in two ways: To grant a new role all the privileges of one or more existing roles,\nselect the roles in the  Inherits From  field. The field\nprovides a drop-down list that includes both  MongoDB\nbuilt-in roles  and any custom roles you\nhave already created. To grant specific privileges to the role, click  ADD\nPRIVILEGES FOR A RESOURCE . In the  Resource  field, specify the resource to which to\napply the role. Select the database from the drop-down menu.\nTo specify the whole database, leave the field\nblank. To specify a collection, enter the collection name. If the\nresource is on the  admin  database, you can click\n ADMIN  and apply the role outside the  admin  database. In the  Available Privileges  section, select the actions\nto apply. For a description of each action, see  Privilege\nActions  in the MongoDB manual. Otherwise, click  Cancel  and you can make\nadditional changes. You can change a custom role's privileges. You cannot change its name\nor database. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Roles . You can grant privileges in two ways: To remove an inherited role, click the  x  next to the role.\nTo remove a privilege, click the trash icon next to the privilege. To grant a new role all the privileges of one or more existing roles,\nselect the roles in the  Inherits From  field. The field\nprovides a drop-down list that includes both  MongoDB\nbuilt-in roles  and any custom roles you\nhave already created. To grant specific privileges to the role, click  ADD\nPRIVILEGES FOR A RESOURCE . In the  Resource  field, specify the resource to which to\napply the role. Select the database from the drop-down menu.\nTo specify the whole database, leave the field\nblank. To specify a collection, enter the collection name. If the\nresource is on the  admin  database, you can click\n ADMIN  and apply the role outside the  admin  database. In the  Available Privileges  section, select the actions\nto apply. For a description of each action, see  Privilege\nActions  in the MongoDB manual. Otherwise, click  Cancel  and you can make\nadditional changes. To view a role's privileges, click  Deployment , then\nthe  Security  tab, then  Roles ,\nthen  view privileges  next to the role. Each privilege pairs a resource with a set of\n Privilege Actions . All roles\nare assigned a database. Each\n built-in role  is assigned to\neither  admin  database or every database. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Roles . If  Enforce Consistent Set  is set to  Yes , the\ncustom role is also removed from managed MongoDB processes. If\n Enforce Consistent Set  is set to  No , you must\nmanually remove the role with the\n dropRole  command.",
            "code": [],
            "preview": "Roles grant users access to MongoDB resources. By default, MongoDB\nprovides some built-in roles,\nbut if these roles cannot describe a desired privilege set, you can\ncreate custom roles.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/rotate-keyfile",
            "title": "Rotate Keyfile",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Settings tab.",
                "Click Rotate Keyfile.",
                "Review your changes."
            ],
            "paragraphs": "If your cluster uses  keyfile authentication ,\nit is recommended that you  rotate  the keyfile periodically.  Cloud Manager \nprovides an automated procedure for keyfile rotation with no downtime. To rotate the keyfile using the API instead of the user interface, see  Rotate a Key File with the API . To perform a rolling keyfile rotation: Authentication must be enabled. At least one cluster in the project must be configured with the\n clusterAuthMode \noption set to  keyFile  or  sendKeyFile . All clusters in the project must be running MongoDB version 4.2 or\nhigher. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Click  Review & Deploy . The modal window contains a summary of the keyfile rotation\nprocedure. If it all looks correct, click\n Confirm & Deploy .",
            "code": [],
            "preview": "If your cluster uses keyfile authentication,\nit is recommended that you rotate the keyfile periodically. Cloud Manager\nprovides an automated procedure for keyfile rotation with no downtime.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-mongodb-users",
            "title": "Manage MongoDB Users",
            "headings": [
                "Considerations",
                "Managed Users and Roles",
                "Consistent Users and Roles",
                "Enforce Consistent Set is YES",
                "Enforce Consistent Set is NO",
                "Add One MongoDB User",
                "Navigate to the MongoDB Users tab for your deployment.",
                "Click the Add New User button.",
                "Complete the user account fields.",
                "Click Add User.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Edit One MongoDB User Details",
                "Navigate to the MongoDB Users tab for your deployment.",
                "Click Edit next to the user you want to modify.",
                "Edit the user's information.",
                "Click Save Changes.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Manage or Unmanage MongoDB Users",
                "Navigate to the MongoDB Users tab for your deployment.",
                "Click Refresh to discover any unmanaged users in your deployments.",
                "Select users to manage or unmanage.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Click Refresh to verify the desired users have been removed from your deployments.",
                "Remove a MongoDB User",
                "Navigate to the MongoDB Users tab for your deployment.",
                "Set the Ensure Consistent Set toggle to YES.",
                "Set the Sync setting for the users to be deleted to OFF.",
                "Click Delete next to the user to delete.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Click Refresh to verify the desired users have been removed from your deployments."
            ],
            "paragraphs": "When you select an Authentication Mechanism for your  Cloud Manager  project,\nthis enables access control for all managed deployments in your  Cloud Manager \nproject. With access control enabled, clients must authenticate to the MongoDB\nprocess as MongoDB users. Once authenticated, these users only have\nprivileges granted by their assigned roles. You can assign MongoDB's\n built-in roles  to a user as well\nas  custom roles . You can create MongoDB users before or after enabling accessing\ncontrol, but your MongoDB instances do not require user credentials if\naccess control is not enabled. MongoDB users are separate from  Cloud Manager   users . MongoDB users have access to MongoDB\ndatabases, while  Cloud Manager  users access the  Cloud Manager  application itself. Any users or roles you choose to manage in an  Cloud Manager  project have their\n Synced  value set to  Yes  and are synced to all\ndeployments in the project. Any users or roles you do not choose to manage in an  Cloud Manager  project have\ntheir  Synced  value set to  No  and exist only in their\nrespective MongoDB deployments. If you toggle  Synced  to  OFF  after import, any users\nor roles you create are deleted. If you enforce a consistent set of users and roles in your project,\n Cloud Manager  synchronizes these users and roles across all deployments in that\nproject. Toggle  Enforce Consistent Set  to choose whether or\nnot to manage one set of users and roles: In a managed project,  Cloud Manager  grants all of the users and roles access to\nall deployments. All deployments that the  Cloud Manager  project manages have\nthe same set of MongoDB users and roles. Cloud Manager  limits the access to users and roles where you set\n Synced  to  Yes .  Cloud Manager  deletes all users and roles that  Cloud Manager  project doesn't manage from the deployments in your project. In a managed project,  Cloud Manager  allows each deployment to use its own set of MongoDB users and roles.  Cloud Manager  doesn't need to manage these MongoDB users and roles. To manage these\nusers and roles, you must connect direct to the MongoDB\ndeployment. Cloud Manager  grants managed MongoDB users and roles where you set\n Synced  to  Yes  access to all managed deployments. Cloud Manager  limits access of unmanaged MongoDB users and roles, where you set\n Synced  to  No , to those users' and roles' specific\ndeployments. To learn how importing MongoDB deployments can affect managing users\nand roles, see  Automation and Updated Security Settings Upon Import . Enforce Consistent Set  defaults to  NO . When you create a MongoDB user via  Cloud Manager , it uses the default\nnumber of iterations for\n SCRAM-SHA-1 \n(10,000) and  SCRAM-SHA-256 \n(15,000) to hash user credentials. If you want to use different\nvalues,  create the user in MongoDB directly . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Users . Field Description Identifier Together, the database and username uniquely identify the\nuser. Though the user has just one authentication database,\nthe user can have privileges on other databases. You grant\nthose privileges when assigning the user roles. If you are authenticating with an external system, like\nKerberos or an LDAP server, add users to the\n $external  database. In the first field, enter the database on which the user\nauthenticates. In the second field, enter a username on that database. Roles Enter any available user-defined roles and  built-in\nroles  into this box. The combo\nbox provides a list of existing roles when you click in it. Password Enter the user's password. If you specified  $external  as the database in the\n Identifier , you do not need to specify a\npassword for the new user. Authentication Restrictions Click  Add Entry . Add one or more  IP (Internet Protocol)  addresses and/or  CIDR (Classless Inter-Domain Routing)  blocks in\neither the  Client Source  or  Server\nAddress  boxes. Separate multiple addresses or blocks with\ncommas. Client Source  restricts which addresses this\nuser can authenticate and use the given roles. Server Address  restricts the addresses this\nuser can authenticate and has the given roles. Click  Save . To add another entry, click  Add Entry . Otherwise, click  Cancel  and you can make\nadditional changes. When you edit a MongoDB user via  Cloud Manager , it uses the default\nnumber of iterations for\n SCRAM-SHA-1 \n(10,000) and  SCRAM-SHA-256 \n(15,000) to hash user credentials. If you want to use different\nvalues,  update the user in MongoDB directly . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Users . Field Description Identifier These values cannot be edited. Roles Enter any available user-defined roles and  built-in\nroles  into this box. The combo\nbox provides a list of existing roles when you click in it. To remove a role, click the  x  to the left of that role. Password Enter the user's password. If you specified  $external  as the database in the\n Identifier , you do not need to change this\nvalue. Authentication Restrictions To add an authentication restriction: To remove an authentication restriction: Click  Add Entry . Add one or more  IP (Internet Protocol)  addresses or  CIDR (Classless Inter-Domain Routing)  blocks in\neither the  Client Source  or  Server\nAddress  boxes. Separate multiple addresses or blocks with\ncommas. Client Source  restricts which addresses this\nuser can authenticate and use the given roles. Server Address  restricts the addresses this\nuser can authenticate and has the given roles. Click  Save . To add another entry, click  Add Entry . Click the  x  to the right of the authentication\nrestriction. Otherwise, click  Cancel  and you can make\nadditional changes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Users . This shows all MongoDB users\npresent in all managed deployments for the  Cloud Manager  project and any potential\nconflicts. Set the  Sync  switch to  Yes  for each MongoDB user you\nwant  Cloud Manager  to manage. To manage all MongoDB users for the  Cloud Manager  project, click the\n Sync All  link. Set the  Sync  switch to  No  to unmanage the MongoDB\nuser. Current Sync State New Sync State What Changes NO YES Cloud Manager  now manages the user. If there are any potential conflicts with other discovered\nusers, you will be presented with the option to resolve\nconflicts. YES NO Cloud Manager  no longer manages the user. If  Ensure Consistent Set  is  YES , the user\nis deleted from all MongoDB databases  Cloud Manager  currently\nmanages for this project. If  Ensure Consistent Set  is  NO ,  Cloud Manager  no\nlonger manages the users in that MongoDB database, but\nthese users can be managed through a direct connection to\nthat database. Otherwise, click  Cancel  and you can make\nadditional changes. The following procedure deletes the MongoDB user from all the project's\nmanaged MongoDB deployments. See also\n Manage or Unmanage MongoDB Users . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Users . Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "When you select an Authentication Mechanism for your Cloud Manager project,\nthis enables access control for all managed deployments in your Cloud Manager\nproject.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-public-api-access",
            "title": "Configure API Access",
            "headings": [
                "Prerequisite",
                "(Optional) Require an API Access List for Your Organization",
                "Manage Access to the API"
            ],
            "paragraphs": "To access the  Cloud Manager   API (Application Programming Interface)  using\n applications ,\ngenerate an  API (Application Programming Interface)  key for your organization. Organization-based  API (Application Programming Interface)  Keys aren't associated with user\ncredentials. You can't use these  API (Application Programming Interface)  Keys to log in to the  Cloud Manager \nconsole. Cloud Manager  allows your Cloud Manager Administration API keys to make requests from\nany address on the internet unless you require an IP access list for\nthe Cloud Manager Administration API. If you require an IP access list, your  API (Application Programming Interface) \nkeys can make  API (Application Programming Interface)  requests only from the location-based IP or  CIDR (Classless Inter-Domain Routing) \naddresses that you specify in the IP access list. Each  API (Application Programming Interface)  key has its own IP access list. If you require an IP\naccess list for all Cloud Manager Administration API requests, you must define at\nleast one IP access list entry for an  API (Application Programming Interface)  key before you can use the\n API (Application Programming Interface)  key. When you create a new organization using the  Cloud Manager  UI,  Cloud Manager  enables\nthe  API (Application Programming Interface)  access list requirement by default. To disable the IP\naccess list requirement when you  create an organization , toggle\n Require IP Access List for Cloud Manager Administration API \nto  OFF  when you  create an organization . To set your organization to require IP access lists for every\nCloud Manager Administration API key after organization creation, follow these steps: Log into  Cloud Manager . Access the Organization using the  Context  picker in\nthe top-left hand corner of the  Cloud Manager  UI. Click  Settings  from the left hand navigation. Toggle the  Require IP Access List for Cloud Manager Administration API \nsetting to  On . You can set API Keys for an entire organization or project.",
            "code": [],
            "preview": "To access the Cloud Manager API (Application Programming Interface) using\napplications,\ngenerate an API (Application Programming Interface) key for your organization.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-mongodb-agent-for-x509",
            "title": "Configure the MongoDB Agent for X.509 Authentication",
            "headings": [
                "Considerations",
                "Prerequisites",
                "Procedures",
                "Create MongoDB User from the X.509 subject",
                "Edit MongoDB Agent Configuration File",
                "Specify the absolute file path to your trusted CA certificate in the MongoDB Agent config file.",
                "Restart the MongoDB Agent."
            ],
            "paragraphs": "MongoDB supports  X.509 certificate  authentication for use\nwith a secure  TLS \nconnection. X.509 client authentication allows clients to authenticate\nto servers with certificates rather than with a username and password. Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. With Automation,  Cloud Manager  manages MongoDB Agent authentication for\nyou. To learn more about authentication, see  Enable x.509 Authentication for your  Cloud Manager  Project . A full description of\n Transport Layer Security ,\n public key infrastructure ,\n X.509  certificates, and\n Certificate Authorities \nexceeds the scope of this tutorial. This tutorial assumes prior\nknowledge of  TLS (Transport Layer Security)  and access to valid X.509 certificates. To enable X.509 Authentication for  Cloud Manager , you must obtain valid  TLS (Transport Layer Security) \ncertificates that a single certificate authority (CA) generated and\nsigned. To learn more about the certificate requirements, see\n Client x.509 Certificate  in the MongoDB\nManual. X.509 Client Certificate Authentication requires you to\n enable and configure \n TLS (Transport Layer Security)  for the deployment. This tutorial assumes that you have already configured your MongoDB\ndeployment to use X.509 certificate authentication and  TLS (Transport Layer Security) . If you\nhave not done so, refer to the\n Use X.509 Certificates to Authenticate Clients  and\n Configure mongod and mongos for TLS \ntutorials. When Automation is activated,  Cloud Manager  manages MongoDB Agent authentication. To configure X.509 for MongoDB Agent authentication, see\n Enable x.509 Client Certificate Authentication for your  Cloud Manager  Project . For the MongoDB Agent to connect to your MongoDB deployment, you must create a MongoDB user on your deployment that corresponds to the  subject  value of your client certificate. Where you create the MongoDB user depends upon whether or not you are\nusing  LDAP authorization . If you are using  LDAP (Lightweight Directory Access Protocol)  authorization in your MongoDB deployment,\nyou must create an  LDAP (Lightweight Directory Access Protocol)  user and  LDAP (Lightweight Directory Access Protocol)  group for the\nMongoDB Agent on the  LDAP (Lightweight Directory Access Protocol)  server. After creating the  LDAP (Lightweight Directory Access Protocol)  user\nand group, map the  LDAP (Lightweight Directory Access Protocol)  group to a MongoDB role in your\ndeployment's  admin  database. For the MongoDB user representing the MongoDB Agent: When using  LDAP (Lightweight Directory Access Protocol)  Authorization, do not create  any  MongoDB\nusers in the  $external  database. MongoDB 3.4 and later\ndoes not start if a MongoDB user exists in the  $external \ndatabase and  LDAP (Lightweight Directory Access Protocol)  authorization is enabled. Create a new  LDAP (Lightweight Directory Access Protocol)  user on your  LDAP (Lightweight Directory Access Protocol)  server named that uses\nthe  subject  value of your client certificate as the\nusername. Create an  LDAP (Lightweight Directory Access Protocol)  group whose name matches the MongoDB Agent's\nrole. Create the MongoDB Agent's role in your  admin  database with\nthe appropriate permissions. When Automation is activated, Automation automatically\ncreates a role for for the MongoDB Agent user for  LDAP (Lightweight Directory Access Protocol)  authentication. Assign the  LDAP (Lightweight Directory Access Protocol)  user to the  LDAP (Lightweight Directory Access Protocol)  group. To learn how to: See Create an  LDAP (Lightweight Directory Access Protocol)  user Documentation for your  LDAP (Lightweight Directory Access Protocol)  implementation. Create an  LDAP (Lightweight Directory Access Protocol)  group Documentation for your  LDAP (Lightweight Directory Access Protocol)  implementation. Assign the appropriate roles for the MongoDB Agent Required Access for MongoDB Agent . Map an  LDAP (Lightweight Directory Access Protocol)  group and MongoDB role LDAP Roles section  of the\n LDAP authorization  page in the MongoDB\nmanual. Configure  LDAP (Lightweight Directory Access Protocol)  authorization without  Cloud Manager  automation LDAP Authorization  page in the MongoDB\nmanual. If you are not using  LDAP (Lightweight Directory Access Protocol)  authorization, you must add the  subject  value of your client certificate as the username\nof the MongoDB Agent in the  $external  database of your\nMongoDB deployment. Without  LDAP (Lightweight Directory Access Protocol)  authorization, MongoDB uses\nthe  $external  database to authenticate a user against\nX.509. Use the following commands to create the users from  mongosh : To learn what access is required, see\n Required Access for MongoDB Agent . Each MongoDB user must have its own X.509 certificate. To discover the appropriate roles for the MongoDB Agent, see\n Required Access for MongoDB Agent . To use X.509 authentication, you must configure the MongoDB Agent for\n TLS (Transport Layer Security) : Configure MongoDB Agent to Use TLS  provides more\ndetails about configuring the MongoDB Agent for  TLS (Transport Layer Security) . After you configure the MongoDB Agent,\nconfigure the X.509 Authentication mechanism in the  Cloud Manager  interface, as\ndescribed in  Enable x.509 Authentication for your  Cloud Manager  Project . If you enabled  TLS (Transport Layer Security)  for your  Cloud Manager  deployment, then you must\n configure the MongoDB Agent to use TLS . To configure the MongoDB Agent to\nuse  TLS (Transport Layer Security) , you must have the trusted  Certificate Authority  certificate that\nsigned the MongoDB instance's certificate. In the  MongoDB Agent's install directory , edit the configuration\nfile to set  httpsCAFile  field to the\npath of a file containing one or more certificates in  PEM (Privacy-Enhanced Mail)  format. To learn more about these settings, see\n Cloud Manager   TLS (Transport Layer Security)  Settings . The location of the MongoDB Agent configuration file is\n C:\\MMSData\\Automation\\automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /etc/mongodb-mms/automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /etc/mongodb-mms/automation-agent.config . The MongoDB Agent configuration file is named\n automation-agent.config  as a way to enable easier upgrades\nfor those using legacy agents. The location of the MongoDB Agent configuration file is\n /path/to/install/local.config . Use the following command to connect through  mongosh : Then, modify the configuration file and set the following\nkey/value pair: Save the configuration file.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"$external\").createUser(\n  {\n    user : \"<x.509 subject>\",\n    roles : [\n      { role : \"clusterAdmin\", db : \"admin\" },\n      { role : \"readWriteAnyDatabase\", db : \"admin\" },\n      { role : \"userAdminAnyDatabase\", db : \"admin\" },\n      { role : \"dbAdminAnyDatabase\", db : \"admin\" },\n      { role : \"backup\", db : \"admin\" },\n      { role : \"restore\", db : \"admin\" }\n    ]\n  }\n)"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --tls --tlsCAFile /etc/ssl/ca.pem example.net:27017"
                },
                {
                    "lang": "ini",
                    "value": "httpsCAFile=/etc/ssl/ca.pem"
                }
            ],
            "preview": "MongoDB supports X.509 certificate authentication for use\nwith a secure TLS\nconnection. X.509 client authentication allows clients to authenticate\nto servers with certificates rather than with a username and password.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/convert-config-servers-to-replica-set",
            "title": "Convert Config Servers to a Replica Set",
            "headings": [
                "Prerequisites",
                "Procedure",
                "If you have not upgraded your sharded cluster to MongoDB 3.2.4 or later, do so now.",
                "Navigate to the Clusters view for your deployment.",
                "Click the ellipsis icon next to a config server and select Convert Config Servers to Replica Sets.",
                "Enter a name for the new replica set.",
                "Enter the ports for the temporary config servers created during the conversion and click Upgrade.",
                "Click Save.",
                "Click Review & Deploy.",
                "Click Confirm & Deploy."
            ],
            "paragraphs": "In a sharded cluster,  config servers  store the\nmetadata for the  sharded cluster . For a\nsharded cluster to be fully operational, the config servers must be\navailable and the metadata must be consistent across the config\nservers. Config servers that run the WiredTiger storage engine can be\ndeployed as replica sets. Running config servers as replica sets\nimproves consistency and increases availability for the config\nservers.  Cloud Manager  automatically deploys config servers as replica sets\nfor all new sharded cluster deployments using\n MongoDB 3.4 or later .\nHowever, you must must convert config servers to replica sets for\nexisting MongoDB 3.4 sharded cluster deployments before you can\nupgrade. You can manage config server replica sets just as you would\nany other replica set. This procedure was deprecated as of 15 August 2019. It is no\nlonger supported. For deployments running MongoDB 3.2.4 or Later. Requires Automation version greater than 2.6.1.x (i.e. greater than 2.6.1). If you have backup enabled and if you convert a sharded cluster's\nconfig servers to a replica set, then  Cloud Manager  Automation can no longer\nuse snapshots created before the conversion to restore the sharded\ncluster. Automation can only use snapshots created after the\nconversion. The Automation version must be greater than 2.6.1.x (i.e. greater than 2.6.1). To convert the config servers to a replica set, the sharded cluster\nmust be running MongoDB 3.2.4 or later. To upgrade the\nMongoDB version, see  Change the Version of MongoDB . The sharded cluster must be running exactly three config servers to\nconvert. After the conversion of the config servers to a replica\nset, you can add additional members to the config server replica\nset. The Automation must have write permission on the  parent \ndirectory of the  dbPath  of each config server. During the conversion of the config servers to a replica set, If the config servers use the MMAPv1  storage engine ,  Cloud Manager \nchanges the storage engine to\n WiredTiger . The MongoDB Agent creates temporary config servers as part of the\nconversion process and deletes them after the conversion. If your\nMongoDB Agent detects them at any point during the\nconversion, they appear as unreachable hosts in your\ndeployments list. After the conversion, you can safely delete them\nfrom the list. See  Stop Managing and/or Monitoring One Deployment . See  Change the Version of MongoDB . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. During conversion, the Automation creates temporary config servers.\nThese temporary config servers must be network accessible from all\nnodes in the cluster. During the procedure, specify\ndistinct available ports for these temporary config servers.",
            "code": [],
            "preview": "In a sharded cluster, config servers store the\nmetadata for the sharded cluster. For a\nsharded cluster to be fully operational, the config servers must be\navailable and the metadata must be consistent across the config\nservers.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/migrate-member-to-new-hardware",
            "title": "Migrate a Replica Set Member to a New Server",
            "headings": [
                "Overview",
                "Considerations",
                "Initial Sync",
                "Migrating Multiple Members",
                "Procedure",
                "Provision the new server.",
                "Navigate to the Processes tab for your deployment.",
                "Click Modify for the replica set cluster.",
                "Add a member to the replica set.",
                "Configure the new mongod process.",
                "Click Apply.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Verify that the new member has synchronized.",
                "Remove the old member from the replica set.",
                "Optional: Shut down the old member.",
                "Optional: Remove the old member."
            ],
            "paragraphs": "You can replace one member of a managed  replica set  with another member\nfrom the  Cloud Manager  console. Use this process to migrate members of replica sets to\nnew underlying servers. This procedure requires that you: Provision the new server. Add an extra member to the replica set. Shut down old member of the replica set. Un-manage the old member (Optional). When you add a new replica set member, the member must perform an\n inital sync , which takes time to complete, depending on the\nsize of your data set. For more information on initial sync, see\n Replica Set Data Synchronization . Removing members during migration might affect the ability of the replica set\nto acknowledge writes, depending on the level of  write concern  you\nuse. For more information, see  Write Concern  in the MongoDB manual. You can remove or migrate multiple replica set members at once, but a majority of the\nvoting members must remain. If you need to remove more voting members, remove\nthem one at a time. To learn more about voting, see  Replica Set High Availability  and  Replica Set Elections . You have a four-node replica set. All nodes are voting members. You can\nremove only one node, which preserves the majority of three out of four\nvoting nodes. You can remove another node from the remaining\nthree-node replica set afterward. This preserves the majority of the\nremaining voting nodes. You have a four-node replica set. Three nodes are voting members and\none node is a non-voting member. You can remove one voting member\nand one non-voting member at the same time. This preserves the\nmajority of two out of three voting nodes. Perform this procedure separately for each member of a replica set to\nmigrate. See  Provision Servers . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. In the  Member Configuration  section, click\n Add a Mongod  to add a new  ~bin.mongod  member. Cloud Manager  displays the following configuration settings for the\n ~bin.mongod : Ensure you select the  Hostname  that corresponds to the\nnewly provisioned server. Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags From the  Replica Set Configuration  section, view the\ntable under the  Replica Set Settings  heading. The\n Process Name  column lists the hostname and port of each\nreplica set member set.  Cloud Manager  initially groups the processes under\nthe replica set name. Click the   icon to the left\nof the replica set name to list all members associated to the replica\nset. Configure the following settings for the\n Process Name  that corresponds to the newly added member: Setting Description Version Select the MongoDB server version of the  ~bin.mongod  process. Version Select the MongoDB server version of the  ~bin.mongod  process. Data Directory Specify the directory where the  ~bin.mongod  process stores\ndata files. This setting corresponds to the\n storage.dbPath   ~bin.mongod  configuration file\noption. The  Cloud Manager  Automation must have file system permission\nto read, write, and execute all files and folders in the\nspecified directory. Each  ~bin.mongod  process must have its own database\ndirectory. If deploying multiple  ~bin.mongod \nprocesses on the same host, ensure each process has its own\ndistinct directory. Log File Specify the full path to the  ~bin.mongod  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n ~bin.mongod  must have permission to read and write to the\nspecified file. The  ~bin.mongod  have its own unique log file. If deploying multiple\n ~bin.mongod  processes to the same host, ensure each  ~bin.mongod  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n ~bin.mongod  to store its logfile to  /var/log/mongodb/  as\n mongo.log . Otherwise, click  Cancel  and you can make\nadditional changes. On the  Deployment  page, click the name of the replica\nset to open the cluster view. Verify that the\n status  for each\nnew member is no longer in the  Recovering  state. Click  Save  to return to the  Deployment \nscreen. Click  Review Changes  and then click\n Confirm & Deploy .  Cloud Manager  converts the removed\nreplica set member to a standalone cluster visible in the\n Deployment  view. From the  Deployment  view, click  Modify . Navigate to the  Member Configuration  section. Click the   ellipses button for the member you want\nto remove. From the menu, select  Remove from Replica Set . Removing the  primary  replica set member triggers\nan  election . The\nreplica set cannot process write operations until the election\ncompletes. For complete documentation on replica set elections,\nsee  Replica Set Elections . From the  Deployment  view, click the standalone's ellipsis\nicon and select  Shutdown . Click  Review Changes \nand then click  Confirm & Deploy . To remove the member from  Cloud Manager  management, click the\n ...  ellipses icon and select\n Remove from Cloud Manager . Cloud Manager  does not automatically shut down a process removed from\nmanagement. If you did not shut down the process in the previous\nstep, you must do so manually by connecting directly to the host\nmachine. For complete documentation on removing processes from  Cloud Manager \nmanagement, see  Stop Managing and/or Monitoring One Deployment .",
            "code": [],
            "preview": "You can replace one member of a managed replica set with another member\nfrom the Cloud Manager console. Use this process to migrate members of replica sets to\nnew underlying servers. This procedure requires that you:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/add-existing-mongodb-processes",
            "title": "Add Existing MongoDB Processes to Cloud Manager",
            "headings": [
                "Considerations",
                "Unique Names",
                "MongoDB Configuration Options",
                "TLS (Transport Layer Security)",
                "Preferred Hostnames",
                "Managing Windows MongoDB Services",
                "Authentication Credentials on Source and Destination Clusters",
                "Authentication Use Cases",
                "Automation and Updated Security Settings Upon Import",
                "Examples of Imported Users",
                "Prerequisites",
                "Procedures",
                "Add MongoDB Processes",
                "Navigate to the Deployment page for your project.",
                "Click Add and select Existing MongoDB Deployment.",
                "Follow the prompts to add the deployment.",
                "Add Authentication Credentials to your Deployment",
                "Add Credentials for Automation",
                "Add the MongoDB Agent user to your databases.",
                "Navigate to the Security Settings dialog for your deployment.",
                "Click Edit Credentials.",
                "Continue through the modal until you see the Configure Cloud Manager Agents page.",
                "Add the appropriate credentials:",
                "Add Credentials for Monitoring",
                "Navigate to the Monitoring Settings dialog for your deployment.",
                "Click Credentials.",
                "Add the appropriate credentials:",
                "Add Credentials for Backup",
                "Navigate to the Continuous Backup page for your project.",
                "For your deployment, Click , then click Edit Credentials.",
                "Add the appropriate credentials:"
            ],
            "paragraphs": "Cloud Manager  provides a wizard for adding your existing MongoDB deployments to\nmonitoring and management. The wizard prompts you to: Install the MongoDB Agent if you don't have it installed Identify the  sharded cluster , the  replica set ,\nor the  standalone  to add. You can choose to add the deployment to\n Monitoring  or to both\n Monitoring  and\n Automation . If you are adding a deployment that you intend to\n live migrate  to  Atlas ,\nyou need to add the deployment (and its credentials)  only for\n Monitoring . Deployments must have unique names within the projects. Replica set, sharded cluster, and shard names within the same\nproject must be unique. Failure to have unique names for the\ndeployments will result in broken backup snapshots. Automation doesn't support all MongoDB options, which can result in\nfailed import attempts. To learn more, see\n MongoDB Settings and Automation Support . If you enable  TLS (Transport Layer Security) , the  FQDN (fully qualified domain name)  for the host serving a MongoDB process\nmust match the  SAN (Subject Alternative Name)  for the  TLS (Transport Layer Security) \ncertificate on that host. To prevent man-in-the-middle attacks, keep the scope of  TLS (Transport Layer Security)  certificates\nas narrow as possible. Although you can use one  TLS (Transport Layer Security)  certificate with\nmany  SANs (Subject Alternative Names) , or a wildcard  TLS (Transport Layer Security) \ncertificate on each host, you should not. To learn more, see\n RFC 2818, section 3.1 . Set up a preferred hostname if you: To learn more, see the  Preferred Hostnames  setting\nin  Project Settings . Require a specific hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address or  IPv6 (Internet Protocol version 6) \naddress to access the MongoDB process, or Must specify the hostname to use for hosts with multiple aliases. If you are adding an existing MongoDB process that runs as a Windows\nService to Automation, Automation: Stops and disables the existing service Creates and starts a new service If the  Cloud Manager  project has MongoDB authentication settings enabled for its\ndeployments, the MongoDB deployment you import must support the project's\nauthentication mechanism. We recommend that you import to a  new  destination project that has no\nrunning processes and doesn't have authentication enabled. If the source cluster uses authentication, and the destination  Cloud Manager  project\ndoesn't have any existing managed processes,  Cloud Manager  enables authentication\nin the destination project, imports the existing keyfile from the source\ncluster, and uses it to authenticate the user that conducts the import process. If the source cluster and the destination  Cloud Manager  project both use authentication,\nand the project has processes,  Cloud Manager  attempts to use existing authentication\nsettings in the destination project during the import process. For the\nimport process to succeed, authentication credentials on the source cluster\nand the  Cloud Manager  destination project must be the same. To ensure that import is successful, before you start the import process,\nadd the  Cloud Manager  destination project's credentials on the source cluster.\nTo learn more, see  Rotate Keys for Replica Set \nor  Rotate Keys for Sharded Clusters . If your MongoDB deployment requires authentication, when you add the\ndeployment to  Cloud Manager  for monitoring, you must\n provide the necessary credentials . To learn more, see  Add Credentials for Automation . If the deployment doesn't use Automation, but  did  use Backup, Monitoring,\nor both, you can find those credentials where the credentials were\nbefore updating to the MongoDB Agent. If the deployment doesn't use Automation, but  will  use Backup,\nMonitoring, or both: Create the credentials for the MongoDB Deployment. To learn more, see\n Required Access for MongoDB Agent for Monitoring \nand  Required Access for MongoDB Agent for Backup . Add the credentials that you granted to those functions to  Cloud Manager  after\nyou add the MongoDB processes. To learn more, see\n Add Credentials for Monitoring \nand  Add Credentials for Backup . If the deployment  uses  Automation,  Cloud Manager  uses the credentials from\nthe MongoDB Agent. You can delete the credentials from the legacy Backup,\nand Monitoring Agents. The MongoDB Agent uses those credentials for its\nAutomation, Backup, and Monitoring functions. If the deployment  will  use Automation but didn't use it before you\nimport it, add the  mms-automation  user to the database processes\nyou imported and add the user's credentials to  Cloud Manager . Adding a MongoDB deployment to automation may affect the security\nsettings of the  Cloud Manager  project and the MongoDB deployment. Automation enables the Project Security Setting . If the\nMongoDB deployment requires authentication but the  Cloud Manager  project doesn't\nhave authentication settings enabled, when you add the MongoDB deployment\nto automation,  Cloud Manager  updates the project's security settings to the security\nsettings of the newly imported deployment. The import process only updates the  Cloud Manager  project's security setting\nif the project's security setting is currently disabled. The import\nprocess doesn't disable the project's security setting or change its\nenabled authentication mechanism. Automation Imports MongoDB Users and Roles . The following statements\napply to situations where a MongoDB deployment requires authentication\nor the  Cloud Manager  project has authentication settings enabled. If the MongoDB deployment contains users or user-defined roles, you can\nchoose to import these users and roles for  Cloud Manager  to manage. The imported\nusers and roles are  Synced  to all managed deployments in\nthe  Cloud Manager  project. If you don't want the  Cloud Manager  project to manage specific users and roles,\nuse the  Authentication & Users  and\n Authentication & Roles  pages to remove these users and roles\nduring import before you confirm and deploy the changes. To learn more,\nsee  Manage or Unmanage MongoDB Users . If the imported MongoDB deployment already has  mms-backup-agent  and\n mms-monitoring-agent  users in its  admin  database, the import\nprocess overrides these users' roles with the roles for  mms-backup-agent \nand  mms-monitoring-agent  users as set in the  Cloud Manager  project. If you set the project's  Enforce Consistent Set  value to  Yes ,\n Cloud Manager  deletes from the MongoDB deployments those users and roles\nthat are  not  imported. If you set the project's  Enforce Consistent Set  value to  No ,\n Cloud Manager  stops managing non-imported users and roles in the project. These\nusers and roles remain in the MongoDB deployment. To manage these\nusers and roles, you must connect directly to the MongoDB deployment. Automation Applies to All Deployments in the Project .\nThe project's updated security settings, including all users and roles\nmanaged by the  Cloud Manager  project, apply to  all  deployments in the project,\nincluding the imported MongoDB deployment. Cloud Manager  restarts all deployments in the project with the new setting,\nincluding the imported MongoDB deployment. After import, all deployments\nin the project use the  Cloud Manager  automation keyfile upon restart. The deployment that you import must use the same keyfile as the existing\nprocesses in the destination project or the import process may not\nproceed. To learn more, see  Authentication Credentials on Source\nand Destination Clusters . If the existing deployments in the project require a different security\nprofile from the imported process, create a new project into which you\ncan import the source MongoDB deployment. The following examples apply to situations where the MongoDB deployment\nrequires authentication or the  Cloud Manager  project has authentication settings enabled. If you import the MongoDB users and custom roles, once the  Cloud Manager  project\nbegins to manage the MongoDB deployment, the following happens, regardless\nof the  Enforce Consistent Set  value: If you don't import the MongoDB users and custom roles, once the  Cloud Manager \nproject begins to manage the MongoDB deployment, the following happens: If  Enforce Consistent Set  is set to  Yes : If  Enforce Consistent Set  is set to  No : The  Cloud Manager  project enables authentication, manages imported users and roles,\nand syncs the new users and roles to all its managed deployments. The MongoDB deployment's access control is enabled and requires\nauthentication. The MongoDB deployment has all users and roles that\nthe  Cloud Manager  project manages. These users and roles have  Synced  set to\n Yes . The  Cloud Manager  project enables authentication and doesn't change its managed\nusers and roles. The MongoDB deployment's access control is enabled and requires authentication. Cloud Manager  deletes the non-imported MongoDB users and roles from the deployment. The MongoDB deployment has all users and roles that the  Cloud Manager  project\nmanages. These users and roles have  Synced  set to  Yes . The  Cloud Manager  project enables authentication and doesn't change its security\nsettings, including users and roles. The MongoDB deployment's access control is enabled and requires authentication. The non-imported MongoDB users and roles remain in the MongoDB deployment. The MongoDB deployment has all users and roles managed by the  Cloud Manager  project.\nThese users and roles have  Synced  set to  Yes . If  mongod  is enabled as a service on the deployment,\na race condition might result where  systemd  starts  mongod  on reboot,\nrather than the Automation. To prevent this issue, ensure the  mongod \nservice is disabled before you add your deployment to Automation: Verify whether the  mongod  service is enabled: If the service is enabled, disable it: If the  Cloud Manager  project doesn't have authentication settings enabled but\nthe MongoDB process requires authentication, add the MongoDB Agent user\nfor the  Cloud Manager  project with the appropriate roles. The import process\ndisplays the required roles for the user. The added user becomes the\nproject's MongoDB Agent user. If the  Cloud Manager  project has authentication settings enabled, add the\n Cloud Manager  project's MongoDB Agent user to the MongoDB process. To find the MongoDB Agent user, click  Deployments , then\n Security , then  Users . To find the password for the  Cloud Manager  project's MongoDB Agent user, use\none of the following methods: Follow the steps in the  Add MongoDB Processes procedure  to launch the wizard in the UI.\nWhen you reach the modal that says  Do you want to add automation to this deployment? : Select\n Add Automation and Configure Authentication . Click  Show Password . Use the  Automation Configuration Resource  endpoint: Open the  mmsConfigBackup  file in your preferred text editor and find the  autoPwd  value. If the  Cloud Manager  project has  Username/Password \nmechanism selected for its authentication settings, add the\nproject's  Cloud Manager  MongoDB Agents User  mms-automation  to\nthe  admin  database in the MongoDB deployment to import. When you add a cluster under  Cloud Manager ,  Cloud Manager  automatically enables log\n rotation , which could collide\nwith your existing  logRotate  configuration for  mongod  or\n mongos  logs. To prevent this collision, do the following: Disable your  logRotate  configuration for  mongod  or  mongos \nprocesses. Remove the  systemLog.logRotate  and  systemLog.logAppend \n options  from the\n mongod  or  mongos  process  configuration  to use the\ndefault of  Cloud Manager . The import process requires that the authentication credentials and\nkeyfiles are the same on the source and destination clusters. To learn\nmore, see  Authentication Credentials on Source and Destination Clusters . To successfully import an existing replica set to  Cloud Manager ,\nthe instance must be healthy. If you are adding a sharded cluster, you must create this user through\nthe  mongos   and  on every shard. That is, create the user\nboth as a cluster wide user through  mongos  as well as a\nshard local user on each shard. To add existing MongoDB processes to  Cloud Manager : If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. After you add existing MongoDB process to  Cloud Manager , you might have to add\nauthentication credentials for the new deployments if authentication is\nenabled for the project into which you imported the deployment. See\n Authentication Use Cases  to learn in which situations\nyou must add Automation, Monitoring, or Backup credentials for your new\ndeployment. Select the authentication mechanism that you want to use: If you are adding a deployment that you intend to\n live migrate  to  Atlas ,\nyou need to add the deployment (and its credentials)  only for\n Monitoring . To add credentials for a deployment that will use Automation but didn't\nuse it before you imported it to  Cloud Manager : The MongoDB Agent user performs automation tasks for your MongoDB\ndatabases. Make sure this MongoDB user has the\n proper privileges . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . Setting Value MongoDB Agent Username Enter the MongoDB Agent username. MongoDB Agent Password Enter the password for MongoDB Agent Username. Setting Value MongoDB Agent LDAP Username Enter the  LDAP (Lightweight Directory Access Protocol)  username. MongoDB Agent LDAP Password Enter the password for MongoDB Agent's  LDAP (Lightweight Directory Access Protocol)  Username. MongoDB Agent LDAP Group DN Enter the Distinguished Name for the MongoDB Agent's\n LDAP (Lightweight Directory Access Protocol)  Group. Provide the MongoDB Agent's  LDAP (Lightweight Directory Access Protocol)  Group\n DN (Distinguished Name)  only if you use  LDAP (Lightweight Directory Access Protocol) \nAuthorization. Each MongoDB Agent should have and use\nits own  LDAP (Lightweight Directory Access Protocol)  Group  DN (Distinguished Name) . The required values depend upon whether you are connecting to a\nLinux-served  KDC (Key Distribution Center)  or Windows Active Directory Server. Setting Value Monitoring Kerberos Principal Kerberos Principal. Monitoring Keytab Path Absolute file Ppath to the MongoDB Agent's Keytab. Monitoring LDAP Group DN Enter the Distinguished Name for the MongoDB Agent's\n LDAP (Lightweight Directory Access Protocol)  Group. The  LDAP (Lightweight Directory Access Protocol)  Group DN is then created as a role in\nMongoDB to grant the MongoDB Agent the appropriate\nprivileges. You only need to provide the LDAP Group DN if\nyou use LDAP Authorization. Setting Value MongoDB Agent Username Active Directory user name. MongoDB Agent Password Active Directory password. Domain NetBIOS name of a domain in Active Directory\nDomain Services. Must be in all capital letters. Setting Value MongoDB Agent Username Enter the  LDAP (Lightweight Directory Access Protocol) v3 distinguished name derived from the\nMongoDB Agent's  PEM (Privacy-Enhanced Mail)  Key file. TLS/SSL CA File Path The path on disk that contains the trusted certificate\nauthority (CA) certificates in  PEM (Privacy-Enhanced Mail)  format. These certificates\nverify the server certificate returned from any MongoDB\ninstances running with  TLS (Transport Layer Security) / SSL (Secure Sockets Layer) . You must enter at least one\n TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  CA file path. MongoDB Agent PEM Key file If your MongoDB deployment requires client certificates, on\nthe line for the appropriate operating system, provide the\npath and  .pem  filename for the client certificate used by\nthe MongoDB Agent's  PEM (Privacy-Enhanced Mail)  Key file on the server.\nYou must enter a value for at least one MongoDB Agent PEM\nKey File. MongoDB Agent PEM Key Password Provide the password to the  PEM (Privacy-Enhanced Mail)  Key file if it was\nencrypted. MongoDB Agent LDAP Group DN Enter the Distinguished Name for the MongoDB Agent's\n LDAP (Lightweight Directory Access Protocol)  Group. You only need to provide MongoDB Agent's  LDAP (Lightweight Directory Access Protocol)  Group\nDN if you use  LDAP (Lightweight Directory Access Protocol)  Authorization. To add credentials for a deployment that will not use Automation but\nwill use Monitoring: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click  , then click  Monitoring\nSettings  next to the deployment for which you want to view\nmonitoring settings. Setting Value Monitoring Username Enter the Monitoring username. Monitoring Password Enter the password for Monitoring Username. Setting Value Monitoring LDAP Username Enter the  LDAP (Lightweight Directory Access Protocol)  username. Monitoring LDAP Password Enter the password for Monitoring's  LDAP (Lightweight Directory Access Protocol)  Username. Monitoring LDAP Group DN Enter the Distinguished Name for the Monitoring's  LDAP (Lightweight Directory Access Protocol) \nGroup. Provide the Monitoring's  LDAP (Lightweight Directory Access Protocol)  Group\n DN (Distinguished Name)  only if you use  LDAP (Lightweight Directory Access Protocol) \nAuthorization. Each Monitoring should have and use\nits own  LDAP (Lightweight Directory Access Protocol)  Group  DN (Distinguished Name) . The required values depend upon whether you are connecting to a\nLinux-served  KDC (Key Distribution Center)  or Windows Active Directory Server. Setting Value Monitoring Kerberos Principal Kerberos Principal. Monitoring Keytab Path Absolute file Ppath to the Monitoring's Keytab. Monitoring LDAP Group DN Enter the Distinguished Name for the Monitoring's\n LDAP (Lightweight Directory Access Protocol)  Group. The  LDAP (Lightweight Directory Access Protocol)  Group DN is then created as a role in\nMongoDB to grant the Monitoring the appropriate\nprivileges. You only need to provide the LDAP Group DN if\nyou use LDAP Authorization. Setting Value Monitoring Username Active Directory user name. Monitoring Password Active Directory password. Domain NetBIOS name of a domain in Active Directory\nDomain Services. Must be in all capital letters. Setting Value Monitoring Username Enter the  LDAP (Lightweight Directory Access Protocol) v3 distinguished name derived from the\nMonitoring's  PEM (Privacy-Enhanced Mail)  Key file. Monitoring PEM Key file Provide the path and filename for the Monitoring's  PEM (Privacy-Enhanced Mail) \nKey file on the server on the line for the appropriate\noperating system. Monitoring PEM Key Password Provide the password to the  PEM (Privacy-Enhanced Mail)  Key file if it was\nencrypted. Monitoring LDAP Group DN Enter the Distinguished Name for the Monitoring's  LDAP (Lightweight Directory Access Protocol) \nGroup. You only need to provide the Monitoring's  LDAP (Lightweight Directory Access Protocol)  Group\nDN if you use  LDAP (Lightweight Directory Access Protocol)  Authorization. To add credentials for a deployment that will not use Automation but\nwill use Backup: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Continuous Backup  in the sidebar. Setting Value Backup Username Enter the Backup username. Backup Password Enter the password for Backup Username. Setting Value Backup LDAP Username Enter the  LDAP (Lightweight Directory Access Protocol)  username. Backup LDAP Password Enter the password for Backup's  LDAP (Lightweight Directory Access Protocol)  Username. Backup LDAP Group DN Enter the Distinguished Name for the Backup's  LDAP (Lightweight Directory Access Protocol) \nGroup. Provide the Backup's  LDAP (Lightweight Directory Access Protocol)  Group\n DN (Distinguished Name)  only if you use  LDAP (Lightweight Directory Access Protocol) \nAuthorization. Each Backup should have and use its\nown  LDAP (Lightweight Directory Access Protocol)  Group  DN (Distinguished Name) . The required values depend upon whether you are connecting to a\nLinux-served  KDC (Key Distribution Center)  or Windows Active Directory Server. Setting Value Monitoring Kerberos Principal Kerberos Principal. Monitoring Keytab Path Absolute file Ppath to the Backup's Keytab. Monitoring LDAP Group DN Enter the Distinguished Name for the Backup's  LDAP (Lightweight Directory Access Protocol) \nGroup. The  LDAP (Lightweight Directory Access Protocol)  Group DN is then created as a role in\nMongoDB to grant the Backup the appropriate\nprivileges. You only need to provide the LDAP Group DN if\nyou use LDAP Authorization. Setting Value Backup Username Active Directory user name. Backup Password Active Directory password. Domain NetBIOS name of a domain in Active Directory\nDomain Services. Must be in all capital letters. Setting Value Backup Username Enter the  LDAP (Lightweight Directory Access Protocol) v3 distinguished name derived from the\nBackup's  PEM (Privacy-Enhanced Mail)  Key file. Backup PEM Key file Provide the path and filename for the Backup's  PEM (Privacy-Enhanced Mail)  Key\nfile on the server on the line for the appropriate\noperating system. Backup PEM Key Password Provide the password to the  PEM (Privacy-Enhanced Mail)  Key file if it was\nencrypted. Backup LDAP Group DN Enter the Distinguished Name for the Backup's  LDAP (Lightweight Directory Access Protocol) \nGroup. You only need to provide Backup's  LDAP (Lightweight Directory Access Protocol)  Group DN if\nyou use  LDAP (Lightweight Directory Access Protocol)  Authorization.",
            "code": [
                {
                    "lang": "sh",
                    "value": "sudo systemctl is-enabled mongod.service"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl disable mongod.service"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{username}:{apiKey}\" --digest \\\n  --header \"Accept: application/json\" \\\n  --include \\\n  --request GET \"<host>/api/public/v1.0/groups/<Group-ID>/automationConfig\""
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"admin\").createUser(\n   {\n     user: \"mms-automation\",\n     pwd: <password>,\n     roles: [\n       'clusterAdmin',\n       'dbAdminAnyDatabase',\n       'readWriteAnyDatabase',\n       'userAdminAnyDatabase',\n       'restore',\n       'backup'\n     ]\n   }"
                }
            ],
            "preview": "Cloud Manager provides a wizard for adding your existing MongoDB deployments to\nmonitoring and management. The wizard prompts you to:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/deploy-replica-set",
            "title": "Deploy a Replica Set",
            "headings": [
                "Prerequisites",
                "Considerations",
                "Unique Names for Replica Set",
                "Procedure",
                "Navigate to the Deployment page for your project.",
                "Open the Cluster Creation View.",
                "Configure Cluster-Wide Settings.",
                "Configure each Replica Set Member.",
                "Configure your Replication Settings.",
                "Set the default read and write concerns for your MongoDB replica set.",
                "Set any advanced configuration options for your MongoDB replica set.",
                "Click Create Replica Set."
            ],
            "paragraphs": "A  replica set  is a group of MongoDB deployments that maintain\nthe same data set. Replica sets provide redundancy and high\navailability and are the basis for all production deployments. To learn more about replica sets, see the  Replication\nIntroduction  in the MongoDB manual. Use this procedure to deploy a new replica set managed by  Cloud Manager . After\ndeployment, use  Cloud Manager  to manage the replica set, including such\noperations as adding, removing, and reconfiguring members. include:: /includes/note-k8s-deploy-replica-set.rst You can use  Kubernetes  to deploy MongoDB instances with  Cloud Manager . To deploy MongoDB clusters, you must\n provision hosts  to serve those\nclusters.  Cloud Manager  requires access to these hosts. If you run  MongoDB Enterprise \nand provision your own Linux hosts, then you must manually install a\nset of dependencies to each server  before installing MongoDB .\nThe MongoDB manual provides the appropriate command to install the\ndependencies. To learn more about the specifics for an operating system, see the\nfollowing: Red Hat Ubuntu Debian SUSE Amazon AMI Use a unique name for the replica set. Replica set, sharded cluster, and shard names within the same\nproject must be unique. Failure to have unique names for the\ndeployments will result in broken backup snapshots. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Add  arrow in the top-right of the\n Deployment  page. Select  New Replica Set \nfrom the drop-down menu to open the  Create New Replica Set \nview. The  Replica Set Configuration  section contains the\nfollowing cluster-wide configuration settings. Settings marked with an\n *  asterisk in the   Cloud Manager  UI are  required . Setting Description Replica Set Id Enter the name of your replica set deployment. You cannot change\nthis once set. This setting corresponds to the\n _id  replica configuration option. Replica Set Settings Displays an table of each process associated with the replica\nset. You can configure the MongoDB server version, data directory,\nand log path of each process. Process Name Hostname and port of a  mongod  process. This hostname can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address.  Cloud Manager \ninitially groups each process under the replica set name. Click the\n  to the left of the replica set name to display\nall  mongod  processes in the replica set. Cloud Manager  applies any settings configured for the replica set to all\nof its associated processes. Version Select the MongoDB server version of the  ~bin.mongod  process. Version Select the MongoDB server version of the  ~bin.mongod  process. Data Directory Specify the directory where the  ~bin.mongod  process stores\ndata files. This setting corresponds to the\n storage.dbPath   ~bin.mongod  configuration file\noption. The  Cloud Manager  Automation must have file system permission\nto read, write, and execute all files and folders in the\nspecified directory. Each  ~bin.mongod  process must have its own database\ndirectory. If deploying multiple  ~bin.mongod \nprocesses on the same host, ensure each process has its own\ndistinct directory. Log File Specify the full path to the  ~bin.mongod  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n ~bin.mongod  must have permission to read and write to the\nspecified file. The  ~bin.mongod  have its own unique log file. If deploying multiple\n ~bin.mongod  processes to the same host, ensure each  ~bin.mongod  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n ~bin.mongod  to store its logfile to  /var/log/mongodb/  as\n mongo.log . Cloud Manager  lists each replica set member under the\n MongoD Settings  heading of the\n Member Configuration  section. Each replica set member\nhas the following options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Replica Set Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. The  Replication Settings  section contains the following\nconfiguration options for the replica set: Setting Description Protocol Version Select the replication protocol version used by the replica set.\nThis setting corresponds to the\n protocolVersion \nreplica set configuration option. For more information, see  Replica Set Protocol Versions . Chaining Allowed Specify  true  to allow  secondary \nmembers to replicate from other secondary members. This setting\ncorresponds to the\n chainingAllowed \nreplica set configuration option. Write Concern Majority Journal Default Determines the behavior of\n {w:\"majority\"} \nwrite concern if the write concern does not explicitly\nspecify the journal option\n j . This setting corresponds to the\n writeConcernMajorityJournalDefault \nreplica set configuration option. Heartbeat Timeout (secs) Specify the number of seconds that the replica set members wait for\na successful heartbeat from each other. This setting corresponds to\nthe  heartbeatTimeoutSecs \nreplica set configuration option. Election Timeout (ms) Specify the time limit in milliseconds for detecting when a replica\nset's  primary  is unreachable. This setting corresponds to\nthe  electionTimeoutMillis \nreplica set configuration option. CatchUp Timeout (ms) Specify the time limit in milliseconds for a newly elected\n primary  to sync, or catch up, with the other replica\nset members that may have more recent writes. This setting\ncorresponds to the\n catchUpTimeoutMillis \nreplica set configuration option. CatchUp Takeover Delay (ms) Specify the time in milliseconds a node waits to initiate a\n catchup takeover  after determining it is ahead of the\ncurrent  primary . This setting corresponds to the\n catchUpTakeoverDelayMillis \nreplica set configuration option. Last Error Defaults Specify the default  write concern  for the replica set. The\nreplica set uses this write concern only when write operations or\n getLastError  specify\nno other write concern. If this option is not set, the default write concern for the\nreplica set only requires confirmation from the  primary . Specify this option in the form of a document, i.e.,  {\"w\":2} . Force Reconfigure Specify that you want to force a reconfiguration of the replica\nset. When set to  Yes , the MongoDB Agent forces the replica set\nto accept a new configuration even if a majority of its members are\nunavailable. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Server Manual. In the  Default Read Concerns/Write Concerns  card, you\nconfigure the default level of acknowledgement requested from MongoDB\nfor read and write operations for this cluster. Setting the default\nread and write concern can help with MongoDB 5.0 and later deployments\nusing arbiters. From the  Default Read Concerns  section, you can set\n consistency and isolation properties for the data\nread  from the cluster. Select the default read concern from the  Level  dropdown\nmenu. You can choose from the following values: From the  Default Write Concerns  section, you configure the\n default level of acknowledgment requested from MongoDB for\nwrite operations  from the cluster. You\ncan set three parameters: local , the MongoDB 5.0 and\nlater default value, available , the\nMongoDB 4.4 default value, or majority . Parameter Value w Option Desired number of  mongod  instances that must acknowledge a\nwrite operation. You can enter one of the\n following values : majority , the MongoDB 5.0 and later default value, or Any positive integer. MongoDB 4.4 defaults to  1 . j Option Flag that indicates whether the write acknowledgement must be\nwritten to the\n on-disk journal . w Timeout Desired time limit for the write concern  expressed in\nmilliseconds. Set this value when you set  w  to a value\ngreater than  1  including  majority . The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: Cloud Manager  lists each process in the cluster grouped logically. Click\nthe grey arrow to the left of the logical grouping to display\nits sub-groupings and processes. You can modify the advanced options\nfor each process individually as necessary. For descriptions of the available  Advanced Configuration\nOptions , see  Advanced Options for MongoDB Deployments . Click  Add Advanced Options . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to every process of the selected process type\nin the cluster. Cloud Manager  automatically deploys the replica set as configured.\nYou can monitor the progress of cluster deployment from the\n Deployment  view.",
            "code": [],
            "preview": "A replica set is a group of MongoDB deployments that maintain\nthe same data set. Replica sets provide redundancy and high\navailability and are the basis for all production deployments.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/getting-started",
            "title": "Start a Free Trial",
            "headings": [
                "Get Started with Cloud Manager",
                "Create a MongoDB Account",
                "Go to https://www.mongodb.com/cloud/cloud-manager.",
                "Click Start your 30 day free trial to start a free trial.",
                "Sign up for a MongoDB account.",
                "Set up Cloud Manager.",
                "Log in With Your MongoDB Account",
                "Go to https://www.mongodb.com/cloud/cloud-manager.",
                "Click Start your 30 day free trial to start a free trial.",
                "Log in to your MongoDB account.",
                "Set up Cloud Manager.",
                "Next Steps"
            ],
            "paragraphs": "Cloud Manager  is a service that lets you create, manage, monitor, and back up\nMongoDB deployments. You can use  Cloud Manager  to create new deployments and\nmanage existing ones. To manage existing deployments you download\n Cloud Manager  agents to your deployment servers. To use  Cloud Manager  you create  a Cloud Manager   project ,\nwhich will provide access to a distinct set of MongoDB processes and\nusers. You can create multiple projects. You can get started with  Cloud Manager  in minutes by going to\n https://www.mongodb.com/cloud/cloud-manager \nand starting a free trial.  Cloud Manager  walks you through registration and the setup of your\nfirst deployment. The choices you make during setup do not limit your\nchoices for the future. Create a MongoDB account or sign in with an existing account to get\nstarted with  Cloud Manager . To sign up with a Google account: To sign up with an email address: Click  Log in with Google . Enter your Gmail or Google Apps email address or the phone number\nassociated with your Google account, then click  Next . Enter the password for your Google account, then click\n Next . Review and select the checkbox to accept the\n Terms of Service  and the  Privacy Policy . Click  Submit . Click  Sign Up . Provide the following information about yourself:\n-  Email Address \n-  First Name  and  Last Name \n-  Password \n-  Phone Number \n-  Company \n-  Job Function \n-  Country Review and select the checkbox to accept the  Privacy\nPolicy  and the  Terms of Service . Click  Sign up  to create the account. Cloud Manager  walks you through registration, creation of your first  Cloud Manager \n project , and setup of your first deployment. If you are an existing  MongoDB Atlas  user, you can use your  MongoDB Atlas \ncredentials to log in to  Cloud Manager . To log in with a Google account: To log in with an email address: Click  Log in with Google . Follow the prompts to log in to your account. Enter your email address, then click  Next . Follow the prompts to log in to your account. To create a Cloud Manager organization, follow the instructions in\n Create an Organization . To create a Cloud Manager project, follow the instructions in\n Create One Project . Connect to your MongoDB deployment  to begin creating databases. Add servers  to your deployment. Deploy additional  replica sets ,\n clusters , or  standalones .",
            "code": [],
            "preview": "Cloud Manager is a service that lets you create, manage, monitor, and back up\nMongoDB deployments. You can use Cloud Manager to create new deployments and\nmanage existing ones. To manage existing deployments you download\nCloud Manager agents to your deployment servers.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/view-all-clusters",
            "title": "View All Clusters",
            "headings": [
                "Access All Clusters View",
                "Cloud Manager Deployment/ MongoDB Atlas Cluster Details"
            ],
            "paragraphs": "The  All Clusters  view displays all  Cloud Manager  deployments/  MongoDB Atlas  clusters  to which\nthe user belongs. Click the  All Clusters  link at the top left corner of\n Cloud Manager  to view all  Cloud Manager  deployments/  MongoDB Atlas  clusters  that  Cloud Manager  manages. To find an  organization , a\n project , or a  Cloud Manager  deployment/  MongoDB Atlas  cluster , you can enter part of its\nname in the search box. Select the options within the dropdown menus to filter the displayed\n Cloud Manager  deployment/  MongoDB Atlas  cluster  list. The dropdown menus and their options include: If no Projects within an Organization match the filter criteria, then\nthat Organization will not appear in the results as well. Menu Options Availability All ( Default ) Nodes Available Some Nodes Available No Primary Has Warnings & Alerts Cloud Manager  deployment/  MongoDB Atlas  cluster   Type All ( Default ) Standalones Replica Sets Sharded Clusters MongoDB  Version All ( Default ) <MongoDB Versions> Inconsistent Configuration  settings All ( Default ) Auth OFF Backup OFF SSL (Secure Sockets Layer)  OFF By default,  Cloud Manager  deployment/  MongoDB Atlas  cluster s without any contact with a Monitoring for the last 6 months are not displayed. To display these\n Cloud Manager  deployments/  MongoDB Atlas  clusters , click  Show Inactive Clusters . The  All Clusters  view displays the  Cloud Manager  deployments/  MongoDB Atlas  clusters  by\n Organization/Projects . The view displays the following information for each  Cloud Manager  deployment/  MongoDB Atlas  cluster : Field Description Name The name of the  Cloud Manager  deployment/  MongoDB Atlas  cluster . Version MongoDB Version of the  Cloud Manager  deployment/  MongoDB Atlas  cluster . Data Size Size of the  Cloud Manager  deployment/  MongoDB Atlas  cluster  data. Nodes Number of nodes in the  Cloud Manager  deployment/  MongoDB Atlas  cluster . Backup Backup enabled status. SSL TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  enabled status. Auth Authentication required status. Alerts Number of open alerts.",
            "code": [],
            "preview": "The All Clusters view displays all Cloud Manager deployments/ MongoDB Atlas clusters to which\nthe user belongs.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/rotate-automation-password",
            "title": "Rotate Automation Password",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the MongoDB Users tab for your deployment.",
                "On the line for the automation user, click Rotate Password.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "We recommend that you rotate the automation user's password\nperiodically.  Cloud Manager  provides an automated procedure for password\nrotation with no downtime. To enable password rotation for the automation user, you must meet the\nfollowing requirement: SCRAM-SHA-1 or SCRAM-SHA-256 set up as a supported authentication\nmechanism for the Automation. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click  MongoDB Users . Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "We recommend that you rotate the automation user's password\nperiodically. Cloud Manager provides an automated procedure for password\nrotation with no downtime.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-alerts-and-events",
            "title": "Manage Alerts",
            "headings": [
                "Overview",
                "View Alerts",
                "Navigate to the Alerts page for your organization.",
                "If it is not already displayed, click the All Alerts tab.",
                "Navigate to the Alerts page for your project.",
                "Click the tab that corresponds to the status of the alerts you want to view.",
                "View All Activity",
                "Navigate to the Activity Feed page for your organization.",
                "Filter the activity feed.",
                "Navigate to the Activity Feed page for your project.",
                "Filter the activity feed.",
                "Retrieve the Activity Feed",
                "Acknowledge an Alert",
                "Navigate to the Alerts page for your organization.",
                "Acknowledge alerts",
                "Select the time period for which to acknowledge the alert.",
                "Optional: If all Alerts were checked, select All Visible or All Open Alerts.",
                "Click Acknowledge to confirm.",
                "Navigate to the Open Alerts tab.",
                "Acknowledge alerts",
                "Select the time period for which to acknowledge the alert.",
                "Optional: If all Alerts were checked, select All Visible or All Open Alerts.",
                "Click Acknowledge to confirm.",
                "Unacknowledge an Alert",
                "Navigate to the Alerts page for your organization.",
                "On the line item for the alert, click Unacknowledge.",
                "Click Confirm.",
                "Navigate to the Open Alerts tab.",
                "On the line item for the alert, click Unacknowledge.",
                "Click Confirm.",
                "Disable Alerts for a Specific Process",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the process, click the ellipsis icon and select Monitoring Settings.",
                "Select Alert Status and then modify the alert settings.",
                "Suspend Alerts by Adding a Maintenance Window",
                "Navigate to the Alert Settings tab.",
                "Click the Maintenance Windows filter.",
                "Add or Edit a Maintenance Window",
                "Navigate to the Alert Settings tab.",
                "Add or edit a maintenance window.",
                "Select the target components for which to suspend alerts.",
                "Select the time period for which to suspend alerts.",
                "Enter an optional description for the maintenance window.",
                "Click Save.",
                "Delete a Maintenance Window",
                "Navigate to the Alert Settings tab.",
                "Click the Maintenance Windows filter.",
                "For the window to delete, click the ellipsis icon and select Delete.",
                "Click Confirm."
            ],
            "paragraphs": "Cloud Manager  issues alerts for the database and server conditions\nconfigured in your  alert settings . When a\ncondition triggers an alert, you receive the alert at regular\nintervals until the alert resolves or  Cloud Manager  cancels it. You should fix\nthe immediate problem, implement a long-term solution, and\n view metrics  to monitor\nyour progress. You can view all alerts, alert settings, and deleted alerts on\nthe  Organization Alerts  page. To learn more, see\n Alerts Workflow . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. You can view open alerts, closed alerts, and alert\nsettings on the  Project Alerts  page.\n MongoDB Atlas  sends notifications for all alerts\nthat appear on the  Open  tab. To learn more,\nsee  Alerts Workflow . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. To view open alerts, click the  Open Alerts  tab if it is\nnot already displayed. To view closed alerts, click the  Closed Alerts  tab. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Activity Feed  in the sidebar. You can filter the organization activity feed by event type and time\nrange. You can combine filtering methods together for greater control\nover the activity feed output. Select the event categories or specific events you want to see from\nthe activity feed. To exclude specific categories or events from the\nactivity feed, click  Select all categories and events ,\nthen deselect the categories and events you want to exclude. You can filter events based on the following categories: Category Description Access Events related to  Cloud Manager  users. Alerts Events related to alert configuration and monitoring. Billing Events related to payments and payment methods. Others Miscellaneous events, including log retrieval and\nmLab events. Organization Events related to your  Cloud Manager  organization. Projects Events related to  Cloud Manager  projects. Select a  Start Date  and  End Date  to\nview events from within a specified time range. Once you have\nconfigured a time range, click  Apply Dates  to\nupdate the activity feed with the specified range. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the  Project Activity Feed  icon in the navigation\nbar, or click  Activity Feed  in the sidebar. You can filter the project activity feed by event type, cluster, and\ntime range. You can combine filtering methods together for greater\ncontrol over the activity feed output. Select the event categories or specific events you want to see from\nthe activity feed. To exclude specific categories or events from the\nactivity feed, click  Select all categories and events ,\nthen deselect the categories and events you want to exclude. You can filter events based on the following categories: Category Description Access Events related to  Cloud Manager  users. Alerts Events related to alert configuration and monitoring. Billing Events related to payments and payment methods. Others Miscellaneous events, including log retrieval and\nmLab events. Organization Events related to your  Cloud Manager  organization. Projects Events related to  Cloud Manager  projects. Select a  Start Date  and  End Date  to\nview events from within a specified time range. Once you have\nconfigured a time range, click  Apply Dates  to\nupdate the activity feed with the specified range. You can retrieve events for a specified organization or project using\nthe  Events   API (Application Programming Interface)  resource. When you acknowledge the alert,  Cloud Manager  sends no further notifications to\nthe alert's distribution list until the acknowledgment period has\npassed or until you resolve the alert. The distribution list\nreceives  no  notification of the acknowledgment. If the alert condition ends during the acknowledgment period,  Cloud Manager \nsends a notification of the resolution. If you configure an alert with PagerDuty, a third-party incident\nmanagement service, you can only acknowledge the alert on your\nPagerDuty dashboard. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. To acknowledge a single alert, on the line item for the alert, click\n Acknowledge . To acknowledge multiple, but not all, alerts: To acknowledge all alerts: Check the checkbox to the left of each alert to acknowledge. Click  Mark Acknowledge  above the table. Select the checkbox in the table header to select every alert. Click  Mark Acknowledge  above the table. Click the time frame for which you no longer wish to receive alerts. Cloud Manager  sends no further alert messages for the period of time you\nselect. If all alerts are checked, then another set of radio buttons appear: Click  Acknowledge all visible checked alerts  to\nacknowledge all alerts that were loaded onto the page. Click  Acknowledge all open alerts  to acknowledge all\nalerts: checked, unchecked, visible and not visible on the current\npage. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. If it is not already displayed, click the  Open Alerts \ntab. To acknowledge a single alert, on the line item for the alert, click\n Acknowledge . To acknowledge multiple, but not all, alerts: To acknowledge all alerts: Check the checkbox to the left of each alert to acknowledge. Click  Mark Acknowledge  above the table. Select the checkbox in the table header to select every alert. Click  Mark Acknowledge  above the table. Click the time frame for which you no longer wish to receive alerts. Cloud Manager  sends no further alert messages for the period of time you\nselect. If all alerts are checked, then another set of radio buttons appear: Click  Acknowledge all visible checked alerts  to\nacknowledge all alerts that were loaded onto the page. Click  Acknowledge all open alerts  to acknowledge all\nalerts: checked, unchecked, visible and not visible on the current\npage. You can undo an acknowledgment and again receive notifications if the\nalert condition still applies. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. If the alert condition continues to exist,  Cloud Manager  resends the alerts. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. If it is not already displayed, click the  Open Alerts \ntab. If the alert condition continues to exist,  Cloud Manager  resends the alerts. You can turn off alerts for a given process. This might be useful, for\nexample, if you want to temporarily disable the process but do not want\nit hidden from monitoring. Use the following procedure both to turn\nalerts off or on. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Specify maintenance windows to temporarily turn off alert notifications\nfor a given resource while you perform maintenance. To view maintenance windows: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab. To add a maintenance window:  Click the  Add  button and\nselect  New Maintenance Window . To edit a maintenance window:  Click the  Maintenance\nWindows  filter, then click the  ellipsis icon  for a\nmainenance window and select  Edit . Note that selecting the  Host  target selects both  HOST \nand  HOST_METRIC  alert configurations returned through the\n alertConfigs endpoint . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab.",
            "code": [],
            "preview": "Cloud Manager issues alerts for the database and server conditions\nconfigured in your alert settings. When a\ncondition triggers an alert, you receive the alert at regular\nintervals until the alert resolves or Cloud Manager cancels it. You should fix\nthe immediate problem, implement a long-term solution, and\nview metrics to monitor\nyour progress.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/convert-replica-set-to-sharded-cluster",
            "title": "Convert a Replica Set to a Sharded Cluster",
            "headings": [
                "Navigate to the Clusters view for your deployment.",
                "Convert your desired replica set.",
                "Provide Details for your New Sharded Cluster.",
                "Click Convert.",
                "Modify your Application to Connect to the mongos Processes Instead of the Replica Set.",
                "Change any Cluster-Wide Settings."
            ],
            "paragraphs": "Cloud Manager  provides the ability to convert a  replica set  to\na  sharded cluster . After you convert a replica set to a sharded cluster, you can enable\nsharding for a database and shard collections. To learn how to shard collections, see  Shard a Collection . If you need to add additional shards to support greater capacity, click\non the wrench menu for the sharded cluster to create additional shards. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. From the   menu on the desired  replica set ,\nclick  Convert to Sharded Cluster . Configure the following settings in the\n Provide details for your new sharded cluster \nmodal: Name your  sharded cluster  components: Field Action Cluster Name Type the name of your new cluster. CSRS Name  (MongoDB 3.2 or later) Type the name of the\n CSRS (Config Server Replica Set) . You cannot change these values after you click\n Convert . Set the following values for each  ~bin.mongod  process\nin your  Config Servers . All fields are required. You must deploy at least one configuration server. Field Action Host Name From the menu, select an existing hostname or type a\nhostname in the search box above the list to find a host. If you need to add a new host: Click the  New Server  link. Click  Next . Follow the instructions to install a new\nAutomation on that new host. Click  Verify Agent . Port Type the  IANA (Internet Assigned Numbers Authority)  port number. Data Directory Type the absolute directory path to the database files for\neach  ~bin.mongod . The example path is  /data . The  ~bin.mongod \nmust have exclusive use of these paths on the specified\nhost. The  Cloud Manager  Automation must have file system\npermission to read, write, and execute all files and\nfolders in this directory. Log File Type the absolute file path for the log file for each\n ~bin.mongod . The example path is  /data/mongodb.log . The  ~bin.mongod  must have exclusive use of these\npaths on the specified host. The  Cloud Manager  Automation\nmust have file system permission to read, write, and\nexecute all files and folders in this directory. To add a new configuration server, click\n Add a Config Server . To remove a config server, click   to the right\nof the config server you want to remove. Set the following values for each  MongoS  process in\nyour  sharded cluster . All fields are required. You must deploy at least one  mongos . Field Action Host Name From the menu, select an existing hostname or type a\nhostname in the search box above the list to find a host. If you need to add a new host: Click the  New Server  link. Click  Next . Follow the instructions to install a new\nAutomation on that new host. Click  Verify Agent . Port Type the  IANA (Internet Assigned Numbers Authority)  port number. Log File Type the abolute file path for the log of each\n mongos  process. The example path is  /data/mongodb.log . The  mongos  must have exclusive use of these\npaths on the specified host. The  Cloud Manager  Automation\nmust have file system permission to read, write, and\nexecute all files and folders in this directory. To add a new  mongos , click\n Add a MongoS . To remove a  mongos , click  \nto the right of the  mongos  you want to remove. From the  Cloud Manager  UI, click the   icon, then\nclick  Connect to this instance . The\n Connect to your Deployment  dialog provides the hostname\nand port of a  mongos  in the cluster. For complete documentation on connecting to an  Cloud Manager  deployment,\nsee  Connect to a MongoDB Process If you want to make any further changes to the\n sharded cluster , see the  Sharded Cluster  tab on\nthe  Edit a Deployment's Configuration  page. The converted shard (original replica set) has: After converting, you should\n enable Backup  for the entire\nsharded cluster. On databases running MongoDB\n FCV \n4.0 or earlier, activating Backup causes  Cloud Manager  to start an initial\nsync on the config servers and the converted shard. Restores to the\nentire sharded cluster should use snapshots taken after conversion\nonly. Backup enabled Previous snapshots retained Ability to restore snapshots to this shard only",
            "code": [],
            "preview": "Cloud Manager provides the ability to convert a replica set to\na sharded cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-organizations",
            "title": "Organizations",
            "headings": [
                "Create an Organization",
                "View all of your organizations.",
                "Click New Organization.",
                "Name your organization.",
                "Add members to your organization.",
                "Specify the access you want to grant the organization members.",
                "(Optional) Disable the IP access list requirement for the Cloud Manager Administration API.",
                "Click the Create Organization button create the organization.",
                "Leave an Organization",
                "View all of your organizations.",
                "Leave the organization.",
                "Click Leave Organization to confirm.",
                "Delete an Organization",
                "Navigate to the Settings page for your organization.",
                "Delete the organization."
            ],
            "paragraphs": "An organization can contain multiple projects. Under this hierarchy structure, you can: Use the same billing settings across all projects in your\norganization. Use the same alert settings across all projects in your organization. View all projects within an organization. Bulk assign users to projects with teams. Once you create the organization, you can add projects, users, and\nset the billing information for all projects within the organization. When you create an organization, you are added as an\n Organization Owner  for the organization. Expand the  Organizations  menu in the navigation bar. Click  View All Organizations . You have the option of adding a new  Cloud Manager  organization or a new\n MongoDB Atlas  organization. To learn more about  MongoDB Atlas , see\n MongoDB Cloud Services . Provide a name for your  Organization . Select  Cloud Manager . For existing  Cloud Manager  users, enter their username. Usually, this is\nthe email the person used to register. For new  Cloud Manager  users, enter their email address to send an\ninvitation. When you create a new organization,  Cloud Manager  requires IP access\nlists for the Cloud Manager Administration API by default. If you require an IP\naccess list, your Cloud Manager Administration API keys can make API requests\nonly from the location-based IP or  CIDR (Classless Inter-Domain Routing)  addresses that you specify\nin the IP access list. To disable the IP access list requirement and allow your\nCloud Manager Administration API keys to make requests from any address on the internet, toggle\n Require IP Access List for the Cloud Manager Administration API \nto  OFF . To learn more, see  (Optional) Require an API Access List for Your Organization . You can't leave an organization if you are the last  Organization Owner  for that organization. Expand the  Organizations  menu in the navigation bar. Click  View All Organizations . For the organization you wish to leave, click its  Leave \nbutton to open the  Leave Organization  modal. To delete an organization, you must have\n Organization Owner  role for the organization. You cannot delete an organization that has active projects. You must\ndelete the organization's projects before you can delete the\norganization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. If it is not already displayed, click the\n General Settings  tab. Click  Delete . This displays the  Delete Organization  dialog. Click  Delete Organization  to confirm",
            "code": [],
            "preview": "An organization can contain multiple projects. Under this hierarchy structure, you can:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-ssl-for-a-deployment",
            "title": "Enable TLS for a Deployment",
            "headings": [
                "Considerations",
                "Topics Not in Scope",
                "Prerequisite",
                "Get and Install the TLS Certificate on Each MongoDB Host",
                "Procedures",
                "Set Existing Deployments to Use TLS (Transport Layer Security)",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the process, click Modify.",
                "Expand the Advanced Configuration Options section.",
                "Set the TLS (Transport Layer Security)/SSL (Secure Sockets Layer) startup options.",
                "Enable TLS (Transport Layer Security) for the Project",
                "Navigate to the Security Settings dialog for your deployment.",
                "Choose your Authentication Mechanisms.",
                "Specify the TLS (Transport Layer Security) Settings.",
                "Configure the MongoDB Agents.",
                "Click Save to set your changes.",
                "Click Review & Deploy to review your changes.",
                "Enable SSL for Monitored Deployment."
            ],
            "paragraphs": "For  Cloud Manager  to monitor, deploy, or back up a MongoDB deployment that uses\n TLS (Transport Layer Security) , you must enable  TLS (Transport Layer Security)  for the  Cloud Manager  project. A full description of\n Transport Layer Security ,\n public key infrastructure ,\n X.509  certificates, and\n Certificate Authorities \nexceeds the scope of this tutorial. This tutorial assumes prior\nknowledge of  TLS (Transport Layer Security)  and access to valid X.509 certificates. If you want to\n reset Authentication and TLS settings \nfor your project, first\n unmanage any MongoDB deployments \nthat  Cloud Manager  manages in your project. Acquire a  TLS (Transport Layer Security)  certificate for each host serving a MongoDB process.\nThis certificate must include the  FQDN (fully qualified domain name)  for the hostname of this\nMongoDB host. The  FQDN (fully qualified domain name)  must be the Subject Alternative Name of this\nhost. You must install this  TLS (Transport Layer Security)  certificate on the MongoDB host. You must complete: before you click  Review & Deploy . Set Existing Deployments to Use TLS ,\nthen Enable TLS for the Project If you wish to enable  TLS (Transport Layer Security)  for existing MongoDB deployments in your\n Cloud Manager  project: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click  Add Option  to add each of the following options: Option Required Value tlsMode Required Select  requireTLS . tlsCertificateKeyFile Required Provide the absolute path to the server certificate. tlsCertificateKeyFilePassword Required Provide the PEM key file password if you encrypted it. The encrypted private key for the  .pem  certificate file\nmust be in  PKCS #8 \n PBES2  format. tlsFIPSMode Optional Select  true  if you want to\n enable FIPS mode . After adding each option, click  Add . When you have added the required options, click  Save . You can click the   to remove any settings\nthat you have added. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . On the  Select Authentication Mechanisms  screen,\n enable one or more Authentication Mechanisms . TLS (Transport Layer Security)  works with all authentication mechanisms. Click  Next . Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. In the  Agent Auth Mechanism  list, click the same\nauthentication mechanisms that you did for the project. Follow the procedure to configure the MongoDB Agent to use that\nauthentication method: SCRAM-SHA X.509 Certificates LDAP Kerberos If you had  TLS (Transport Layer Security)  certificates for Legacy Agents, see\n What if I had TLS certificates for Legacy Backup or Monitoring\nAgents?  at the end of this procedure for guidance. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes. If you updated to the MongoDB Agent from deployments that used\nAutomation, the MongoDB Agent manages the  TLS (Transport Layer Security)  settings. If you updated to the MongoDB Agent from deployments that did not\nuse Automation but you had Backup Agents, Monitoring Agents, or\nboth, you  can  set your  Backup Agent and Monitoring\nAgent-specific  settings during the Agent update or through the\nfollowing procedure: Navigate to  Deployment   \n Agents   \n Downloads & Settings   \n Custom Configurations   \n Edit Custom Configuration . Click  . Under the  Backup Configurations  section: Type the desired\n setting \nin the  Setting  box and its corresponding value\nin the  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired\n setting \nin the  Setting  box and the corresponding value\nin the  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. If you are using Cloud Manager's monitoring only\nfeature with a TLS-enabled cluster, you must complete the following steps\nto allow the MongoDB monitoring agent to connect to the TLS-enabled\nmonitored cluster. Navigate to the Deployment list view, and click on the  \nto the right of your targeted deployment. Select Monitoring Settings > TLS & SSL. Toggle the modal to the ON state.",
            "code": [],
            "preview": "For Cloud Manager to monitor, deploy, or back up a MongoDB deployment that uses\nTLS (Transport Layer Security), you must enable TLS (Transport Layer Security) for the Cloud Manager project.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/add-servers-automation",
            "title": "Provision Servers for Automation",
            "headings": [
                "Overview",
                "Procedure",
                "Next Steps"
            ],
            "paragraphs": "Cloud Manager  can automate operations for the MongoDB processes running on your\nhosts.  Cloud Manager  can both discover existing processes and deploy new ones. Cloud Manager  Automation relies on an Automation Agent, which must be installed on\nevery server that runs a monitored MongoDB deployment. The Automation\nAgents periodically poll  Cloud Manager  to determine the goal configuration, deploy\nchanges as needed, and report deployment status back to  Cloud Manager . Install the MongoDB Agent on each host that you want  Cloud Manager  to manage.\nThe following procedure applies to all operating systems. Instructions for a specific operating system can be read on\n Install MongoDB Agent . On Linux hosts, if you installed MongoDB with a package manager, use\nthe same package manager to install the MongoDB Agent. If you installed\nMongoDB without a package manager, use an archive to install the\nMongoDB Agent. Once you have installed the MongoDB Agent to all your hosts, you can\ndeploy your first  replica set ,\n cluster , or  standalone .",
            "code": [],
            "preview": "Cloud Manager can automate operations for the MongoDB processes running on your\nhosts. Cloud Manager can both discover existing processes and deploy new ones.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/deploy-bi-connector",
            "title": "Deploy a BI Connector",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Processes tab for your deployment.",
                "Choose New BI Connector.",
                "Configure the BI Connector instance.",
                "Set any Additional settings for the BI Connector instance.",
                "TLS (Optional)",
                "Logs (Required)",
                "Schema (Optional)",
                "Click Create.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "The MongoDB Connector for Business Intelligence allows you to query a\nMongoDB database using SQL commands to aid in data analysis. It\ntranslates SQL queries from data analysis tools to MongoDB aggregation\npipelines on MongoDB database. Use the following procedure to deploy a new MongoDB  BI Connector \nfor  Cloud Manager  to manage. The  BI Connector  only allows\n read-only operations \non data served in MongoDB databases. To create, update, or delete\ndata you must use  mongosh  or any appropriate driver. For specifics on the  BI Connector , see the\n BI Connector manual . MongoDB  BI Connector  for  Cloud Manager  is not compatible with  x.509\nauthentication . BI Connector  deployment is only available to users of  Cloud Manager  Premium.\nSee  Cloud Manager Features and Pricing  for information about\nupgrading to  Cloud Manager  Premium. To deploy MongoDB clusters, you must\n provision hosts  to serve those\nclusters.  Cloud Manager  requires access to these hosts. If you run  MongoDB Enterprise \nand provision your own Linux hosts, then you must manually install a\nset of dependencies to each server  before installing MongoDB .\nThe MongoDB manual provides the appropriate command to install the\ndependencies. To learn more about the specifics for an operating system, see the\nfollowing: Red Hat Ubuntu Debian SUSE Amazon AMI The BI connector cannot be deployed using  Cloud Manager \nif the automation agent authentication mechanism is\nKerberos ( GSSAPI ) authentication. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. Click the  Add New  dropdown menu. Click  New BI Connector . In the  New BI Connector  modal, configure the following\nsettings: Choose Server Select the host where this new BI Connector is installed. Deployment Item Select the deployment item (standalone,  replica set ,\nor  sharded cluster ) to which this new BI connector\nconnects. Port to Listen On Type the  IANA (Internet Assigned Numbers Authority)  port number you want to use when connecting\nto this new BI Connector. The recommended port number is\n 3306 . Read Preference Select how the BI connector routes read operations to the\nmembers of a  replica set . Available values include: Primary Primary Preferred Secondary Only Secondary Preferred Nearest Included Namespace(s)   (Optional) Type the name of a database and/or collection to limit what\ndata the BI Connector can access. Leave this box blank to allow the BI Connector to use all\nnamespaces on the host. Click the  + add another namespace  link to add\nanother namespace to your list of included namespaces. If you need to use  TLS (Transport Layer Security)  to connect with the Deployment Item,\nconfigure these settings: TLs Mode Select  Disabled ,  Allow TLS , or\n Require TLS . TLS PEM Key File Path Type the path on the MongoDB host where the TLS PEM key\nfile is stored. TLS PEM Key Password   (Optional) If you encrypted the PEM file, type its password. Minimum TLS Version Select the minimum  TLS (Transport Layer Security)  version to connect to the\n BI Connector . Default value is  TLS1_0 . Accepted values\nare  TLS1_0 ,  TLS1_1 , and  TLS1_2 . MongoDB Minimum TLS Version Select the minimum  TLS (Transport Layer Security)  version to connect to MongoDB.\nDefault value is  TLS1_0 . Accepted values are\n TLS1_0 ,  TLS1_1 , and  TLS1_2 . Linux Log File Path (Conditional: BI Connector is installed on a Linux\nplatform)  Type the path to the BI Connector log on that\nhost. Windows Log File Path (Conditional: BI Connector is installed on a Windows\nplatform)  Type the path to the BI Connector log\non that host. Log Verbosity Select logging level for the BI Connector. Accepted\nvalues are  Lowest ,  Medium ,  Highest . These values correspond to\n log verbosity levels \nof  0 ,  1 , and  2 , respectively. Log Rotation Toggle to  ON  to enable. Default is  OFF . If toggled to  ON , the logs are rotated when the\n Size Threshold  or  Time Threshold \nis met. The next four settings require  Log Rotation \nto be set to  ON . Size Threshold (MB) (Conditional:   Log Rotation   =   ON   ) \nType the size the log file must reach in\n MB (Megabytes)  before the BI Connector rotates it\nautomatically. The default value is\n 1000.0  (about 1  GB (Gigabyte) ). Time Threshold (Hours) (Conditional:   Log Rotation   =   ON   ) \nType the duration the log file must cover in hours before\nthe BI Connector rotates it automatically. The default\nvalue is  24  hours. Max Uncompressed Files (Conditional:   Log Rotation   =   ON   ) \nType how many rotated log files may stay uncompressed in\nthe log directory before they are archived and compressed.\n(The suggested number is  2 .) Max Percent of Disk (Conditional:   Log Rotation   =   ON   ) \nType the percentage of disk space on the host the log\nfiles may consume before older files are deleted. (The\nsuggested number is  5 .) Max Length for varChar Fields Type the maximum number of characters that can exist in a\n VARCHAR  field. Refresh Interval (Seconds) Type how much time must elapse in seconds before the  BI Connector  refreshes the schema. Sample Size (# of Documents in Collection) Type how many MongoDB documents are included in each sample the schema examines. To learn more on how the  BI Connector  performs sampling,\nsee  Cached Sampling . Allow Schema Alterations from SQL Client Toggle if the user can alter the schema using an\n SQL client . Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "The MongoDB Connector for Business Intelligence allows you to query a\nMongoDB database using SQL commands to aid in data analysis. It\ntranslates SQL queries from data analysis tools to MongoDB aggregation\npipelines on MongoDB database.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/mms-integrate-with-microsoft-teams",
            "title": "Integrate with Microsoft Teams",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Create the Microsoft Teams incoming webhook.",
                "Navigate to the Alerts page for your organization.",
                "Choose whether to create a new alert setting or clone an existing one.",
                "Choose the Target.",
                "Choose the Condition.",
                "Configure the Microsoft Teams integration.",
                "Create the Microsoft Teams incoming webhook.",
                "Navigate to the Integrations page for your project.",
                "Configure the Microsoft Teams integration.",
                "Navigate to the Alerts page for your project.",
                "Choose whether to create a new alert setting or clone an existing one.",
                "Select the condition that triggers the alert.",
                "Apply the alert only to specific targets. (Optional)",
                "Select the alert recipients and delivery methods.",
                "Click Save."
            ],
            "paragraphs": "You can integrate  Cloud Manager  with\n Microsoft Teams \nto receive alerts in your Microsoft Teams channel. To integrate  Cloud Manager  with Microsoft Teams and receive alerts in your Microsoft Teams channel,\nyou must have a\n Microsoft Teams account . To integrate  Cloud Manager  with Microsoft Teams and receive alerts in your Microsoft Teams channel: To manage all organization alerts, you must have the\n Organization Owner  role for the organization. The  Organization Billing Admin  role grants a\nlimited authorization to manage billing alerts. Navigate to the Microsoft Teams channel where you want to add the webhook. Select   from the top navigation bar. A dropdown menu of available options displays. Select  Connectors  from the dropdown menu. A modal with available connectors displays. Search for  Incoming Webhook  and select  Add . A modal with information about the  Incoming Webhook  connector displays. Click  Add . The modal closes. Select   from the top navigation bar. A dropdown menu of available options displays. Select  Connectors  from the dropdown menu. The modal with available connectors displays. Search for  Incoming Webhook  and select  Configure . A configuration modal displays. In the modal, enter a name for your webhook. Optionally, you can upload a unique image to help you identify your webhook. Click  Create . Copy the incoming webhook URL. Cloud Manager  requires this URL to configure the integration. Click  Done . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. To create a new alert: To clone an existing alert setting: Click  Add Alert . Click the  Alert Settings  tab. Locate the alert setting you want to clone. Click   then  Clone  in that alert\nsetting's row. Click one of the options under  Select a Target . Under the  Add Notification Method  heading, click the\nbutton for  Microsoft Teams . Enter the incoming webhook URL in the provided text box. To test the integration, click  Post Test Alert . Under  Recurrence , set the recurrence conditions\nin the provided text boxes. Click  Add . To manage project alerts, you must have the\n Project Owner  role for the project. Navigate to the Microsoft Teams channel where you want to add the webhook. Select   from the top navigation bar. A dropdown menu of available options displays. Select  Connectors  from the dropdown menu. A modal with available connectors displays. Search for  Incoming Webhook  and select  Add . A modal with information about the  Incoming Webhook  connector displays. Click  Add . The modal closes. Select   from the top navigation bar. A dropdown menu of available options displays. Select  Connectors  from the dropdown menu. The modal with available connectors displays. Search for  Incoming Webhook  and select  Configure . A configuration modal displays. In the modal, enter a name for your webhook. Optionally, you can upload a unique image to help you identify your webhook. Click  Create . Copy the incoming webhook URL. Cloud Manager  requires this URL to configure the integration. Click  Done . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Integrations . Search for  Microsoft Teams  and click  Configure . A configuration modal displays. Enter the incoming webhook URL in the provided text box. To test the integration, click  Test Integration . Click  Activate . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. To create a new alert without cloning an existing setting: To clone an existing alert setting: Click  Add . Select  New Alert . Click the  Alert Settings  tab. Locate the alert setting you want to clone. Click   then  Clone  in that alert\nsetting's row. In the  Alert if  section, select the target component and\nthe condition. If the options in the  For  section are available, you can\noptionally filter the alert to apply only to a subset of the targets. The  matches  field can use regular expressions. In the  Send to  section: (Optional) To help reduce the false positives that  Cloud Manager \nsends, in the  send if condition lasts\nat least  field, specify the minutes to elapse before the\ncondition sends the alert. The next alert check that runs after\nthe specified time elapses sends the alert. (Optional) In the  resend after  field, specify the\nminutes to elapse before the condition resends the alert. Click  Add  and select  Microsoft Teams .",
            "code": [],
            "preview": "You can integrate Cloud Manager with\nMicrosoft Teams\nto receive alerts in your Microsoft Teams channel.",
            "tags": "microsoft teams, add microsoft teams, integrate with microsoft teams",
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/view-diagnostics",
            "title": "View Deployment Metrics",
            "headings": [
                "View Metrics",
                "Important Metrics"
            ],
            "paragraphs": "Cloud Manager  collects and displays metrics for your servers, databases,\nand MongoDB processes in your deployments. All hardware metrics\ninclude metrics or individual charts for maximum values. Cloud Manager  can only collect hardware metrics if you have enabled an\nautomation agent. A monitoring agent can only collect database\nmetrics. Monitor deployment metrics to identify performance issues and\ndetermine whether your current deployment meets your\nrequirements. To learn more about the metrics available to monitor\nyour deployments, see  Review Available Metrics . You can view metrics in the following ways: View the metrics for a specific replica set in a\n project . View the metrics for a specific sharded cluster in a\n project . View the metrics for a specific MongoDB process in an\n Cloud Manager  cluster. View real-time performance metrics for a specific  Cloud Manager \ndeployment in a  project . You can monitor the following metrics to quickly gauge the health of\nyour deployment. Chart Description Connections Number that indicates the total active connections to the\ndeployment. Monitor connections to determine whether the current connection\nlimits are sufficient. To learn more, see  Fix Lost Primary . Disk IOPS Number that indicates the input operations per second. Monitor whether disk IOPS approaches the maximum provisioned\nIOPS. Determine whether the cluster can handle future workloads. To learn more, see  Fix IOPS Issues  and\n Fix Lost Primary . Query Targeting Number that indicates the efficiency of read operations run on\nMongoDB. Monitor query targeting metrics to identify inefficent queries. To learn more, see  Fix Query Issues . Normalized System CPU Number that indicates CPU usage of all processes on the node,\nscaled to a range of 0-100% by dividing by the number of CPU\ncores. Monitor CPU usage to determine whether data is retrieved from\ndisk instead of memory. To learn more, see  Fix IOPS Issues ,\n Fix Lost Primary , and  Fix CPU Usage\nIssues .",
            "code": [],
            "preview": "Cloud Manager collects and displays metrics for your servers, databases,\nand MongoDB processes in your deployments. All hardware metrics\ninclude metrics or individual charts for maximum values.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/restore-deployment-to-atlas",
            "title": "Restore a Deployment to MongoDB Atlas",
            "headings": [
                "Prerequisites",
                "Considerations",
                "Procedure",
                "Click Continuous Backup, then the Overview tab.",
                "Click the ellipses icon to the right of the source deployment and select Restore.",
                "Select the restore point.",
                "Click Choose Cluster to Restore to.",
                "In the Project list, choose the Atlas project that contains the Atlas deployment.",
                "In the Choose to Restore to list, choose the Atlas deployment to which you want to restore.",
                "Click Restore.",
                "Click Confirm & Continue."
            ],
            "paragraphs": "You can automatically restore a backup for a  Cloud Manager  deployment to a  MongoDB Atlas \ndeployment.  Atlas  is a fully-managed cloud database that handles the\ncomplexities of deploying, managing, and healing deployments running on\nthe AWS, Azure, and Google cloud providers. See  Prerequisites  for a list\nof prerequisites required for all automatic restores to  Atlas  deployments.\nIn addition, you must have the following roles to perform this procedure: If you have not yet created a destination  Atlas  cluster, see\n Create a Cluster . Project Backup Admin  on the source  Cloud Manager  deployment Project Owner  on the target  Atlas  deployment Your  Atlas  deployment must use M10 or larger instance nodes. Shared Cluster\nTier deployments do not support restoring snapshots from  Cloud Manager  clusters. You cannot restore a  Cloud Manager  backup snapshot to an  Atlas  deployment\nwith  Encryption at Rest \nenabled. Before you restore a snapshot from a  Cloud Manager  deployment to an\n Atlas  deployment, ensure that the hosts for your  Atlas \ndeployment have sufficient storage space for the restored databases, plus\nadditional space for dataset growth. Use  db.stats() \nto find the current database size. The MongoDB server version must be one of the following: In addition, the instance types of the nodes in the  Atlas  deployment\nshould have at least as much memory and throughput capacity as the nodes in the\n Cloud Manager  deployment. The same on both deployments. One version higher on the  Atlas  deployment. For more information about  Atlas , see  MongoDB Atlas . Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . To find the latest Oplog entry, run the following query\nin  mongosh : A successful result should look like this: The parts of the  ts  value correspond to the values\nyou need for the  Timestamp  and\n Increment  boxes. To translate the epoch time into a human-readable\ntimestamp, try using a tool like\n Epoch Converter MongoDB does not endorse this service. Its reference\nis intended only as informational. Verify your  Cloud Manager  password.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB('local').oplog.rs.find().sort({$natural:-1}).limit(1).pretty()"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"ts\": Timestamp(1537559320, 1),\n  \"h\": NumberLong(\"-2447431566377702740\"),\n  \"v\": 2,\n  \"op\": \"n\",\n  \"ns\": \"\",\n  \"wall\": ISODate(\"2018-09-21T19:48:40.708Z\"),\n  \"o\": {\n    \"msg\": \"initiating set\"\n  }\n}"
                }
            ],
            "preview": "You can automatically restore a backup for a Cloud Manager deployment to a MongoDB Atlas\ndeployment. Atlas is a fully-managed cloud database that handles the\ncomplexities of deploying, managing, and healing deployments running on\nthe AWS, Azure, and Google cloud providers.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/edit-your-user-account",
            "title": "Edit Personal Settings",
            "headings": [
                "Edit Your User Account",
                "Change Your Cloud Manager Email Address",
                "Click your account's name in the Cloud Manager top menu.",
                "Click Manage your MongoDB Account.",
                "Click Profile Info in the navigation bar.",
                "Change your email address.",
                "Confirm your new email account.",
                "Log in to Cloud Manager.",
                "Edit Your Personal Preferences",
                "Configure Cloud Manager Administration API Access",
                "View/Edit Organization Membership"
            ],
            "paragraphs": "To access personal settings, click your name in the upper-right\nhand corner and select  Manage your MongoDB Account . To access your profile and contact settings, click on your name in\nthe upper-right hand corner and select  MongoDB Account .\nClick  Personal Info  from the left navigation menu. The following sites also use your user name, email address, and password: Changing your password in  Cloud Manager  also changes the password you\nneed to log into these services. jira.mongodb.org MongoDB Support MongoDB University First Name and Last Name Your first and last name. You cannot change your name. Company The name of your company. Position Your position in your company. Country The country  Cloud Manager  associates with your account. Email Address The email address  Cloud Manager  associates with your account. Phone Number The number to use to receive SMS alerts, including two-factor\nauthentication codes. You can change the email address that you use to log in to your\nMongoDB  Cloud Manager  account. To change your email address: If your login information is managed by an identity provider with\n Federated Authentication ,\ncontact your company's administrator instead. Click  Change Email Address  under your current email\naddress. Enter your password. If you have  multi-factor authentication  enabled, authenticate with\nyour  MFA (Multi-Factor Authentication)  method. Enter a new email address. You can't use an email address associated with another account\nor with a deleted account. Click  Save Changes . After you save your changes, a banner at the top of the page\nasks you to verify your email. If you want to cancel your\nchange and continue using your original email address, click\n Cancel Request  on the banner. A verification email is sent to your new email address once you save\nyour changes. In that email, click  Verify Email  to\nupdate your email address.\nThe project activity feed records your update. Use your updated email address to log in to  Cloud Manager . To access your preference settings, click on  Preferences \nat the top of the page. Click  Personalization  in the\nleft navigation pane. The available fields to edit depend on your\n role . My Time Zone Select your time zone. My Date Format Select your preferred date format. Receive Health Score Update Select whether to receive a weekly email on the health of each  Cloud Manager \nproject to which you belong. You will receive one email per project per week. To access your preference settings, click on  Preferences \nat the top of the page. To view your organization, click on  Preferences  at the\ntop of the page and click  Organizations  in the left\nnavigation pane. The page displays the  Cloud Manager  organizations to which you belong. To add a new organization, click  New Organization . To\nlearn more, see  Create an Organization . To leave an organization, click the  Leave  button for that\norganization.",
            "code": [],
            "preview": "To access personal settings, click your name in the upper-right\nhand corner and select Manage your MongoDB Account.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/delete-user-account",
            "title": "Delete an Account",
            "headings": [
                "Leave or Delete All Projects",
                "Leave a Project",
                "Navigate to your Projects view.",
                "For the project you want to leave, click the .",
                "Click Leave Project.",
                "Delete a Project",
                "View all of your projects.",
                "For the project you want to delete, click .",
                "Click Delete Project.",
                "If two-factor authentication is enabled, enter the verification code.",
                "Navigate to the Settings page for your project.",
                "In the Delete Project section, click Delete.",
                "Click Delete Project to confirm.",
                "If two-factor authentication is enabled, enter the verification code.",
                "Leave or Delete All Organizations",
                "Leave an Organization",
                "View all of your organizations.",
                "Leave the organization.",
                "Click Leave Organization to confirm.",
                "Delete an Organization",
                "Navigate to the Settings page for your organization.",
                "Delete the organization.",
                "Delete your Cloud Manager Account",
                "Navigate to your Login Info.",
                "Click Delete Account.",
                "Confirm that you want to delete your account.",
                "Verify your identity."
            ],
            "paragraphs": "To delete your  Cloud Manager  account, you must ensure that you aren't\nassociated with any projects or organizations. This document walks you through deleting your  Cloud Manager  account. If you log in to  Cloud Manager  through an identity provider, you can't\ndelete your account yourself. Contact your identity provider\nto delete your  Cloud Manager  account. To leave a project: If you are an  Project Owner , you must promote\nanother member to  Project Owner  before you can\nleave a project. Select the organization that contains your desired project from the\n Organizations  menu in the navigation bar. The  Projects  view displays. If it\ndoes not, click  Projects  in the left navigation panel. You are removed from the project. You can delete a project for an organization either from the\norganization's  Projects  view or the project's\n Project Setting  view: To delete a project for an organization, you must either have the\n Owner  role for the project or have the  Organization Owner \nrole for the project's organization. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. Click the  Leaf  icon in the upper left corner of the\npage. You can also expand the  Projects  menu in the\nnavigation bar, then click  View All Projects . After verifying, click  Delete Project  again. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Project Settings . After verifying, click  Delete Project  again. If you are the only  Organization Owner  in an\norganization, you must promote another member to\n Organization Owner  before you can\nleave an organization. Expand the  Organizations  menu in the navigation bar. Click  View All Organizations . For the organization you wish to leave, click its  Leave \nbutton to open the  Leave Organization  modal. To delete an organization, you must have the\n Organization Owner  role for the organization. You cannot delete an organization that has active projects. You must\ndelete the organization's projects before you can delete the\norganization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. If it is not already displayed, click the\n General Settings  tab. Click  Delete . This displays the  Delete Organization  dialog. Click  Delete Organization  to confirm If you have  legacy two-factor authentication \nset up for your account, you must disable it before you proceed with\naccount deletion. Once you delete your account, there's no way to recover it. You can't reuse the email address that is associated with the\ndeleted account to create a new  Cloud Manager  account. Click your name in the top right corner of the  Cloud Manager  UI. Click  Manage your MongoDB Account . Click  Login Info  in the left navigation panel. Acknowledge the implications of deleting your\n Cloud Manager  account. Click  Confirm Account Deletion . If there are any requirements you have not yet met, you are\nprompted to complete them before deleting your account. You are prompted to verify your identity: Your account is deleted. If you use  multi-factor authentication , you are prompted to verify your identity with your\nchosen  MFA (Multi-Factor Authentication)  authentication method. If you use Google SSO or do not have  multi-factor authentication  configured, MongoDB\nsends a code to your email address. Use that code to verify your\nidentity. Accounts that use Google SSO are automatically\nunlinked as part of the account deletion process.",
            "code": [],
            "preview": "To delete your Cloud Manager account, you must ensure that you aren't\nassociated with any projects or organizations.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/prometheus-integration",
            "title": "Integrate with Prometheus",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Integrations page for your project.",
                "Click Configure for the Prometheus integration card.",
                "Enter your preferred username and password.",
                "Enter your IP address and port.",
                "(Optional) Encrypt all Prometheus metrics.",
                "Select your preferred service discovery method.",
                "Click Save.",
                "View Your Cluster Metrics on Prometheus.",
                "Example Configurations",
                "HTTP Service Discovery",
                "File Service Discovery",
                "Performance Metrics Available to Prometheus",
                "MongoDB Metric Labels",
                "MongoDB Information Metrics",
                "Hardware Metrics",
                "Hardware Metric Labels"
            ],
            "paragraphs": "Prometheus  collects metrics from configured targets at given\nintervals, evaluates rule expressions, displays the results, and can\ntrigger alerts when it observes specific conditions. Our integration allows you to configure  Cloud Manager  to send metric data\nabout your deployment to your  Prometheus  instance. Prometheus  integration is available in  automation managed  clusters that use MongoDB Agent 12.0.15.7646 or\nlater. MongoDB Agent 12.0.15.7646 is released with  Cloud Manager  6.0.7. Have a working  Prometheus  instance. To set up a working instance, see\ntheir\n Installation Guide . (Optional) Use  Grafana  to\nvisualize your Prometheus metrics. To integrate  Cloud Manager  with  Prometheus : If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Integrations . Copy your username and password in a secure location. You can't\naccess the password after you leave this screen. The default value,  0.0.0.0:9216 , scrapes metrics on port\n 9216  on all  IPv4 (Internet Protocol version 4)  addresses on the local machine. If you enable this setting,  Cloud Manager  assures that your Prometheus\ninstance uses  https  to scrape metrics. Fields Description TLS Certificate Key File Path PEM  file path that contains certificate and key required\nto spin up a  https  Prometheus scraping endpoint. You are responsible for the following: TLS Certificate Key File issuance and renewal. Checking if the endpoint started correctly in the automation agent logs. TLS Certificate Key File Password Required if the certificate key file is encrypted. Discovery Method Description HTTP SD This method requires Prometheus v2.28 and later. It\ngenerates the  scrape_config \npart of your  configuration file \nto discover targets over an HTTP endpoint. File Service Discovery This method allows Prometheus to read  YAML (Yet Another Markup Language)  or  JSON (Javascript Object Notation) \ndocuments to configure the targets to scrape from. You are responsible for providing the targets by making a request to the  Discovery API  and storing its results in a  targets.json  file. To make the request, substitute the placeholder text in one of\nthe following tabs or create your own script in another language. To learn more about the Discovery API, see\n Return the Latest Targets for Prometheus . If you need to install the  requests  library,\nsee their\n Installation Guide . Copy the generated snippet into the\n scrape_configs  section of your\n configuration file \nand substitute the placeholder text. For an example of the configuration file in either method, see\n Example Configurations . Restart your Prometheus instance. In your Prometheus instance, click  Status  in the top navigation\nbar, and click  Targets  to see the metrics of your deployment. The following shows examples of the\n configuration file \nwhen you use the  HTTP Service Discovery  or\n File Service Discovery  method. The configuration file in both methods contains the following fields: Field Description scrape_interval Time that indicates how frequently to scrape targets. This\nsetting supports a minimum time of 10s. job_name Human-readable label assigned to scraped metrics. metrics_path HTTP resource path that indicates where to fetch metrics from\ntargets. scheme Your Prometheus protocol scheme configured for\nrequests, either  http  or  https . If you\nconfigure  https , you must specify  tlsPemPath . basic_auth Authorization header to use on every scrape request. The HTTP Service Discovery method also contains the  http_sd_configs \nfield with the following sub-fields: Field Description url URL from which Prometheus fetches the targets. refresh_interval Time that indicates when to re-query the endpoint. basic_auth Credentials to use for authenticating to the API server. The File Service Discovery method also contains the\n file_sd_configs  field with the following sub-field: Field Description files List that contains the files from which to extract the metrics scraping targets. The following metrics are available when you use the  Prometheus \nintegration with your  MongoDB Atlas  cluster: MongoDB Metric Labels serverStatus  metrics replSetStatus  metrics Hardware Metrics Each MongoDB metric contains the following labels: Label Description group_id Unique hexadecimal digit string that identifies the project. org_id Unique hexadecimal digit string that identifies the organization. cl_role Human readable label that defines the cluster role. cl_name Human-readable label that identifies the cluster. rs_nm Human-readable label that identifies the replica set. rs_state Number that indicates the  replica set state . process_port Port on which the process runs. mongodb_info  is a gauge that always has the value of  1 . This\nmetric contains all the  MongoDB Metric Labels  and\nalso the following labels: Label Description mongodb_version String that represents the major, minor, and patch versions. replica_state_name String that indicates the  replica set member status . process_type String that indicates the process running. Its values can be\n mongod ,  mongos , or  config . You can also view descriptions of each hardware metric in the\n Prometheus expression browser . Name Operating System Type Description hardware_system_cpu_nice Unix, Darwin Counter Time spent in user mode with low priority. hardware_system_cpu_io_wait Unix Counter Time waiting for I/O to complete. hardware_system_cpu_irq Unix Counter Time spent servicing interrupts. hardware_system_cpu_soft_irq Unix Counter Time spent servicing softirq's. hardware_system_cpu_steal Unix Counter Time spent in other operating systems when running in a virtual\nenvironment. hardware_system_cpu_guest Unix Counter Time spent running a virtual CPU for the guest operating systems under the control of the Linux kernel. hardware_system_cpu_guest_nice Unix Counter Time spent running a guest with an adjusted niceness. hardware_system_cpu_kernel_milliseconds All Counter Time spent in system mode. hardware_system_cpu_user_milliseconds All Counter Time spent in user mode. hardware_disk_metrics_weighted_time_io Unix Counter Weighted time spent doing I/O's. hardware_disk_metrics_physical_write_count Unix Counter Number of physical write I/O's processed. hardware_disk_metrics_physical_read_count Unix Counter Number of physical read I/O's processed. hardware_disk_metrics_total_time Unix Counter Total time this block device is active. hardware_disk_metrics_idle_time Windows Counter Time spent in the idle task. hardware_disk_metrics_disk_space_free_bytes All Gauge Disk space available in the mounted file system. hardware_disk_metrics_disk_space_used_bytes All Gauge Disk space used in the mounted file system. hardware_disk_metrics_read_count All Counter Number of read I/O's processed. hardware_disk_metrics_read_time_milliseconds All Counter Total wait time for read requests. hardware_disk_metrics_write_count All Counter Number of write I/O's processed. hardware_disk_metrics_write_time_milliseconds All Counter Total wait time for write requests. hardware_process_cpu_children_user Unix Counter Amount of time scheduled in user mode for this process to wait for children. hardware_process_cpu_children_kernel Unix Counter Amount of time scheduled in kernel mode for this process to wait for children. hardware_process_cpu_kernel_milliseconds All Counter Amount of time scheduled in kernel mode for this process. hardware_process_cpu_user_milliseconds All Counter Amount of time scheduled in user mode for this process. hardware_system_vm_page_swap_in Unix Counter Number of pages the system has swapped in from disk. hardware_system_vm_page_swap_out Unix Counter Number of pages the system has swapped out to disk. hardware_system_memory_mem_total Unix Gauge Total usable RAM (physical RAM minus a few reserved bits and the kernel binary code). hardware_system_memory_mem_free Unix Gauge Sum of  LowFree  +  HighFree . hardware_system_memory_mem_available Unix Gauge An estimate of how much memory is available for starting new applications, without swapping. hardware_system_memory_buffers Unix Gauge Temporary storage for raw disk blocks that shouldn't get tremendously large. hardware_system_memory_cached Unix Gauge In-memory cache for files read from the disk. This doesn't include  SwapCached . hardware_system_memory_swap_total Unix Gauge Total amount of swap space available. hardware_system_memory_swap_free Unix Gauge Total amount of swap space unused. hardware_system_memory_shared_mem Unix Gauge Amount of memory consumed in file systems whose contents reside in virtual memory. hardware_system_memory_swap_free_kilobytes All Gauge Total amount of swap space unused. hardware_system_memory_swap_total_kilobytes All Gauge Total amount of swap space available. hardware_platform_num_logical_cpus All Gauge Number of logical CPUs usable by the current process. hardware_system_network_eth0_bytes_in_bytes All Counter Number of bytes of data received by the interface. hardware_system_network_eth0_bytes_out_bytes All Counter Number of bytes of data transmitted by the interface. hardware_system_network_lo_bytes_in_bytes All Counter Number of bytes of data received by the interface. hardware_system_network_lo_bytes_out_bytes All Counter Number of bytes of data transmitted by the interface. Each hardware metric contains the following labels: Label Description group_id Unique hexadecimal digit string that identifies the project. org_id Unique hexadecimal digit string that identifies the organization. process_port Port on which the process runs. disk_name Human-readable label that identifies the disk.",
            "code": [
                {
                    "lang": "sh",
                    "value": "# Sets the `Authorization` header on every scrape\n# request with the username and password from the\n# previous step. The URL that Prometheus fetches the\n# targets from.\n# Replace the <group-id> with the project ID of your\n# Atlas instance.\n\ncurl --header 'Accept: application/json' \\\n     --user <username>:<password> \\\n     --request GET \"https://cloud.mongodb.com/prometheus/v1.0/groups/{GROUP-ID}/discovery\""
                },
                {
                    "lang": "python",
                    "value": "import time, json, requests\n\n# This script sets the `Authorization` header on every\n# scrape request with the configured username and\n# password. Then it tells Prometheus to fetch targets\n# from the specified URL.\n#\n# Note: Replace the <username> and <password> with the\n# values in the previous step, and <group-id> with the\n# project ID of your Atlas instance.\n\nbasic_auth_user=\"<username>\"\nbasic_auth_password=\"<password>\"\ndiscovery_api_url=\"https://cloud.mongodb.com/prometheus/v1.0/groups/{GROUP-ID}/discovery\"\n\n# The script updates your targets.json file every\n# minute, if it successfully retrieves targets.\n#\n# Note: Replace the <path-to-targets.json> with the\n# path to your targets.json file.\n\nstarttime = time.time()\nwhile True:\n  r = requests.get(discovery_api_url, auth=(basic_auth_user, basic_auth_password))\n  if  r.status_code == 200:\n    with open('<path-to-targets.json>', 'w') as f:\n      json.dump(r.json(), f)\n  time.sleep(60.0 - ((time.time() - starttime) % 60.0))"
                },
                {
                    "lang": "yaml",
                    "value": "global:\n  scrape_interval: 15s\n\nscrape_configs:\n\n  - job_name: \"CM-Testing-mongo-metrics\"\n    scrape_interval: 10s\n    metrics_path: /metrics\n    scheme : https\n    basic_auth:\n      username: prom_user_61e6e34e93eac1632d39f457\n      password: V7hTyLfkjwiWQbv\n    http_sd_configs:\n      - url: https://cloud.mongodb.com/prometheus/v1.0/groups/61e6e34e93eac1632d39f457/discovery\n        refresh_interval: 60s\n        basic_auth:\n          username: prom_user_61e6e34e93eac1632d39f457\n          password: V7hTyLfkjwiWQbv"
                },
                {
                    "lang": "yaml",
                    "value": "global:\n  scrape_interval: 15s\n\nscrape_configs:\n\n  - job_name: \"CM-Testing-mongo-metrics\"\n    scrape_interval: 10s\n    metrics_path: /metrics\n    scheme : https\n    basic_auth:\n      username: prom_user_61e6e34e93eac1632d39f457\n      password: V7hTyLfkjwiWQbv\n    file_sd_configs:\n      - files:\n        - /usr/local/etc/targets.json"
                }
            ],
            "preview": "Prometheus collects metrics from configured targets at given\nintervals, evaluates rule expressions, displays the results, and can\ntrigger alerts when it observes specific conditions.",
            "tags": "prometheus, integration, add prometheus, integrate with prometheus",
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/migrate-community-to-atlas",
            "title": "Migrate a MongoDB Community Deployment to Atlas",
            "headings": [
                "Overview",
                "Prerequisites",
                "Considerations",
                "Procedure",
                "Add your deployment to Cloud Manager.",
                "Add credentials for Monitoring.",
                "Follow the Live Migration Process to Atlas."
            ],
            "paragraphs": "If you use  MongoDB Community Edition \nbut can't use general  Atlas Live Migration \ndue to network restrictions, you can migrate your MongoDB deployments to\n Atlas  via  Cloud Manager . To live migrate data from your MongoDB\ndeployments to clusters in  Atlas  using  Cloud Manager : For detailed steps, see  Procedure . Add your deployments to  Cloud Manager . Add credentials for Monitoring. Follow the live migration process to  Atlas . Before you begin the live migration process from MongoDB Community\nto  Atlas , you must: Have an existing deployment in\n MongoDB Community Edition . Start a free trial of Cloud Manager . When you add your MongoDB Community deployment to  Cloud Manager ,\nyou need to add credentials for Monitoring only, not for Automation\nor Backup. Adding your deployment for Monitoring imports your\ndeployment's metadata into  Cloud Manager  to help with the Live\nMigration process. It doesn't import your deployment's actual data. To learn more about authentication credentials, see\n Authentication Use Cases . Perform this procedure for each of your MongoDB deployments. Follow the procedure to  Add MongoDB Processes . To add credentials for  Monitoring : Create the credentials to the deployment. See\n Required Access for Monitoring . Add the credentials based on your project's authentication mechanism.\nSee  Add Authentication Credentials to your Deployment . If you're adding your MongoDB deployment\nto monitoring so that you can live migrate it\nto  Atlas , you don't need to add credentials for\nAutomation and Backup.\nTo learn more, see  Authentication Use Cases . To migrate your deployment to  Atlas  once you've added it\nto  Cloud Manager , follow the workflow in\n Migrate a Deployment to Atlas .",
            "code": [],
            "preview": "If you use MongoDB Community Edition\nbut can't use general Atlas Live Migration\ndue to network restrictions, you can migrate your MongoDB deployments to\nAtlas via Cloud Manager. To live migrate data from your MongoDB\ndeployments to clusters in Atlas using Cloud Manager:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-mongodb-agent-from-all-agents",
            "title": "Update from all legacy Agents",
            "headings": [
                "Procedure",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "From the notification banner, click Update All Agents.",
                "Update automated hosts to MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Next Steps"
            ],
            "paragraphs": "You have a project with automated MongoDB deployments with Monitoring, Backup, or both and want to update to the MongoDB Agent. If you want to start or continue using Automation to manage your\nMongoDB deployments, please review the\n MongoDB Agent Prerequisites  before updating to the\nMongoDB Agent. The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If your project has hosts that use Automation, you can\nupdate the Agents on those hosts to the MongoDB Agent. Click  Update All . Wait until all hosts show  Updated . Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. All credentials for the legacy Agents are migrated to the\nMongoDB Agent. The legacy Automation Agent credentials become the MongoDB Agent\ncredentials used for Automation. These credentials should not need\nmodification. However, if you need to modify them, navigate to\n Deployment \n   Security \n   Settings \n   Edit Settings . The legacy Monitoring Agent credentials can be\nmodified from  Deployment \n   Processes \n   \n   Monitoring Settings \n   Credentials . The legacy Backup Agent credentials can be\nmodified from  Continuous Backup \n   Overview \n   <Deployment to Backup> \n    under Options column\n   Edit Credentials . At the  Final Steps  modal, the legacy Backup and\nMonitoring Agents are put into standby mode. Click\n Finish . After the MongoDB Agent update completes: Stop  and\n remove  the legacy\nMonitoring Agent. Stop  and\n remove  the legacy Backup\nAgent.",
            "code": [],
            "preview": "You have a project with automated MongoDB deployments with Monitoring, Backup, or both and want to update to the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/connect-to-atlas-live-migration",
            "title": "Connect to Atlas for Live Migration",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Settings page for your organization.",
                "Connect to Atlas.",
                "Next Steps"
            ],
            "paragraphs": "In Stage 2 of the  Live Migration workflow ,\nyou must connect from  Cloud Manager  to  Atlas . To connect an organization in  Cloud Manager  to  Atlas , enter\nthe  link-token  that you generated in  Atlas \ninto the  Settings  page of your  Cloud Manager  organization. Use one link-token per  Cloud Manager  organization. If you have\nother organizations in  Cloud Manager  that contain deployments you want to\nmigrate, create a link-token in  Atlas  for each organization\nand then specify it in the corresponding organization's settings.\nYou can run Live Migration processes in parallel for each\n Cloud Manager  organization connected to  Atlas .\nFor each organization, you can use the same link-token to live\nmigrate that organization's deployments from  Cloud Manager  to  Atlas ,\none at a time. Before you connect to  Atlas : Review the  workflow for Live Migration to Atlas . Complete Stage 1: Generate a link-token in  Atlas . If you are migrating from  Ops Manager , verify that you specified an\nexternal IP address of the  Cloud Manager  instance to  Atlas .\nTo learn more, see  Prerequisites for Live Migration . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click the  Organization Settings  icon next to the\n Organizations  menu. In the  Organization Settings , the  General Settings \ntab displays the configurable settings for the organization. Click the  General Settings  tab. In the  Live Migration: Connect to Atlas  section,\nclick  Connect to Atlas . The  Connect to Atlas \ndialog opens. Paste the link-token that you copied from  Atlas .\nThe link-token contains details of your connection to  Atlas . Click  Connect to Atlas . Migrate from  Cloud Manager  to Atlas Provision a Migration Host for MongoDB Agent Once you connect to  Atlas , you can\n provision a migration host .",
            "code": [],
            "preview": "In Stage 2 of the Live Migration workflow,\nyou must connect from Cloud Manager to Atlas.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/view-logs",
            "title": "View, Retrieve, and Manage Logs",
            "headings": [
                "MongoDB Real-Time Logs",
                "View MongoDB Real-Time Logs",
                "Navigate to the Clusters view for your deployment.",
                "(Optional) For sharded clusters, filter which process type is listed.",
                "On the line listing the process, click Metrics.",
                "Click the Logs tab.",
                "Refresh the browser window to view updated entries.",
                "Enable or Disable Log Collection for a Deployment",
                "Navigate to the Clusters view for your deployment.",
                "On the line for any process, click the ellipsis [...] icon then click Monitoring Settings.",
                "Toggle Collect Logs For Host as desired.",
                "Click X to close the Monitoring Settings box.",
                "Enable or Disable Log Collection for the Project",
                "Click Settings, then Project Settings.",
                "Toggle the Collect Logs For All Hosts option to Yes or No, as desired.",
                "MongoDB On-Disk Logs",
                "Configure Log Rotation",
                "Open the MongoDB Log Settings.",
                "Enable log rotation.",
                "Configure the log rotation settings.",
                "Click Confirm & Deploy to deploy your changes.",
                "Agent Logs",
                "View Agent Logs",
                "Click Deployment, then the Agents tab, then Agent Logs.",
                "Filter the log entries.",
                "Configure Agent Log Rotation",
                "Click Deployment, then the Agents tab.",
                "Click Downloads & Settings.",
                "Scroll down to the Agent Log Settings section.",
                "Edit the log settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "Cloud Manager  collects log information for both MongoDB processes and its\nagents. For MongoDB processes, you can access both real-time logs and\non-disk logs. The MongoDB logs provide the diagnostic logging information for your\n mongod  and  mongos  processes. The Agent logs provide insight into the behavior of your  Cloud Manager \nagents. The MongoDB Agent issues the  getLog  command with every\nmonitoring ping. This command collects log entries from RAM cache of\neach MongoDB process. Cloud Manager  enables real-time log collection by default. You can disable log\ncollection for either\n all MongoDB deployments  in\n a Cloud Manager  project or for\n individual MongoDB deployments .\nIf you disable log collection,  Cloud Manager  continues to display previously\ncollected log entries. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. The four buttons are listed in the following order, left to right:\n Shards ,  Configs ,  Mongos , and\n BIs . Process Displays Shards mongod  processes that host your data. Configs mongod  processes that run as  config\nservers  to store a sharded cluster's metadata. Mongos mongos  processes that route data in a sharded\ncluster. BIs BI (Business Intelligence)  processes that access data\nin a sharded cluster. The tab displays log information. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click the  Logs  tab. Toggle the  Collect Logs For Host  to  Off  or\n On , as desired. If you turn off log collection, existing log entries remain in the\n Logs  tab, but  Cloud Manager  does not collect new entries. Cloud Manager  collects on-disk logs even if the MongoDB instance is not\nrunning. The MongoDB Agent collects the logs from the location you\nspecified in the MongoDB  systemLog.path \n configuration option . The\nMongoDB on-disk logs are a subset of the real-time logs and therefore\nless verbose. You can  configure log rotation  for\nthe on-disk logs.  Cloud Manager  rotates logs by default. This procedure rotates both system and audit logs for  Cloud Manager . This option isn't available for deployed MongoDB processes if the\n systemLog.destination \nproperty is set to  syslog . Cloud Manager  can rotate and compress logs for clusters that the MongoDB Agent\nmanages. If the MongoDB Agent only monitors a cluster, it ignores that\ncluster's logs. If you're running MongoDB Enterprise version 5.0 or later and\nMongoDB Agent 11.11.0.7355 or later, you can: If you're running earlier versions of MongoDB Enterprise or the\nMongoDB Agent,  Cloud Manager : MongoDB Community users can rotate, compress, and delete the server logs\nonly. Set separate rules for rotating server logs and audit logs. Compress and delete audit logs using  Cloud Manager . For security reasons, we recommend managing\nyour audit log compression and deletion outside of  Cloud Manager . Uses your  System Log Rotation  settings to rotate both the\nserver logs and the audit logs. Doesn't compress or delete audit logs. If you configure compression and\ndeletion,  Cloud Manager  applies these settings to the server logs only. When you use this feature, disable any platform-based log-rotation\nservices like  logrotate . Remove the  reopen  and  rename \nflags from the process configuration files. If the MongoDB Agent only\nmonitors the cluster, that cluster may use platform-based services. Click  Deployment . In the  More  drop-down list, click  MongoDB Log Settings . Toggle  System Log Rotation  to  ON  to rotate server\nlogs. MongoDB Enterprise users running MongoDB Enterprise version 5.0 or later and\nMongoDB Agent 11.11.0.7355 and later can also toggle  Audit\nLog Rotation  to  ON  to rotate audit logs and configure\naudit log rotation separately. If you're running earlier versions of MongoDB Enterprise or the MongoDB Agent,\nsetting  System Log Rotation  to  ON  also rotates audit logs. Set log rotation to  OFF  if you don't want  Cloud Manager  to rotate its\nlogs. Log rotation is  OFF  by default. After you enable log rotation,  Cloud Manager  displays additional log rotation settings. Cloud Manager  rotates the logs on your MongoDB hosts per the following\nsettings: When you are done, click  Save  to review your changes. Field Necessity Action Default Size Threshold (MB) Required Cloud Manager  rotates log files that exceed this maximum log file\nsize. 1000 Time Threshold (Hours) Required Cloud Manager  rotates logs that exceed this duration. 24 Max Uncompressed Files Optional Log files can remain uncompressed until they exceed this\nnumber of files.  Cloud Manager  compresses the oldest log files first. If you leave this setting empty,  Cloud Manager  will use the default\nof  5 . 5 Max Percent of Disk Optional Log files can take up to this percent of disk space on your\nMongoDB host's log volume.  Cloud Manager  deletes the oldest log files\nonce they exceed this disk threshold. If you leave this setting empty,  Cloud Manager  will use the default of\n 2% . 2% Total Number of Files Optional Total number of log files. If a number is not specified, the\ntotal number of log files defaults to  0  and is determined\nby other  Rotate Logs  settings. 0 Otherwise, click  Cancel  and you can make\nadditional changes. Cloud Manager  collects logs for all your MongoDB Agents. The page displays logs for the type of agent selected in the  View \ndrop-down list. The page filters logs according to any filters selected in\nthrough the gear icon. To display logs for a different type of agent, use the  View \ndrop-down list. To display logs for a specific hosts or MongoDB processes, click the gear icon\nand make your selections. To clear filters, click the gear icon and click  Remove Filters . To download the selected logs, click the gear icon and click\n Download as CSV File . To view logs for a specific agent, you can alternatively click the\n Agents  tab's  All Agents  list and then click\n view logs  for the agent. If you use  Automation  to manage your cluster, follow\nthis procedure to configure rotation of the Agent log files. If you haven't enabled Automation, see the following documentation\nfor information about how to manually configure logging settings in\nthe agent configuration files: MongoDB Agent General Logging Settings MongoDB Agent Monitoring Logging Settings MongoDB Agent Backup Logging Settings Click the  pencil  icon to edit the Monitoring Agent\nor Backup Agent log settings: When you are done, click  Save . Name Type Description Linux Log File Path string Conditional: Logs on a Linux host. \nThe path to which the agent writes its logs on a Linux host. The suggested value is: Windows Log File Path string Conditional: Logs on a Windows host. \nThe path to which the agent writes its logs on a Windows host. The suggested value is: Rotate Logs Toggle A toggle to select if the logs should be rotated. Size Threshold (MB) integer The size where the logs rotate automatically. The default value\nis  1000 . Time Threshold (Hours) integer The duration of time when the logs rotate automatically. The\ndefault value is  24 . Max Uncompressed Files integer Optional.  The greatest number of log files, including the\ncurrent log file, that should stay uncompressed. The suggested\nvalue is  5 . Max Percent of Disk integer Optional.  The greatest percentage of disk space on your\nMongoDB hosts that the logs should consume. The suggested\nvalue is  2% . Total Number of Files integer Optional.  The total number of log files. If a number is not specified,\nthe total number of log files defaults to  0  and is determined by other\n Rotate Logs  settings. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [
                {
                    "lang": "sh",
                    "value": "/var/log/mongodb-mms-automation/monitoring-agent.log"
                },
                {
                    "lang": "bat",
                    "value": "%SystemDrive%\\MMSAutomation\\log\\mongodb-mms-automation\\monitoring-agent.log"
                }
            ],
            "preview": "How does Ops Manager rotate its logs and the Agent logs?",
            "tags": "logrotate, rotate logs",
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/performance-advisor",
            "title": "Monitor and Improve Slow Queries",
            "headings": [
                "Enable or Disable Performance Advisor for a Project",
                "In the left navigation, click Settings under the Project section.",
                "Toggle the button next to Performance Advisor and Profiler.",
                "Common Reasons for Slow Queries",
                "Index Considerations",
                "Access Performance Advisor",
                "Click Deployment.",
                "Click the replica set where the collection resides.",
                "Click Performance Advisor.",
                "Select a collection from the Collections dropdown.",
                "Select a time period from the Time Range dropdown.",
                "Index Suggestions",
                "Index Metrics",
                "Sample Queries",
                "Query Targeting",
                "Filter Index Suggestions",
                "Limitations of Index Suggestions",
                "Timestamp Format for Indexes",
                "Log Size",
                "Create Suggested Indexes",
                "Behavior",
                "Procedure",
                "For the index you want to create, click Create Index.",
                "(Optional) Specify the index options.",
                "(Optional) Set the Collation options.",
                "(Optional) Enable building indexes in a rolling fashion.",
                "Click Review.",
                "In the Confirm Operation dialog, confirm your index."
            ],
            "paragraphs": "The Performance Advisor monitors any operation with a query predicate\nthat  MongoDB considers slow  and suggests new\n indexes  to improve query performance. For the\nselected host and time period, the Performance Advisor evaluates up to\nthe 20,000 most recent slow queries found in the logs. Recommended indexes are accompanied by sample queries, grouped by\n query shape , that were run against a collection that would\nbenefit from the suggested index. The Performance Advisor does not\nnegatively affect the performance of your  Cloud Manager  clusters. To view the Performance Advisor, you must: To view the field values in the example queries, you must be  a Cloud Manager \nuser with one or more of the following roles: Users without the aforementioned roles cannot see the field values. Be a Cloud Premium user. Run MongoDB version 3.2 or later on your cluster. Manage your cluster with MongoDB Agent Automation. To learn more about the MongoDB Agent, see\n MongoDB Agent . Project Owner Project Data Access Admin Project Data Access Read/Write Project Data Access Read Only Performance Advisor  is enabled by default. To disable or enable  Performance Advisor : To enable  Performance Advisor  for a project, you must\nhave the  Project Owner  role for the project. If a query is slow, common reasons include: The query is unsupported by your current indexes. Some documents in your collection have large array fields that are\ncostly to search and index. One query retrieves information from multiple collections with\n $lookup . Indexes improve read performance, but a large number of indexes can\nnegatively impact write performance since indexes must be updated during\nwrites. If your collection already has several indexes, consider this\ntradeoff of read and write performance when deciding whether to create\nnew indexes. Examine whether a query for such a collection can be\nmodified to take advantage of existing indexes, as well as whether a\nquery occurs often enough to justify the cost of a new index. The Performance Advisor can help identify and remove unnecessary\nindexes. To learn more, see  Review Drop Index Recommendations . To access the  Performance Advisor : The  Performance Advisor  displays up to 20 query shapes\nacross all collections in the cluster and suggested indexes for those\nshapes. The  Performance Advisor  ranks the indexes according\nto their  Impact , which indicates  High  or\n Medium  based on the total wasted bytes read. To learn more\nabout index ranking, see  Review Index Ranking . If the replica set resides in a sharded cluster, first click the\nsharded cluster containing the replica set. If the slow query log contains consecutive  $match  stages\nin the aggregation pipeline, the two stages can  coalesce \ninto the first  $match  stage and result in a single\n $match  stage. As a result, the query shape in the\n Performance Advisor  might differ from the actual query you ran. The  Performance Advisor  ranks the indexes that it suggests\naccording to their  Impact , which indicates  High \nor  Medium  based on the total wasted bytes read. To learn\nmore about how the  Performance Advisor  ranks indexes, see  Review Index Ranking . To learn how to create indexes that the  Performance Advisor  suggests, see\n Create Suggested Indexes . Each index that the  Performance Advisor  suggests contains the following\nmetrics. These metrics apply specifically to queries which would be\nimproved by the index: Metric Description Execution Count Number of queries executed per hour which would be\nimproved. Average Execution Time Current average execution time in milliseconds for affected\nqueries. Average Query Targeting Average number of documents read per document returned by\naffected queries. A higher query\ntargeting score indicates a greater degree of inefficiency. For\nmore information on query targeting, see  Query Targeting . In Memory Sort Current number of affected queries per hour that needed to be\nsorted in memory. Average Docs Scanned Average number of documents scanned. Average Docs Returned Average number of documents returned. Avgerage Object Size Average object size. For each suggested index, the  Performance Advisor  shows the most commonly executed\nquery shapes that the index would improve. For each query shape, the\n Performance Advisor  displays the following metrics: The  Performance Advisor  also shows each executed sample query that matches the\nquery shape, with specific metrics for that query. Metric Description Execution Count Number of queries executed per hour which match the query\nshape. Average Execution Time Average execution time in milliseconds for queries\nwhich match the query shape. Average Query Targeting Average number of documents read for\nevery document returned by matching queries. A higher query\ntargeting score indicates a greater degree of inefficiency. For\nmore information on query targeting, see  Query Targeting . Average Docs Scanned Average number of documents scanned. Average Docs Returned Average number of documents returned. Each index suggestion includes an  Average Query Targeting \nscore indicating how many documents were read for every document\nreturned for the index's corresponding query shapes. A score of 1\nrepresents very efficient query shapes because every document read\nmatched the query and was returned with the query results. All suggested\nindexes represent an opportunity to improve query performance. By default, the  Performance Advisor  suggests indexes for all clusters\nin the deployment. To only show suggested indexes from a specific\ncollection, use the  Collection  dropdown at the top of\nthe  Performance Advisor . You can also adjust the time range the  Performance Advisor  takes into\naccount when suggesting indexes by using the  Time Range \ndropdown at the top of the  Performance Advisor . The Performance Advisor can't suggest indexes for MongoDB databases\nconfigured to use the  ctime timestamp format . As a\nworkaround, set the timestamp format for such databases to either\n iso8601-utc  or\n iso8601-local . The  Performance Advisor  analyzes up to 200,000 of your cluster's most recent log lines. You can create  indexes  suggested by the\n Performance Advisor  directly within the  Performance Advisor  itself. When\nyou create indexes, keep the ratio of reads to writes on the target\ncollection in mind. Indexes come with a performance cost, but are more\nthan worth the cost for frequent queries on large data sets. To\nlearn more about indexing strategies, see\n Indexing Strategies . You can only create one index at a time through the Performance\nAdvisor. If you want to create more simultaneously, you can do so\nusing  Data Explorer  or the\n shell Cloud Manager  always creates indexes at the top level of the deployment. If\nyou create an index while viewing the  Performance Advisor  for a single shard in a\nsharded cluster,  Cloud Manager  creates that index for the entire\nsharded cluster. To create a suggested index: The Performance Advisor opens the  Create Index  dialog\nand prepopulates the  Fields  based on the\nindex you selected. The following options document specifies the  unique  option and\nthe  name  for the index: Use collation to specify language-specific rules for string comparison,\nsuch as rules for lettercase and accent marks. The\n collation document \ncontains a  locale  field which indicates the  ICU Locale code , and may contain other\nfields to define collation behavior. To review the list of locales that MongoDB collation supports, see\nthe  list of languages and locales . To learn more about collation\noptions, including which are enabled by default for each locale, see\n Collation  in the MongoDB manual. The following collation option document specifies a locale value\nof  fr  for a French language collation: Building indexes in a rolling fashion reduces the performance impact of\nbuilding indexes on  replica sets  and\n sharded clusters . To maintain cluster\navailability,  Cloud Manager  removes one node from the cluster at a time\nstarting with a  secondary . After you build an index in a rolling fashion, if your MongoDB database\nruns with an  FCV \nless than  4.2 ,  resync the head database  to ensure that the head database takes the\nnew index into account. Cloud Manager  automatically cancels rolling index builds\nthat don't succeed on all nodes. When a rolling index build completes\non some nodes, but fails on others,  Cloud Manager  cancels the build\nand removes the index from any nodes that it was successfully built on. In the event of a rolling index build cancellation,  Cloud Manager  generates an\nactivity feed event and sends a notification email to the project owner\nwith the following information: To learn more about rebuilding indexes, see  Build Indexes on\nReplica Sets . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing certain  versions  of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Rolling index builds succeed only when they meet certain conditions.\nTo ensure your index build succeeds, avoid the following design\npatterns that commonly trigger a restart loop: Index key exceeds the  index key limit Index name  already exists Index on  more than one array field Index on collection that has the\n maximum number of text indexes Text index on collection that has the\n maximum number of text indexes Data Explorer doesn't support building indexes in a rolling fashion\nfor standalone deployments. Name of the cluster on which the rolling index build failed Namespace on which the rolling index build failed Project that contains the cluster and namespace Organization that contains the project Link to the activity feed event The following  index options  are\nincompatible with building indexes in a rolling fashion: Cloud Manager  ignores these options if you specify them in the\n Options  pane. unique storageEngine textIndexVersion 2dsphereIndexVersion When an index build completes,  Cloud Manager  generates\nan  activity feed event \nand sends a notification email to the project owner\nwith the following information: Completion date of the index build Name of the cluster on which the index build completed Namespace on which the index build completed Project containing the cluster and namespace Organization containing the project Link to the  activity feed event",
            "code": [
                {
                    "lang": "javascript",
                    "value": "{ <option1>: <value1>, ... }"
                },
                {
                    "lang": "javascript",
                    "value": "{ unique: true, name: \"myUniqueIndex\" }"
                },
                {
                    "lang": "json",
                    "value": "{ \"locale\": \"fr\" }"
                }
            ],
            "preview": "Performance Advisor is enabled by default. To disable or enable Performance Advisor:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/provision-migration-host",
            "title": "Provision a Migration Host for MongoDB Agent",
            "headings": [
                "Overview",
                "Considerations",
                "Prerequisites",
                "Migration Host Resource Requirements",
                "Procedure",
                "Click Deployment, select the Agents tab, and then select Downloads & Settings.",
                "Under Automation, select your operating system and follow the instructions to install and run the agent on the migration host.",
                "Edit the MongoDB Agent configuration file to enable Live Migration.",
                "Restart the MongoDB Agent to incorporate the updated settings.",
                "Next Steps"
            ],
            "paragraphs": "To live migrate your source MongoDB deployment monitored in  Cloud Manager  to\n Atlas , provision a server for the migration host. For source deployments running any MongoDB 6.0.+ versions, where the\ndeployments are managed or monitored by  Ops Manager , live migration (push) is not supported. For source deployments running any MongoDB 5.0 and earlier versions,\nwhere the deployments are managed or monitored by  Ops Manager ,\nlive migration (push) is deprecated. For source deployments running MongoDB 6.0.+, where the deployments\nare monitored by  Cloud Manager , live migration (push) is supported.\nTo learn more, see\n Live Migrate Your MongoDB Cluster Monitored by Cloud Manager to Atlas . The migration host is a server on which you install a dedicated MongoDB Agent.\nThis MongoDB Agent automates live migration operations. It requires that\nyou set its configuration option  agentFeatureCloudMigrationEnabled  to  true . You use the migration host to manage the live migration process of your\ndeployment from  Cloud Manager  to  Atlas . You can't use the migration host\nfor any other purposes. After you provision the migration host, its server appears under the\n Servers  tab. A MongoDB Agent on the migration host runs a\none-time migration of data from  Cloud Manager  to  Atlas  and reports the\nlive migration status back to  Cloud Manager . To learn about starting a live migration from  Cloud Manager , see\n Migrate a Deployment to Atlas  and review the\n workflow for live migration to Atlas . If you plan to migrate more than one deployment at a time, create a\ndedicated migration host for each of the deployments that you want\nto migrate to  Atlas . Using an HTTP proxy, which intercepts and replaces TLS certificates\nfor the relayed HTTPS requests is not supported by  Ops Manager  when you\nuse it in hybrid mode. The migration host must use a 64-bit CPU architecture and one of the\nfollowing supported platforms. The platforms depend on the migration tool\nthat the migration host will be running to facilitate the migration. Migration host for live migrations (push) of source deployments of MongoDB\nversions 5.0+ but not 6.0 (FCV) that you add to monitoring in  Cloud Manager ,\nwhere the migration host runs mongomirror: If  Cloud Manager  is running in local mode, you must have outgoing\naccess to the following server to download  mongomirror . Architecture Distro/OS 5.0 x86_64 RHEL/Centos 7 RHEL/Centos 8 Amazon Linux 2 SUSE12 SUSE15 Debian 9 Debian 10 Debian 11 Ubuntu 18.x Ubuntu 20.x ARM RHEL/Centos 8 Amazon Linux 2 PowerPC/ ppc64le RHEL/ Centos 7 RHEL/ Centos 8 zSeries/ 390x RHEL 7 RHEL 8 Windows The configuration of a migration host for live migration is not\nsupported on Windows or macOS. You can still live migrate (push) your data\nfrom a Windows-based deployment to  Atlas  if you\nprovision your migration host on one of the platforms it supports.\nYou can't live migrate your data from a macOS-based deployment to\n Atlas . Migration host for live migrations (push) of MongoDB 6.0.8+ source\ndeployments monitored in  Cloud Manager , where the migration host runs  mongosync : The migration host must use a 64-bit CPU architecture and one of the\n mongosync platforms . The live migration process is CPU-intensive and requires sufficient\nnetwork bandwidth. Use a cloud instance with enough resources to help\nensure a successful migration. Avoid host environments that have been characterized as having\nlow network bandwidth. You may also need to provision additional storage for the\n cloudMigrationOplogPath  option described in the following\nprocedure. MongoDB 6.0.8+. For the migration host that runs  mongosync  to\nfacilitate push live migrations, use an instance\nwith a minimum of 8 CPUs and 24 GB of RAM. MongoDB versions 5.0+ but not 6.0 (FCV). For the migration host that runs\n mongomirror  to facilitate push live migrations, use a host\nwith 2-4 CPU cores and 4-8 GB of RAM to migrate a replica set.\nUse an instance with 2-4 CPU cores per shard to migrate a sharded cluster. To learn more, see  Install the MongoDB Agent to Only Monitor or Backup Deployments . If you don't already have the  automation-agent.config file open from the\nprevious step, open it in your preferred text editor: Add or update the following live migration configuration options: Key Value agentFeatureCloudMigrationEnabled true cloudMigrationOplogPath Path to the  oplog  files\nfor the  live migration  process. This key is optional\nand if set, requires provisioning enough storage in the\nspecified directory for the oplog buffering.\n Contact MongoDB Support  if you need\nassistance determining whether you need to set this key for\nyour deployment. Ensure that the resulting changes to the  automation-agent.config file\ncontain the following necessary configuration options for live\nmigration: An additional server appears under the  Servers  tab, and\nan additional MongoDB Agent appears under the  Agents  tab. Once you have provisioned the migration host, you can switch to\n Atlas  and follow the steps in the wizard to\nstart the live migration process.",
            "code": [
                {
                    "lang": "none",
                    "value": "translators-connectors-releases.s3.amazonaws.com"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<The ID of your project>\nmmsApiKey=<The Agent API key of your project>\nagentFeatureCloudMigrationEnabled=true\ncloudMigrationOplogPath=<The path to the oplog files>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                }
            ],
            "preview": "To live migrate your source MongoDB deployment monitored in Cloud Manager to\nAtlas, provision a server for the migration host.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/resync-backup",
            "title": "Resync a Backup",
            "headings": [
                "Considerations",
                "Procedure",
                "Click Continuous Backup, then the Overview tab.",
                "On the line listing the process, click the ellipsis icon and click Resync.",
                "Click the Resync button."
            ],
            "paragraphs": "When a backup becomes out of sync with the MongoDB deployment,  Cloud Manager \nproduces a  Backup requires a resync  alert. If you\nreceive this alert, you must resync the backup for the specified\nMongoDB instance. The following scenarios trigger a  Backup requires a resync  alert: During the resync, data is read from a secondary in each replica set\nand  Cloud Manager  does not produce any new snapshots. You don't need to resync MongoDB databases that run with an\n FCV  of 4.2. This is the most common case for the\n Backup requires a resync  alert. It occurs whenever\nthe Backup\u2019s  tailing cursor \ncannot keep up with the deployment's  oplog . This is similar\nto when a  secondary  falls too far behind the primary in a\nreplica set. Without a resync, the backups will not catch up. This occurs when a document that Backup does not have a copy of is\nindicated. This typically causes replication, and therefore the backup job, to\nbreak. When the daemon sees the broken job, it requests a resync. For production deployments, you should resync all backups annually. Cloud Manager  does not attempt to automatically recover from conditions that\ncaused the  Backup requires a resync  alert. This\nalert means there is not enough data to complete a restore. There is\nno way to automatically recover from not having enough data from the\nsnapshots and the oplog. Resyncing the backup is the best option. To avoid the need for resyncs, ensure the Backup oplog does not fall\nbehind the deployment's oplog. This requires that: To provide a buffer for maintenance and for occasional activity bursts,\nensure that the oplog on the  primary  is large enough to contain\nat least 24 hours of activity. You should resync the head database after you\n create an index in a rolling fashion  to\nensure that the head database takes the new index into account. Adequate machine resources are provisioned for the agent. You restart the  Cloud Manager  agents in a timely manner following maintenance\nor other downtime. For more information on the Backup oplog, see the  FAQ: Backup and Restore . If prompted for an authentication code, enter the code and click\n Verify . Click  Resync  again.",
            "code": [],
            "preview": "When a backup becomes out of sync with the MongoDB deployment, Cloud Manager\nproduces a Backup requires a resync alert. If you\nreceive this alert, you must resync the backup for the specified\nMongoDB instance.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-oidc-authentication-for-group",
            "title": "Enable OIDC Authentication for your Cloud Manager Project",
            "headings": [
                "Configure An External Identity Provider Application",
                "Register a new application for Cloud Manager.",
                "Set the Redirect URL value to http://localhost:27097/redirect.",
                "Add or enable groups claim.",
                "Optional: Allow refresh tokens if you want MongoDB clients to refresh the tokens for a better user experience.",
                "Optional: Configure access token lifetime (exp claim) to align with your database connection session time.",
                "Configure Azure AD (Azure Active Directory) as an Identity Provider",
                "Register an application.",
                "Add a group claim.",
                "Add a user identifier claim to the access token.",
                "Update the manifest.",
                "Remember metadata.",
                "Prerequisites",
                "Procedures",
                "Configure OIDC Authentication",
                "Navigate to the Security Settings dialog for your deployment.",
                "Optional: Specify the TLS (Transport Layer Security) Settings.",
                "Choose the authentication mechanism.",
                "Configure the OIDC Authorization Settings.",
                "Click Save Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Configure OIDC Authorization",
                "Navigate to the MongoDB Roles tab for your deployment.",
                "Click Add New Role.",
                "Create the OIDC role.",
                "Revoke JWKS",
                "Navigate to the Security Settings dialog for your deployment.",
                "Revoke your JWKS token."
            ],
            "paragraphs": "Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. MongoDB Enterprise \nallows authentication using OIDC. To authenticate with   OIDC , you must first register your  OIDC (OpenID Connect) \nor OAuth application with an  IdP (Identity Provider)  that supports  OIDC (OpenID Connect)  standard,\nsuch as as  Azure AD (Azure Active Directory) , Okta, and Ping\nIdentity. OIDC (OpenID Connect)  application registration steps can vary based on your\n IdP (Identity Provider) . Ensure that you complete the following items during\nyour registration process: Once you register your application, save the  issuer ,\n clientId  and  audience  values to use in the next stage of the\n OIDC IdP configuration . Make sure to select  public client/native application  as the client type. This assures that your access tokens contain the group membership\ninformation of the user authenticating. MongoDB uses the values\nsent in groups claim for authorization. To register your  OIDC (OpenID Connect)  or OAuth application with  Azure AD (Azure\nActive Directory) : To learn more about registering an application, see  Azure Documentation . Navigate to  App registrations . In your  Azure portal  account,\nsearch and click  Azure Active Directory . In the  Manage  section of the left navigation, click\n App registrations . Click  New registration . Apply the following values. Field Value Name CM Database - OIDC Supported Account Types Accounts in this organizational directory only (single tenant) Redirect URI Click  Register . To learn more about adding a group claim, see  Azure Documentation . Navigate to  Token Configuration . In the  Manage  section of the left navigation,\nclick  Token Configuration . Click  Add groups claim . In the  Edit groups claim  modal, select  Security . What groups you select depend on the type of groups you configured\nin your Azure environment. You may need to select a different\ntype of group to send the appropriate group information. In the  Customize token properties by type  section, ensure that you only select  Group ID . When you select  Group Id , Azure sends the\nsecurity group's Object ID. Click  Add . To learn more, see  Azure Documentation . Click  Add optional claim . In the  Add optional claim  modal, select  Access . Select a claim that carries a user identifier that you can\nrefer to in MongoDB access logs such as an email. Click  Add . In the  Microsoft Graph Permissions  note, check the box, and click  Add . To learn more about adding an optional claim, see  Azure Documentation . In the  Manage  section of the left navigation, click  Manifest . Update the  accessTokenAcceptedVersion  from  null  to  2 . The number  2  represents Version 2 of Microsoft's access\ntokens. Other applications can use this as a signed\nattestation of the Active Directory-managed user's identity.\nVersion 2 ensures that the token is a JSON Web Token that\nMongoDB understands. Click  Save . The following table shows what these  Azure AD (Azure Active\nDirectory)  UI values map to in our  Cloud Manager  Configuration Properties: In the left navigation, click  Overview . Copy the  Application (client) ID  value. In the top navigation, click  Endpoints . Copy the  OpenID Connect metadata document  value\nwithout the  /.well-known/openid-configuration  part. You can also retrieve this value by following the\n OpenID Connect metadata document   URL (Uniform Resource Locator)  and\ncopying the value for  issuer . Azure AD (Azure Active Directory)  UI Cloud Manager  Configuration Property Application (client) ID OpenID Connect metadata document (without /.well-known/openid-configuration) Issuer URI . To enable OIDC authentication, you must: Use  mongosh  1.9.1 or later. Use MongoDB 7.0 or later. Configure at least one other authentication mechanism with MongoDB Agent. The MongoDB Agent cannot connect to your cluster via  OIDC (OpenID Connect) . You must\nenable an additional auth mechanism for the MongoDB Agent. If  Cloud Manager \ndoesn't manage Monitoring or Backup, you must manually configure\nthem to use the alternative authentication mechanism. If you want to\n reset Authentication and TLS settings \nfor your project, first\n unmanage any MongoDB deployments \nthat  Cloud Manager  manages in your project. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . TLS is not required for use with  Federated Auth (OIDC)  authentication. Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. In the  MongoDB Deployment Authentication Mechanism  section,\nselect  Federated Auth (OIDC) . Provide the following values: Setting Necessity Value Audience Required Specify who your OIDC provider intends the token for. Issuer URI Required Issuer value provided by your registered  IdP (Identity Provider)  application.\nUsing this URI, MongoDB finds an OpenID Provider Configuration\nDocument, which should be available in the\n /.wellknown/open-id-configuration  endpoint. Client ID Required Unique identifier for your registered application. Enter\nthe  clientId  value from the app you registered\nwith  OIDC (OpenID Connect)   IdP (Identity Provider) . Requested Scopes Optional Tokens that give users permission to request data\nfrom the authorization endpoint. For each additional scope you want to add, click  Add\nmore scopes . User Claim Optional The identifier of the claim that includes the user principal\nidentity. Accept the default value unless your  IdP (Identity Provider)  uses a\ndifferent claim. Default :  sub Groups Claim Optional The identifier of the claim that includes the principal's  IdP (Identity Provider) \nuser group membership information. Accept the default value\nunless your  IdP (Identity Provider)  uses a different claim, or you need a custom\nclaim. Default :  groups Otherwise, click  Cancel  and you can make\nadditional changes. MongoDB does not explicitly create database users for  OIDC (OpenID Connect) . It maps\n OIDC (OpenID Connect)  users to MongoDB roles based on their groups. To create a database role for an  OIDC (OpenID Connect)  group: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  MongoDB Roles  tab. Enter the following fields: Field Necessity Description Identifier Required In the  database  box, enter  admin . In the  name  box, enter your  projectId  and\ngroup name from your  IdP (Identity Provider)  separated by a slash  / : Inherits From Optional A list of role name and database pairs. The format for these\npairs are  roleName@dbName . Authentication Restrictions Optional A list of IP addresses or CIDR notations that you want to\nrestrict from your  IdP (Identity Provider) . Click  Add Role . If your private key is compromised, you can immediately revoke your JSON\nWeb Key Sets (JWKS) cached in MongoDB nodes: Don't use this feature to rotate your signing keys. When you rotate\nyour  OIDC (OpenID Connect)   IdP (Identity Provider)  signing keys, MongoDB fetches the JWKS automatically\nupon expiration of the existing access tokens. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Scroll to the  OIDC Connection and Authorization\n(Required for OIDC)  section. Click the  REVOKE JWKS  button. This button is idle if there is no  IdP (Identity Provider)  configured. In the  Revoke JWKS tokens?  modal, click  Revoke .",
            "code": [
                {
                    "lang": "none",
                    "value": "{projectId}/{group_name}"
                }
            ],
            "preview": "OIDC (OpenID Connect) application registration steps can vary based on your\nIdP (Identity Provider). Ensure that you complete the following items during\nyour registration process:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/remove-monitored-process-api",
            "title": "Stop Monitoring a Process",
            "headings": [
                "Understand the Objectives",
                "Complete the Prerequisites",
                "Follow These Steps",
                "Find the host ID for the process.",
                "Learn What This Step Does",
                "Issue This Command",
                "Copy the Host's ID",
                "Stop monitoring the process that matches the host ID.",
                "Learn What This Step Does",
                "Issue This Command",
                "Verify that Cloud Manager no longer monitors the process.",
                "Learn What This Step Does",
                "Issue This Command",
                "Check the Response Details"
            ],
            "paragraphs": "This tutorial shows you how to stop  monitoring a process . Once you\nstop monitoring a process,  Cloud Manager  stops displaying its status and tracking its\nmetrics. Learn how to use the Cloud Manager Administration API to: Find the host ID for the process. Stop monitoring the process that matches the host ID. Verify that  Cloud Manager  no longer monitors the process. Complete these prerequisites before you complete the tutorial. Configure your access to the Cloud Manager Administration API . Get the permissions needed to change monitoring settings. You need one of\nthe following roles: Project Monitoring Admin Project Owner Terminate the backups  for the process before you\nstop monitoring it. Complete all the following steps to use the API to stop monitoring a process. Use the  Get One Host by Hostname and Port \nresource to find the process and retrieve the  id  value. The  Get One Host by Hostname and Port \nresource uses the hostname and port you specify to find the process. Then, it\nreturns information about this process. You can find the  id  needed for the\nnext step in the response. Copy the following curl command. Paste it into your preferred terminal or\nconsole. Replace the displayed placeholders with these values: Replace the placeholders in the command, then execute it. Placeholder Description {PUBLIC-KEY} Public part of your  API (Application Programming Interface)  key. {PRIVATE-KEY} Private part of your  API (Application Programming Interface)  key. {PROJECT-ID} Unique identifier of the project that owns the host. {HOSTNAME} Primary hostname that  Cloud Manager  uses to connect to the instance.\nThis may be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6) \naddress. {PORT} Port on which the process listens. In the response body, copy the value returned in the  id  field. You need the\nvalue for the next step. Use the  Stop Monitoring One Host  resource\nto stop monitoring the host. The  Stop Monitoring One Host  resource\ndoesn't actually delete the host.\nThe resource deletes the host from the list of hosts that  Cloud Manager  monitors. This\nremoves the process from monitoring. Copy the following curl command. Paste it into your preferred terminal or\nconsole. Replace the displayed placeholders with these values: Replace the placeholders in the command, then execute it. Placeholder Description {PUBLIC-KEY} Public part of your  API (Application Programming Interface)  key. {PRIVATE-KEY} Private part of your  API (Application Programming Interface)  key. {PROJECT-ID} Unique identifier of the project that owns the host. {HOST-ID} Unique identifier of the host for the process. Use the  id  from\nstep 1. Use the  Get One Host by Hostname and Port \nresource again to attempt to find the process using its hostname and port. Then, verify\nthat  details  returns  No host with hostname\nand port {HOSTNAME}:{PORT} exists in group {PROJECT-ID} . The  Get One Host by Hostname and Port \nresource uses the hostname and port you specify to find the process. Then, it\nreturns information about this process. You can tell that  Cloud Manager  doesn't monitor\nthe process if the  details  value in the response is  No host with hostname\nand port {HOSTNAME}:{PORT} exists in group {PROJECT-ID} .\nThis means that  Cloud Manager  can't find the host in the\nlist of processes that it monitors. Copy the following curl command. Paste it into your preferred terminal or\nconsole. Replace the displayed placeholders with these values: Replace the placeholders in the command, then execute it. Placeholder Description {PUBLIC-KEY} Public part of your  API (Application Programming Interface)  key. {PRIVATE-KEY} Private part of your  API (Application Programming Interface)  key. {PROJECT-ID} Unique identifier of the project that owns the host. {HOSTNAME} Primary hostname that  Cloud Manager  uses to connect to this\ninstance. This may be a hostname, an FQDN, an IPv4 address, or an IPv6\naddress. {PORT} Port on which the process listens. In the response body, check the value returned in the  details  field. If\n details  returns  No host with hostname\nand port {HOSTNAME}:{PORT} exists in group {PROJECT-ID} , you succeeded.  Cloud Manager  no longer monitors the process.",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/byName/{HOSTNAME}:{PORT}\""
                },
                {
                    "lang": "json",
                    "value": "{\n  \"alertsEnabled\" : true,\n  \"aliases\": [ \"server1.example.com:27017\", \"203.0.113.3:27017\" ],\n  \"authMechanismName\" : \"SCRAM-SHA-1\",\n  \"clusterId\" : \"<cluster-ID-1>\",\n  \"created\" : \"2021-04-22T19:56:50Z\",\n  \"groupId\" : \"<project-ID-1>\",\n  \"hasStartupWarnings\" : false,\n  \"hidden\" : false,\n  \"hostEnabled\" : true,\n  \"hostname\" : \"server1.example.com\",\n  \"id\" : \"{HOST-ID}\",\n  \"ipAddress\": \"203.0.113.3\",\n}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request DELETE \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/{HOST-ID}\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/hosts/byName/{HOSTNAME}:{PORT}\""
                }
            ],
            "preview": "This tutorial shows you how to stop monitoring a process. Once you\nstop monitoring a process, Cloud Manager stops displaying its status and tracking its\nmetrics.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-fatal-log-rotation",
            "title": "Update Agent to Enable Fatal Log Rotation",
            "headings": [
                "Reinstall the MongoDB Agent",
                "Stop the MongoDB Agent.",
                "Reinstall the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Stop the MongoDB Agent.",
                "Reinstall the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Stop the MongoDB Agent.",
                "Reinstall the MongoDB Agent.",
                "Start the MongoDB Agent."
            ],
            "paragraphs": "If you have upgraded the MongoDB Agent to 12.8 or later from 12.7 or\nearlier, you must manually reinstall your current MongoDB Agent version\n(12.8+) to enable fatal log file rotation. For new installations of the MongoDB Agent (12.8+), fatal log file rotation is automatically enabled. Fatal log file rotation helps to maintain a\nuseful  automation-agent-fatal.log  file by rotating the file on a\nregular basis and deleting only the oldest logs. To reinstall the MongoDB Agent to enable fatal log file rotation, follow\nthe procedure for your distribution: Stop the MongoDB Agent using the appropriate command for your agent\nprocess. If you started your agent process with  systemd , run the following\ncommand: If you started your agent process with  init.d , run the following\ncommand: Use the installation instructions that apply to your MongoDB Agent\nuse case: At the top of the installation page, select\n RHEL/CentOS/SLES/AMZ  and follow the procedure to install\nthe MongoDB Agent. If you use MongoDB Agent to manage deployments, follow the\ninstructions to\n Install the MongoDB Agent to Manage Deployments , or If you use MongoDB Agent to only monitor or back up deployments,\nfollow the instructions to\n Install the MongoDB Agent to Only Monitor or Backup Deployments . Using your terminal, start the MongoDB Agent with the appropriate\ncommand for your system: To start the agent process with  systemd , run the following\ncommand: To start the agent process with  init.d , run the following\ncommand: The reinstalled MongoDB Agent rotates the  automation-agent-fatal.log  file when the MongoDB Agent restarts or when the file reaches 100 MiB. The MongoDB Agent retains the new  automation-agent-fatal.log  file and five rotated logs. Stop the MongoDB Agent using the following command: Use the installation instructions that apply to your MongoDB Agent\nuse case: At the top of the installation page, select\n Ubuntu/ Debian  and follow the procedure to install\nthe MongoDB Agent. If you use MongoDB Agent to manage deployments, follow the\ninstructions to\n Install the MongoDB Agent to Manage Deployments , or If you use MongoDB Agent to only monitor or back up deployments,\nfollow the instructions to\n Install the MongoDB Agent to Only Monitor or Backup Deployments . Using your terminal, start the MongoDB Agent with the following\ncommand: The reinstalled MongoDB Agent rotates the  automation-agent-fatal.log  file when the MongoDB Agent restarts or when the file reaches 100 MiB. The MongoDB Agent retains the new  automation-agent-fatal.log  file and five rotated logs. Stop the MongoDB Agent using the following command: Use the installation instructions that apply to your MongoDB Agent\nuse case: At the top of the installation page, select\n Linux  and follow the procedure to install\nthe MongoDB Agent. If you use MongoDB Agent to manage deployments, follow the\ninstructions to\n Install the MongoDB Agent to Manage Deployments , or If you use MongoDB Agent to only monitor or back up deployments,\nfollow the instructions to\n Install the MongoDB Agent to Only Monitor or Backup Deployments . Using your terminal, run the following command with: The path to your configuration file The path to save the fatal log file",
            "code": [
                {
                    "lang": "sh",
                    "value": "sudo systemctl stop mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent stop"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl stop mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "sh",
                    "value": "pkill -f mongodb-mms-automation-agent"
                },
                {
                    "lang": "sh",
                    "value": "nohup /bin/bash -c \"./mongodb-mms-automation-agent --config=./example/path/to/config 2>&1 | ./fatallogger -logfile ./example/path/to/log 2>&1\""
                }
            ],
            "preview": "If you have upgraded the MongoDB Agent to 12.8 or later from 12.7 or\nearlier, you must manually reinstall your current MongoDB Agent version\n(12.8+) to enable fatal log file rotation.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-automation-configuration",
            "title": "Update the Automation Configuration",
            "headings": [
                "Prerequisites",
                "Variables for Automation Config API Resources",
                "Procedure",
                "Retrieve and validate the automation configuration from Cloud Manager.",
                "Edit the downloaded automation configuration file.",
                "Send the updated automation configuration.",
                "Confirm successful update of the automation configuration.",
                "Check the deployment status to ensure goal state is reached."
            ],
            "paragraphs": "A project's  automation configuration \ndetermines the goal state of its MongoDB processes and agents. The\nMongoDB Agent builds the deployment according to the goals specified. To update the configuration: Retrieve the current configuration. Make changes as needed, changing only those items you want modified. Replace the entire configuration using  PUT .\nYou must use  PUT .  Do not  use  PATCH . Some parameters cannot be updated through the  automationConfig \nendpoint. To learn more, see: Update Agent Versions Update Backup Configuration Settings Update Monitoring Configuration Settings You must have access to the  API (Application Programming Interface) . To learn more, see\n Configure API Access . The API resources use one or more of these variables. Replace these\nvariables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project from your\nproject settings. CLUSTER-ID string Unique identifier of your cluster. Use the  automationConfig \nresource to retrieve the configuration. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Validate the downloaded Automation Configuration file. Compare the  version  field of the\n currentAutomationConfig.json  with that of the Automation\nConfiguration backup file,  mms-cluster-config-backup.json . The\n version  value is the last element in both  JSON (Javascript Object Notation)  documents.\nYou can find this file on any host running the MongoDB Agent at: If the  version  values match, you are working with the current\nversion of the Automation Configuration file. Linux and macOS:  /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json Windows:  %SystemDrive%\\MMSAutomation\\versions\\mms-cluster-config-backup.json Open  currentAutomationConfig.json  in your preferred text editor. To learn more about the automation configuration options, see\n Automation Configuration . If you're updating the MongoDB Agent, see\n Update Agent Versions  before continuing\nwith this procedure. Use the  automationConfig \nresource to send the updated automation configuration. Issue the following command with path to the updated configuration\ndocument and replace the placeholders with the Variables for Automation Config API Resources. Upon successful update of the configuration, the API returns the HTTP\n 200 OK  status code to indicate the request has succeeded. Retrieve the automation configuration from  Cloud Manager  and confirm it\ncontains the changes. To retrieve the configuration, issue the\nfollowing command, replacing the placeholders with the\nVariables for Automation Config API Resources. Use the  automationStatus \nresource to retrieve the deployment status. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Confirm that the values of all the  lastGoalVersionAchieved  fields\nin the  processes  array match the  goalVersion  field. To learn\nabout deployment status, see  Get Automation Status of Latest Plan .",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\"\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data @currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true\""
                }
            ],
            "preview": "A project's automation configuration\ndetermines the goal state of its MongoDB processes and agents. The\nMongoDB Agent builds the deployment according to the goals specified.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/disable-backup",
            "title": "Disable the Backup Service",
            "headings": [
                "Overview",
                "Procedure",
                "Stop and then terminate each deployment enrolled in Backup.",
                "Stop all Backups."
            ],
            "paragraphs": "Disabling  Cloud Manager  Backup immediately deletes all snapshots. Later, if you\nwant re-enable Backup,  Cloud Manager  behaves as if your deployments had never been\nbacked up and requires an  inital sync . In  Cloud Manager , click  Continuous Backup . For each deployment enrolled in Backup: Click the backup's ellipsis icon and click  Stop . Click the  Stop  button. If prompted for an authentication code, enter the code. Once the backup has stopped, click the backup's ellipsis icon and click  Terminate . Click the  Terminate  button. See  Start or Stop the Backup Agent .",
            "code": [],
            "preview": "Disabling Cloud Manager Backup immediately deletes all snapshots. Later, if you\nwant re-enable Backup, Cloud Manager behaves as if your deployments had never been\nbacked up and requires an inital sync.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-mongodb-agent-from-automation-agent",
            "title": "Update from Deployments with Managed and Unmanaged Agents",
            "headings": [
                "Procedure",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Update automated hosts to MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Next Steps"
            ],
            "paragraphs": "You have a project with automated MongoDB deployments that may include\nboth Automation-managed and standalone Backup and Monitoring Agents.\nYou want to update to the MongoDB Agent. To update to the MongoDB Agent, use the following procedures: For any standalone legacy Agents: Update from the legacy Monitoring Agent Update from the legacy Backup and Monitoring Agents For those hosts where Automation manages Monitoring/Backup Agents: Update from all legacy Agents If you want to start or continue using Automation to manage your\nMongoDB deployments, please review the\n MongoDB Agent Prerequisites  before updating to the\nMongoDB Agent. The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If your project has hosts that use Automation, you can\nupdate the Agents on those hosts to the MongoDB Agent. All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. Click  Update All . Wait until all hosts show  Updated . Click  Next . The legacy Automation Agent credentials become the MongoDB Agent\ncredentials used for Automation. These credentials should not need\nmodification. However, if you need to modify them, navigate to\n Deployment \n   Security \n   Settings \n   Edit Settings . At the  Final Steps  modal, the legacy Backup and\nMonitoring Agents are put into standby mode. Click\n Finish . After the MongoDB Agent update completes: If you did not update Backup or Monitoring Agents when you installed\nthe MongoDB Agent, you can activate\n Backup ,\n Monitoring , or both on your MongoDB\ndeployment. Stop  and\n remove  the legacy\nMonitoring Agent. Stop  and\n remove  the legacy Backup\nAgent.",
            "code": [],
            "preview": "You have a project with automated MongoDB deployments that may include\nboth Automation-managed and standalone Backup and Monitoring Agents.\nYou want to update to the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/migrate-to-atlas",
            "title": "Migrate from Cloud Manager to Atlas",
            "headings": [
                "Overview",
                "Restrictions",
                "Supported Platforms",
                "Prerequisites",
                "Add Your Deployment to Cloud Manager",
                "Add Credentials for Monitoring",
                "Consider Configuring a VPC Peering Connection or Private Endpoints",
                "Create a Cluster in Atlas",
                "Workflow for Live Migration"
            ],
            "paragraphs": "To live migrate data from the  Cloud Manager -monitored deployments to\nclusters in  Atlas , you: You begin the process in  Atlas , by running the live migration wizard.\nDepending on the stage in the process, you perform the live migration steps either\nin  Atlas  or in  Cloud Manager . See  Workflow for Live Migration . To live migrate your MongoDB Community deployments to\n Atlas  using  Cloud Manager , see  Migrate a MongoDB Community Deployment to Atlas . Add your deployment to  Cloud Manager  if you haven't already done so. Add credentials to Monitoring. Prepare a cluster in  MongoDB Atlas . Provision a migration host in  Cloud Manager  and connect  Cloud Manager  to  Atlas . Start the live migration process in  Atlas . You can't select an  M0  free cluster or  M2/M5  shared cluster\nas the source or target for Live Migration. To migrate data from an\n M0  free cluster or  M2/M5  shared cluster to a paid cluster,\nsee  Modify a Cluster . The list of supported platforms depends on which type of live migration\nyou are using: For live migrations of MongoDB 6.0.8+ clusters monitored by  Cloud Manager  to  Atlas ,\nsee  mongosync platforms  to review\nthe list of supported platforms for the migration host. For live migrations of source clusters running MongoDB versions 4.4.x\nor 5.0.x (FCV), the live migration to  Atlas \n is supported  for all\nplatforms on which you can provision a migration host. Provisioning of the migration host is not supported on Windows or macOS.\nYou can still live migrate your data from a Windows-based deployment\nto  Atlas  if you provision your migration host on one of its\nsupported platforms. You can't live migrate your data from a macOS-based\ndeployment to  Atlas . Before you begin the live migration process, follow these prerequisites. Follow the procedure to  Add MongoDB Processes . When you add your  deployment to  Cloud Manager , you need to add credentials for Monitoring only,  not for Automation or Backup. Adding your deployment for\nMonitoring  imports your deployment's metadata into  Cloud Manager  to help with the live migration process. It doesn't import your deployment's actual data. To\nlearn more about authentication credentials, see  Authentication Use Cases . To add credentials for  Monitoring : Create the credentials to the deployment. See\n Required Access for Monitoring . Add the credentials based on your project's authentication mechanism.\nSee  Add Authentication Credentials to your Deployment . If you're adding your MongoDB deployment to monitoring so that you can live migrate it to  Atlas , you don't need to add credentials for\nAutomation and Backup. To learn more, see  Authentication Use Cases . For information about support for VPC peering connections and private endpoints,\nsee the  MongoDB Atlas  documentation for your type of live migration: Live Migrate Your MongoDB 6.0.8 or Later Cluster Monitored by Cloud Manager to Atlas Live Migrate Your Data from Ops Manager or Cloud Manager Sharded clusters, multi-region clusters, and multi-cloud\nclusters don't support live migration through private endpoints.\nPrivate endpoints are supported ONLY for live migration of replica sets\ndeployed within a single cloud provider and single region. Perform these tasks in  Atlas : Create an Atlas account . Create an Atlas organization . Create a project \nin this organization. Create a new cluster \nin your project. The stages in the live migration workflow are: Stage 1: Link with Atlas . Perform this step in  Atlas ,\nafter  provisioning a cluster . In the left-side panel of your organization's page in  MongoDB Atlas ,\nclick  Live Migration . Select  Migrate from Ops Manager or Cloud Manager  and start\nthe live migration wizard. Even though the UI mentions  Ops Manager ,\ndepending on the type of the source cluster you are migrating to  Atlas ,\nonly  Cloud Manager  is supported with that source cluster. Specifically,\nfor source clusters running MongoDB 6.0.8 or later, you can monitor\nthem in  Cloud Manager  only but not in  Ops Manager . In the  Generate Link-Token  step of the wizard, create\nthe link-token. You will use this link-token in the next stage. Stage 2: Provision Migration Host . In  Cloud Manager ,  provision a Migration Host .\nA migration host is a dedicated MongoDB Agent that orchestrates the\nlive migration process from  Cloud Manager  to  Atlas . In the  Live Migration: Connect to Atlas  section of your\n Cloud Manager  organization's  Settings  page, select\n Connect to Atlas  and enter the\nlink-token that you created in  Atlas . Stage 3: Start the Migration . In  Atlas , follow the\nsteps in the wizard to start the live migration process.",
            "code": [],
            "preview": "To live migrate data from the Cloud Manager-monitored deployments to\nclusters in Atlas, you:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-aws-integration",
            "title": "Configure AWS Integration",
            "headings": [
                "Considerations",
                "Rolling Resync onto New EC2 Instances",
                "Create a new EC2 instance for each member of the replica set.",
                "Replace each non-primary replica set member with a new EC2 instance.",
                "Change your application connection string to use the AWS EC2 hostnames.",
                "Replace the primary with a new EC2 instance.",
                "Update a Replica Set's Hostnames",
                "Connect to the primary.",
                "Remove a secondary member from the replica set and re-add it using its EC2 hostname.",
                "Change your application connection string to use the AWS EC2 hostnames.",
                "Reconnect to the primary and step it down.",
                "Connect to the new primary.",
                "Remove the old primary from the replica set and re-add it using its EC2 hostname."
            ],
            "paragraphs": "If you want to continue using  Cloud Manager  to manage these deployments,\nupdate the hostname for each host using one of the following methods for\na replica set: The ability to provision MongoDB servers in  AWS (Amazon Web\nServices)  using  Cloud Manager  was retired in October 2017. Any existing clusters continue as they are. This retirement impacts  DNS (Domain Name Service)  entries\nin the following ways: Entries for existing servers continue to resolve to the same IP\naddress to which they currently resolve until at least\nJanuary 1, 2023. Servers that undergo a change of IP address due to maintenance\nor an instance stop/restart will no longer be resolvable via\ntheir  mongodbdns.com  hostname. All existing  mongodbdns.com  hostnames will stop working in\nMay 2023. Cloud Manager  can manage hosts provisioned directly through\n AWS (Amazon Web Services) . See\n Provision Servers for Automation . If you are interested in fully managed provisioning on\n AWS (Amazon Web Services) , evaluate\n MongoDB Atlas . Rolling Resync onto New EC2 Instances Update a Replica Set's Hostnames These procedures involve stepping down the old primary and triggering\nat least one election for a new primary. All writes to the primary\nfail during the period starting when the\n rs.stepDown()  method is received until either a\nnew primary is elected, or if there are no electable secondaries, the\noriginal primary resumes normal operation. For MongoDB versions 4.0 and\nearlier, all client connections are closed. Consider performing this procedure during a maintenance window during\nwhich applications stop all write operations to the cluster. To learn more about elections, see\n rs.stepDown() behavior  and\n Replica Set Elections . Repeat for each non-primary replica set member. Add a new instance to the replica set using its EC2 hostname. To\nlearn more, see\n Add Members to a Replica Set . Wait for the initial sync to complete. To learn how to get the\nstatus of an initial sync, see the\n MongoDB manual . Remove one old replica set member with a  mongodbdns.com \nhostname. To learn more, see\n Remove Members from Replica Set . Add the last new instance to the replica set using its EC2\nhostname. To learn more, see\n Add Members to a Replica Set . Wait for the initial sync to complete. To learn how to get the\nstatus of an initial sync, see the\n MongoDB manual . Connect to the primary and step it down. To learn more, see\n rs.stepDown() . Stepping down the primary triggers at least one election for a\nnew primary. To learn more about elections, see\n Replica Set Elections . Remove the old primary with the  mongodbdns.com  hostname from\nthe replica set. To learn more, see\n Remove Members from Replica Set . Follow the  Change Hostnames while Maintaining Replica Set Availability  procedure in\nthe MongoDB manual. An overview of the linked procedure is as follows: Repeat for each non-primary member of the replica set. Stepping down the primary triggers at least one election for a new\nprimary. To learn more about elections, see\n Replica Set Elections .",
            "code": [],
            "preview": "If you want to continue using Cloud Manager to manage these deployments,\nupdate the hostname for each host using one of the following methods for\na replica set:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/convert-standalone-to-replica-set",
            "title": "Convert a Standalone to a Replica Set",
            "headings": [
                "Overview",
                "Procedure",
                "Navigate to the Clusters view for your deployment.",
                "Click the ... ellipses for the process and select Convert to Replica Set.",
                "Enter the replica set name.",
                "Configure Cluster-Wide Settings",
                "Configure each Replica Set Member.",
                "Configure the Replica Set Settings.",
                "Set any advanced configuration options for your MongoDB replica set.",
                "Review the changes.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "Cloud Manager  provides the ability to convert a  standalone  instance to\na  replica set . When converted, the replica set will have the\nformer standalone instance as its primary. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Enter the replica set name and click the  Convert  button. Cloud Manager  displays the  Editing Replica Set  view.\nThe following steps describe the contents of each section\nin that view. The replica set name is immutable once deployed. This setting\ncorresponds to the  _id  replica\nconfiguration option. The  Replica Set Configuration  section contains the\nfollowing cluster-wide configuration settings. Settings\nwhose values are grey and non-interactive are immutable. Setting Description Replica Set Id Enter the name of your replica set deployment. You cannot change\nthis once set. This setting corresponds to the\n _id  replica configuration option. Auth Schema Version Select the schema for storing the user for storing the user data for\nyour deployment. If you are upgrading from a MongoDB version older\nthan 3.0, MongoDB 3.0+ uses a different schema for user data\nthan previous versions. For compatibility information, see the\n Security Changes \nin the MongoDB 3.0 release notes. Feature Compatibility Version Select the  Feature Compatibility Version  of the\ndeployment.  Cloud Manager  displays this field if your deployment runs\nMongoDB version 3.4 or later. Replica Set Settings Displays an table of each process associated with the replica\nset. You can configure the MongoDB server version, data directory,\nand log path of each process. Process Name Hostname and port of a  mongod  process. This hostname can be a\nhostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address.  Cloud Manager \ninitially groups each process under the replica set name. Click the\n  to the left of the replica set name to display\nall  mongod  processes in the replica set. Cloud Manager  applies any settings configured for the replica set to all\nof its associated processes. Version Select the MongoDB server version of the  ~bin.mongod  process. Version Select the MongoDB server version of the  ~bin.mongod  process. Data Directory Specify the directory where the  ~bin.mongod  process stores\ndata files. This setting corresponds to the\n storage.dbPath   ~bin.mongod  configuration file\noption. The  Cloud Manager  Automation must have file system permission\nto read, write, and execute all files and folders in the\nspecified directory. Each  ~bin.mongod  process must have its own database\ndirectory. If deploying multiple  ~bin.mongod \nprocesses on the same host, ensure each process has its own\ndistinct directory. Log File Specify the full path to the  ~bin.mongod  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n ~bin.mongod  must have permission to read and write to the\nspecified file. The  ~bin.mongod  have its own unique log file. If deploying multiple\n ~bin.mongod  processes to the same host, ensure each  ~bin.mongod  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n ~bin.mongod  to store its logfile to  /var/log/mongodb/  as\n mongo.log . Cloud Manager  lists each replica set member under the\n MongoD Settings  heading of the\n Member Configuration  section. Each replica set member\nhas the following options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Replica Set Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. The  Replication Settings  section contains the following\nconfiguration options for the replica set: Setting Description Protocol Version Select the replication protocol version used by the replica set.\nThis setting corresponds to the\n protocolVersion \nreplica set configuration option. For more information, see  Replica Set Protocol Versions . Chaining Allowed Specify  true  to allow  secondary \nmembers to replicate from other secondary members. This setting\ncorresponds to the\n chainingAllowed \nreplica set configuration option. Write Concern Majority Journal Default Determines the behavior of\n {w:\"majority\"} \nwrite concern if the write concern does not explicitly\nspecify the journal option\n j . This setting corresponds to the\n writeConcernMajorityJournalDefault \nreplica set configuration option. Heartbeat Timeout (secs) Specify the number of seconds that the replica set members wait for\na successful heartbeat from each other. This setting corresponds to\nthe  heartbeatTimeoutSecs \nreplica set configuration option. Election Timeout (ms) Specify the time limit in milliseconds for detecting when a replica\nset's  primary  is unreachable. This setting corresponds to\nthe  electionTimeoutMillis \nreplica set configuration option. CatchUp Timeout (ms) Specify the time limit in milliseconds for a newly elected\n primary  to sync, or catch up, with the other replica\nset members that may have more recent writes. This setting\ncorresponds to the\n catchUpTimeoutMillis \nreplica set configuration option. CatchUp Takeover Delay (ms) Specify the time in milliseconds a node waits to initiate a\n catchup takeover  after determining it is ahead of the\ncurrent  primary . This setting corresponds to the\n catchUpTakeoverDelayMillis \nreplica set configuration option. Last Error Defaults Specify the default  write concern  for the replica set. The\nreplica set uses this write concern only when write operations or\n getLastError  specify\nno other write concern. If this option is not set, the default write concern for the\nreplica set only requires confirmation from the  primary . Specify this option in the form of a document, i.e.,  {\"w\":2} . Force Reconfigure Specify that you want to force a reconfiguration of the replica\nset. When set to  Yes , the MongoDB Agent forces the replica set\nto accept a new configuration even if a majority of its members are\nunavailable. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Server Manual. The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: Cloud Manager  lists each process in the cluster grouped logically. Click\nthe grey arrow to the left of the logical grouping to display\nits sub-groupings and processes. You can modify the advanced options\nfor each process individually as necessary. For descriptions of the available  Advanced Configuration\nOptions , see  Advanced Options for MongoDB Deployments . Click  Add Advanced Options . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to every process of the selected process type\nin the cluster. Review the details of the replica set. When ready, click the\n Save  button. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "Cloud Manager provides the ability to convert a standalone instance to\na replica set. When converted, the replica set will have the\nformer standalone instance as its primary.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-auditing",
            "title": "Configure and Deploy Auditing",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Click Deployment, then Processes.",
                "Click Modify next to the MongoDB process for which you want to configure auditing.",
                "Click Advanced Configuration Options.",
                "Click + Add Option.",
                "Select auditLogDestination from the Startup Option menu.",
                "Select the desired destination for audit events from the Value menu.",
                "(Optional) If you selected file as the audit log destination, repeat step 4 and specify the following additional properties:",
                "(Optional) To filter which events are audited, repeat steps 1-4 and add the auditLogFilter property.",
                "Click Apply to deploy your auditing configuration."
            ],
            "paragraphs": "MongoDB Enterprise provides the capability to audit  mongod \nand  mongos  instances. The auditing facility allows\nadministrators and users to track system activity for deployments\nwith multiple users and applications. Administrators can configure\nauditing to write to the console,  syslog , a JSON\nfile or a BSON file. You can also use filters to restrict which events\nare logged. If you're running MongoDB Enterprise version 5.0 or later and\nMongoDB Agent 11.11.0.7355 or later, you can: If you're running earlier versions of MongoDB Enterprise or the\nMongoDB Agent,  Cloud Manager : MongoDB Community users can rotate, compress, and delete the server logs\nonly. Set separate rules for rotating server logs and audit logs. Compress and delete audit logs using  Cloud Manager . For security reasons, we recommend managing\nyour audit log compression and deletion outside of  Cloud Manager . Uses your  System Log Rotation  settings to rotate both the\nserver logs and the audit logs. Doesn't compress or delete audit logs. If you configure compression and\ndeletion,  Cloud Manager  applies these settings to the server logs only. For more general information about auditing, including the audit\nguarantee, see  Auditing . For details about\naudited events, see  Audit Event Actions, Details, and Results . For\ninformation about setting up filters, see  Configure Audit\nFilters . Your  Cloud Manager  cluster must run MongoDB Enterprise, version 2.6 or later,\nto configure and deploy auditing. auditLogFormat :  JSON  or  BSON auditLogPath : the desired location of the audit log file For information about how to create filters, see\n Configure Audit Filters .",
            "code": [],
            "preview": "MongoDB Enterprise provides the capability to audit mongod\nand mongos instances. The auditing facility allows\nadministrators and users to track system activity for deployments\nwith multiple users and applications. Administrators can configure\nauditing to write to the console, syslog, a JSON\nfile or a BSON file. You can also use filters to restrict which events\nare logged.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-alert-configurations",
            "title": "Configure Alert Settings",
            "headings": [
                "Overview",
                "Considerations",
                "SMS Delivery",
                "Alert Intervals",
                "Default Alert Configurations",
                "Default Settings for Notification Options",
                "Create an Alert Configuration",
                "Navigate to the Alerts page for your organization.",
                "Choose whether to create a new alert setting or clone an existing one.",
                "Choose the Target.",
                "Choose the Condition.",
                "Select the Notification Method.",
                "Click Save.",
                "Navigate to the Alerts page for your project.",
                "Choose whether to create a new alert setting or clone an existing one.",
                "Select the condition that triggers the alert.",
                "Optional: Apply the alert only to specific targets.",
                "Select the alert recipients and delivery methods.",
                "Click Save.",
                "Delete an Alert Configuration",
                "Navigate to Alert Settings.",
                "Choose the alert setting to delete.",
                "Navigate to the Alert Settings tab.",
                "Choose the alert setting to delete.",
                "Disable or Enable an Alert Configuration",
                "Navigate to Alert Settings.",
                "Choose the alert setting to disable.",
                "Navigate to the Alert Settings tab.",
                "Choose the alert setting to disable.",
                "View the History of Changes to an Alert Configuration",
                "Navigate to the Alert Settings tab.",
                "On the line listing the alert configuration, click the ellipsis icon and select History.",
                "Navigate to the Alert Settings tab.",
                "Click either the Active Alerts or Deleted Alerts filter, depending on the configuration's status.",
                "On the line listing the alert configuration, click the ellipsis icon and select History."
            ],
            "paragraphs": "An alert configuration defines the  conditions \nthat trigger an alert and the alert's notification methods. An alert\nconfiguration applies to the project in which you create it. Many factors may affect alert delivery, including do not call lists,\ncaps for messages sent or delivered, delivery time of day, and message\ncaching. Check with your telephone service contract for the costs associated\nwith receiving text messages. If you choose SMS,  Cloud Manager  sends alert text messages to all users in the\nproject who have a mobile number associated with their user account. You can create multiple alert configurations with different\nfrequencies. The minimum frequency for an alert is 5 minutes. The time between re-notifications increases by the frequency amount\nevery alert cycle up to a maximum of 24 hours. For example, if the\nfrequency amount is 5 minutes, and the alert condition is first\ntriggered at 9am, subsequent alerts occur at 9:05am, 9:15am, 9:30am,\netc. You can set the time to elapse before  Cloud Manager  sends an alert after an\nalert condition occurs. This helps eliminate false positives. Cloud Manager  provides no default alerts for organizations. Cloud Manager  creates the following alert configurations for a project\nautomatically upon creation of the project: If you enable Backup,  Cloud Manager  creates the following alert\nconfigurations for the project, if they do not already exist: If you enter a payment method,  Cloud Manager  creates the following alert configuration: User joined the project ( JOINED_GROUP ) Host is exposed to the public Internet Host's SSL certificate will expire within 30 days Monitoring is down ( MONITORING_AGENT_DOWN ) Backup oplog is behind ( OPLOG_BEHIND ) Backup requires a resync ( RESYNC_REQUIRED ) Cluster is missing an active mongos ( CLUSTER_MONGOS_IS_MISSING ) CREDIT_CARD_ABOUT_TO_EXPIRE Host has security recommendations Query Targeting: Scanned Objects / Returned is The default configuration sends an alert only if the\nratio of documents scanned to documents returned meets or\nexceeds the specified threshold for at least 10 minutes. To configure default settings for one of the above notification\noptions, click  Integrations  under  Projects  in\nthe sidebar. Locate the notification option and enter the default\nvalues. Cloud Manager  will fill in the default values automatically when a user\nselects that option when creating an alert configuration. If the key,\ntoken, or  URL (Uniform Resource Locator)  that is used to send the notification becomes invalid,\n Cloud Manager  will send an email to the project owner and will eventually\nremove the key, token, or  URL (Uniform Resource Locator) . You can configure default settings for the following\nnotification options: Cloud Manager  Organization Cloud Manager  User Email SMS HipChat Slack PagerDuty VictorOps Opsgenie You can configure default settings for the following\nnotification options: Cloud Manager  Organization Cloud Manager  User Email SMS HipChat Slack PagerDuty VictorOps Opsgenie When you create a new alert, you can clone an existing alert. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. To create a new alert: To clone an existing alert setting: Click  Add Alert . Click the  Alert Settings  tab. Locate the alert setting you want to clone. Click   then  Clone  in that alert\nsetting's row. Click  User  or  Billing  under\n Select a Target . Under the  Add Notification Method  heading, click the\nbutton for the particular notification method you want to use. Notification Option User Alerts Billing Alerts Description Cloud Manager  Organization Sends the alert by email or text message to users with specific roles\nin the Organization. Select the Organization roles that should receive the alerts from\nthe  Select Role(s)  check boxes or select\n All Roles  for all users in the Organization to receive\nthe alert. Select  SMS  to send these alerts to the mobile number\nconfigured for each  Cloud Manager  Organization user in their\n Account page . Select  Email  to send these alerts to the email address\nconfigured for each  Cloud Manager  Organization user in their\n Account page .  Email  is checked\nby default. Cloud Manager  User Sends the alert to a  Cloud Manager  user, either by email or text\nmessage. Select  SMS  to send these alerts to the mobile number\nconfigured for the  Cloud Manager  user's account. Select  Email  to send these alerts to the email address\nconfigured for the  Cloud Manager  user's account.  Email  is\nchecked by default. Email Sends the alert to any email address you provide. Mobile Number Sends the alert to a phone number.  Cloud Manager  removes all letters and\npunctuation except the  + . For international (non-U.S.) phone numbers,\n format phone numbers using the E.164 standard .\n Cloud Manager  uses the U.S.-based  Twilio  to send\ntext messages. If you want to use a non-U.S. phone number, try using a\n Google Voice  phone number. For New Zealand, enter  +64  before the phone number. Slack Sends the alert to a Slack channel in the authorized Slack workplace\nfor the Organization. To learn more about Bot users in Slack, see the\n Slack documentation . Enter the channel name and either an  API (Application Programming Interface)  token or a Bot token. To create an  API (Application Programming Interface)  token, see the  API \npage in your Slack account. PagerDuty Sends the alert to a  PagerDuty \naccount. Enter only the PagerDuty integration key. Define escalation\nrules and alert assignments directly in PagerDuty. Acknowledge PagerDuty alerts from the PagerDuty dashboard. All new PagerDuty keys use their  Events API v2 .\nIf you have an Events API v1 key, you can continue to use that key\nwith  Cloud Manager . VictorOps Sends the alert to a\n VictorOps  account. Acknowledge VictorOps alerts from the VictorOps dashboard. In  Cloud Manager , enter the following VictorOps setting information: API key .\nThis integrates the VictorOps endpoint for alerts. Routing key .\nThis optional setting routes alerts to a specific VictorOps group. Click  Post Test Alert  to test VictorOps configuration. Define escalation and routing rules directly in VictorOps. This option displays for alerts that require acknowledgement. You can\nuse this notification method on information alerts. These alerts\ninclude ones like\n User joined the organization . Opsgenie Sends the alert to an  Opsgenie  account. Acknowledge Opsgenie alerts \nfrom the Opsgenie dashboard. Enter the  OpsGenie Alert API \nkey in  Cloud Manager . Define escalation rules and alert assignments in Opsgenie. This option displays for alerts that require acknowledgement. You can\nuse this notification method on information alerts. These alerts\ninclude ones like\n User joined the organization . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. To create a new alert without cloning an existing setting: To clone an existing alert setting: Click  Add . Select  New Alert . Click the  Alert Settings  tab. Locate the alert setting you want to clone. Click   then  Clone  in that alert\nsetting's row. In the  Alert if  section, select the target component and\nthe condition. To learn more about alert conditions, see\n Alert Event Types . If the options in the  For  section are available, you can\noptionally filter the alert to apply only to a subset of the targets.\nThe filter uses a logical  OR  operator between each condition. The  matches  field can use regular expressions. In the  Send to  section: (Optional) To help reduce the false positives that  Cloud Manager \nsends, in the  send if condition lasts\nat least  field, specify the minutes to elapse before the\ncondition sends the alert. The next alert check that runs after\nthe specified time elapses sends the alert. (Optional) In the  resend after  field, specify the\nminutes to elapse before the condition resends the alert. Click  Add  and select\nfrom the options described in the following table. Notification Option Description Cloud Manager  Project Sends the alert by email or text message to users with specific roles\nin the Project. Select the Project roles that should receive the alerts from the\n Select Role(s)  check boxes or select  All\nRoles  for all users in the Project to receive the alert. Select  SMS  to send these alerts to the mobile number\nconfigured for each  Cloud Manager  Project user in their\n Account page . Select  Email  to send these alerts to the email address\nconfigured for each  Cloud Manager  Project user in their\n Account page .  Email  is checked by\ndefault. Cloud Manager  Organization Sends the alert by email or text message to users with specific roles\nin the Organization. Select the Organization roles that should receive the alerts from\nthe  Select Role(s)  check boxes or select\n All Roles  for all users in the Organization to receive\nthe alert. Select  SMS  to send these alerts to the mobile number\nconfigured for each  Cloud Manager  Organization user in their\n Account page . Select  Email  to send these alerts to the email address\nconfigured for each  Cloud Manager  Organization user in their\n Account page .  Email  is checked\nby default. Cloud Manager  User Sends the alert to a  Cloud Manager  user, either by email or text\nmessage. Select  SMS  to send these alerts to the mobile number\nconfigured for the  Cloud Manager  user's account. Select  Email  to send these alerts to the email address\nconfigured for the  Cloud Manager  user's account.  Email  is\nchecked by default. Cloud Manager  Team Sends the alert to a  Cloud Manager  user, either by email or text\nmessage. Select  SMS  to send these alerts to the mobile number\nconfigured for the  Cloud Manager  user's account. Select  Email  to send these alerts to the email address\nconfigured for the  Cloud Manager  user's account.  Email  is\nchecked by default. Email Sends the alert to a specified email address. SMS (short message service) Sends the alert to a phone number.  Cloud Manager  removes all letters and\npunctuation except the  + . For international (non-U.S.) phone numbers,\n format phone numbers using the E.164 standard .\n Cloud Manager  uses the U.S.-based  Twilio  to send\ntext messages. If you want to use a non-U.S. phone number, try using a\n Google Voice  phone number. For New Zealand, enter  +64  before the phone number. Slack Sends the alert to a Slack channel in the authorized Slack workplace\nfor the Organization. To learn more about Bot users in Slack, see the\n Slack documentation . Enter the channel name and either an  API (Application Programming Interface)  token or a Bot token. To create an  API (Application Programming Interface)  token, see the  API \npage in your Slack account. PagerDuty Sends the alert to a  PagerDuty \naccount. Enter only the PagerDuty integration key. Define escalation\nrules and alert assignments directly in PagerDuty. Acknowledge PagerDuty alerts from the PagerDuty dashboard. All new PagerDuty keys use their  Events API v2 .\nIf you have an Events API v1 key, you can continue to use that key\nwith  Cloud Manager . Webhook Sends an  HTTP (Hypertext Transfer Protocol)  POST request to an endpoint for programmatic\nprocessing. The request body contains a  JSON (Javascript Object Notation)  document that uses the\nsame format as the  Cloud Manager   API (Application Programming Interface) \n Alerts resource . To configure this option, configure the Webhook settings on the\n Project Settings page . To ensure your Webhooks work,  configure your firewall  to permit the Webhooks to access  Cloud Manager . If you delete an alert setting,  Cloud Manager  cancels active alerts related to\nthe setting. A deleted alert setting does not remain visible. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. Click the  Alert Settings  tab. On the row for a specific alert, click  \nthen  Delete . Click  Delete  in the  Delete Alert  modal or\nclick  Cancel  to leave the alert as configured. If you have not logged in within the five minutes of pushing\n Delete , you need to re-enter your password, then\nclick  Delete  again. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab. On the row for a specific alert, click  \nthen  Delete . Click  Confirm  in the  Confirm Delete  modal\nor click  Cancel  to leave the alert as configured. If you disable an alert setting,  Cloud Manager  cancels active alerts related to\nthe setting. A disabled alert setting remains visible but grayed-out\nand can be later re-enabled. If you need to disable an alert only for a period of time, you can\n suspend alerts . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. Click the  Alert Settings  tab. On the row for a specific alert, click  \nthen  Disable . Click   then  Enable  to re-enable the\nalert at any time. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab. On the row for a specific alert, click  \nthen  Disable . Click   then  Enable  to re-enable the\nalert at any time. You can view all alerts, alert settings, and deleted alerts on\nthe  Organization Alerts  page. To learn more, see\n Alerts Workflow . If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Alerts  in the sidebar. Click the  Alert Settings  tab. Cloud Manager  displays the history of changes to the alert configuration. You can view open alerts, closed alerts, and alert\nsettings on the  Project Alerts  page.\n Cloud Manager  sends notifications for all alerts\nthat appear on the  Open  tab. To learn more,\nsee  Alerts Workflow . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click the    Project Alerts  icon in the\nnavigation bar, or click  Alerts  in the sidebar. Click the  Alert Settings  tab. Cloud Manager  displays the history of changes to the alert configuration.",
            "code": [],
            "preview": "To configure default settings for one of the above notification\noptions, click Integrations under Projects in\nthe sidebar. Locate the notification option and enter the default\nvalues.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/edit-backup",
            "title": "Edit a Backup's Settings",
            "headings": [
                "Backup Settings Available to All FCV (Feature Compatibility Version)s",
                "Edit Snapshot Schedule and Retention Policy",
                "Click Continuous Backup.",
                "On the row for the process, click the backup's ellipsis icon, then click Edit Snapshot Schedule.",
                "Configure the snapshot settings.",
                "Edit Security Credentials",
                "Click Continuous Backup, then the Overview tab.",
                "Select the backup's ellipsis icon and select Edit Credentials",
                "Provide the authentication information.",
                "Modify the Storage Engine Your Backups Use",
                "Click Continuous Backup, then the Overview tab.",
                "Select the backup's ellipsis icon and select Edit Storage Engine",
                "Select the storage engine.",
                "Select the sync source.",
                "Click Submit.",
                "Backup Settings Available to FCV (Feature Compatibility Version) 4.2 and Later",
                "Edit the Preferred Member for Backup",
                "Click Continuous Backup, then the Overview tab.",
                "Open the Select Preferred Member to Backup panel.",
                "Choose a replica set member to create snapshots.",
                "Select an available member.",
                "Click Submit.",
                "Backup Settings Available to FCV (Feature Compatibility Version) 4.0 and Earlier",
                "Enable Cluster Checkpoints",
                "Click Continuous Backup, then the Overview tab.",
                "Select the backup's ellipsis icon and select Edit Snapshot Schedule.",
                "Enable cluster checkpoints.",
                "Edit the Namespaces Filter",
                "Click Continuous Backup, then the Overview tab.",
                "Select the backup's ellipsis icon and select Edit Namespaces Filter.",
                "Add or remove namespaces and click Submit."
            ],
            "paragraphs": "Available backup settings depend on the  FCV  value of your MongoDB database. To edit Backup's settings: Click  Continuous Backup . Overview  tab.\n Cloud Manager  lists all available backups. Click   next to each backup to access its\nsettings. Enter the following information as needed. To learn about retention values, see\n Snapshot Frequency and Retention Policy . Take snapshots every ... hours and save for ... days Sets how frequently, in hours,  Cloud Manager  takes a base snapshot of\nthe deployment and the number of days  Cloud Manager  retains base\nsnapshots. Changes to the snapshot schedule affect your\n snapshot storage costs . Create cluster checkpoint every ... minutes\n(Sharded Clusters only) Sets how frequently, in minutes,  Cloud Manager  creates a\n Checkpoints  in between snapshots of a sharded cluster.\nCheckpoints provide restore points that you can use to create\ncustom  point-in-time  snapshots. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. Store daily snapshots for Sets the number of days that  Cloud Manager  retains daily snapshots. Store weekly snapshots for Sets the number of weeks that  Cloud Manager  retains weekly snapshots. Store monthly snapshots for Sets the number of months that  Cloud Manager  retains monthly snapshots. Ops Manager  takes monthly snapshots every 28 days, not by calendar month. Day of Week for Full Snapshot Sets the day of the week when  Cloud Manager  takes a full snapshot. This\nensures a recent complete backup. Cloud Manager  sets the default value to a random weekday. Click  Submit . On the line listing the process, click the ellipsis icon and click\n Edit Credentials . Enter the following information as needed and click  Submit . Auth Mechanism The  authentication mechanism \nthat the MongoDB host uses. MongoDB Community options include: MongoDB Enterprise options also include: Username/Password X.509 Client Certificate Kerberos LDAP DB Username For  Username/Password  or  LDAP  authentication, the\nusername used to authenticate the MongoDB Agent with the MongoDB\ndeployment. See\n Configure MongoDB Agent for Authentication  or\n Configure MongoDB Agent for LDAP . DB Password For  Username/Password  or  LDAP  authentication, the\npassword used to authenticate the MongoDB Agent with the MongoDB\ndeployment. Allows TLS for connections If checked, Backup uses  TLS (Transport Layer Security)  to connect to MongoDB. See  Configure MongoDB Agent to Use TLS . On the line listing the process, click the ellipsis icon and click\n Edit Storage Engine . Select the storage engine. See:  Storage Engine \nfor more about choosing an appropriate storage engine for your\nbackup. Select the  Sync source  from which to create the new backup.\nIn order to use the new storage engine,  Cloud Manager  must resync the backup on\nthe new storage engine. When each snapshot starts,  Cloud Manager  selects a replica set member\nto run the snapshot. This automatically selected member should have the\nleast performance impact on the replica set. You can override the\ndefault selection. Use  default selection  whenever possible. This choice\nensures backup availability. On the line listing the process, click   then click\n Select Preferred Member to Backup . Click  Select a member manually . From the  Select an available member  drop-down, select the\nhostname and process port for the desired member. If the selected member becomes unavailable, an error message\nappears in the panel.  Cloud Manager  uses a default member until the\nselected member is available. Cluster  checkpoints  provide restore points in\nbetween scheduled snapshots. You can use checkpoints to create custom\nsnapshots at points in time between regular snapshots. You may use checkpoints for clusters that run MongoDB with\n Feature Compatibility Version  of 4.0 or earlier. Checkpoints were removed from\nMongoDB instances with  FCV (Feature Compatibility Version)  of 4.2 or later. On the line listing the process, click the ellipsis icon and click\n Edit Snapshot Schedule . Select  Create cluster checkpoint every . Set the interval. Click  Submit . The  Namespaces Filter  specifies which databases and collections\n Cloud Manager  backs up. Namespace filtering is supported only for  Cloud Manager  versions\n 6.0.8  and later. Your MongoDB deployments must have\n featureCompatibilityVersion  values of  4.0  and earlier,\nor  6.0.1  and later.",
            "code": [],
            "preview": "Available backup settings depend on the FCV value of your MongoDB database.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-mongodb-agent-for-tls",
            "title": "Configure MongoDB Agent to Use TLS",
            "headings": [
                "Prerequisite",
                "Procedures",
                "Configure Connections between MongoDB Agent and MongoDB Instances",
                "Configure Connections between MongoDB Agent and Cloud Manager"
            ],
            "paragraphs": "To configure the MongoDB Agent to use  TLS (Transport Layer Security) , you must: Have the trusted  Certificate Authority  certificate that signed the MongoDB\ninstance's certificate. Ensure that all  TLS (Transport Layer Security)  certificates contain the Subject Alternative\nName field. To use  TLS (Transport Layer Security)  for the MongoDB Agent's connection to a MongoDB deployment,\nspecify the deployment's  TLS (Transport Layer Security)  settings when  adding the\ndeployment  or  editing\nthe deployment's settings . Cloud Manager  can manage  TLS (Transport Layer Security)  for you if you are using Automation for\nthe deployment. With Automation,  Cloud Manager  prompts you for the\ncertificates to use to connect to the deployment when you enable\n TLS (Transport Layer Security)  and then configures the agents appropriately. To learn\nhow to configure  TLS (Transport Layer Security) , see\n Enable TLS for a Deployment . The MongoDB Agent uses  TLS (Transport Layer Security)  to connect to  Cloud Manager  without your\nintervention.",
            "code": [],
            "preview": "To configure the MongoDB Agent to use TLS (Transport Layer Security), you must:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/view-agent-status",
            "title": "View Agent Status",
            "headings": [],
            "paragraphs": "Click  Deployment , then the  Agents  tab, then  All Agents .\n Cloud Manager  displays the following information about your agents: Field Description Agent Hostname The hostname of the agent and the agent type, indicated by the\nicon on the left-hand side. The icon to agent type mapping is as\nfollows: Icon Agent Type Automation Backup Monitoring Last Conf Call The number of seconds since the last time the agent polled  Cloud Manager . Version The version of the agent software running on this agent instance. Status Indicates whether the agent is active. Action Click  View Logs  to view the agent's log. To access this feature, you must be have the\n Project Owner  or  Project Data Access Admin \n Cloud Manager  user roles.",
            "code": [],
            "preview": "Click Deployment, then the Agents tab, then All Agents.\nCloud Manager displays the following information about your agents:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/uninstall-legacy-agents",
            "title": "Remove Legacy Agents",
            "headings": [
                "Remove the Backup Agent from Cloud Manager",
                "Remove from Cloud Manager",
                "Delete from the Server",
                "Remove Monitoring Agents from Cloud Manager",
                "Remove from Cloud Manager",
                "Delete from the Server"
            ],
            "paragraphs": "The legacy Backup and Monitoring Agents can be removed after the\nMongoDB Agent has been\n installed . To remove a Backup Agent from  Cloud Manager ,  stop the agent  and then wait 24 hours. To delete the Backup Agent  from a Linux or macOS server ,  stop the\nagent  and then remove the  mongodb-mms-backup-agent \nfile from the  /usr/bin  directory. If you installed the agent using a\n tar.gz  file, the agent will be in the directory you chose during\ninstallation. To delete the Backup Agent  from a Windows server ,  stop the agent  and then use the Windows program uninstaller to\nremove the  MongoDB Backup Agent  program. To remove a Monitoring Agent from  Cloud Manager ,  stop the agent  and then wait 5 minutes. When an agent fails to ping  Cloud Manager  for 5 minutes,  Cloud Manager  views the agent as\ninactive and distributes the agent's assignments to other agents (if\navailable). The  All Agents  page  displays an inactive agent for 24 hours\nbefore  Cloud Manager  removes it from the page. To delete the Monitoring Agent  from a Linux or macOS server ,  stop the\nagent  and then remove the\n mongodb-mms-monitoring-agent  file from the  /usr/bin  directory. If you\ninstalled the agent using a  tar.gz  file, the agent will be in the\ndirectory you chose during installation. To delete the Monitoring Agent  from a Windows server ,  stop the agent  and then use the Windows program uninstaller\nto remove the  MongoDB Monitoring Agent  program.",
            "code": [],
            "preview": "The legacy Backup and Monitoring Agents can be removed after the\nMongoDB Agent has been\ninstalled.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/install-mongodb-agent-to-manage",
            "title": "Install the MongoDB Agent to Manage Deployments",
            "headings": [
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the MongoDB Agent.",
                "Install the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "(Optional) Change the location of the MongoDB Agent binaries and configuration backup files.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the MongoDB Agent.",
                "Install the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "(Optional) Change the location of the MongoDB Agent binaries and configuration backup files.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "Begin or Manage a Deployment.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host."
            ],
            "paragraphs": "You have a project and want to install the MongoDB Agent to manage your\nMongoDB deployments. You can also monitor and back up your MongoDB\ndeployments following this workflow. Please review the  MongoDB Agent Prerequisites \nbefore installing the MongoDB Agent. Use this procedure to install the MongoDB Agent on x86_64\narchitecture running Microsoft Windows: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Windows - MSI. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Windows - MSI. The  MongoDB Agent Installation Instructions  box\ndisplays the following information: Some or all of these values are required in a later step. Copy these\nvalues then store them where you can access them later. Project ID \n(Required for binding to a project) API Key If you do not have an API Key, click  \n Generate Key . After the  MSI  downloads, double-click: mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi If a security warning appears, click  Run . At the  Configuration/Log Folder  step Provide the directory into which these files are saved. At the  Key Type  step, select  Agent\nAPI Key  to bind to a specific  project . Enter the appropriate agent keys. These keys are provided in the  MongoDB\nAgent Installation Instructions  modal described in\nthe previous step. Type your Project ID into the  Project ID \nfield. Type your Agent API Key into the\n Agent API Key  field. At the  MongoDB Paths  step, specify the Log\nand Backup directories At the  Windows Firewall Configuration  step,\nclick your preferred firewall configuration. If you click  Configure firewall rules allowing\naccess from only the specified |ipaddr| addresses. , type\nthe necessary  IPv4 (Internet Protocol version 4)  addresses into the provided box. (Conditional) Windows enables  Stealth Mode \nfor the Windows Firewall by default. If you have not\ndisabled it on the MongoDB host on which you are\ninstalling the MongoDB Agent, you are asked to disable\nit. Stealth Mode significantly degrades the performance\nand capability of the MongoDB Agent. Click\n Disable Stealth Mode . (Conditional) Windows does not enable  Disk Performance Counters \nby default. If you have not enabled Disk Performance\nCounters for the MongoDB host, click  Enable\nDisk Performance Counters . The MongoDB Agent\nuses these counters for some of its hardware monitoring\nactivities. Click  Install . Click  Finish  once setup is complete. After the  MSI  downloads, you can run an unattended\ninstall. You run an unattended install from the command line\nin either the command interpreter or PowerShell. To learn\nmore about unattended installs, see Microsoft's\ndocumentation on  Standard Installer Command-Line Options To run the  MSI  installer unattended from the command\nline, you invoke  msiexec.exe  with the  /q  and  /i \nflags and a combination of required and optional\nparameters: Parameter Necessity Value MMSAPIKEY Required Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. MMSGROUPID Required Unique Identifier of your  Cloud Manager  project. CONFIGLOGDIR Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent configuration file. LOGFILE Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent log MMSCONFIGBACKUP Optional Absolute file path to the  Cloud Manager  automation\nconfiguration backup  JSON (Javascript Object Notation)  file. To install the MongoDB Agent unattended, you would\ninvoke  msiexec.exe  with the following options: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . By default, the MongoDB binaries and  Cloud Manager  configuration backup\nfile are located in  %SystemDrive%\\MMSMongoDB\\versions . If you want to store these files in a different directory, follow\nthese procedures: To change the location of the MongoDB Agent Binaries To change the location of the MongoDB Agent configuration backup Windows sets the  %SystemDrive%  environment variable to the\ndrive on which you installed Windows. By default, you would be\ndirected to install Windows on the  C:  drive. To find your\n %SystemDrive% , issue with following command from  PowerShell : Click  Deployment , then  Agents , and then\n Downloads & Settings . Below the  Download Directory  heading, click\n  to the right of the path shown in\n Download Directory (Windows) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan MongoDB Agent. Use Windows Explorer to move the file or\nissue the following command from a Command Prompt or\n PowerShell : Make sure the system user that runs the MongoDB Agent can write\nto this new directory. This is usually the  SYSTEM  user,\nwhich requires no additional configuration unless you changed\nthe user. Open the  MongoDB Agent configuration file  in your preferred text\neditor. Change the  mmsConfigBackup  setting to the new path\nfor the configuration backup file. Replace  X  with the drive\nletter on which your backup is stored. Save the MongoDB Agent configuration file. Move the configuration backup file to the new directory. Use\nWindows Explorer to move the file or issue the following\ncommand from a Command Prompt or  PowerShell : Use this procedure to install the MongoDB Agent: On x86_64 architecture running Debian 8/9/10/11 or Ubuntu 18.04/20.04/22.04: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Debian 8/9, Ubuntu 16.X/18.X - DEB. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Debian 8/9, Ubuntu 16.X/18.X - DEB. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forUbuntu 18.04/20.04/22.04 or Debian 8/9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into theLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Use this procedure to install the MongoDB Agent: On x86_64 architecture: Running Amazon Linux using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Amazon Linux - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Amazon Linux - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Running RHEL / CentOS 7.x, SUSE12, SUSE15, or\nAmazon Linux 2: Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On RHEL / CentOS (7.x) on PowerPC architecture\n(managing MongoDB 3.4 or later deployments): Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X) Power (ppc64le) - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X) Power (ppc64le) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X) Power (ppc64le) - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X) Power (ppc64le) - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On zSeries architecture (managing MongoDB 4.0 or\nlater deployments): Running RHEL / CentOS 7.x/8.x: Running RHEL / CentOS 7.x/8.x using the  rpm  package\nmanager: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL 7.X/8X Z-Series (s390x) - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL 7.X/8X Z-Series (s390x) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On ARM64 architecture running RHEL 8.x/9.x or Amazon Linux 2: Running RHEL 8.x/9.x or Amazon Linux 2 using the rpm\npackage manager: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X/8.X/9.X), Amazon Linux2, Amazon Linux 2023 - RPM (ARM). Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X/8.X/9.X), Amazon Linux2, Amazon Linux 2023 - RPM (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Use this procedure to install Linux systems that do not use\n deb  or  rpm  packages. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Other Linux - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Other Linux - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Generic 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Use this procedure to install the MongoDB Agent on x86_64\narchitecture running Microsoft Windows: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Windows - MSI. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Windows - MSI. The  MongoDB Agent Installation Instructions  box\ndisplays the following information: Some or all of these values are required in a later step. Copy these\nvalues then store them where you can access them later. Project ID \n(Required for binding to a project) API Key If you do not have an API Key, click  \n Generate Key . After the  MSI  downloads, double-click: mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi If a security warning appears, click  Run . At the  Configuration/Log Folder  step Provide the directory into which these files are saved. At the  Key Type  step, select  Agent\nAPI Key  to bind to a specific  project . Enter the appropriate agent keys. These keys are provided in the  MongoDB\nAgent Installation Instructions  modal described in\nthe previous step. Type your Project ID into the  Project ID \nfield. Type your Agent API Key into the\n Agent API Key  field. At the  MongoDB Paths  step, specify the Log\nand Backup directories At the  Windows Firewall Configuration  step,\nclick your preferred firewall configuration. If you click  Configure firewall rules allowing\naccess from only the specified |ipaddr| addresses. , type\nthe necessary  IPv4 (Internet Protocol version 4)  addresses into the provided box. (Conditional) Windows enables  Stealth Mode \nfor the Windows Firewall by default. If you have not\ndisabled it on the MongoDB host on which you are\ninstalling the MongoDB Agent, you are asked to disable\nit. Stealth Mode significantly degrades the performance\nand capability of the MongoDB Agent. Click\n Disable Stealth Mode . (Conditional) Windows does not enable  Disk Performance Counters \nby default. If you have not enabled Disk Performance\nCounters for the MongoDB host, click  Enable\nDisk Performance Counters . The MongoDB Agent\nuses these counters for some of its hardware monitoring\nactivities. Click  Install . Click  Finish  once setup is complete. After the  MSI  downloads, you can run an unattended\ninstall. You run an unattended install from the command line\nin either the command interpreter or PowerShell. To learn\nmore about unattended installs, see Microsoft's\ndocumentation on  Standard Installer Command-Line Options To run the  MSI  installer unattended from the command\nline, you invoke  msiexec.exe  with the  /q  and  /i \nflags and a combination of required and optional\nparameters: Parameter Necessity Value MMSAPIKEY Required Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. MMSGROUPID Required Unique Identifier of your  Cloud Manager  project. CONFIGLOGDIR Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent configuration file. LOGFILE Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent log MMSCONFIGBACKUP Optional Absolute file path to the  Cloud Manager  automation\nconfiguration backup  JSON (Javascript Object Notation)  file. To install the MongoDB Agent unattended, you would\ninvoke  msiexec.exe  with the following options: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . By default, the MongoDB binaries and  Cloud Manager  configuration backup\nfile are located in  %SystemDrive%\\MMSMongoDB\\versions . If you want to store these files in a different directory, follow\nthese procedures: To change the location of the MongoDB Agent Binaries To change the location of the MongoDB Agent configuration backup Windows sets the  %SystemDrive%  environment variable to the\ndrive on which you installed Windows. By default, you would be\ndirected to install Windows on the  C:  drive. To find your\n %SystemDrive% , issue with following command from  PowerShell : Click  Deployment , then  Agents , and then\n Downloads & Settings . Below the  Download Directory  heading, click\n  to the right of the path shown in\n Download Directory (Windows) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan MongoDB Agent. Use Windows Explorer to move the file or\nissue the following command from a Command Prompt or\n PowerShell : Make sure the system user that runs the MongoDB Agent can write\nto this new directory. This is usually the  SYSTEM  user,\nwhich requires no additional configuration unless you changed\nthe user. Open the  MongoDB Agent configuration file  in your preferred text\neditor. Change the  mmsConfigBackup  setting to the new path\nfor the configuration backup file. Replace  X  with the drive\nletter on which your backup is stored. Save the MongoDB Agent configuration file. Move the configuration backup file to the new directory. Use\nWindows Explorer to move the file or issue the following\ncommand from a Command Prompt or  PowerShell : Use this procedure to install the MongoDB Agent: On x86_64 architecture running Debian 8/9/10/11 or Ubuntu 18.04/20.04/22.04: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Debian 8/9, Ubuntu 16.X/18.X - DEB. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Debian 8/9, Ubuntu 16.X/18.X - DEB. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forUbuntu 18.04/20.04/22.04 or Debian 8/9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into theLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Use this procedure to install the MongoDB Agent: On x86_64 architecture: Running Amazon Linux using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Amazon Linux - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Amazon Linux - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Running RHEL / CentOS 7.x, SUSE12, SUSE15, or\nAmazon Linux 2: Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On RHEL / CentOS (7.x) on PowerPC architecture\n(managing MongoDB 3.4 or later deployments): Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X) Power (ppc64le) - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X) Power (ppc64le) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X) Power (ppc64le) - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X) Power (ppc64le) - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On zSeries architecture (managing MongoDB 4.0 or\nlater deployments): Running RHEL / CentOS 7.x/8.x: Running RHEL / CentOS 7.x/8.x using the  rpm  package\nmanager: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL 7.X/8X Z-Series (s390x) - RPM. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL 7.X/8X Z-Series (s390x) - RPM. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . On ARM64 architecture running RHEL 8.x/9.x or Amazon Linux 2: Running RHEL 8.x/9.x or Amazon Linux 2 using the rpm\npackage manager: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (7.X/8.X/9.X), Amazon Linux2, Amazon Linux 2023 - RPM (ARM). Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (7.X/8.X/9.X), Amazon Linux2, Amazon Linux 2023 - RPM (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Using a  tar  archive: Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click RHEL/CentOS (8.X/9.X), Amazon Linux 2, Amazon Linux 2023 - TAR (ARM). From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 8.x/9.x or Amazon Linux 2 for ARM64: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done . Use this procedure to install Linux systems that do not use\n deb  or  rpm  packages. Your project has no deployments and you see a prompt to get\nstarted. From the  Build New Deployment  menu,\nselect the type of deployment you wish to add: New Sharded Cluster New Replica Set New Standalone If, on the  Create New Deployment \npage,  Cloud Manager  cannot detect any hosts with the\nMongoDB Agent installed, you see a banner\ndisplayed at the top of the\n Create New Deployment  page. Click the  see instructions  link. From the  Select Your Server's\nOperating System  menu, click Other Linux - TAR. Click  Next . Click  Manage your existing deployment . From the  Install Agent  menu, click Other Linux - TAR. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Generic 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the Linux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal: Click  Verify Agent  to make\nsure the MongoDB Agent can connect to  Cloud Manager . Click  Done .",
            "code": [
                {
                    "lang": "powershell",
                    "value": "msiexec.exe /q /i \"C:\\PATH\\TO\\mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi\" MMSGROUPID=<GROUP.ID> MMSAPIKEY=<AGENT.API.ID> MMSBASEURL=\"<http://opsmanager.example.com:8080>\" LOGFILE=\"C:\\MMSData\\Server\\Log\\automation-agent.log\" MMSCONFIGBACKUP=\"C:\\MMSData\\MongoDB\\mms-cluster-config-backup.json\""
                },
                {
                    "lang": "ps1",
                    "value": "get-childitem env:SystemDrive"
                },
                {
                    "lang": "ps1",
                    "value": "md \\<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=X:\\<newPath>\\mms-cluster-config-backup.json"
                },
                {
                    "lang": "ps1",
                    "value": "move %SystemDrive%\\MMSMongoDB\\versions\\mms-cluster-config-backup.json \\<newPath>"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager_latest_amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc64le.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.aarch64.amzn2.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "powershell",
                    "value": "msiexec.exe /q /i \"C:\\PATH\\TO\\mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi\" MMSGROUPID=<GROUP.ID> MMSAPIKEY=<AGENT.API.ID> MMSBASEURL=\"<http://opsmanager.example.com:8080>\" LOGFILE=\"C:\\MMSData\\Server\\Log\\automation-agent.log\" MMSCONFIGBACKUP=\"C:\\MMSData\\MongoDB\\mms-cluster-config-backup.json\""
                },
                {
                    "lang": "ps1",
                    "value": "get-childitem env:SystemDrive"
                },
                {
                    "lang": "ps1",
                    "value": "md \\<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=X:\\<newPath>\\mms-cluster-config-backup.json"
                },
                {
                    "lang": "ps1",
                    "value": "move %SystemDrive%\\MMSMongoDB\\versions\\mms-cluster-config-backup.json \\<newPath>"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager_latest_amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc64le.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.aarch64.amzn2.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.amzn2_aarch64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongod user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongod &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongod\nfi\n\n# Create mongod user if they do not exist and assign\n# them to the mongod group\n\nif ! sudo /usr/bin/id mongod &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongod \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongod mongod > /dev/null 2>&1\nfi\n\n# Grant the mongod:mongod user and group permissions\n# to manage deployments.\n\nsudo chown mongod:mongod /var/lib/mongod-mms-automation\nsudo chown mongod:mongod /var/log/mongod-mms-automation\nsudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                }
            ],
            "preview": "You have a project and want to install the MongoDB Agent to manage your\nMongoDB deployments. You can also monitor and back up your MongoDB\ndeployments following this workflow.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/deploy-standalone",
            "title": "Deploy a Standalone MongoDB Instance",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Processes tab for your deployment.",
                "Choose New Standalone.",
                "Configure the standalone MongoDB instance.",
                "Set any Advanced Configuration options for the standalone MongoDB instance.",
                "Click Apply.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "You can deploy a  standalone  MongoDB instance for  Cloud Manager  to\nmanage. Use standalone instances for testing and development.\n Do not  use these deployments for production systems as they lack\nreplication and high availability. For all production deployments\nuse replica sets. To learn about replica sets, see\n Deploy a Replica Set . To learn how to deploy a standalone using a Kubernetes object, see\n Deploy a Standalone  in the\n MongoDB Enterprise Kubernetes Operator  documentation. You can use  Kubernetes  to deploy MongoDB instances with  Cloud Manager . You must  provision a server \nbefore deploying a standalone MongoDB instance. For testing purposes,\nyou can use your localhost. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. Click the  Add  dropdown menu. Select  New Standalone . In the  Process Configuration  section, complete the\nfollowing fields. Name Type the name for your standalone MongoDB deployment. Version Select the MongoDB version for your standalone MongoDB\ndeployment. Auth Schema Version Select the schema for storing the user data for your\ndeployment. Feature Compatibility  (Optional) Select the  feature compatibility set . This\nfield appears if your deployment MongoDB version is\n 3.4  or later. Hostname Type the resolvable address for the host serving your MongoDB\ndeployment. This can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4) \naddress, or an  IPv6 (Internet Protocol version 6)  address. Port Type the  IANA (Internet Assigned Numbers Authority) \nport number for your MongoDB deployment. The default for\nMongoDB deployments is  27017 . DB Directory Path Type the system path to the\n database directory  for this\ndeployment. The default is  /data/myProcess . Log File Path Type the system path to the  log file  setting for this deployment. The default is\n /data/myProcess/mongodb.log . In the  Advanced Configuration Options  section, add any\nadditional runtime options you want to set for your MongoDB\ndeployment. To add an option: For descriptions of  Advanced Configuration Options , see\n Advanced Options for MongoDB Deployments . Click  Add Option . Select a  Startup Option . Set an acceptable value for that Startup Option. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "You can deploy a standalone MongoDB instance for Cloud Manager to\nmanage. Use standalone instances for testing and development.\nDo not use these deployments for production systems as they lack\nreplication and high availability. For all production deployments\nuse replica sets. To learn about replica sets, see\nDeploy a Replica Set.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/rotate-key-with-api",
            "title": "Rotate a Key File with the API",
            "headings": [
                "Prerequisites",
                "Variables for Automation Config API Resources",
                "Procedure",
                "Retrieve and validate the automation configuration from Cloud Manager.",
                "Add your new key file to the automation configuration file you downloaded.",
                "Send the updated automation configuration.",
                "Confirm successful update of the automation configuration.",
                "Check the deployment status to ensure goal state is reached."
            ],
            "paragraphs": "You can programmatically rotate a key file by updating a project's\n automation configuration . To rotate a key file using the  Cloud Manager  API: When all MongoDB Agents use the new key,  Cloud Manager \nreplaces the value of  auth.key  with the new key that you\nprovided in  auth.newKey  and removes  auth.newKey  from the\nautomation configuration. Retrieve the current configuration. Add the new key file that you want to use with the  auth.newKey \nsetting. Replace the entire configuration using  PUT .\nYou must use  PUT .  Do not  use  PATCH . You must have access to the  API (Application Programming Interface) . To learn more, see\n Configure API Access . Your API key must have the  Project Automation Admin  or\n Project Owner  role. Authentication must be enabled. At least one cluster in the project must be configured with the\n clusterAuthMode \noption set to  keyFile  or  sendKeyFile . All clusters in the project must be running MongoDB version 4.2 or\nhigher. The API resources use one or more of these variables. Replace these\nvariables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project from your\nproject settings. CLUSTER-ID string Unique identifier of your cluster. Use the  automationConfig \nresource to retrieve the configuration. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Validate the downloaded Automation Configuration file. Compare the  version  field of the\n currentAutomationConfig.json  with that of the Automation\nConfiguration backup file,  mms-cluster-config-backup.json . The\n version  value is the last element in both  JSON (Javascript Object Notation)  documents.\nYou can find this file on any host running the MongoDB Agent at: If the  version  values match, you are working with the current\nversion of the Automation Configuration file. Linux and macOS:  /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json Windows:  %SystemDrive%\\MMSAutomation\\versions\\mms-cluster-config-backup.json If you're updating the MongoDB Agent, see\n Update Agent Versions  before continuing\nwith this procedure. Open  currentAutomationConfig.json  in your preferred text editor. Add the  auth.newKey  field. Set this field's value to the\nnew key file that you want  Cloud Manager  to use. The sample configuration below is truncated for readability. Use the  automationConfig \nresource to send the updated automation configuration. Issue the following command with path to the updated configuration\ndocument and replace the placeholders with the Variables for Automation Config API Resources. Upon successful update of the configuration, the API returns the HTTP\n 200 OK  status code to indicate the request has succeeded. Retrieve the automation configuration from  Cloud Manager  and confirm it\ncontains the changes. To retrieve the configuration, issue the\nfollowing command, replacing the placeholders with the\nVariables for Automation Config API Resources. Use the  automationStatus \nresource to retrieve the deployment status. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Confirm that the values of all the  lastGoalVersionAchieved  fields\nin the  processes  array match the  goalVersion  field. To learn\nabout deployment status, see  Get Automation Status of Latest Plan .",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"auth\": {\n    \"disabled\": \"false\",\n    \"key\": \"<your-old-key>\",\n    \"newKey\": \"<your-new-key>\"\n  }\n}"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\"\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data @currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true\""
                }
            ],
            "preview": "You can programmatically rotate a key file by updating a project's\nautomation configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/add-shard-using-automation",
            "title": "Add a Shard to a MongoDB Cluster",
            "headings": [
                "Navigate to the Clusters view for your deployment.",
                "Click Modify on the cluster where you want to add a shard.",
                "In the Member Configuration section, add a shard.",
                "Review and update settings for the new shard as needed:",
                "Click Save to add the new shard to the cluster."
            ],
            "paragraphs": "You can use  Cloud Manager  to add a shard to a MongoDB  sharded cluster . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Expand  SHARD SETTINGS . Click  Add a Shard  to add  ~bin.mongod  processes\nto the shard. To add additional  ~bin.mongod  processes to the shard,\nclick the  Add a Mongod  link. Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags",
            "code": [],
            "preview": "You can use Cloud Manager to add a shard to a MongoDB sharded cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/remove-shard-using-automation",
            "title": "Remove a Shard from a MongoDB Cluster",
            "headings": [
                "Navigate to the Clusters view for your deployment.",
                "Click Modify on the cluster where you want to remove a shard.",
                "In the Member Configuration section, remove a shard."
            ],
            "paragraphs": "You can use  Cloud Manager  to remove a shard from a MongoDB  sharded cluster . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Expand  SHARD SETTINGS . Click the   next to the shard you want to remove. Click  Remove from Cluster .",
            "code": [],
            "preview": "You can use Cloud Manager to remove a shard from a MongoDB sharded cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/encrypt-snapshots",
            "title": "Encrypted Backup Snapshots",
            "headings": [
                "Prerequisites",
                "Encrypt Your Backup Job",
                "Click Continuous Backup.",
                "Start backing up the process.",
                "In the Start Backup sidebar, configure the backup source and storage engine.",
                "Set Authentication Mechanisms.",
                "Click Start."
            ],
            "paragraphs": "Cloud Manager  can encrypt any backup job that it had stored in a snapshot\nstore. The snapshot must come from a database that ran\n MongoDB Enterprise  4.2\nor later with: To encrypt backups, you use a master key that a  KMIP (Key Management Interoperability) -compliant\nkey management appliance generates and maintains. This master key\nencrypts key that encrypts the database. FCV  of 4.2 or later and WiredTiger  storage engine. Cloud Manager  doesn't support transitioning from  local key encryption \nto  KMIP (Key Management Interoperability)  server-based encryption. Cloud Manager  creates snapshots of  FCV  of 4.2 or later deployments by\ncopying the bytes on disk from a host's  storage.dbPath  to the\nsnapshot store. If you enable MongoDB Encryption at Rest for the host\nyou are backing up, the bytes that  Cloud Manager  copies to the snapshot store\nare already encrypted.  Cloud Manager  encrypts data at the storage engine layer\nwhen you write data to a host's disk. For  FCV  of 4.2 or later deployments,  Cloud Manager  components don't\ninteract with the  KMIP (Key Management Interoperability)  host when taking snapshots. MongoDB Encryption at Rest A host running  KMIP (Key Management Interoperability) -compliant key management to generate and store\nencryption keys. You must maintain all keys, even rotated keys, in the  KMIP (Key Management Interoperability)  host. If you have not yet enabled  Cloud Manager  Backup, click\n Begin Setup  and complete the wizard. This results in a\ncompleted backup setup, so you can skip the rest of this procedure. From the list of processes, navigate to the  Status  column\nfor the process you want to back up and click  Start . Menu Possible Values Default Value Sync source Any  secondary (Ops Manager chooses) Any specific secondary The primary node any secondary Using a secondary is preferred because it minimizes\nperformance impact on the primary. Storage Engine WiredTiger Cloud Manager  limits backups to deployments with fewer than 100,000\nfiles. Files includes collections and indexes. WiredTiger If Automation doesn't manage your deployment and your deployment\nrequires authentication, specify the authentication mechanism and\ncredentials. Specify the following, as appropriate: Auth Mechanism The  authentication mechanism \nthat the MongoDB host uses. MongoDB Community options include: MongoDB Enterprise options also include: Username/Password X.509 Client Certificate Kerberos LDAP DB Username For  Username/Password  or  LDAP  authentication, the\nusername used to authenticate the MongoDB Agent with the MongoDB\ndeployment. See\n Configure MongoDB Agent for Authentication  or\n Configure MongoDB Agent for LDAP . DB Password For  Username/Password  or  LDAP  authentication, the\npassword used to authenticate the MongoDB Agent with the MongoDB\ndeployment. Allows TLS for connections If checked, Backup uses  TLS (Transport Layer Security)  to connect to MongoDB. See  Configure MongoDB Agent to Use TLS .",
            "code": [],
            "preview": "Cloud Manager can encrypt any backup job that it had stored in a snapshot\nstore. The snapshot must come from a database that ran\nMongoDB Enterprise 4.2\nor later with:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/rotate-master-kmip-keys",
            "title": "Rotate Master KMIP Keys",
            "headings": [
                "Procedure",
                "Navigate to the Processes tab for your deployment.",
                "Find the deployment for which you wish to rotate the key.",
                "Rotate the KMIP Master key.",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "Most regulatory requirements mandate that a managed key used to decrypt\nsensitive data must be rotated out and replaced with a new key once a\nyear.  Cloud Manager  provides the option to rotate the master KMIP key. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Click  Processes  in the sidebar. In the card for the deployment: Click  Select  Rotate the KMIP Master Key . Click  Rotate Key . Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "Most regulatory requirements mandate that a managed key used to decrypt\nsensitive data must be rotated out and replaced with a new key once a\nyear. Cloud Manager provides the option to rotate the master KMIP key.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-ports",
            "title": "Manage Ops Manager Hostname and Ports",
            "headings": [
                "Override the Ops Manager Hostname",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the hostname values to the FQDN (fully qualified domain name) for the Cloud Manager and Backup Daemon.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the hostname values to the FQDN (fully qualified domain name) for the Cloud Manager and Backup Daemon.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the hostname values to the FQDN (fully qualified domain name) for the Cloud Manager and Backup Daemon.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Change the Default Port",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the BASE_PORT value to the desired Ops Manager port.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the BASE_PORT value to the desired Ops Manager port.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Log in to the host running Ops Manager.",
                "Open mms.conf for editing.",
                "Set the BASE_PORT value to the desired Ops Manager port.",
                "Update the Ops Manager URL (Uniform Resource Locator).",
                "Restart Ops Manager.",
                "Enable the Health Check Endpoint",
                "Open mms.conf for editing.",
                "Uncomment DEBUG.PORT.",
                "Save the changes.",
                "Restart Ops Manager."
            ],
            "paragraphs": "Ops Manager  must provide a consistent hostname and consistent ports.\nFollow these procedures to: Override the default hostname for  Ops Manager Change the default ports for  Ops Manager Enable the health-check endpoints All of these procedures are  optional . You shouldn't need to change\nthese settings unless your  Ops Manager  Backup Daemons or  Cloud Manager \ndoesn't appear with the correct hostname, or you need to change\nports to meet local security concerns. Ops Manager  tries to detect its host's  FQDN (fully qualified domain name) . There might be times when\nthe  Ops Manager  hosts select the wrong hostname. If you need to override\nthe hostname that  Ops Manager  selected, you can set  Ops Manager  to use a\nhostname that you specify. If  Ops Manager  works as expected from the  URL (Uniform Resource Locator)  you wanted, you can\nskip this procedure. To set the hostname on Ubuntu or Debian hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. Add two options with the  mms.system.hostname  value: JAVA_MMS_UI_OPTS  for the  Cloud Manager JAVA_DAEMON_OPTS  for the Backup Daemon These Java options should look similar to this example: You can use environment variables on Linux systems to set this\nvalue: In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: To set the hostname on Red Hat or CentOS  hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. Add two options with the  mms.system.hostname  value: JAVA_MMS_UI_OPTS  for the  Cloud Manager JAVA_DAEMON_OPTS  for the Backup Daemon These Java options should look similar to this example: You can use environment variables on Linux systems to set this\nvalue: In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: To set the hostname on Linux hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. Add two options with the  mms.system.hostname  value: JAVA_MMS_UI_OPTS  for the  Cloud Manager JAVA_DAEMON_OPTS  for the Backup Daemon These Java options should look similar to this example: You can use environment variables on Linux systems to set this\nvalue: In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: Ops Manager  uses the ports and health-check endpoints described in\n Firewall Configuration . The endpoints default to\n disabled . To change the ports on Ubuntu or Debian hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. When changing the port, ensure that the chosen port is available for\nuse. By default,  Ops Manager  uses port  8080 . Change the  BASE_PORT \nvalue to the desired port number. If you want to change the port for  Ops Manager  connections over  TLS (Transport Layer Security) ,\nupdate  BASE_SSL_PORT . In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: To change the ports on Red Hat or CentOS hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. When changing the port, ensure that the chosen port is available for\nuse. By default,  Ops Manager  uses port  8080 . Change the  BASE_PORT \nvalue to the desired port number. If you want to change the port for  Ops Manager  connections over  TLS (Transport Layer Security) ,\nupdate  BASE_SSL_PORT . In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: To change the ports on Linux hosts: Navigate to the  <install_dir>/conf/  directory. Open the  mms.conf  file as  root  in your preferred text\neditor. When changing the port, ensure that the chosen port is available for\nuse. By default,  Ops Manager  uses port  8080 . Change the  BASE_PORT \nvalue to the desired port number. If you want to change the port for  Ops Manager  connections over  TLS (Transport Layer Security) ,\nupdate  BASE_SSL_PORT . In the  Cloud Manager , click the  Admin  link in the\nupper right corner of the page. Click the  General  tab and then click\n Ops Manager Config . Update the  URL to Access Ops Manager  field to use the\nvalue you specified in the Java Options registry value. Click  Save . You can access the  Cloud Manager  from the new  URL (Uniform Resource Locator)  after\n Ops Manager  restarts. Invoke the following command: Invoke the following command: Invoke the following command: Ops Manager  provides an  HTTP (Hypertext Transfer Protocol)  health-check endpoint. This endpoint is\naccessed on port  8090  and is disabled by default. Before you enable\nthe endpoint, make sure that another application or process isn't using\nport  8090  . To enable the endpoint: Open the  mms.conf  file with root access.  mms.conf  is located in the\n <install_dir>/conf/  directory. To enable the endoint, remove the  #  symbol so that the line\nreads: This port is only accessible from  localhost  (or\n 127.0.0.1 ). The port number  can  be changed from  8090  to\nanother value.",
            "code": [
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=opsmanager.example.com\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=opsmanager-bkp.example.com\""
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=$(hostname -f)\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=$(hostname -f)\""
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=opsmanager.example.com\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=opsmanager-bkp.example.com\""
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=$(hostname -f)\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=$(hostname -f)\""
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=opsmanager.example.com\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=opsmanager-bkp.example.com\""
                },
                {
                    "lang": "ini",
                    "value": "JAVA_MMS_UI_OPTS=\"${JAVA_MMS_UI_OPTS} -Dmms.system.hostname=$(hostname -f)\"\nJAVA_DAEMON_OPTS=\"${JAVA_DAEMON_OPTS} -Dmms.system.hostname=$(hostname -f)\""
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "BASE_PORT=11700"
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "BASE_PORT=11700"
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo -H vi /opt/mongodb/mms/conf/mms.conf"
                },
                {
                    "lang": "ini",
                    "value": "BASE_PORT=11700"
                },
                {
                    "lang": "sh",
                    "value": "https://opsmanager.example.com:11800"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo /etc/init.d/mongodb-mms restart"
                },
                {
                    "lang": "ini",
                    "value": "DEBUG.PORT=8090"
                }
            ],
            "preview": "Ops Manager must provide a consistent hostname and consistent ports.\nFollow these procedures to:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-mongodb-agent-from-backup-and-monitoring-agents",
            "title": "Update from the legacy Backup and Monitoring Agents",
            "headings": [
                "Procedure",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Download the MongoDB Agent.",
                "Install the MongoDB Agent.",
                "Run the MongoDB Agent Windows Installer.",
                "Finish the installation of the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "(Optional) Change the location of the MongoDB Agent binaries and configuration backup files.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Log in to the Cloud Manager.",
                "From the notification banner, click Update All Agents.",
                "Optional: Add any existing configuration options for your legacy Agents.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Finish the installation of the MongoDB Agent.",
                "Repeat the installation procedure for each MongoDB host.",
                "Next Steps"
            ],
            "paragraphs": "You have a project with monitored and backed up MongoDB deployments\nthat Automation did not manage and want to update to the MongoDB Agent. If you want to start or continue using Automation to manage your\nMongoDB deployments, please review the\n MongoDB Agent Prerequisites  before updating to the\nMongoDB Agent. Use this procedure to update to the MongoDB Agent on x86_64\narchitecture running Microsoft Windows: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Windows - MSI. Click  Next . The\n Install New MongoDB Agent  modal opens. The  MongoDB Agent Installation Instructions  box\ndisplays the following information: Project ID \n(Required for binding to a project) API Key If you do not have an API Key, click  \n Generate Key . Some or all of these values are required in a later step. Copy\nthese values then store them where you can access them later. After the  MSI  downloads, double-click: mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi The use of  mongodb-mms-automation  in the\nfilename is a legacy artifact and does not mean\nthat the MongoDB Agent is being installed with\nAutomation configured. If a security warning appears, click  Run . At the  Configuration/Log Folder  step,\nenter the directory where the  MSI  files are saved. At the  Key Type  step, select  Agent\nAPI Key  to bind to a specific  project . Enter the appropriate Agent keys. These keys are provided in the  MongoDB Agent\nInstallation Instructions  modal described in\nthe previous step. Type your Project ID into the  Project ID \nbox. Type your Agent API Key into the\n Agent API Key  box. At the  MongoDB Paths  step, specify the Log\nand Backup directories. At the  Windows Firewall Configuration  step,\nselect your preferred firewall configuration. If you select  Configure firewall rules allowing\naccess from only the specified |ipaddr| addresses. , type\nthe necessary  IPv4 (Internet Protocol version 4)  addresses into the provided box. (Conditional) Windows enables  Stealth Mode \nfor the Windows Firewall by default. If you have not\ndisabled it on the MongoDB host on which you are\ninstalling the MongoDB Agent, disable it now.\nStealth Mode significantly degrades the performance\nand capability of the MongoDB Agent. Click\n Disable Stealth Mode . (Conditional) Windows does not enable  Disk Performance Counters \nby default. If you have not enabled Disk Performance\nCounters for the MongoDB host, click  Enable\nDisk Performance Counters . The MongoDB Agent\nuses these counters for some of its hardware monitoring\nactivities. Click  Install . Click  Finish  once setup is complete. After the  MSI  downloads, you can run an unattended\ninstall. You run an unattended install from the command line\nin either the Command Prompt or PowerShell. To learn\nmore about unattended installs, see Microsoft's\ndocumentation on  Standard Installer Command-Line Options To run the  MSI  installer unattended from the command\nline, invoke  msiexec.exe  with the  /q  and  /i \nflags and a combination of required and optional\nparameters: Parameter Necessity Value MMSAPIKEY Required Agent  API (Application Programming Interface)  key of your  Cloud Manager  project. MMSGROUPID Required Unique Identifier of your  Cloud Manager  project. CONFIGLOGDIR Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent configuration file. LOGFILE Optional Absolute file path to which  Cloud Manager  should write the\nMongoDB Agent log MMSCONFIGBACKUP Optional Absolute file path to the  Cloud Manager  automation\nconfiguration backup  JSON (Javascript Object Notation)  file. To install the MongoDB Agent unattended,\ninvoke  msiexec.exe  with the following options: In the  Install Agent Instructions  modal, click\n Done . In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. Your system policies or practices may require the MongoDB binaries\nand  Cloud Manager  configuration backup file to be located somewhere other\nthan the default location of  %SystemDrive%\\MMSMongoDB\\versions . If you want to store these files in a different directory, follow\nthese procedures: To change the location of the MongoDB Agent Binaries To change the location of the MongoDB Agent configuration backup Windows sets the  %SystemDrive%  environment variable to the\ndrive on which you installed Windows. By default, you are\ndirected to install Windows on the  C:  drive. To find your\n %SystemDrive% , issue the following command from  PowerShell : Click  Deployment , then  Agents , and then\n Downloads & Settings . Below the  Download Directory  heading, click\n  to the right of the path shown in\n Download Directory (Windows) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\na MongoDB Agent. Use Windows Explorer to move the file or\nissue the following command from a Command Prompt or\n PowerShell : Make sure that the system user that runs the MongoDB Agent can write\nto this new directory. This is usually the  SYSTEM  user,\nwhich requires no additional configuration unless you changed\nthe user. Open the  MongoDB Agent configuration file  in your preferred text\neditor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Replace  X  in the following\nexample with the drive letter on which your backup is stored. Save the MongoDB Agent configuration file. Move the configuration backup file to the new directory. Use\nWindows Explorer to move the file or issue the following\ncommand from a Command Prompt or  PowerShell : Use this procedure to update to the MongoDB Agent: On x86_64 architecture running Debian 8, Debian 9, Ubuntu 18.04,\nUbuntu 20.04, or Ubuntu 22.04: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Debian 8/9, Ubuntu 16.X/18.X - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04/20.04/22.04 or Debian 9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture running Ubuntu 18.04 using a\n deb  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Ubuntu 18.X Z-Series (s390x) - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Ubuntu 18.04 for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Use this procedure to update to the MongoDB Agent: On x86_64 architecture: Running RHEL / CentOS 6.x using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Amazon Linux - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 6 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Running RHEL / CentOS 7.x, SUSE12, SUSE15, or\nAmazon Linux 2: Using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have existing Monitoring Agent and/or Backup Agent users and\ndo not plan on activating Automation, you only need to create the\nlog directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On RHEL / CentOS (7.x) on PowerPC architecture\n(managing MongoDB 3.4 or later deployments): Using an  rpm  package: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Using a  tar  archive: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X) Power (ppc64le) - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have existing Monitoring Agent and/or Backup Agent users and\ndo not plan on activating Automation, you only need to create the\nlog directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . On zSeries architecture (managing MongoDB 3.4 or\nlater deployments): Running RHEL / CentOS 7.x/8.x using the\n rpm  package manager: The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL 7.X/8X Z-Series (s390x) - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for RHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data and must be owned by the\n mongod  user. For an existing MongoDB deployment, ensure the\ndirectory has the  mongod  user as owner. If no MongoDB deployment\nexists, create the directory and set the owner. The following commands create a data directory and set the owner as\nthe  mongod  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . Use this procedure to install update to the MongoDB Agent on\nLinux systems that do not use  deb  or  rpm  packages. The  Update to MongoDB Agent  page opens to start the\nupdate process. The  Introducing the MongoDB Agent  step\ndisplays. When you have finished reading this step, click\n Next . If Automation did not manage your Backup or Monitoring Agents, you\ncan add any Backup or Monitoring settings you had before at the\n Add Custom Configuration Options for your MongoDB Agent\n(Optional)  step. To add options that you had for your\n Backup Agent  and\n Monitoring Agent : You can click the   to remove any settings that\nyou have added. Don't add either of the following settings from the legacy Agents: Your legacy Agents authenticated with Kerberos as separate database\nusers. Because the MongoDB Agent combines the functions of the\nlegacy Agents, it employs a  single  database user. To upgrade to\nthe MongoDB Agent and continue using Kerberos, you must: You can remove the legacy Monitoring and Backup Agent users after\nupdating to the MongoDB Agent. krb5Principal krb5Keytab Create a new  Kerberos User Principal  and  database user  for the\nMongoDB Agent. Update the  Agent authentication configuration  in the  Cloud Manager   Authentication &\nTLS  settings with the new MongoDB Agent Principal and Keytab\nfiles. Under the  Backup Configurations  section: Type the desired  setting \nin the  Setting  box and its corresponding value in\nthe  Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Under the  Monitoring Configurations  section: Type the desired  setting  in the  Setting \nbox and the corresponding value in the\n Value  box. To add more than one  Setting , click the\n + Add Setting  link. Another row appears. Repeat until all settings have been added. Once you have added all the settings necessary for your deployment, click  Next . Cloud Manager  does not validate any of these settings. Make sure that the\nsettings and values are correct. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Other Linux - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for Generic 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the provided commands into the\nLinux shell. You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Update the following configuration options: Key Value mmsGroupId ProjectID  of your project. mmsApiKey Agent API key  of your project. To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have existing Monitoring Agent and/or Backup Agent users and\ndo not plan on activating Automation, you only need to create the\nlog directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Next . All authentication SCRAM,  LDAP (Lightweight Directory Access Protocol) , and Kerberos credentials from\nlegacy Agents are retained after the update. All  .pem  key\nfiles are retained as well. In the  Install Agent Instructions  modal, click\n Done . After the MongoDB Agent update completes: If Automation did not previously manage your Monitoring and/or\nBackup Agents, activate  Backup \nand/or  Monitoring  on your MongoDB\ndeployment. If Automation did previously manage your Monitoring and/or Backup\nAgents, they are now activated. To verify that they\nare activated, click  Deployment   \n Servers . If you want to activate Automation,\n add a deployment  to your MongoDB\nproject. Stop  and\n remove  the legacy\nMonitoring Agent. Stop  and\n remove  the legacy Backup\nAgent.",
            "code": [
                {
                    "lang": "powershell",
                    "value": "msiexec.exe /q /i \"C:\\PATH\\TO\\mongodb-mms-automation-agent-<VERSION>.windows_x86_64.msi\" MMSGROUPID=<GROUP.ID> MMSAPIKEY=<AGENT.API.ID> MMSBASEURL=\"<http://opsmanager.example.com:8080>\" LOGFILE=\"C:\\MMSData\\Server\\Log\\automation-agent.log\" MMSCONFIGBACKUP=\"C:\\MMSData\\MongoDB\\mms-cluster-config-backup.json\""
                },
                {
                    "lang": "ps1",
                    "value": "get-childitem env:SystemDrive"
                },
                {
                    "lang": "ps1",
                    "value": "md \\<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=X:\\<newPath>\\mms-cluster-config-backup.json"
                },
                {
                    "lang": "ps1",
                    "value": "move %SystemDrive%\\MMSMongoDB\\versions\\mms-cluster-config-backup.json \\<newPath>"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.ubuntu1804.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc641e.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir /data; sudo chown mongod:mongod /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://cloud.mongodb.com/download/agent/automation/mongodb-mms-automation-agent-manager-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                }
            ],
            "preview": "You have a project with monitored and backed up MongoDB deployments\nthat Automation did not manage and want to update to the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-ldap-authentication-for-group",
            "title": "Enable LDAP Authentication for your Cloud Manager Project",
            "headings": [
                "Considerations",
                "Procedure",
                "Navigate to the Security Settings dialog for your deployment.",
                "Optional: Specify the TLS (Transport Layer Security) Settings.",
                "Choose the authentication mechanism.",
                "Configure the LDAP Authorization Settings. (Optional)",
                "Configure the Agents to use LDAP to connect to your MongoDB deployment.",
                "Click Save Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes.",
                "Create MongoDB Roles for LDAP Groups. (Optional)"
            ],
            "paragraphs": "MongoDB Enterprise \nsupports proxying authentication requests to a Lightweight Directory\nAccess Protocol (LDAP) service. Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. LDAP  is only available on MongoDB Enterprise builds. If\nyou have existing deployments running on a MongoDB Community\nbuild, you must  upgrade them to MongoDB Enterprise  before you can enable\n LDAP  for your  Cloud Manager  project. MongoDB Enterprise supports simple and SASL binding to Lightweight\nDirectory Access Protocol (LDAP) servers via  saslauthd  and operating system\nlibraries: The  LDAP Proxy Authentication  and\n LDAP Authorization  sections in\nthe MongoDB manual provide more information about LDAP and MongoDB.\nSetting up LDAP and SASL is beyond the scope of this document. MongoDB Enterprise for Linux can bind to an LDAP server either via\n saslauthd  or, starting in MongoDB 3.4, through the operating system\nlibraries. Starting in MongoDB version 3.4, MongoDB Enterprise for Windows can\nbind to an LDAP server through the operating system libraries. This procedure describes how to configure and enable LDAP\nauthentication when using Automation. If  Cloud Manager  doesn't manage\nMonitoring or Backup, you must manually configure them to use\n LDAP (Lightweight Directory Access Protocol) . To configure  LDAP (Lightweight Directory Access Protocol) , see\n Configure MongoDB Agent for LDAP If you want to\n reset Authentication and TLS settings \nfor your project, first\n unmanage any MongoDB deployments \nthat  Cloud Manager  manages in your project. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. By default,  LDAP (Lightweight Directory Access Protocol)  traffic is sent as plain text. This means that\ncredentials (username and password) are exposed to basic network\nthreats like sniffers and replay. Use  LDAPS (Secure Lightweight Directory Access Protocol)  ( LDAP (Lightweight Directory Access Protocol)  over\n TLS (Transport Layer Security) / SSL (Secure Sockets Layer) ) to encrypt authentication. Many modern directory\nservices, such as Active Directory, require encrypted\nconnections. In the  MongoDB Agent Connections to Deployment  section,\nselect  LDAP . Select the appropriate type of  LDAP  authentication. If you are using LDAP authorization,\nyou must select  Native LDAP Authentication . If you are not using LDAP authorization, you must add users to the\n $external  database in your MongoDB deployment. For an example, see\n LDAP Authentication . Skip this step if you selected  Saslauthd  in the previous\nstep. If you selected  Native LDAP Authentication , complete the following steps: Starting with MongoDB 3.4, you can\nauthenticate users using LDAP, Kerberos, or X.509 certificates\nwithout requiring local user documents in the  $external \ndatabase as long as you enable LDAP authorization first. When such a user successfully\nauthenticates, MongoDB performs a query against the LDAP server to\nretrieve all groups which that LDAP user possesses and transforms those\ngroups into their equivalent MongoDB roles. Provide the following values: Setting Value Server URL Specify the  hostname:port  combination of one or more LDAP servers. Transport Security Select  TLS  to encrypt your LDAP queries. If you do not\nneed to encrypt the LDAP queries, select  None . Timeout (ms) Specify how long an authentication request should wait before timing out. Bind Method Select either  SASL  or  Simple . If you choose the  Simple  bind method, select  TLS \nfrom the  Transport Security  because the\n Simple  bind method passes the password in plain text. SASL Mechanisms Specify which SASL authentication service MongoDB uses with\nthe LDAP server. Query User (LDAP Bind DN) Specify the LDAP Distinguished Name to which MongoDB binds when\nconnecting to the LDAP server. Query Password (LDAP Bind DN) Specify the password with which MongoDB binds when connecting to an\nLDAP server. LDAP User Cache Invalidation Interval (s) Specify how long MongoDB waits to flush the LDAP user cache.\nDefaults to  30  seconds. User to Distinguished Name Mapping Specify an array of JSON documents that provide the ordered\ntransformation(s) MongoDB performs on the authenticated MongoDB\nusernames. MongoDB then matches the transformed username\nagainst the LDAP DNs. Validate LDAP Server Config Select  ON  to validate the LDAP server configuration\nor  OFF  to skip validation. If  ON  and the configuration is invalid, the MongoDB\ndeployment will not start. In the  LDAP Authorization  section, enter values for the\nfollowing fields: Setting Value LDAP Authorization Toggle to  ON  to enable LDAP authorization. Authorization Query Template Specify a template for an LDAP\nquery URL to retrieve a list of LDAP groups for an LDAP\nuser. User to Distinguished Name Mapping Specify an array of JSON documents that provide the ordered\ntransformation(s) MongoDB performs on the authenticated MongoDB\nusernames. MongoDB then matches the transformed username\nagainst the LDAP DNs. Cloud Manager  limits Agents to using one  mechanism  per deployment. Select the  LDAP  option from the  Agent Auth Mechanism \nsection. Provide credentials for the MongoDB Agent: Setting Value MongoDB Agent Username Enter the  LDAP (Lightweight Directory Access Protocol)  username. MongoDB Agent Password Enter the password for Agent's  LDAP (Lightweight Directory Access Protocol)  Username. MongoDB Agent LDAP Group DN If you enabled LDAP Authorization, enter the  DN (Distinguished Name)  of the\ngroup of which the MongoDB Agent user is a member. Otherwise, click  Cancel  and you can make\nadditional changes. After enabling LDAP Authorization, you need to\n create custom MongoDB roles \nfor each LDAP Group you specified for LDAP Authorization.",
            "code": [],
            "preview": "MongoDB Enterprise\nsupports proxying authentication requests to a Lightweight Directory\nAccess Protocol (LDAP) service.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-projects",
            "title": "Projects",
            "headings": [
                "Working with Multiple Environments",
                "Create One Project",
                "Navigate to the Create a Project page.",
                "Select Cloud Manager.",
                "Enter a name for the Project.",
                "Optional: Configure LDAP (Lightweight Directory Access Protocol) options.",
                "Add members to your project.",
                "Specify the access for the members.",
                "Click the Create Project button to create the project.",
                "Delete One Project",
                "View all of your projects.",
                "Delete the project.",
                "Confirm that you want to delete this project.",
                "Stop the MongoDB Agents.",
                "Additional Information"
            ],
            "paragraphs": "In  Cloud Manager , MongoDB deployments are associated with projects. You can create multiple projects in an organization. Each project has\nits own Monitoring, Backup and Automations associated with the\nproject. Projects within the same organization share the same billing\nsettings. Groups are now projects. For a project, the Monitoring must be able to connect to all\nhosts it monitors. If you have multiple MongoDB deployments in distinct\nenvironments and cannot monitor all deployments with a single agent\n(for instance, if your environments are separated by firewalls), you\nwill need to add new projects. You can also use multiple projects and agents if you want to separately\nmonitor different MongoDB deployments that run in the same environment. To create a project for an organization, you must be either an\n Organization Owner  or an  Organization Project Creator . When you create a project, you are added as an\n Project Owner \nof the project. When you create a project,  Cloud Manager  automatically assigns a set of\ndefault  alert configurations \nto the project. You can also expand the  Projects  menu in the navigation\nbar, then click  + New Project . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. Click the  Leaf  icon in the upper left corner of the\npage. Click  New Project . To create a new project when LDAP is the authentication method: Go to the  Admin Console . Select  Organizations . Click  New Project  for the Organisation for which you wish to create the project. To learn more about  MongoDB Atlas , see\n https://www.mongodb.com/cloud . Click  Cloud Manager . Click  Next . If you selected an  MongoDB Atlas  project, enter a name for the\n Organization . If managing  Cloud Manager  users through  LDAP (Lightweight Directory Access Protocol) , enter values for the\nfollowing  Optional LDAP Configuration  fields . Multiple LDAP Groups Can Map to One Role Cloud Manager  roles can include more than one LDAP group. Type\nmultiple LDAP group names in the relevant role fields separated\nby two semicolons ( ;; ). Field Action LDAP Groups for Project Owner Role Type the LDAP group(s) to which the Project Owners of the\n Cloud Manager  project belong. You can type multiple LDAP groups into\nthis field if they are separated by two semicolons ( ;; ). LDAP Groups for Automation Admin Role Type the LDAP group(s) to which  Cloud Manager  project's Automation\nAdministrators belong. You can type multiple LDAP groups\ninto this field if they are separated by two semicolons\n( ;; ). LDAP Groups for Backup Admin Role Type the LDAP group(s) to which  Cloud Manager  project's Backup\nAdministrators belong. You can type multiple LDAP groups\ninto this field if they are separated by two semicolons\n( ;; ). LDAP Groups for Monitoring Admin Role Type the LDAP group(s) to which  Cloud Manager  project's Monitoring\nAdministrators belong. You can type multiple LDAP groups\ninto this field if they are separated by two semicolons\n( ;; ). LDAP Groups for User Admin Role Type the LDAP group(s) to which  Cloud Manager  project's User\nAdministrators belong. You can type multiple LDAP groups\ninto this field if they are separated by two semicolons\n( ;; ). LDAP Groups for Read Only Role Type the LDAP group(s) to which  Cloud Manager  project's Read Only\nUsers belong. You can type multiple LDAP groups into this\nfield if they are separated by two semicolons ( ;; ). For existing  Cloud Manager  users, enter their username. Usually, this is the\nemail the person used to register. For new  Cloud Manager  users, enter their email address to send an invitation. Deleting a project removes all the project's artifacts, including\nall monitoring data.  Cloud Manager  no longer displays the project in\nselection lists. You can delete a project if: You have the  Project Owner  access for the project. The project has no backups. To terminate your backups prior to\nremoving the project, see  Terminate a Deployment's Backups . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. Click the  Leaf  icon in the upper left corner of the\npage. You can also expand the  Projects  menu in the\nnavigation bar, then click  View All Projects . Click the   button for the project you wish to\ndelete to open the  Delete Project  modal. Click  Delete Project . Click  Delete Project  again. Agent Procedure Automations Stop the agent's process on each server. Monitoring See  Stop the Monitoring Agent  and  Remove Monitoring Agents from  Cloud Manager . Backup See  Stop the Backup Agent  and  Remove the Backup Agent from  Cloud Manager . Use the following procedures to modify projects: Edit Project Settings Reopen a Locked Account Remove Project from Automation",
            "code": [],
            "preview": "In Cloud Manager, MongoDB deployments are associated with projects.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-programmatic-api-keys",
            "title": "Programmatic Access to Cloud Manager",
            "headings": [
                "Manage Programmatic Access to an Organization",
                "Create an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Click Create API Key.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "View the Details of an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Navigate to View Details.",
                "Change an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Select the API Key to edit.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "Delete an API Key from an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Delete the API Key.",
                "Manage Programmatic Access to a Project",
                "Create an API Key for a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Click Create API Key.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "View the Details of an API Key in a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Navigate to View Details.",
                "Change an API Key's Roles in a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Select the API Key to edit.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "Delete an API Key from a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Delete the API Key."
            ],
            "paragraphs": "To grant programmatic access to an organization or project using only\nthe  API , you can create an  API (Application Programming Interface)  key.  API (Application Programming Interface) \nkeys: Have two parts: a Public Key and a Private Key. Cannot be used to log into  Cloud Manager  through the user interface. Must be granted roles as you would Users to make sure the  API (Application Programming Interface)  keys\ncan call  API (Application Programming Interface)  endpoints without errors. Can belong to one organization, but may be granted access to\nany number of projects in that organization. To perform any of the following actions, you must have the\n Organization Owner  role. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Organization Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Next to the  API (Application Programming Interface)  Key, click  . Click  View Details . The  <Public Key> API Key Details  modal displays the: Obfuscated  Private Key . Date the Key was last used. Date the Key was created. IPv4 (Internet Protocol version 4)  addresses on which the key is in the access list. Projects to which the Key has been granted access. You can change the roles, description, or access list of an  API (Application Programming Interface)  Key in\nan Organization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the   next to the  API (Application Programming Interface)  Key you want to\nchange. Click  Edit . From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Organization Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click   next to the  API (Application Programming Interface)  Key that you want to\ndelete. Click  Delete  to confirm that you want to delete this\n API (Application Programming Interface)  Key or  Cancel  to leave the key in the\nOrganization. Removing an  API (Application Programming Interface)  Key from an Organization also removes that key\nfrom any projects to which the key was granted access. To perform any of the following actions, you must have the\n Project User Admin  role. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Project Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Next to the  API (Application Programming Interface)  Key, click  . Click  View Details . The  <Public Key> API Key Details  modal displays the: Obfuscated  Private Key . Date the Key was last used. Date the Key was created. IPv4 (Internet Protocol version 4)  addresses on which the key is in the access list. Projects to which the Key has been granted access. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Click the   next to the  API (Application Programming Interface)  Key you want to\nchange. Click  Edit . From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Project Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Click   next to the  API (Application Programming Interface)  Key that you want to\ndelete. Click  Delete  to confirm that you want to delete this\n API (Application Programming Interface)  Key or  Cancel  to leave the key in the\nOrganization. Removing an  API (Application Programming Interface)  Key from an Organization also removes that key\nfrom any projects to which the key was granted access.",
            "code": [],
            "preview": "To grant programmatic access to an organization or project using only\nthe API, you can create an API (Application Programming Interface) key. API (Application Programming Interface)\nkeys:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/third-party-service-integrations",
            "title": "Third-Party Service Integrations",
            "headings": [
                "Required Access",
                "View / Modify Third-Party Settings",
                "Navigate to the Integrations page for your project.",
                "Click Configure for the third-party service you want to modify.",
                "Build Monitoring Integrations"
            ],
            "paragraphs": "You can integrate  Cloud Manager  with third-party monitoring services to\nview and analyze  performance metrics \nthat  Cloud Manager  collects about your cluster. Available with  Cloud Manager Standard  and\n Cloud Manager Premium . For more information,\n Contact MongoDB . To view or modify third-party integration settings, you must have\n Project Monitoring Admin  access to the project. If you are integrating with Slack, before proceeding, you must\ncomplete the steps to  integrate with Slack . To modify third-party integration settings: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Integrations . You can set the following: Setting Description PagerDuty Integration Key Default service key for alert notifications sent to a\n PagerDuty \naccount.  Cloud Manager  enters the key by default when you add a\nPagerDuty notification to an  alert configuration . If you add\nPagerDuty notifications and if the key used to send the\nnotifications becomes invalid,  Cloud Manager  sends an email to the\nproject owner and eventually removes the key. You can add PagerDuty notifications only for alerts that require\nuser acknowledgement. Informational alerts, such as the alert\nthat a replica set has elected a new primary, cannot use\nPagerDuty notification. Users can acknowledge PagerDuty alert notifications only from\nthe PagerDuty dashboard. Changing the Integration Key doesn't change any alerts that use this\nintegration. Those alerts still use the previous Integration Key. Remove and re-add each PagerDuty notification(s) to use the new key. All new PagerDuty keys use their  Events API v2 .\nIf you have an Events API v1 key, you can continue to use that key\nwith  Cloud Manager . HipChat Settings Default room and  API (Application Programming Interface)  token for alert notifications sent to\na HipChat account.  Cloud Manager  enters the values by default when\nyou add a HipChat notification to an  alert configuration .\nIf you add HipChat notifications and the token used to send\nnotifications becomes invalid,  Cloud Manager  sends an email to the\n Project Owner  and eventually removes the token. Slack Settings Team name, API token and a channel name for\nalert notifications sent to a Slack account. You can\nconfigure a Slack integration with OAuth2 by clicking\n Configure  and then  Sign in with Slack . When you sign in, you are taken to a Slack landing\npage where you may select a workspace and configure permissions.\nAfter configuring Slack to connect to  Cloud Manager , your API token\nis automatically generated and maintained. You will be\nredirected back to the  Integrations page . After initially configuring Slack with  Cloud Manager , you can\n Edit  or  Remove  the integration. Editing\nthe integration will display your team name and  API (Application Programming Interface)  token, and\nallow you to change your channel name. Legacy tokens are deprecated and will be removed in a future\nversion of  Cloud Manager . You cannot edit a legacy token\nintegration. Instead, you must reconfigure your Slack\nintegration with OAuth2. VictorOps Settings API (Application Programming Interface)  key and Routing key for alert notifications sent\nto a VictorOps account.  Cloud Manager  uses these values as the default\nVictorOps settings when configuring alerts. Enter the following information from your VictorOps account. If\nyou do not have an existing VictorOps account, you can\n sign up . VictorOps API Key VictorOps Routing Key (optional) Opsgenie API Key API (Application Programming Interface)  key for alert notifications sent to an Opsgenie\naccount.  Cloud Manager  uses this value as the default\n OpsGenie Alert API \nkey when configuring alerts. Enter the following information from your Opsgenie account. If\nyou do not have an existing Opsgenie account, you can\n sign up : Opsgenie API Key API Region (United States only) Datadog Settings Datadog is not supported with  Cloud Manager . Webhook Settings Webhook URL  endpoint to which  Cloud Manager  can send alerts\nfor programmatic processing.  Cloud Manager  sends an alert as an  HTTP (Hypertext Transfer Protocol) \nPOST request in which the request body contains a  JSON (Javascript Object Notation) \ndocument that uses the same format as the  Cloud Manager   API (Application Programming Interface) \n Alerts resource . To send alert notifications to a Webhook, select the Webhook\nnotification option when creating or editing an\n alert configuration . If you add a Webhook notification and\nthe  URL (Uniform Resource Locator)  or optional key becomes invalid,  Cloud Manager  sends an email\nto the  Project Owner  and eventually removes the\nWebhook settings. Cloud Manager  adds a request header called  X-MMS-Event  to\ndistinguish between various alert states. The possible values\nfor this header are: If you specify a key in the  Webhook Secret  field,\n MongoDB Cloud Manager  adds the  X-MMS-Signature  request header. This\nheader contains the base64-encoded  HMAC (hash-based message authentication code) -SHA-1 signature of the\nrequest body.  MongoDB Cloud Manager  creates the signature using the provided\nsecret. alert.open The alert was just opened. alert.close The alert was resolved. alert.update A previously opened alert is still open. alert.acknowledge The alert was acknowledged. alert.cancel The alert became invalid and was canceled. alert.inform Represents an informational alert, which is a\npoint-in-time event, such as \"Primary Elected.\" Microsoft Teams Webhook URL Configures  Cloud Manager  to send alerts about your project to\nyour  Microsoft Teams \nchannel. You can view these alerts in the\n Adaptive Card \ndisplayed in your channel. To send alert notifications to a Microsoft Teams channel,\nyou must create a Microsoft Teams incoming webhook.\nAfter creating the webhook, you can use the automatically\ngenerated URL to configure your Microsoft Teams integration\nin  Cloud Manager . To setup the integration, see\n Integrate with Microsoft Teams . Prometheus Settings Configures  Cloud Manager  to send metric data about your deployment\nto your  Prometheus  instance. To learn more, see\n Integrate with Prometheus . You can build a monitoring integration using the  Cloud Manager \n API monitoring and alerts endpoints .",
            "code": [],
            "preview": "You can integrate Cloud Manager with third-party monitoring services to\nview and analyze performance metrics\nthat Cloud Manager collects about your cluster.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/restore-sharded-cluster",
            "title": "Restore a Sharded Cluster from a Snapshot",
            "headings": [
                "Considerations",
                "Review change to BinData BSON sub-type",
                "Restore using settings given in restoreInfo.txt",
                "Snapshots when Agent Cannot Stop Balancer",
                "Backup Considerations",
                "Encryption Considerations",
                "Disable Client Requests to MongoDB during Restore",
                "Restore a Snapshot",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the restore point.",
                "Choose to restore the files to another cluster.",
                "Click Restore.",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the restore point.",
                "Choose to restore the files to another cluster.",
                "Click Restore."
            ],
            "paragraphs": "When you restore a cluster from a snapshot,  Cloud Manager  provides you with\nrestore files for the selected restore point. To learn about the restore process, see\n Restore Overview . The  BSON specification  changed the\ndefault subtype for the BSON binary datatype ( BinData ) from  2 \nto  0 . Some binary data stored in a snapshot may be  BinData \nsubtype 2. The Backup automatically detects and converts snapshot\ndata in  BinData  subtype 2 to  BinData  subtype 0. If your\napplication code expects  BinData  subtype 2, you must update your\napplication code to work with  BinData  subtype 0. The notes on the  BSON specification  explain the particular specifics\nof this change. The backup restore file includes a metadata file named\n restoreInfo.txt . This file captures the options the database used\nwhen the snapshot was taken. The database must be run with the listed\noptions after it has been restored. This file contains: Group name Replica Set name Cluster ID  (if applicable) Snapshot timestamp  (as Timestamp at UTC) Restore timestamp  (as a BSON Timestamp at UTC) Last Oplog applied  (as a BSON Timestamp at UTC) MongoDB version Storage engine type mongod  startup options used on the database when the snapshot was\ntaken Cloud Manager  displays a warning next to cluster snapshots taken while the\n balancer  is enabled. If you restore from such a\nsnapshot, you run the risk of lost or orphaned data. For more\ninformation, see  Snapshots when Agent Can't Stop Balancer . All  FCV (Feature Compatibility Version)  databases must fulfill the appropriate\n backup considerations . You must ensure that the MongoDB deployment does not receive client\nrequests during restoration. You must either: Restore to new systems with new hostnames and reconfigure your\napplication code once the new deployment is running,  or Ensure that the MongoDB deployment will  not  receive client\nrequests while you restore data. To have  Cloud Manager  automatically restore the snapshot: Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . Click  Choose Cluster to Restore to . Complete the following fields: Field Action Project Select a  project  to which you want to restore the\n snapshot . Cluster to Restore to Select a  cluster  to which you want to restore\nthe snapshot. Cloud Manager   must  manage the target sharded cluster. Automation removes all existing data from the\ncluster. All backup data and snapshots for the\nexisting cluster are preserved. Click  Restore . Cloud Manager  notes how much storage space the restore requires in its UI. If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore. The manual restore process assumes that: The target host has no data in place. You have not used an  encrypted snapshot . You have not enabled two-factor authentication. Restore the snapshot manually only if you can't run an\nautomatic restore. If you determine that you must use\na manual restore,  contact MongoDB Support \nfor help. This section provides a high-level overview of\nthe stages in the manual restore procedure. The manual restore process has the following high-level stages that you\nperform with help from MongoDB Support: The full manual restore procedure can be found in the\n MongoDB Server 4.2 \ndocumentation. For MongoDB 4.4 or later deployments, refer to the\ncorresponding versions of the manual. Connect to each replica set and the Config Server Replica Set (CSRS)\nwith either the legacy  mongo  shell or  mongosh . (Optional).  Review the configuration file of each replica set and CSRS .\nAfter you complete the restore process, you can reconstruct the\nconfiguration on the restored replica sets using the saved\nconfiguration files. Prepare the target hosts . Stop all  mongod  processes running on the target hosts. Provision enough storage space to hold the restored data. Prepare directories for data and logs. Add a  configuration file  to your\nMongoDB Server directory with the target host's storage and log\npaths, and configuration for replicas and sharding roles. Restore the CSRS . Restore each shard's replica set . Restart each mongos process in the target cluster . Verify that you can connect to the cluster . To have  Cloud Manager  automatically restore the snapshot: Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one\n stored snapshot . Select an existing  snapshot  to restore. Point In Time Allows you to choose a date and time as your restore time\nobjective for your snapshot. By default, the\nOplog Store stores 24 hours of data. If you select  12:00 , the last operation in the\nrestore is  11:59:59  or earlier. If you are restoring a sharded cluster that runs\n FCV  of 4.0 or earlier, you must  enable\ncluster checkpoints  to\nperform a  PIT (point in time)  restore on a sharded cluster. If no checkpoints that include your date and time are\navailable,  Cloud Manager  asks you to\n choose another point in time . You cannot perform a  PIT (point in time)  restore that covers any\ntime prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . Select a  Date  and  Time . Click  Next . If you are restoring a sharded cluster that runs  FCV  of 4.0\nor earlier and you chose  Point In Time : A list of  Checkpoints  closest to the time you\nselected appears. To start your point in time restore, you may: Choose one of the listed checkpoints, or Click  Choose another point in time  to remove the\nlist of checkpoints and select another date and time from\nthe menus. Click  Choose Cluster to Restore to . Complete the following fields: Field Action Project Select a  project  to which you want to restore the\n snapshot . Cluster to Restore to Select a  cluster  to which you want to restore the\nsnapshot. Cloud Manager   must  manage the target sharded cluster. Automation removes all existing data from the cluster.\nAll backup data and snapshots for the existing cluster\nare preserved. Click  Restore . Cloud Manager  notes how much storage space the restore requires in its\nconsole. If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore. The manual restore process assumes that: The target host has no data in place. You have not used an  encrypted snapshot . You have not enabled two-factor authentication. Restore the snapshot manually only if you can't run an\nautomatic restore. If you determine that you must use\na manual restore,  contact MongoDB Support \nfor help. This section provides a high-level overview of\nthe stages in the manual restore procedure. The manual restore process has the following high-level stages that you\nperform with help from MongoDB Support: The full manual restore procedure can be found in the\n MongoDB Server documentation . Connect to each replica set and the Config Server Replica Set (CSRS)\nwith either the legacy  mongo  shell or  mongosh . (Optional).  Review the configuration file of each replica set and CSRS .\nAfter you complete the restore process, you can reconstruct the\nconfiguration on the restored replica sets using the saved\nconfiguration files. Prepare the target hosts . Stop all  mongod  processes running on the target hosts. Provision enough storage space to hold the restored data. Prepare directories for data and logs. Add a  configuration file  to your\nMongoDB Server directory with the target host's storage and log\npaths, and configuration for replicas and sharding roles. Restore the CSRS . Restore each shard's replica set . Restart each mongos process in the target cluster . Verify that you can connect to the cluster .",
            "code": [],
            "preview": "When you restore a cluster from a snapshot, Cloud Manager provides you with\nrestore files for the selected restore point.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/trigger-resync",
            "title": "Trigger an Initial Sync for One Process",
            "headings": [
                "Considerations",
                "Trigger Initial Sync",
                "Navigate to the Clusters view for your deployment.",
                "Choose a cluster with a node you want to resync.",
                "Choose a node to resync.",
                "Click Resync.",
                "Click Resync to confirm.",
                "At the top of the deployment Overview, click Review & Deploy",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "Use  Cloud Manager  Automation to start an  initial sync  process on one or\nmore MongoDB instances. This resynchronizes data stored on MongoDB nodes\nin clusters. You can only resync  secondary  nodes. A node might become the primary between the time when you trigger a resync\nand when it runs. In this case, the MongoDB Agent waits for\nyou to connect to the node manually and run the\n rs.stepDown()  command. You can only schedule one node in any given replica set to resync at\na given time. While one node resyncs, the  Cloud Manager  disables the\n Resync  option for all other nodes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click the name of the deployment that contains the process to\nresync.  Cloud Manager  opens the deployment  Overview . Find the node that you want to resync. Click the  Actions  dropdown for that node. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the cluster to make additional changes. lastResync parameter  in the  Cloud Manager \nAutomation configuration for MongoDB instances.",
            "code": [],
            "preview": "Use Cloud Manager Automation to start an initial sync process on one or\nmore MongoDB instances. This resynchronizes data stored on MongoDB nodes\nin clusters.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-programmatic-access",
            "title": "Programmatic Access to Cloud Manager",
            "headings": [
                "Manage Programmatic Access to an Organization",
                "Create an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Click Create API Key.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "View the Details of an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Navigate to View Details.",
                "Change an API Key in an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Select the API Key to edit.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "Delete an API Key from an Organization",
                "Navigate to the Access Manager page for your organization.",
                "Click the API Keys tab.",
                "Delete the API Key.",
                "Manage Programmatic Access to a Project",
                "Create an API Key for a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Click Create API Key.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "View the Details of an API Key in a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Navigate to View Details.",
                "Change an API Key's Roles in a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Select the API Key to edit.",
                "Complete the API Key Information form.",
                "Click Next.",
                "Add Access List Values for this API Key.",
                "Click Save.",
                "Delete an API Key from a Project",
                "Navigate to the Access Manager page for your project.",
                "Click the API Keys tab.",
                "Delete the API Key."
            ],
            "paragraphs": "To grant programmatic access to an organization or project using only\nthe  API , you can create an  API (Application Programming Interface)  key.  API (Application Programming Interface) \nkeys: Have two parts: a Public Key and a Private Key. Cannot be used to log into  Cloud Manager  through the user interface. Must be granted roles as you would Users to make sure the  API (Application Programming Interface)  keys\ncan call  API (Application Programming Interface)  endpoints without errors. Can belong to one organization, but may be granted access to\nany number of projects in that organization. To perform any of the following actions, you must have the\n Organization Owner  role. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Organization Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Next to the  API (Application Programming Interface)  Key, click  . Click  View Details . The  <Public Key> API Key Details  modal displays the: Obfuscated  Private Key . Date the Key was last used. Date the Key was created. IPv4 (Internet Protocol version 4)  addresses on which the key is in the access list. Projects to which the Key has been granted access. You can change the roles, description, or access list of an  API (Application Programming Interface)  Key in\nan Organization. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click the   next to the  API (Application Programming Interface)  Key you want to\nchange. Click  Edit . From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Organization Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. Click  Access Manager  in the sidebar, or click\n Access Manager  in the navigation bar, then click\nyour organization. Click   next to the  API (Application Programming Interface)  Key that you want to\ndelete. Click  Delete  to confirm that you want to delete this\n API (Application Programming Interface)  Key or  Cancel  to leave the key in the\nOrganization. Removing an  API (Application Programming Interface)  Key from an Organization also removes that key\nfrom any projects to which the key was granted access. To perform any of the following actions, you must have either the\n Project User Admin  role. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Project Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Next to the  API (Application Programming Interface)  Key, click  . Click  View Details . The  <Public Key> API Key Details  modal displays the: Obfuscated  Private Key . Date the Key was last used. Date the Key was created. IPv4 (Internet Protocol version 4)  addresses on which the key is in the access list. Projects to which the Key has been granted access. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Click the   next to the  API (Application Programming Interface)  Key you want to\nchange. Click  Edit . From the  API Key Information  step of the\n Add API Key  page: Field Value Description Enter a description for the new  API (Application Programming Interface)  Key. Project Permissions Select the  new role or roles  for the  API (Application Programming Interface)  Key. From the  Private Key & Access List  step of the\n Add API Key  page, click  Add Access List Entry . For this  API (Application Programming Interface)  Key, You can choose to either: Enter an  IPv4 (Internet Protocol version 4)  address from which  Cloud Manager  should accept  API (Application Programming Interface) \nrequests, or Click  Use Current IP Address  if the host you are using\nto access  Cloud Manager  will make  API (Application Programming Interface)  requests. Cloud Manager  displays the  Private Key  once:  on this page .\nClick  Copy  to add the Private Key to the clipboard. Save\nand secure this Private Key as you would any other password. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Project  menu in the navigation bar. Click  Access Manager  in the navigation bar, then click\nyour project. Click   next to the  API (Application Programming Interface)  Key that you want to\ndelete. Click  Delete  to confirm that you want to delete this\n API (Application Programming Interface)  Key or  Cancel  to leave the key in the\nOrganization. Removing an  API (Application Programming Interface)  Key from an Organization also removes that key\nfrom any projects to which the key was granted access.",
            "code": [],
            "preview": "To grant programmatic access to an organization or project using only\nthe API, you can create an API (Application Programming Interface) key. API (Application Programming Interface)\nkeys:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-available-mongodb-version",
            "title": "Add a Custom MongoDB Build",
            "headings": [
                "Add a Custom Build",
                "Click Deployment, then the More drop-down list, then Custom Builds.",
                "Click Add Custom Build.",
                "Complete the Add Custom Build form."
            ],
            "paragraphs": "You can add custom-built versions of MongoDB for  Cloud Manager  to download.\nAutomation downloads these MongoDB versions \"lazily\": downloading\nbinaries for a version of MongoDB when a MongoDB process uses that\nversion on a managed host. The existing versions of MongoDB may not meet your immediate needs.\nYou can provide other versions of MongoDB through the\n Custom Builds  functionality. Click  Add Custom Build . Parameter Description Platform The platform on which this build can be installed. Accepted values are: Linux (amd64)  (64-bit Intel architecture Linux) Linux (ppc64le)  (64-bit PowerPC architecture Linux) Mac OS X (amd64)  (64-bit Intel architecture macOS) Version Name Your label for this build. It must begin with a valid MongoDB\nversion number. Download  URL (Uniform Resource Locator) URL (Uniform Resource Locator)  from which the MongoDB Agent can download this build.\nThis  URL (Uniform Resource Locator)  must: Be accessible to from your network. It doesn't need to be Internet accessible. Point to a host running an  HTTP (Hypertext Transfer Protocol) -compatible web server. Point to the Custom Build binary file. The  Cloud Manager  does not check if this  URL (Uniform Resource Locator)  exists, only\nthat it is  a complete URL . Git Version The complete 40-character  git  SHA-1 checksum (or  hash )\nfor this build. Modules If your Custom Build included any add-on modules, enter them\ninto this combo box. Accepted values are: None subscription enterprise The new Custom Build appears on the  Custom Builds  page. After you create a Custom Build, you cannot edit it. You can click\nthe  Remove  link to delete it.",
            "code": [
                {
                    "lang": "sh",
                    "value": "3.6.2-myCustomBuild"
                },
                {
                    "lang": "sh",
                    "value": "f3fa18bc6d8a749b7a526d83d2ad969fae1236c7"
                }
            ],
            "preview": "You can add custom-built versions of MongoDB for Cloud Manager to download.\nAutomation downloads these MongoDB versions \"lazily\": downloading\nbinaries for a version of MongoDB when a MongoDB process uses that\nversion on a managed host.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/restore-replica-set",
            "title": "Restore a Replica Set from a Snapshot",
            "headings": [
                "Considerations",
                "Review change to BinData BSON sub-type",
                "Restore using settings given in restoreInfo.txt",
                "Backup Considerations",
                "Prerequisites",
                "Client Requests During Restoration",
                "Restore a Snapshot",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the restore point.",
                "Choose to restore the files to another cluster.",
                "Click Restore.",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the Restore Point.",
                "Click Download to Restore the Files Manually.",
                "Configure the snapshot download.",
                "Retrieve the Snapshots.",
                "Unmanage the Target Replica Set.",
                "Stop the Target Replica Set.",
                "Verify Hardware and Software Requirements on the Target Replica Set.",
                "Move the Snapshot Data Files to the Target Host.",
                "Start the Temporary Standalone Instance on the Ephemeral Port.",
                "Connect to the Temporary Standalone Instance with mongosh.",
                "Remove Replica Set-Related Collections from the local Database.",
                "Add a New Replica Set Configuration.",
                "Insert the Minimum Valid Timestamp.",
                "Set the Restore Point to the Values in Restore Timestamp from restoreInfo.txt.",
                "Stop the Temporary Standalone Instance.",
                "Restart the Instance to Recover the Oplog.",
                "Stop the Temporary Instance on the Ephemeral Port.",
                "(Point-in-Time Restore Only) Run the MongoDB Backup Restore Utility.",
                "(Point-in-Time Restore Only) Restart the Instance to Recover the Oplog.",
                "(Point-in-Time Restore Only) Stop the Instance on the Ephemeral Port.",
                "Restart the Replica Set as a Standalone Instance.",
                "Remove the Temporary Replica Set Configuration.",
                "Stop the Standalone Instance.",
                "Repeat Steps 10 to 25 for each node in the Replica Set.",
                "Restart all nodes in a replica set.",
                "Set up your replica set configuration.",
                "Reimport the Replica Set.",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the restore point.",
                "Choose to restore the files to another cluster.",
                "Click Restore.",
                "Click Continuous Backup, then the Overview tab.",
                "Click the deployment, then click Restore or Download.",
                "Select the restore point.",
                "Click Download to restore the files manually.",
                "Configure the snapshot download.",
                "Retrieve the snapshots.",
                "Restore the snapshot data files to the destination host.",
                "Run the MongoDB Backup Restore Utility (Point-in-Time Restore Only).",
                "Unmanage the Replica Set.",
                "Restore the Replica Set Manually.",
                "Reimport the Replica Set."
            ],
            "paragraphs": "When you restore a replica set from backup,  Cloud Manager  provides you with a\nrestore file for the selected restore point. To learn about the\nrestore process, please see  Restore Overview . The  BSON specification  changed the\ndefault subtype for the BSON binary datatype ( BinData ) from  2 \nto  0 . Some binary data stored in a snapshot may be  BinData \nsubtype 2. The Backup automatically detects and converts snapshot\ndata in  BinData  subtype 2 to  BinData  subtype 0. If your\napplication code expects  BinData  subtype 2, you must update your\napplication code to work with  BinData  subtype 0. The notes on the  BSON specification  explain the particular specifics\nof this change. The backup restore file includes a metadata file named\n restoreInfo.txt . This file captures the options the database used\nwhen the snapshot was taken. The database must be run with the listed\noptions after it has been restored. This file contains: Group name Replica Set name Cluster ID  (if applicable) Snapshot timestamp  (as Timestamp at UTC) Restore timestamp  (as a BSON Timestamp at UTC) Last Oplog applied  (as a BSON Timestamp at UTC) MongoDB version Storage engine type mongod  startup options used on the database when the snapshot was\ntaken All  FCV (Feature Compatibility Version)  databases must fulfill the appropriate\n backup considerations . To perform manual restores, you must have the\n Backup Admin  role in  Cloud Manager . You must ensure that the MongoDB deployment does not receive client\nrequests during restoration. You must either: Restore to new systems with new hostnames and reconfigure your\napplication code once the new deployment is running,  or Ensure that the MongoDB deployment will  not  receive client\nrequests while you restore data. To have  Cloud Manager  automatically restore the snapshot: Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . Click  Choose Cluster to Restore to . Complete the following fields: Field Action Project Select a  project  to which you want to restore the\n snapshot . Cluster to Restore to Select a  cluster  to which you want to restore\nthe snapshot. Cloud Manager   must  manage the target replica set. Automation removes all existing data from the\ncluster. All backup data and snapshots for the\nexisting cluster are preserved. Click  Restore . Cloud Manager  notes how much storage space the restore requires. This procedure involves a large number steps. Some of\nthese steps have severe security implications. If you\ndon't need to restore to a deployment that  Cloud Manager  doesn't\nmanage, consider an automated restore. Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . Configure the following download options: Pull Restore Usage Limit Select how many times the link can be used. If you select\n No Limit , the link is re-usable until it expires. Restore Link Expiration (in hours) Select the number of hours until the link expires. The\ndefault value is  1 . The maximum value is the number of\nhours until the selected snapshot expires. Click  Finalize Request . If you use  2FA ,\n Cloud Manager  prompts you for your 2FA code. Enter your 2FA code, then\nclick  Finalize Request . Cloud Manager  creates links to the snapshot. By default, these links are\navailable for an hour and you can use them just once. To download the snapshots: If you closed the restore panel, click  Continuous Backup , then\n Restore History . When the restore job completes, click  (get link) \nfor each  replica set  that appears. Click: The copy button to the right of the link to copy the link to\nuse it later, or Download  to download the snapshot immediately. Before attempting to restore the data manually,  remove the\nreplica set from Automation . Choose the\n Unmanage this item in Ops Managers but continue to\nmonitor  option. Depending on your path, you may need to specify\nthe path to  mongosh . Run: To learn more, see  installation . Storage Capacity The target host's hardware needs to have sufficient free storage\nspace for storing the restored data. If you want to keep any\nexisting cluster data on this host, make sure the host\nhas sufficient free space for the cluster data and the\nrestored data. MongoDB Version The target host on which you are restoring and the source host\nfrom which you are restoring  must run the same MongoDB\nServer version. To check the MongoDB version, run  mongod\n--version  from a terminal or shell. Before you move the snapshot's data files to the target host, check\nwhether the target host contains any existing files, and delete all\nthe files except the  automation-mongod.conf  file. Unpack the snapshot files and move them to the target host as follows: Start the  mongod  process in standalone mode as a temporary measure.\nThis allows you to add new configuration parameters to the\n system.replset  collection in subsequent steps. Use the  <ephemeralPort>  for the temporary standalone  mongod  process\nin all steps in this procedure  where it is mentioned. This port must\ndiffer from the source and target host ports. Run the  mongod  process as follows. Depending on your path, you may\nneed to specify the path to the  mongod  binary. If you are restoring\nfrom a namespace-filtered snapshot, use the  --restore  option. After the  mongod  process starts accepting connections, continue. From the host running this  mongod  process, start  mongosh . Depending\non your path, you may need to specify the path to  mongosh . To connect to the  mongod  listening to localhost on\nthe same  <ephemeralPort>  specified in the previous step, run: After  mongosh  connects to  mongod , continue. Run the following commands to remove the previous replica set\nconfiguration and other non-oplog, replication-related collections. A successful response should look like this: To perform manual restores, you must have the\n Backup Admin  role in  Cloud Manager . Insert the following document into the  system.replset  collection\nin the  local  database. Change the following variables: A successful response should look like this: <replaceMeWithTheReplicaSetName>  to the name of your replica set. This\nname does not have to be the same as the old name. <host>  to the host serving this replica set member. <ephemeralPortNewReplicaSet>  to the ephemeral port for the new\nreplica set. This must be a different port than the\n <ephemeralPort>  that you specified in Step 11 of this procedure. Issue the following command: A successful response should look like this: Set the  oplogTruncateAfterPoint  document to the\nvalues provided in the  Restore Timestamp  field of the\n restoreInfo.txt  file. The  Restore Timestamp  field in that file contains two\nvalues. In the following example, the first value is the\ntimestamp, and the second value is the increment. The following example code uses the timestamp value and increment value from the previous example. A successful response should look like this: If you try to restore a MongoDB 4.2 snapshot with a  mongod \nrunning MongoDB 4.4, your oplog may contain unneeded documents. To resolve this issue, you can either: This issue doesn't apply to MongoDB 4.4 or later snapshots. Decrement the timestamp by 1. Restore using MongoDB 4.2. Have  Cloud Manager  run an automated restore. Depending on your path, you may need to specify\nthe path to  mongosh . Run: Start the  mongod  using the following command, specifying these\nparameters: The  mongod  replays the oplog up to the  Restore timestamp . <bind_ip>  to the host serving this replica set member that you\nspecified in step 14 of this procedure. <port>  to the <ephemeralPort> that you\nspecified in Step 11 of this procedure. Depending on your path, you may need to specify\nthe path to  mongosh . Run: This step is optional. Run it if you need Point-in-Time Restore. If you\nneed this step, complete it and then run steps 21 and 22. If you\ndon't need this step, then proceed to step 23.\nIn this step, you download and run the MongoDB Backup Restore Utility on the\ntarget instance for the replica set, and then stop the instance. Download the MongoDB Backup Restore Utility to your host. If you closed the restore panel, click  Continuous\nBackup in Deployment ,  More , and then\n Download MongoDB Backup Restore Utility . Start a  ~bin.mongod  instance without authentication\nenabled using the extracted snapshot directory as the data\ndirectory. Depending on your path, you may need to\nspecify the path to the  mongod  binary. The MongoDB Backup Restore Utility doesn't support\nauthentication, so you can't start this temporary database with\nauthentication. Run the MongoDB Backup Restore Utility on your target host.\nRun it once for the replica set. The  mongodb-backup-restore-util  command uses the following\noptions:  means that if you copied the\n mongodb-backup-restore-util  command provided in\n Cloud Manager , this field is pre-configured. Cloud Manager  provides the  mongodb-backup-restore-util  with the\nappropriate options for your restore on the restore panel under\n Run Binary with PIT Options . You should copy the  mongodb-backup-restore-util  command\nprovided in the  Cloud Manager . Option Necessity Description --host Required Provide the hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address\nfor the host that serves the  mongod  to which the\n oplog  should be applied. If you\ncopied the  mongodb-backup-restore-util  command provided in\nthe  Cloud Manager , this field is pre-configured. --port Required Provide the port for the host that serves the  mongod  to which\nthe  oplog  should be applied. --opStart Required Provide the\n BSON timestamp \nfor the first  oplog  entry\nyou want to include in the restore. This information appears in\nthe \"Last Oplog Applied\" entry in the  restoreInfo.txt  file\nprovided with the downloaded snapshot. This value must be less than or equal to the  --opEnd \nvalue. --opEnd Required Provide the\n BSON timestamp \nfor the last  oplog  entry\nyou want to include in the restore. --logFile Optional Provide a path, including file name, where the\n MBRU (MongoDB Backup Restore Utility)  log is\nwritten. --oplogSourceAddr Required Provide the  URL (Uniform Resource Locator)  to the  Cloud Manager  resource endpoint. --apiKey Required Provide your  Cloud Manager  Agent\n API Key . --groupId Required Provide the  group  ID. --rsId Required Provide the  replica set  ID. --whitelist Optional Provide a list of databases and/or collections to which you\nwant to limit the restore. --blacklist Optional Provide a list of databases and/or collections to which you\nwant to exclude from the restore. --seedReplSetMember Optional Use if you need a replica set member to re-create the\n oplog  collection and seed it with the correct\ntimestamp. Requires  --oplogSizeMB  and  --seedTargetPort . --oplogSizeMB Conditional Provide the  oplog  size in MB. Required if  --seedReplSetMember  is set. --seedTargetPort Conditional Provide the port for the  replica set 's\n primary . This may be different from the  ephemeral\nport \nused. Required if  --seedReplSetMember  is set. --ssl Conditional Use if you need  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  to apply the  oplog  to\nthe  mongod . Requires  --sslCAFile  and  --sslPEMKeyFile . --sslCAFile Conditional Provide the path to the  Certificate Authority  file. Required if  --ssl  is set. --sslPEMKeyFile Conditional Provide the path to the  PEM (Privacy-Enhanced Mail)  certificate file. Required if  --ssl  is set. --sslPEMKeyFilePwd Conditional Provide the password for the  PEM (Privacy-Enhanced Mail)  certificate file specified\nin  --sslPEMKeyFile . Required if  --ssl  is set and that  PEM (Privacy-Enhanced Mail)  key file is\nencrypted. --sslClientCertificateSubject Provide the Client Certificate Subject or Distinguished Name\n(DN) for the target MongoDB process. --sslRequireValidServerCertificates Optional Set a flag indicating if the tool should validate certificates\nthat the target MongoDB process presents. --sslServerClientCertificate Optional Provide the absolute path to Client Certificate file to use for\nconnecting to the  Cloud Manager  host. --sslServerClientCertificatePassword Conditional Provide the absolute path to Client Certificate file password to\nuse for connecting to the  Cloud Manager  host. Required if  --sslServerClientCertificate  is set and that\ncertificate is encrypted. --sslRequireValidMMSBackupServerCertificate Optional Set a flag indicating if valid certificates are required when\ncontacting the  Cloud Manager  host. Default value is  true . --sslTrustedMMSBackupServerCertificate Optional Provide the absolute path to the trusted  Certificate Authority  certificates\nin  PEM (Privacy-Enhanced Mail)  format for the  Cloud Manager  host. If this flag is not\nprovided, the system  Certificate Authority  is used. --httpProxy Optional Provide the  URL (Uniform Resource Locator)  of an  HTTP (Hypertext Transfer Protocol)  proxy server the tool can use. Stop the  ~bin.mongod  on the instance. Depending on your path,\nyou may need to specify the path to  mongosh . Run: This step is needed only if you ran step 20. If you didn't need to run\nstep 20, then proceed to step 23.\nStart the  mongod  using the following command. The  mongod  replays the oplog\nup to the  Restore timestamp . Depending on your path, you may need to specify\nthe path to the  mongod  binary. After you complete this step, the actual restore process is completed. In the\nfollowing steps, you restore the configuration of the replica set and reimport it. This step is needed only if you ran step 20. If you didn't need to run\nstep 20, then proceed to step 23. Depending on your path, you may need to specify\nthe path to  mongosh . Run: Start the  mongod  process as a standalone instance using the\nfollowing command. For  <port> , use the actual port on which\nthis node in the replica set is intended to run. Depending on your\npath, you may need to specify the path to the  mongod  binary. After the  mongod  process starts accepting connections, continue. Run the following command: Depending on your path, you may need to specify\nthe path to  mongosh . Run: At this point, the data files in the replica set are in a consistent\nstate, but the replica set configuration needs to be updated so that\neach node is aware of each other. Run the following command: The following example restarts all nodes with the version 4.4.12\nenterprise with the data path  /data6/node3 : Log into one of the nodes and run the following commands: To manage the replica set with automation again,\n import the replica set \nback into  Cloud Manager . On the  Deployment  page, click  Add , select\n Existing MongoDB Deployment , and proceed with adding\n Automation  back to your cluster. To have  Cloud Manager  automatically restore the snapshot: Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . To find the latest Oplog entry, run the following query\nin  mongosh : A successful result should look like this: The parts of the  ts  value correspond to the values\nyou need for the  Timestamp  and\n Increment  boxes. To translate the epoch time into a human-readable\ntimestamp, try using a tool like\n Epoch Converter MongoDB does not endorse this service. Its reference\nis intended only as informational. Click  Choose Cluster to Restore to . Complete the following fields: Field Action Project Select a  project  to which you want to restore the\n snapshot . Cluster to Restore to Select a  cluster  to which you want to restore\nthe snapshot. Cloud Manager   must  manage the target replica set. Automation removes all existing data from the\ncluster. All backup data and snapshots for the\nexisting cluster are preserved. Click  Restore . Cloud Manager  notes how much storage space the restore requires. Choose the point from which you want to restore your backup. Restore Type Description Action Snapshot Allows you to choose one  stored snapshot . Select an existing  snapshot  to restore. Point In Time Creates a custom snapshot that includes all operations up to but\nnot including the selected time. By default, the Oplog Store\nstores 24 hours of data. If you select  12:00 , the last operation in the restore is\n 11:59:59  or earlier. In FCV 4.0, you cannot perform a  PIT (Point in Time)  restore\nthat covers any time prior to the latest backup resync. For the\nconditions that cause a resync, see\n Resync a Backup . This note does not apply to FCV 4.2\nor later. Select a  Date  and  Time . Oplog Timestamp Creates a custom snapshot that includes all operations up to and\nincluding the entered Oplog timestamp. The Oplog Timestamp contains two fields: Timestamp Timestamp in the number of seconds that have elapsed since the  UNIX epoch Increment Order of operation applied in that second as a\n32-bit ordinal. Type an Oplog  Timestamp  and  Increment . Run a query against  local.oplog.rs  on your\n replica set  to find the desired timestamp. Click  Next . To find the latest Oplog entry, run the following query\nin  mongosh : A successful result should look like this: The parts of the  ts  value correspond to the values\nyou need for the  Timestamp  and\n Increment  boxes. To translate the epoch time into a human-readable\ntimestamp, try using a tool like\n Epoch Converter MongoDB does not endorse this service. Its reference\nis intended only as informational. Configure the following download options: Pull Restore Usage Limit Select how many times the link can be used. If you select\n No Limit , the link is re-usable until it expires. Restore Link Expiration (in hours) Select the number of hours until the link expires. The\ndefault value is  1 . The maximum value is the number of\nhours until the selected snapshot expires. Click  Finalize Request . If you use  2FA ,\n Cloud Manager  prompts you for your 2FA code. Enter your 2FA code, then\nclick  Finalize Request . Cloud Manager  creates links to the snapshot. By default, these links are\navailable for an hour and can be used just once. To download the snapshots: If you closed the restore panel, click  Continuous Backup , then\n Restore History . When the restore job completes, click  (get link) \nfor each  replica set  appears. Click: The copy button to the right of the link to copy the link to\nuse it later, or Download  to download the snapshot immediately. For point-in-time and oplog timestamp restores, additional\ninstructions are shown. The final step shows the full command\nyou must run using the  MBRU (MongoDB Backup Restore\nUtility) . It includes all of the necessary options to ensure a\nfull restore. Select and copy the  mongodb-backup-restore-util  command\nprovided under  Run Binary with PIT Options . Download the MongoDB Backup Restore Utility to your host. If you closed the restore panel, click  Continuous Backup , then\n More  and then  Download MongoDB Backup\nRestore Utility . Start a  ~bin.mongod  instance without authentication\nenabled using the extracted snapshot directory as the data\ndirectory. The MongoDB Backup Restore Utility doesn't support\nauthentication, so you can't start this temporary database with\nauthentication. Run the MongoDB Backup Restore Utility on your destination host.\nRun it once for the replica set. The  mongodb-backup-restore-util  command uses the following\noptions:  means that if you copied the\n mongodb-backup-restore-util  command provided in\n Cloud Manager , this field is pre-configured. Cloud Manager  provides the  mongodb-backup-restore-util  with the\nappropriate options for your restore on the restore panel under\n Run Binary with PIT Options . You should copy the  mongodb-backup-restore-util  command\nprovided in the  Cloud Manager . Option Necessity Description --host Required Provide the hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4)  address, or  IPv6 (Internet Protocol version 6)  address\nfor the host that serves the  mongod  to which the\n oplog  should be applied. If you\ncopied the  mongodb-backup-restore-util  command provided in\nthe  Cloud Manager , this field is pre-configured. --port Required Provide the port for the host that serves the  mongod  to which\nthe  oplog  should be applied. --opStart Required Provide the\n BSON timestamp \nfor the first  oplog  entry\nyou want to include in the restore. This information appears in\nthe \"Last Oplog Applied\" entry in the  restoreInfo.txt  file\nprovided with the downloaded snapshot. This value must be less than or equal to the  --opEnd \nvalue. --opEnd Required Provide the\n BSON timestamp \nfor the last  oplog  entry\nyou want to include in the restore. --logFile Optional Provide a path, including file name, where the\n MBRU (MongoDB Backup Restore Utility)  log is\nwritten. --oplogSourceAddr Required Provide the  URL (Uniform Resource Locator)  to the  Cloud Manager  resource endpoint. --apiKey Required Provide your  Cloud Manager  Agent\n API Key . --groupId Required Provide the  group  ID. --rsId Required Provide the  replica set  ID. --whitelist Optional Provide a list of databases and/or collections to which you\nwant to limit the restore. --blacklist Optional Provide a list of databases and/or collections to which you\nwant to exclude from the restore. --seedReplSetMember Optional Use if you need a replica set member to re-create the\n oplog  collection and seed it with the correct\ntimestamp. Requires  --oplogSizeMB  and  --seedTargetPort . --oplogSizeMB Conditional Provide the  oplog  size in MB. Required if  --seedReplSetMember  is set. --seedTargetPort Conditional Provide the port for the  replica set 's\n primary . This may be different from the  ephemeral\nport \nused. Required if  --seedReplSetMember  is set. --ssl Conditional Use if you need  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  to apply the  oplog  to\nthe  mongod . Requires  --sslCAFile  and  --sslPEMKeyFile . --sslCAFile Conditional Provide the path to the  Certificate Authority  file. Required if  --ssl  is set. --sslPEMKeyFile Conditional Provide the path to the  PEM (Privacy-Enhanced Mail)  certificate file. Required if  --ssl  is set. --sslPEMKeyFilePwd Conditional Provide the password for the  PEM (Privacy-Enhanced Mail)  certificate file specified\nin  --sslPEMKeyFile . Required if  --ssl  is set and that  PEM (Privacy-Enhanced Mail)  key file is\nencrypted. --sslClientCertificateSubject Provide the Client Certificate Subject or Distinguished Name\n(DN) for the target MongoDB process. --sslRequireValidServerCertificates Optional Set a flag indicating if the tool should validate certificates\nthat the target MongoDB process presents. --sslServerClientCertificate Optional Provide the absolute path to Client Certificate file to use for\nconnecting to the  Cloud Manager  host. --sslServerClientCertificatePassword Conditional Provide the absolute path to Client Certificate file password to\nuse for connecting to the  Cloud Manager  host. Required if  --sslServerClientCertificate  is set and that\ncertificate is encrypted. --sslRequireValidMMSBackupServerCertificate Optional Set a flag indicating if valid certificates are required when\ncontacting the  Cloud Manager  host. Default value is  true . --sslTrustedMMSBackupServerCertificate Optional Provide the absolute path to the trusted  Certificate Authority  certificates\nin  PEM (Privacy-Enhanced Mail)  format for the  Cloud Manager  host. If this flag is not\nprovided, the system  Certificate Authority  is used. --httpProxy Optional Provide the  URL (Uniform Resource Locator)  of an  HTTP (Hypertext Transfer Protocol)  proxy server the tool can use. Before attempting to restore the data manually,  remove the\nreplica set from Automation . Follow the tutorial from the MongoDB Manual to\n restore the replica set . To manage the replica set with automation again,\n import the replica set \nback into  Cloud Manager . If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore.",
            "code": [
                {
                    "lang": "sh",
                    "value": "mongosh --port <port> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "tar -xvf <backupSnapshot>.tar.gz\nmv <backupSnapshot> </path/to/datafiles>"
                },
                {
                    "lang": "sh",
                    "value": "mongod  --dbpath </path/to/datafiles> \\\n        --port <ephemeralPort> \\"
                },
                {
                    "lang": "sh",
                    "value": "mongod --dbpath </path/to/datafiles> \\\n       --port <ephemeralPort> \\\n       --restore"
                },
                {
                    "lang": "sh",
                    "value": "mongosh  --port <ephemeralPort>"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"local\").replset.minvalid.drop()\ndb.getSiblingDB(\"local\").replset.oplogTruncateAfterPoint.drop()\ndb.getSiblingDB(\"local\").replset.election.drop()\ndb.getSiblingDB(\"local\").system.replset.remove({})"
                },
                {
                    "lang": "javascript",
                    "value": "> db.getSiblingDB(\"local\").replset.minvalid.drop()\ntrue\n> db.getSiblingDB(\"local\").replset.oplogTruncateAfterPoint.drop()\ntrue\n> db.getSiblingDB(\"local\").replset.election.drop()\ntrue\n> db.getSiblingDB(\"local\").system.replset.remove({})\nWriteResult({ \"nRemoved\" : 1 })"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"local\").system.replset.insertOne({\n  \"_id\" : \"<replaceMeWithTheReplicaSetName>\",\n  \"version\" : NumberInt(1),\n  \"protocolVersion\" : NumberInt(1),\n  \"members\" : [\n    {\n      \"_id\" : NumberInt(0),\n      \"host\" : \"<host>:<ephemeralPortNewReplicaSet>\"\n    }\n  ],\n  \"settings\" : {\n\n  }\n})"
                },
                {
                    "lang": "javascript",
                    "value": "{ \"acknowledged\" : true, \"insertedId\" : \"<yourReplicaSetName>\" }"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"local\").replset.minvalid.insertOne({\n  \"_id\" : ObjectId(),\n  \"t\" : NumberLong(-1),\n  \"ts\" : Timestamp(0,1)\n})"
                },
                {
                    "lang": "javascript",
                    "value": "{ \"acknowledged\" : true, \"insertedId\" : ObjectId(\"<yourObjectId>\") }"
                },
                {
                    "lang": "sh",
                    "value": "...\nRestore timestamp:  (1609947369, 2)\nLast Oplog Applied: Wed Jan 06 15:36:09 GMT 2021 (1609947369, 1)\nMongoDB Version: 4.2.11\n..."
                },
                {
                    "lang": "javascript",
                    "value": "truncateAfterPoint = Timestamp(1609947369,2)\ndb.getSiblingDB(\"local\").replset.oplogTruncateAfterPoint.insertOne({\n   \"_id\": \"oplogTruncateAfterPoint\",\n   \"oplogTruncateAfterPoint\": truncateAfterPoint\n})"
                },
                {
                    "lang": "javascript",
                    "value": "WriteResult({ \"nInserted\" : 1 })"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --port <ephemeralPort> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "mongod  --dbpath </path/to/datafiles> \\\n        --port <ephemeralPort> \\\n        --bind_ip <host-serving-this-replica-set-member> \\\n        --replSet <replaceMeWithTheReplicaSetName>"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --port <ephemeralPort> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "mongod  --port <ephemeralPort> \\\n        --dbpath </path/to/datafiles> \\\n        --setParameter ttlMonitorEnabled=false"
                },
                {
                    "lang": "sh",
                    "value": "./mongodb-backup-restore-util --https --host <targetHost> \\\n   --port <targetPort> \\\n   --opStart <opLogStartTimeStamp> \\\n   --opEnd <opLogEndTimeStamp> \\\n   --logFile <logPath> \\\n   --apiKey <apiKey> \\\n   --groupId <groupId> \\\n   --rsId <rsId> \\\n   --whitelist <database1.collection1, database2, etc.> \\\n   --blacklist <database1.collection1, database2, etc.> \\\n   --seedReplSetMember \\\n   --oplogSizeMB <size> \\\n   --seedTargetPort <port> \\\n   --ssl \\\n   --sslCAFile </path/to/ca.pem> \\\n   --sslPEMKeyFile </path/to/pemkey.pem>\n   --sslClientCertificateSubject <distinguishedName> \\\n   --sslRequireValidServerCertificates <true|false> \\\n   --sslServerClientCertificate </path/to/client.pem> \\\n   --sslServerClientCertificatePassword <password> \\\n   --sslRequireValidMMSBackupServerCertificate <true|false> \\\n   --sslTrustedMMSBackupServerCertificate </path/to/mms-certs.pem> \\\n   --httpProxy <proxyURL>"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --port <ephemeralPort> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "mongod  --dbpath </path/to/datafiles> \\\n        --port <ephemeralPort> \\\n        --replSet <replaceMeWithTheReplicaSetName>"
                },
                {
                    "lang": "sh",
                    "value": "mongosh--port <ephemeralPort> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "mongod  --dbpath </path/to/datafiles> \\\n        --port <port>"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --port <port> \\\n      --eval db.getSiblingDB(\"local\").system.replset.remove({})"
                },
                {
                    "lang": "sh",
                    "value": "mongosh --port <port> \\\n      --eval \"db.getSiblingDB('admin').shutdownServer()\""
                },
                {
                    "lang": "sh",
                    "value": "sudo -u mongod <path/to/target_mongod_binary> -f /path/to/datafiles/automation-mongod.conf"
                },
                {
                    "lang": "sh",
                    "value": "sudo -u mongod /var/lib/mongodb-mms-automation/mongodb-linux-x86_64-4.4.12-ent/bin/mongod -f /data6/node3/automation-mongod.conf"
                },
                {
                    "lang": "sh",
                    "value": "rs.initiate()\nrs.add( { host: \"<host2>:<port>\" } )\nrs.add( { host: \"<host3>:<port>\" } )"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB('local').oplog.rs.find().sort({$natural:-1}).limit(1).pretty()"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"ts\": Timestamp(1537559320, 1),\n  \"h\": NumberLong(\"-2447431566377702740\"),\n  \"v\": 2,\n  \"op\": \"n\",\n  \"ns\": \"\",\n  \"wall\": ISODate(\"2018-09-21T19:48:40.708Z\"),\n  \"o\": {\n    \"msg\": \"initiating set\"\n  }\n}"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB('local').oplog.rs.find().sort({$natural:-1}).limit(1).pretty()"
                },
                {
                    "lang": "json",
                    "value": "{\n  \"ts\": Timestamp(1537559320, 1),\n  \"h\": NumberLong(\"-2447431566377702740\"),\n  \"v\": 2,\n  \"op\": \"n\",\n  \"ns\": \"\",\n  \"wall\": ISODate(\"2018-09-21T19:48:40.708Z\"),\n  \"o\": {\n    \"msg\": \"initiating set\"\n  }\n}"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvf <backupSnapshot>.tar.gz\nmv <backupSnapshot> <temp-database-path>"
                },
                {
                    "lang": "sh",
                    "value": "mongod --port <port number> \\\n  --dbpath <temp-database-path> \\\n  --setParameter ttlMonitorEnabled=false"
                },
                {
                    "lang": "sh",
                    "value": "./mongodb-backup-restore-util --https --host <targetHost> \\\n   --port <targetPort> \\\n   --opStart <opLogStartTimeStamp> \\\n   --opEnd <opLogEndTimeStamp> \\\n   --logFile <logPath> \\\n   --apiKey <apiKey> \\\n   --groupId <groupId> \\\n   --rsId <rsId> \\\n   --whitelist <database1.collection1, database2, etc.> \\\n   --blacklist <database1.collection1, database2, etc.> \\\n   --seedReplSetMember \\\n   --oplogSizeMB <size> \\\n   --seedTargetPort <port> \\\n   --ssl \\\n   --sslCAFile </path/to/ca.pem> \\\n   --sslPEMKeyFile </path/to/pemkey.pem>\n   --sslClientCertificateSubject <distinguishedName> \\\n   --sslRequireValidServerCertificates <true|false> \\\n   --sslServerClientCertificate </path/to/client.pem> \\\n   --sslServerClientCertificatePassword <password> \\\n   --sslRequireValidMMSBackupServerCertificate <true|false> \\\n   --sslTrustedMMSBackupServerCertificate </path/to/mms-certs.pem> \\\n   --httpProxy <proxyURL>"
                }
            ],
            "preview": "When you restore a replica set from backup, Cloud Manager provides you with a\nrestore file for the selected restore point. To learn about the\nrestore process, please see Restore Overview.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/deploy-sharded-cluster",
            "title": "Deploy a Sharded Cluster",
            "headings": [
                "Considerations",
                "Unique Names for Sharded Clusters",
                "Configuration Server Deployment Architecture",
                "Removing a Shard",
                "Procedure",
                "Navigate to the Deployment page for your project.",
                "Open the Cluster Creation View.",
                "Configure Cluster-Wide Settings.",
                "Configure Each Shard in Your Cluster.",
                "Configure Each Configuration Server in Your Cluster.",
                "Configure Each mongos in Your Cluster.",
                "Configure Each Replica Set in your Cluster.",
                "Set the default read and write concerns for your MongoDB replica set.",
                "Set any advanced configuration options for your MongoDB sharded cluster.",
                "Click Create Cluster.",
                "Click Review & Deploy to review your changes.",
                "Review and approve your changes."
            ],
            "paragraphs": "Sharded clusters  provide horizontal scaling\nfor large data sets and enable high throughput operations by\ndistributing the data set across a group of servers. To learn more about sharding, see\n Sharding Introduction  in the\nMongoDB manual. Use this procedure to deploy a new sharded cluster that  Cloud Manager  manages.\nLater, you can use  Cloud Manager  to add shards and perform other maintenance\noperations on the cluster. replace:: .. include:: /includes/note-k8s-deploy-sharded-cluster.rst You can use  Kubernetes  to deploy MongoDB instances with  Cloud Manager . To deploy MongoDB clusters, you must\n provision hosts  to serve those\nclusters.  Cloud Manager  requires access to these hosts. If you run  MongoDB Enterprise \nand provision your own Linux hosts, then you must manually install a\nset of dependencies to each server  before installing MongoDB .\nThe MongoDB manual provides the appropriate command to install the\ndependencies. To learn more about the specifics for an operating system, see the\nfollowing: Red Hat Ubuntu Debian SUSE Amazon AMI Use unique names for the new cluster and its shards. Replica set, sharded cluster, and shard names within the same\nproject must be unique. Failure to have unique names for the\ndeployments will result in broken backup snapshots. If you select MongoDB 3.4 or later for your configuration server\n mongod  processes,  Cloud Manager  deploys your configuration servers as a\nreplica set. To learn more about  CSRS (Config Servers as Replica Sets)  and mirrored configuration servers ( SCCC (Sync Cluster Connection Configuration) ),\nsee  Config Servers . When you remove a shard, any unsharded databases in that shard are\nmoved to a remaining shard using the\n movePrimary  command. All sharded collections remain online and available during the shard\nremoval process. However, read and write operations sent to unsharded\ncollections during the  movePrimary  operation can result in\nunexpected behavior, including failure of the migration or loss of\ndata. We recommend moving the primary shard for any databases containing\nunsharded collections before removing the shard. To learn more about removing shards, see\n Remove Shards from an Existing Sharded Cluster . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Add  arrow in the top-right of the\n Deployment  page. Select  New Cluster \nfrom the drop-down menu to open the  Create New Cluster \nview. The  Cluster Configuration  section contains the following\ncluster-wide configuration settings. Settings marked with an\n *  asterisk in the   Cloud Manager  UI are  required . Setting Description Cluster Name Specify the name of your sharded cluster deployment. You cannot\nchange this once set. Config Server Replica Set Name Specify the name of your  Config Server Replica Set . You cannot\nchange this once set. This setting corresponds to the\n _id  replica configuration option. Cloud Manager  only displays this option if you selected\nMongoDB 3.2 or later as the  Version  of your\nconfiguration servers. Shard Name Prefix Specify the prefix of each  shard  in the cluster.  Cloud Manager \nnames each shard in the cluster using the  <prefix_n>  format,\nwhere  n  is a 0-indexed, monotonically increasing integer. Process Name Hostname and port of a  mongod  or  mongos  associated to the\nsharded cluster. This hostname can be a hostname, an  FQDN (fully qualified domain name) , an\n IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. Cloud Manager  groups  mongod  processes under their parent replica set\nname, and  mongos  processes under  mongoses .  Cloud Manager  then\ngroups all the cluster components under the cluster name. Click the\n  to the left of a grouping to list its\nsub-groups or processes. Modifying any of the available settings\nfor a grouping changes the corresponding value in its sub-groups\nand processes. For clusters running MongoDB 3.0 or earlier,  Cloud Manager  groups\nthe config server  mongod  processes under\n configServers . Version Select the MongoDB server version of the  ~bin.mongod  or  mongos  process. Version Select the MongoDB server version of the  ~bin.mongod  or  mongos  process. Data Directory Specify the directory where the  ~bin.mongod  process stores\ndata files. This setting corresponds to the\n storage.dbPath   ~bin.mongod  configuration file\noption. The  Cloud Manager  Automation must have file system permission\nto read, write, and execute all files and folders in the\nspecified directory. Each  ~bin.mongod  process must have its own database\ndirectory. If deploying multiple  ~bin.mongod \nprocesses on the same host, ensure each process has its own\ndistinct directory. Log File Specify the full path to the  mongod  or  mongos  log file, including the\nlog file name and extension. This setting corresponds to the\n systemLog.path  configuration file option. The\n mongod  or  mongos  must have permission to read and write to the\nspecified file. The  mongod  or  mongos  have its own unique log file. If deploying multiple\n mongod  or  mongos  processes to the same host, ensure each  mongod  or  mongos  has\nits own distinct logfile. Specifying  /var/log/mongodb/mongo.log  directs the\n mongod  or  mongos  to store its logfile to  /var/log/mongodb/  as\n mongo.log . From the  Member Configuration  section, click\n Shard Settings  to open the  shard  configuration\noptions.  Cloud Manager  lists each shard in the cluster and the\n ~bin.mongod  processes associated to that shard.\nEach shard process has the following options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Cluster Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. To add additional shards to the cluster: Click  Add a Shard . Under the  Cluster Configuration  section, set the\nfollowing parameters for each  mongod  in the shard: Version Data Directory Log File Cloud Manager  displays a different heading for your configuration server\nsettings depending on the MongoDB version you selected for your\nconfiguration servers. From the  Member Configuration  section, click\n Config Server Replica Set Settings  to open\nthe CSRS configuration options. Each config server\nreplica set member has the following options: Setting Description Member Select one of the following replica set member roles from the\nmenu: Default A data-bearing member of the replica set that can\nbecome the  primary  and vote in elections. Arbiter A non-data bearing member of the replica set that can\nvote in elections. Corresponds to the\n arbiterOnly \nreplica configuration option. Hidden A data-bearing member of the replica set that can vote\nin elections. Corresponds to the\n hidden \nreplica configuration option. Delayed Hidden A data-bearing member of the replica set that can vote in\nelections. Corresponds to the\n secondaryDelaySecs \nand  hidden \nreplica configuration options. Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. Votes Specify the number of votes that the replica set member has during\nelections. This setting corresponds to the\n votes   ~bin.mongod \nreplica set configuration option. Priority Specify the priority of the member during elections. Replica set\nmembers with a priority of  0  cannot become the  primary \nand cannot trigger elections. This setting\ncorresponds to the\n priority \n ~bin.mongod  replica set configuration option. Delay Specify the number of seconds \"behind\" the primary member this\nmember should \"lag\". This setting corresponds to the\n secondaryDelaySecs \n ~bin.mongod  replica set configuration option. Build Indexes Specify  true  to direct the  ~bin.mongod  to build\n indexes . This setting\ncorresponds to the\n buildIndexes \n ~bin.mongod  replica set configuration option. Tags Specify the tag or tags associated to the replica set.\nThis setting corresponds to the\n tags \n ~bin.mongod  replica set configuration option. For complete documentation on replica set tags, see\n Replica Set Tags Add a Mongod Adds an additional  ~bin.mongod  process as a replica set\nmember. Adding a new  ~bin.mongod  process also updates the\nlist of processes in the  Cluster Configuration  section.\nYou must configure the  Version ,\n Data Directory , and  Log File  of the new\nprocess. From the  Member Configuration  section, click\n Config Server Settings  to open the configuration\nserver options. Each configuration server has the following\noptions: Setting Description Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\nreplica set member. The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  ~bin.mongod  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  ~bin.mongod  must have exclusive access to the specified port.\nIf deploying multiple  ~bin.mongod  processes to a single host,\nyou must select a unique unused port for each process. From the  Member Configuration  section, click\n Mongos Settings  to open the  mongos \nconfiguration options. Each  mongos  process has the\nfollowing options: Setting Description Hostname Select from the menu the host to which  Cloud Manager  Automation deploys the\n mongos . The menu only lists hosts under  Cloud Manager  Automation.\nFor complete documentation on adding servers to  Cloud Manager  Automation,\nsee  Provision Servers for Automation . This hostname can be a hostname, an  FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or\nan  IPv6 (Internet Protocol version 6)  address. Port Specify the  IANA (Internet Assigned Numbers Authority)  port\nnumber for the  mongos  process. This setting\ncorresponds to the  net.port \nconfiguration file option. Defaults to  27017 . The  mongos  must have exclusive access to the specified port.\nIf deploying multiple  mongos  processes to a single host,\nyou must select a unique unused port for each process. Add a Mongos Click to add an additional  mongos  process. The  Replication Settings  section contains the following\nconfiguration options for each replica set in the cluster: Setting Description Protocol Version Select the replication protocol version used by the replica set.\nThis setting corresponds to the\n protocolVersion \nreplica set configuration option. For more information, see  Replica Set Protocol Versions . Chaining Allowed Specify  true  to allow  secondary \nmembers to replicate from other secondary members. This setting\ncorresponds to the\n chainingAllowed \nreplica set configuration option. Write Concern Majority Journal Default Determines the behavior of\n {w:\"majority\"} \nwrite concern if the write concern does not explicitly\nspecify the journal option\n j . This setting corresponds to the\n writeConcernMajorityJournalDefault \nreplica set configuration option. Heartbeat Timeout (secs) Specify the number of seconds that the replica set members wait for\na successful heartbeat from each other. This setting corresponds to\nthe  heartbeatTimeoutSecs \nreplica set configuration option. Election Timeout (ms) Specify the time limit in milliseconds for detecting when a replica\nset's  primary  is unreachable. This setting corresponds to\nthe  electionTimeoutMillis \nreplica set configuration option. CatchUp Timeout (ms) Specify the time limit in milliseconds for a newly elected\n primary  to sync, or catch up, with the other replica\nset members that may have more recent writes. This setting\ncorresponds to the\n catchUpTimeoutMillis \nreplica set configuration option. CatchUp Takeover Delay (ms) Specify the time in milliseconds a node waits to initiate a\n catchup takeover  after determining it is ahead of the\ncurrent  primary . This setting corresponds to the\n catchUpTakeoverDelayMillis \nreplica set configuration option. Last Error Defaults Specify the default  write concern  for the replica set. The\nreplica set uses this write concern only when write operations or\n getLastError  specify\nno other write concern. If this option is not set, the default write concern for the\nreplica set only requires confirmation from the  primary . Specify this option in the form of a document, i.e.,  {\"w\":2} . Force Reconfigure Specify that you want to force a reconfiguration of the replica\nset. When set to  Yes , the MongoDB Agent forces the replica set\nto accept a new configuration even if a majority of its members are\nunavailable. Forcing a replica set reconfiguration might lead to a\n rollback  of\nmajority-committed writes. Proceed with caution. Contact  MongoDB Support  if you have questions\nabout the potential impacts of this operation. Reconfigure a Replica Set with Unavailable Members  in the MongoDB Server Manual. In the  Default Read Concerns/Write Concerns  card, you\nconfigure the default level of acknowledgement requested from MongoDB\nfor read and write operations for this cluster. Setting the default\nread and write concern can help with MongoDB 5.0 and later deployments\nusing arbiters. From the  Default Read Concerns  section, you can set\n consistency and isolation properties for the data\nread  from the cluster. Select the default read concern from the  Level  dropdown\nmenu. You can choose from the following values: From the  Default Write Concerns  section, you configure the\n default level of acknowledgment requested from MongoDB for\nwrite operations  from the cluster. You\ncan set three parameters: local , the MongoDB 5.0 and\nlater default value, available , the\nMongoDB 4.4 default value, or majority . Parameter Value w Option Desired number of  mongod  instances that must acknowledge a\nwrite operation. You can enter one of the\n following values : majority , the MongoDB 5.0 and later default value, or Any positive integer. MongoDB 4.4 defaults to  1 . j Option Flag that indicates whether the write acknowledgement must be\nwritten to the\n on-disk journal . w Timeout Desired time limit for the write concern  expressed in\nmilliseconds. Set this value when you set  w  to a value\ngreater than  1  including  majority . The  Advanced Configuration Options  section allows you to\nset MongoDB  runtime options  for each MongoDB process\nin your deployment. To add an option: Cloud Manager  lists each process in the cluster grouped logically. Click\nthe grey arrow to the left of the logical grouping to display\nits sub-groupings and processes. You can modify the advanced options\nfor each process individually as necessary. For descriptions of the available  Advanced Configuration\nOptions , see  Advanced Options for MongoDB Deployments . Click  Add Advanced Options . Click  Select a Startup Option  and select the\n configuration option . Cloud Manager  displays a context-sensitive input for configuring an\nacceptable value for the selected option. Click  Add  to add the selected option and its\ncorresponding value to every process of the selected process type\nin the cluster. Cloud Manager  redirects you to the  Deployment  view, where you\nmust review the cluster configuration before  Cloud Manager  begins deployment. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "Sharded clusters provide horizontal scaling\nfor large data sets and enable high throughput operations by\ndistributing the data set across a group of servers.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/pagerduty-integration",
            "title": "Integrate with PagerDuty",
            "headings": [
                "How it Works",
                "Prerequisites",
                "Support",
                "Procedure",
                "Navigate to your Project Integrations.",
                "Start linking PagerDuty to your project.",
                "Sign into PagerDuty",
                "Click Sign in with PagerDuty.",
                "Log into PagerDuty using your PagerDuty credentials.",
                "Select PagerDuty services to integrate with MongoDB.",
                "Select a default service to integrate with MongoDB.",
                "(Optional) Click Test Integration to confirm that your configuration is valid.",
                "Click Activate to integrate PagerDuty with Cloud Manager.",
                "Provide an Integration Key",
                "Enter your Integration Key.",
                "(Optional) Click Test Integration to confirm that your key is valid.",
                "Click Activate to integrate PagerDuty with Cloud Manager.",
                "Remove a PagerDuty Integration"
            ],
            "paragraphs": "You can configure  Cloud Manager  to send alerts from your project to\nyour  PagerDuty  dashboard. With PagerDuty integration, you can: Record incidents and notify on-call responders based on  Cloud Manager \nalerts. Automatically resolve incidents in PagerDuty when  a Cloud Manager  alert\nis closed with bidirectional synchronization. With a PagerDuty integration, you can send  Cloud Manager  cluster event data\nto PagerDuty when  Cloud Manager  alerts that you specify are triggered.\nPagerDuty can create a new incident for the corresponding\nservice, filter additional alerts from the same source into that\nincident, and alert on-call PagerDuty users. Once the  Cloud Manager  alert has been resolved, PagerDuty resolves the\nincident. To integrate  Cloud Manager  with PagerDuty, you must have a PagerDuty\naccount. If you do not have an existing PagerDuty account, you can sign up at\n https://www.pagerduty.com/sign-up/ . All new PagerDuty keys use their  Events API v2 . If you have an Events API v1 key, you can continue to use\nthat key with  MongoDB Atlas . If you need help with your  Cloud Manager  PagerDuty integration, contact\n MongoDB Support . First, navigate to the PagerDuty integration card: You can configure  a Cloud Manager  integration with  PagerDuty  in two ways: If it is not already displayed, select the organization that\ncontains your desired project from the dropdown menu in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Integrations . Click  Configure  for the PagerDuty integration card.\nYou can configure PagerDuty with either your PagerDuty credentials\nor your PagerDuty  API (Application Programming Interface)  key. By signing into PagerDuty from the  Cloud Manager \n Project Integrations  page, or By providing a valid  Integration Key . You are redirected to PagerDuty. From the dropdown menu, select the PagerDuty service that you\nwant to integrate with MongoDB. PagerDuty redirects you back to your  Cloud Manager  project and displays a\n PagerDuty Configuration  modal. You can select multiple services, but you will be prompted\nto pick a single default in the next step. From the  PagerDuty Configuration  modal, select one\ndefault service to integrate.  Cloud Manager  automatically\nprovides an integration key. When you click  Test Integration , the PagerDuty\nconfiguration modal displays a banner with a success or\nfailure message. When you click  Activate , PagerDuty\nvalidates your configuration. When you click  Test Integration , the PagerDuty\nconfiguration modal displays a banner with a success or\nfailure message. When you click  Activate , PagerDuty\nvalidates your  Integration Key . The PagerDuty Events API does not fail when an invalid\n Integration Key  is provided. If your key is invalid, the\n Test Integration  button may falsely indicate a\nsuccessful integration. To confirm that your integration is successful,  Cloud Manager  sends an\ninitial alert. Check your PagerDuty dashboard for an initial\nincident created by that  Cloud Manager  alert. To remove the PagerDuty integration from your  Cloud Manager  project,\nclick  Remove  on the PagerDuty card in your  Cloud Manager \nproject's  Project Integrations .",
            "code": [],
            "preview": "You can configure Cloud Manager to send alerts from your project to\nyour PagerDuty dashboard. With PagerDuty integration, you can:",
            "tags": "pagerduty, integration, add pagerduty, integrate with pagerduty",
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/delete-backup-snapshots",
            "title": "Delete a Snapshot",
            "headings": [
                "Procedure",
                "Click Continuous Backup, then the Overview tab.",
                "On the line listing the process, click the ellipsis icon and click View All Snapshots.",
                "Select backup file to delete.",
                "Confirm deletion."
            ],
            "paragraphs": "To delete snapshots for replica sets and sharded clusters, use the\n Cloud Manager  console to find then select a backup snapshot to delete. The next backup job runs as a full backup rather than an\nincremental backup. Point-in-time restores apply oplog entries to the last snapshot\ntaken before the specified point. Deleting a snapshot removes the\nbase snapshot for a PIT restore. On the list of snapshots, click the  Delete  link to the right\nof a snapshot. Click the OK button on the  Delete Snapshot  interface\nto confirm deletion of the backup.",
            "code": [],
            "preview": "To delete snapshots for replica sets and sharded clusters, use the\nCloud Manager console to find then select a backup snapshot to delete.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-backup",
            "title": "Back up a Deployment",
            "headings": [
                "Considerations",
                "Prerequisites",
                "Unique Names for Deployment Items",
                "Replica Set Requirements",
                "Sharded Cluster Requirements",
                "MongoDB FCV 4.2 Compatibility",
                "MongoDB Compatibility",
                "Data Protection Plan",
                "Procedure",
                "Click Continuous Backup.",
                "Start backing up the process.",
                "Set Authentication Mechanisms.",
                "Click Start.",
                "Click Continuous Backup.",
                "Start backing up the process.",
                "In the Start Backup sidebar, configure the backup source and storage engine.",
                "Set Authentication Mechanisms.",
                "Click Start."
            ],
            "paragraphs": "You can back up your MongoDB deployment. Only sharded clusters or replica sets can be backed up. To back up a\nstandalone  mongod  process, you must\n convert it to a single-member replica set . Cloud Manager  builds snapshots using the\n latest patch release of MongoDB . Consider a deployment where the current MongoDB version is\n4.0.20. If you back up a database running MongoDB 4.0.15,  Cloud Manager  creates\nthe snapshot using MongoDB 4.0.20, the current version.  Cloud Manager \ndisplays that snapshot as MongoDB 4.0.20 in the console. MongoDB guarantees all patch release versions to be compatible.\nYou can use the snapshots built with 4.0.20 to restore to your\n4.0.15 instances, if needed. Ensure your deployment items have unique names before creating backups. Replica set, sharded cluster, and shard names within the same\nproject must be unique. Failure to have unique names for the\ndeployments will result in broken backup snapshots. A Replica Set must: Be monitored by  Cloud Manager . Run MongoDB Enterprise with an  FCV (Feature Compatibility Version)  of 4.2 or later. Have an active  primary  node. Have one node with  WiredTiger  set\nas its  storage engine . Be monitored by  Cloud Manager . Run MongoDB version 2.6 to 4.0. Have an active  primary  node. A Sharded Cluster must: Be monitored by  Cloud Manager . Run MongoDB Enterprise with an  FCV (Feature Compatibility Version)  of 4.2 or later on all\nnodes including the config server. Have an active  primary  node of each shard and the\nconfig server. Have one node per shard or config server with\n WiredTiger  set as its\n storage engine . Be monitored by  Cloud Manager  including at least one  mongos  in the\ncluster. Run MongoDB version 2.6 to 4.0. Have all  config servers  running. The\nconfig server  mongod  processes must be started with either\nthe  --configsvr  command line option or the\n { \"clusterRole\": \"configsvr\" }  setting in the  mongod \nconfiguration file. Complete the balancing round in less than one hour. All  FCV (Feature Compatibility Version)  4.2 and later databases must fulfill the appropriate\n backup considerations . The MongoDB version must meet the  minimum compatibility . Decide how to back up the data and what data to back up . You can back up your entire MongoDB deployment. If you have not yet enabled  Cloud Manager  Backup, click\n Begin Setup  and complete the wizard. This results in a\ncompleted backup setup, so you can skip the rest of this procedure. From the list of processes, navigate to the  Status  column\nfor the process you want to back up and click  Start . If Automation doesn't manage your deployment and your deployment\nrequires authentication, specify the authentication mechanism and\ncredentials. Specify the following, as appropriate: Auth Mechanism The  authentication mechanism \nthat the MongoDB host uses. MongoDB Community options include: MongoDB Enterprise options also include: Username/Password X.509 Client Certificate Kerberos LDAP DB Username For  Username/Password  or  LDAP  authentication, the\nusername used to authenticate the MongoDB Agent with the MongoDB\ndeployment. See\n Configure MongoDB Agent for Authentication  or\n Configure MongoDB Agent for LDAP . DB Password For  Username/Password  or  LDAP  authentication, the\npassword used to authenticate the MongoDB Agent with the MongoDB\ndeployment. Allows TLS for connections If checked, Backup uses  TLS (Transport Layer Security)  to connect to MongoDB. See  Configure MongoDB Agent to Use TLS . You can choose to back up all databases and collections in your\nMongoDB deployment or specific ones. If you have not yet enabled  Cloud Manager  Backup, click\n Begin Setup  and complete the wizard. This results in a\ncompleted backup setup, so you can skip the rest of this procedure. From the list of processes, navigate to the  Status  column\nfor the process you want to back up and click  Start . Menu Possible Values Default Value Sync source Any  secondary ( Cloud Manager  chooses) Any specific secondary The primary node any secondary Using a secondary is preferred because it minimizes\nperformance impact on the primary. Storage Engine See the considerations in  Storage Engines . MongoDB Memory Mapped Files  or WiredTiger . If you select this option,  Cloud Manager  limits backups to\ndeployments with fewer than 100,000 files. Files includes\ncollections and indexes. Same storage engine as the primary node of the database being\nbacked up. If Automation doesn't manage your deployment and your deployment\nrequires authentication, specify the authentication mechanism and\ncredentials. Specify the following, as appropriate: Auth Mechanism The  authentication mechanism \nthat the MongoDB host uses. MongoDB Community options include: MongoDB Enterprise options also include: Username/Password X.509 Client Certificate Kerberos LDAP DB Username For  Username/Password  or  LDAP  authentication, the\nusername used to authenticate the MongoDB Agent with the MongoDB\ndeployment. See\n Configure MongoDB Agent for Authentication  or\n Configure MongoDB Agent for LDAP . DB Password For  Username/Password  or  LDAP  authentication, the\npassword used to authenticate the MongoDB Agent with the MongoDB\ndeployment. Allows TLS for connections If checked, Backup uses  TLS (Transport Layer Security)  to connect to MongoDB. See  Configure MongoDB Agent to Use TLS .",
            "code": [],
            "preview": "You can back up your MongoDB deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/configure-mongodb-agent-for-scram",
            "title": "Configure MongoDB Agent for Authentication",
            "headings": [
                "Prerequisites",
                "Configure Deployments to Use Authentication",
                "Configure the MongoDB Agent for Authentication"
            ],
            "paragraphs": "MongoDB supports the following authentication mechanisms depending on your MongoDB version: MongoDB Version Default Authentication Mechanism 4.0 or later SCRAM  authentication\nmechanisms with the  SHA-256  and  SHA-1  hash functions.\n SCRAM-SHA-1  ( RFC 5802 ) and  SCRAM-SHA-256 \n( RFC 7677 ) are  IETF (Internet Engineering Task Force)  standards that define best\npractice methods for implementation of challenge-response\nmechanisms for authenticating users with passwords. 3.0 to 3.6 SCRAM  authentication mechanism\nwith``SHA-1`` hash function. 2.6 or earlier MongoDB Challenge and Response ( MONGODB-CR ).  MONGODB-CR \nis a challenge-response mechanism that authenticates users\nthrough passwords. The MongoDB Agent interacts with the MongoDB databases in your\ndeployment as a MongoDB user would. As a result, you must configure\nyour MongoDB deployment and the MongoDB Agent to support authentication. You can specify the deployment's authentication mechanisms when\n adding  the\ndeployment, or you can  edit the settings  for an existing\ndeployment. At minimum, the deployment must enable the authentication\nmechanism you want the MongoDB Agent to use. The MongoDB Agent can use\nany supported  authentication mechanism . The MongoDB Agent can use  SCRAM-SHA-1  or  SCRAM-SHA-256 \nto authenticate to hosts that enforce access control. With Automation,  Cloud Manager  manages MongoDB Agent authentication for\nyou. To learn more about authentication, see  Enable Username and Password Authentication for your  Cloud Manager  Project . When you install the MongoDB Agent with Automation,  Cloud Manager  creates a\nuser to authenticate on the MongoDB database.  Cloud Manager  create this\nMongoDB user ( mms-automation ) in the  admin  database with\nthe correct privileges for each MongoDB Agent function. Configure these credentials in  Cloud Manager . Navigate to  Deployment   \n Security   \n Settings Continue through the modal until you see the\n Configure Cloud Manager Agents  page Add the appropriate credentials: Setting Value MongoDB Agent Username Enter the MongoDB Agent username. MongoDB Agent Password Enter the password for the MongoDB Agent username. Each MongoDB Agent function uses a different set of\nMongoDB shell ( mongosh ) commands to configure a user with the\nappropriate roles and privileges. User creation commands vary depending on the version of\nMongoDB that you use: Configure Backup Credentials After you create the user for the Backup function, add\nthe credentials to the Backup Settings. To back up MongoDB instances running  FCV  4.2\nand later, create a user in the  admin  database.\nAssign this user the roles provided in the following\nexample. Use the following  mongosh  command to create the\nuser: To learn more about the required access, see\n Required Access for MongoDB Agent Backup To back up MongoDB instances running  FCV  4.0 or\nearlier, create a user in the  admin  database.\nAssign this user the roles provided in the following\nexample. Use the following  mongosh  command to create the\nuser: To learn more about the required access, see\n Required Access for MongoDB Agent Backup Navigate to  Backup   \n <backup-deployment>   \n   \n Edit Credentials . Click  Credentials . Add the appropriate credentials: Setting Value Backup Username Enter the Backup username. Backup Password Enter the password for the Backup username. To monitor MongoDB 4.0 or later instances that use SCRAM\nauthentication, add a user to the  admin  database in\nMongoDB. Assign this user the roles provided in the\nfollowing example. To learn what roles this function requires, see\n Monitoring settings . Configure Monitoring Credentials After you create the user for the Monitoring function, add\nthe credentials to the Monitoring Settings. Navigate to  Deployment \n   <deployment> \n   \n   Monitoring Settings . Click  Credentials . Add the appropriate credentials: Setting Value Monitoring Username Enter the Monitoring username. Monitoring Password Enter the password for the Monitoring username.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"admin\").createUser(\n   {\n      user: \"<username>\",\n      pwd: \"<password>\",\n      roles: [ {\n        role: \"clusterAdmin\", db: \"admin\"\n      } ]\n   }\n)"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"admin\").createUser(\n  {\n    user: \"<username>\",\n    pwd: \"<password>\",\n    roles: [ {\n      role: \"backup\", db: \"admin\"\n    } ]\n  }\n)"
                },
                {
                    "lang": "javascript",
                    "value": "db.getSiblingDB(\"admin\").createUser(\n   {\n      user: \"<username>\",\n      pwd: \"<password>\",\n      roles: [ {\n        role: \"clusterMonitor\", db: \"admin\"\n      } ]\n   }\n)"
                }
            ],
            "preview": "MongoDB supports the following authentication mechanisms depending on your MongoDB version:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/update-mongodb-version-of-deployment-via-api",
            "title": "Update the MongoDB Version of a Deployment",
            "headings": [
                "Consideration",
                "Variables for API Resources to Update MongoDB Version",
                "Prerequisite",
                "Procedure",
                "Retrieve the automation configuration from Cloud Manager.",
                "Open the configuration document for editing.",
                "Update the MongoDB version in the processes array.",
                "Send the updated automation configuration.",
                "Confirm successful update of the automation configuration.",
                "Check the deployment status to ensure goal state is reached."
            ],
            "paragraphs": "This tutorial describes how to use the  API  to migrate a\nMongoDB deployment to a new version of MongoDB. These steps assume you\nhave an existing deployment that uses a  4.0.6  version of MongoDB,\nas would be the case if you used the tutorial to\n Deploy a Cluster through the API . Groups and projects are synonymous terms. Your  {PROJECT-ID}  is the\nsame as your project id. For existing groups, your group/project id\nremains the same. This page uses the more familiar term group when\nreferring to descriptions. The endpoint remains as stated in the\ndocument. The  API (Application Programming Interface)  supports most MongoDB settings and parameters for MongoDB\nversions 2.6 and later. To learn more, see\n MongoDB Settings and Automation Support . The API resources use one or more of these variables. Replace these\nvariables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project from your\nproject settings. CLUSTER-ID string Unique identifier of your cluster. You must have credentials to access  Cloud Manager  as a user with the\n Project Owner  role for the  Cloud Manager  project in which the\ndeployment exists. Use the  automationConfig \nresource to retrieve the configuration. Issue the following\ncommand, replacing the placeholders with the Variables for API Resources to Update MongoDB Version. Validate the downloaded Automation Configuration file. Compare the  version  field of the\n currentAutomationConfig.json  with that of the Automation\nConfiguration backup file,  mms-cluster-config-backup.json . The\n version  value is the last element in both  JSON (Javascript Object Notation)  documents.\nYou can find this file on any host running the MongoDB Agent at: If the  version  values match, you are working with the current\nversion of the Automation Configuration file. Linux and macOS:  /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json Windows:  %SystemDrive%\\MMSAutomation\\versions\\mms-cluster-config-backup.json As you edit the configuration document in the next steps, refer to\nthe  description of an automation configuration  for detailed descriptions\nof settings. Update  every   processes.version  field to specify  4.2.1 : Use the  automationConfig \nresource to send the updated automation configuration. Issue the following command with path to the updated configuration\ndocument and replace the placeholders with the Variables for API Resources to Update MongoDB Version. Upon successful update of the configuration, the API returns the HTTP\n 200 OK  status code to indicate the request has succeeded. Retrieve the automation configuration from  Cloud Manager  and confirm it\ncontains the changes. To retrieve the configuration, issue the\nfollowing command, replacing the placeholders with the\nVariables for API Resources to Update MongoDB Version. Use the  automationStatus \nresource to retrieve the deployment status. Issue the following\ncommand, replacing the placeholders with the Variables for API Resources to Update MongoDB Version. Confirm that the values of all the  lastGoalVersionAchieved  fields\nin the  processes  array match the  goalVersion  field. To learn\nabout deployment status, see  Get Automation Status of Latest Plan .",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "javascript",
                    "value": "\"version\": \"4.2.1\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\"\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data @currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true\""
                }
            ],
            "preview": "This tutorial describes how to use the API to migrate a\nMongoDB deployment to a new version of MongoDB. These steps assume you\nhave an existing deployment that uses a 4.0.6 version of MongoDB,\nas would be the case if you used the tutorial to\nDeploy a Cluster through the API.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-mongodbcr-authentication-for-group",
            "title": "Enable Username and Password Authentication for your Cloud Manager Project",
            "headings": [
                "Overview",
                "SCRAM-SHA-1 and SCRAM-SHA-256",
                "Considerations",
                "Procedure",
                "Navigate to the Security Settings dialog for your deployment.",
                "Optional: Specify the TLS (Transport Layer Security) Settings.",
                "Choose the authentication mechanism.",
                "Configure Username/Password (MONGODB-CR/SCRAM-SHA-1) or Username/Password (SCRAM-SHA-256) for the Agent.",
                "Click Save Settings.",
                "Click Review & Deploy to review your changes.",
                "Click Confirm & Deploy to deploy your changes."
            ],
            "paragraphs": "MongoDB users can use usernames and passwords to authenticate themselves against a MongoDB database. Cloud Manager  enables you to configure the Authentication Mechanisms that all\nclients, including the  Cloud Manager  Agents, use to connect to your MongoDB\ndeployments. You can enable multiple authentication mechanisms for each\nof your projects, but you must choose only one mechanism for the Agents. MongoDB Version Default authentication mechanism MongoDB 4.0 and later Salted Challenge Response Authentication Mechanism (SCRAM) using\nthe SHA-1 and SHA-256 hashing algorithms ( SCRAM-SHA-1  and\n SCRAM-SHA-256 ). MongoDB 3.4 to 3.6 Salted Challenge Response Authentication Mechanism (SCRAM) using\nthe SHA-1 hashing algorithm ( SCRAM-SHA-1 ). SCRAM-SHA-1  and  SCRAM-SHA-256  verify supplied user credentials\nusing the user's name, password and authentication database. The\nauthentication database is the database where the user was created. SCRAM-SHA-1  ( RFC 5802 ) and\n SCRAM-SHA-256   ( RFC 7677 )\nare  IETF (Internet Engineering Task Force)  standards that define best practice methods for\nimplementation of challenge-response mechanisms for authenticating\nusers with passwords. This tutorial describes how to enable Username and Password\nauthentication for your  Cloud Manager  MongoDB deployment. The MongoDB Community version supports Username and Password\nauthentication and x.509 authentication. If you want to\n reset Authentication and TLS settings \nfor your project, first\n unmanage any MongoDB deployments \nthat  Cloud Manager  manages in your project. This procedure describes how to configure and enable username and\npassword authentication when using Automation. If  Cloud Manager  does not manage\nyour MongoDB Agents, you must manually configure them to use Usernames\nand Passwords. To learn how to configure authentication, see\n Configure MongoDB Agent for Authentication . If you configure the  Cloud Manager  application to authenticate using\nSCRAM-SHA-256, you cannot deploy pre-4.0 MongoDB clusters. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Security  tab. Click the  Settings  tab. Perform one of the following actions: If this is your first time configuring  TLS (Transport Layer Security) ,\nauthentication, or authorization settings for this project, click\n Get Started . If you have already configured  TLS (Transport Layer Security)  authentication, or\nauthorization settings for this project, click  Edit . TLS is not required for use with  Username/Password (MONGODB-CR/SCRAM-SHA-1)  or  Username/Password (SCRAM-SHA-256) \nauthentication. Field Action MongoDB Deployment Transport Layer Security (TLS) Toggle this slider to  ON . TLS CA File Path The  TLS (Transport Layer Security)   Certificate Authority  file is a  .pem -format certificate\nfile that contains the root certificate chain from the\n Certificate Authority . The MongoDB Agent uses this same  Certificate Authority  file\nto connect to every item in your deployment. Type the file path to the  TLS (Transport Layer Security)   Certificate Authority  file on every host\nrunning a MongoDB process: This enables the  net.tls.CAFile  setting for the\nMongoDB processes in the project. Click  Validate  to test that each host in your\ndeployment has a  TLS (Transport Layer Security)   Certificate Authority  at the paths you specified. The encrypted private key for the  .pem  certificate file must be in  PKCS #1 \nformat. The MongoDB Agent doesn't support the  PKCS #8  format. Type the file path on all Linux hosts in the first box. Type the file path on all Windows hosts in the second box. Client Certificate Mode Select if client applications or MongoDB Agents must present a\n TLS (Transport Layer Security)  certificate when connecting to a  TLS (Transport Layer Security) -enabled MongoDB\ndeployments. Each MongoDB deployment checks for certificates\nfrom these client hosts when they try to connect. If you\nchoose to require the client  TLS (Transport Layer Security)  certificates, make sure\nthey are valid. Accepted values are: Optional Every client may present a valid  TLS (Transport Layer Security)  certificate when\nconnecting to MongoDB deployments. MongoDB Agents might\nuse  TLS (Transport Layer Security)  certificates if you  don't  set the  mongod \n tlsMode  to  None . Required Every MongoDB deployment in this project starts with\n TLS (Transport Layer Security) -encrypted network connections. All Agents\nmust use  TLS (Transport Layer Security)  to connect to any MongoDB\ndeployment. In the  MongoDB Deployment Authentication Mechanism \nsection, select  Username/Password (MONGODB-CR/SCRAM-SHA-1)  or  Username/Password (SCRAM-SHA-256) . You can enable more than one authentication mechanism for your MongoDB\ndeployment, but the  Cloud Manager  Agents can only use  one  authentication\nmechanism. In the  MongoDB Agent Connections to Deployment  section,\nselect  Username/Password (MONGODB-CR/SCRAM-SHA-1)  and/or  Username/Password (SCRAM-SHA-256) . Cloud Manager  automatically generates the Agents' usernames and passwords. Cloud Manager  creates users for the agents with the required user roles in\nthe admin database for each existing deployment in  Cloud Manager . When you\nadd a new deployment,  Cloud Manager  creates the required users in the new\ndeployment. Otherwise, click  Cancel  and you can make\nadditional changes.",
            "code": [],
            "preview": "MongoDB users can use usernames and passwords to authenticate themselves against a MongoDB database.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/rotate-automation-password-with-api",
            "title": "Rotate Automation Password with the API",
            "headings": [
                "Prerequisites",
                "Variables for Automation Config API Resources",
                "Procedure",
                "Retrieve and validate the automation configuration from Cloud Manager.",
                "Create a new automation configuration file from the current one.",
                "Send the updated automation configuration.",
                "Confirm successful update of the automation configuration.",
                "Check the deployment status to ensure goal state is reached."
            ],
            "paragraphs": "You can programmatically rotate the automation user's password by\nupdating a project's  automation configuration . This page describes the following process to rotate the automation\nuser's password using the  Cloud Manager  API: Set  auth.newAutoPwd  and leave  auth.autoPwd  with its\ncurrent password. Wait for the goal state. auth.newAutoPwd  copies over the  auth.autoPwd \npassword automatically. You can set this option only when you include SCRAM-SHA-1\nor SCRAM-SHA-256 as one of the authentication\nmechanisms for the Automation in  auth.autoAuthMechanisms . You must have access to the  API (Application Programming Interface) . To learn more, see\n Configure API Access . Your API key must have the  Project Automation Admin  or\n Project Owner  role. Authentication must be enabled. The API resources use one or more of these variables. Replace these\nvariables with your desired values before calling these API resources. Name Type Description PUBLIC-KEY string Your public API Key for your  API (Application Programming Interface)  credentials. PRIVATE-KEY string Your  private API Key  for your  API (Application Programming Interface) \ncredentials. cloud.mongodb.com string URL (Uniform Resource Locator)  of your  Cloud Manager  instance. GROUP-ID string Unique identifier of your project from your\nproject settings. CLUSTER-ID string Unique identifier of your cluster. Use the  automationConfig \nresource to retrieve the configuration. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Validate the downloaded Automation Configuration file. Compare the  version  field of the\n currentAutomationConfig.json  with that of the Automation\nConfiguration backup file,  mms-cluster-config-backup.json . The\n version  value is the last element in both  JSON (Javascript Object Notation)  documents.\nYou can find this file on any host running the MongoDB Agent at: If the  version  values match, you are working with the current\nversion of the Automation Configuration file. Linux and macOS:  /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json Windows:  %SystemDrive%\\MMSAutomation\\versions\\mms-cluster-config-backup.json Replace the variables in the following command and run it: Name Description <NEW_OPS_MANAGER_AUTOMATION_PASSWORD> Specify the new Automation password. <CURRENT_AUTOMATION_CONFIGURATION_VERSION> Specify the current Automation version. To check your current Automation version,\n Get the Automation Configuration . <NEW_AUTOMATION_CONFIGURATION_VERSION> Specify the current Automation version incremented by 1. For\nexample, if you have a current Automation version of  4 ,\nthe new Automation version should be  5 . Use the  automationConfig \nresource to send the updated automation configuration. Issue the following command, pointing to the\n modifiedAutomationConfig.json  file created in the previous step,\nwhich contains the updated configuration document. Replace the\nplaceholders with the Variables for Automation Config API Resources. Upon successful update of the configuration, the API returns the HTTP\n 200 OK  status code to indicate the request has succeeded. Retrieve the automation configuration from  Cloud Manager  and confirm it\ncontains the changes. To retrieve the configuration, issue the\nfollowing command, replacing the placeholders with the Variables for Automation Config API Resources. The Automation version automatically increments two times. For\nexample,  if you pushed the new Automation version as 5, the new\nAutomation version after all changes is 7. The Automation\nupdates the Automation user password on all managed MongoDB\nServer deployments. Use the  automationStatus \nresource to retrieve the deployment status. Issue the following\ncommand, replacing the placeholders with the Variables for Automation Config API Resources. Confirm that the values of all the  lastGoalVersionAchieved  fields\nin the  processes  array match the  goalVersion  field. To learn\nabout deployment status, see  Get Automation Status of Latest Plan .",
            "code": [
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --output currentAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "sed -e \"/autoPwd/a\\\\    \\\"newAutoPwd\\\" : \\\"<NEW_OPS_MANAGER_AUTOMATION_PASSWORD>\\\",\" -e 's/  \"version\" : <CURRENT_AUTOMATION_CONFIGURATION_VERSION>/  \"version\" : <NEW_AUTOMATION_CONFIGURATION_VERSION>/' currentAutomationConfig.json > modifiedAutomationConfig.json"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --header \"Content-Type: application/json\"\n     --request PUT \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\" \\\n     --data '@modifiedAutomationConfig.json'"
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationConfig?pretty=true\""
                },
                {
                    "lang": "sh",
                    "value": "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n     --request GET \"https://cloud.mongodb.com/api/public/v1.0/groups/{PROJECT-ID}/automationStatus?pretty=true\""
                }
            ],
            "preview": "You can programmatically rotate the automation user's password by\nupdating a project's automation configuration.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/install-mongodb-agent-prereq",
            "title": "MongoDB Agent Prerequisites",
            "headings": [
                "Hardware Requirements",
                "Use 64-bit Chip Architectures",
                "Provide Sufficient CPU and RAM",
                "Set Host Network Access",
                "Disable Windows Firewall Stealth Mode",
                "Set Host Permissions",
                "On a Host that Already Runs MongoDB",
                "On a Host Before Installing MongoDB",
                "Root Access",
                "Acquire an Agent API (Application Programming Interface) Key"
            ],
            "paragraphs": "This section describes the requirements for the hosts that run the\n MongoDB Agent . Hosts that run MongoDB Agents must run on a 64-bit version of one of\nthe following hardware architectures and operating systems. The\nfollowing table lists the MongoDB Server versions that you can deploy\nwith the MongoDB Agent on the associated platforms: 1  The Rocky or Alma Linux  OS (Operating System) \nmust include the  redhat-lsb-core  package. 2  The Debian installation must include the\n lsb-release  package. To learn more, see  lsb-release . 3   MongoDB Connector for BI  isn't supported on Ubuntu 22.04. Architecture Distro/OS 7.0 6.0 5.0 4.4 4.2 4.0 3.6 x86_64 RHEL/CentOS/Oracle Linux 7 RHEL/Rocky/Alma Linux/Oracle Linux 8  1 RHEL/Rocky/Alma Linux/Oracle Linux 9  1 Amazon Linux 2 Amazon Linux 2023 SUSE12 SUSE15 Debian 8  2 Debian 9  2 Debian 10  2 Debian 11  2 Ubuntu 16.x Ubuntu 18.x Ubuntu 20.x Ubuntu 22.x  3 Windows ARM RHEL/CentOS 8 RHEL/CentOS 9 Amazon Linux 2 Amazon Linux 2023 Ubuntu 20.x Ubuntu 22.x PowerPC/ ppc64le RHEL/ Centos 7 RHEL/ CentOS 8 zSeries/ 390x RHEL 7 RHEL 8 The MongoDB Agent must run on 64-bit architectures. MongoDB recommends a minimum of 2 CPU cores and 2 GB of RAM for\nMongoDB Agent hosts. If you  activate backup , all MongoDB Agent\nhosts require  at least  an additional 2 CPU cores and 3 GB of RAM\nbeyond basic platform requirements. Each backup job that the\nMongoDB Agent runs further impacts host performance. The hosts that serve the MongoDB deployments must: The network configuration must allow each MongoDB Agent to\nmake a direct connection to each MongoDB deployment listed on the\n Deployment  page.  Cloud Manager  does not support port forwarding. Have full network access to each other through their Fully\nQualified Domain Names (FQDNs). Each host must reach each other host\nthrough the  FQDN (fully qualified domain name) . Permit Automation to start  mongod  on a random ephemeral port and\nconnect to that port when restoring your deployment from a backup. Find the  FQDN (fully qualified domain name)  for each host. Run the following command in\nPowershell: Download and install the\n Windows BIND  tools. Find the  FQDN (fully qualified domain name)  for each host. Run the following command in\nthe shell: Find the  FQDN (fully qualified domain name)  for each host. Run the following command in\nthe shell: Find the  FQDN (fully qualified domain name)  for each host. Run the following command in\nthe shell: Resolve each  FQDN (fully qualified domain name)  to a unique IP address. Run the following\ncommand in the shell to resolve the  FQDN (fully qualified domain name) : Set the Common Name or  Subject Alternative Name  value\nof any  SSL (Secure Sockets Layer)  certificates to the MongoDB host's  FQDN (fully qualified domain name) . For best performance,\n Disable Windows Firewall stealth mode \non the MongoDB hosts on which you installed the MongoDB Agent. If you install the MongoDB Agent on a host that is running a MongoDB\nprocess, the agent must have: Permission to stop any MongoDB processes. The MongoDB Agent restarts the\nprocess using the Agent's own set of MongoDB binaries. If you installed\nMongoDB with a package manager, use the same package manager to install\nthe MongoDB Agent. This gives the MongoDB Agent the same owner as MongoDB. Read  and  Write  permissions on the MongoDB data directory and\nlog directory. If you deploy the MongoDB Agent to a host that doesn't have MongoDB\ninstalled, ensure the user that owns the MongoDB Agent has  Read  and\n Write  permissions on the MongoDB data and log directories you plan\nto use. To install the MongoDB Agent using a  deb  package, log in as\n root  or a user with  sudo  privileges. To install the MongoDB Agent using a  .rpm  package, log in as\n root  or a user with  sudo  privileges. To install the MongoDB Agent using a  .tar  package, log in as\n root  or a user with  sudo  privileges. The MongoDB Agent requires one Agent  API (Application Programming Interface)  Key per project to communicate\nwith the  Cloud Manager . If you do not have an existing Agent  API (Application Programming Interface)  Key for your  Cloud Manager  project,\ncreate one: Click  Deployment . Navigate to  Agents . Click  Agent API Keys . Click    Generate . This button appears if: The current user is the  Project Owner  and The project has no Agent API Keys other than the\n Original Group API Key  with an exclamation  \nnext to it. This type of key exists in projects created before\nthe  new Agent API Key model .\nIn the new model, you can create multiple Agent  API (Application Programming Interface)  Keys in\na project, and any the project's MongoDB Agents can use any of\nthe keys. In the  Generate Key  modal, provide a description of the\nnew Agent API Key in the  Description  box. Click  Generate . When you generate an Agent API Key,  Cloud Manager  displays it  one time\nonly . You must copy this key. Treat it like a password; store\nit in a secure place.  Cloud Manager  never displays the full key again.",
            "code": [
                {
                    "lang": "powershell",
                    "value": "net config workstation | findstr /C:\"Full Computer name\""
                },
                {
                    "lang": "sh",
                    "value": "hostname -f"
                },
                {
                    "lang": "sh",
                    "value": "hostname -f"
                },
                {
                    "lang": "sh",
                    "value": "hostname -f"
                },
                {
                    "lang": "shell",
                    "value": "dig +short myip.opendns.com @resolver1.opendns.com"
                }
            ],
            "preview": "This section describes the requirements for the hosts that run the\nMongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/suggest-indexes",
            "title": "Calculate Suggested Indexes",
            "headings": [
                "Prerequisites",
                "Procedure",
                "Navigate to the Clusters view for your deployment.",
                "Click a deployment.",
                "(Optional) For sharded clusters, filter which process type is listed.",
                "Click the process for which you want to calculate suggested indexes.",
                "Click the Profiler tab above the charts.",
                "Click the Calculate Suggested Indexes link above the chart.",
                "Copy the indexes you want to create and add them to the MongoDB process."
            ],
            "paragraphs": "Cloud Manager  can analyze the data on query patterns collected by the database\nprofiler and suggest a set of indexes that could improve query\nperformance.  Cloud Manager  scores each suggested index on its expected benefit. Available only with Cloud Manager Premium . This feature is\navailable only with Cloud Manager Premium, which comes with certain\nMongoDB subscriptions.  Contact MongoDB \nfor more information. For  Cloud Manager  to suggest indexes, the following must be true: You must enable database profiling for the MongoDB process.\nSee  Profile Databases . The profiler must have data. If profiling is enabled, but no\nprofiling data has yet been collected,  Cloud Manager  cannot suggest indexes. To edit the deployment's configuration: If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. The four buttons are listed in the following order, left to right:\n Shards ,  Configs ,  Mongos , and\n BIs . Process Displays Shards mongod  processes that host your data. Configs mongod  processes that run as  config\nservers  to store a sharded cluster's metadata. Mongos mongos  processes that route data in a sharded\ncluster. BIs BI (Business Intelligence)  processes that access data\nin a sharded cluster. For shared clusters, you must first click the shard that contains the\nprocess. The  calculate suggested indexes  link will not appear\nif the  Prerequisites  have not been met. For instructions on adding an index to a MongoDB process, see either: Index Creation  in the MongoDB manual, or Create Indexes with Data Explorer .",
            "code": [],
            "preview": "Cloud Manager can analyze the data on query patterns collected by the database\nprofiler and suggest a set of indexes that could improve query\nperformance. Cloud Manager scores each suggested index on its expected benefit.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/shut-down-deployment",
            "title": "Shut Down MongoDB Processes",
            "headings": [
                "Shut Down One Entire Deployment",
                "Navigate to the Clusters view for your deployment.",
                "Shut down the deployment.",
                "Click Review & Deploy to review your changes.",
                "Shut Down One Process in One Deployment",
                "Navigate to the Clusters view for your deployment.",
                "Select the deployment.",
                "Shut down the deployment.",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "Cloud Manager  supports shutting down individual  mongod  and  mongos \nprocesses, as well as  replica sets  and\n sharded clusters . When you shut down a\nprocess, cluster, or replica set,  Cloud Manager  continues to manage it. After the process shuts down, you can\n restart  or\n remove  your processes. If you shut down a MongoDB process,  Cloud Manager  doesn't trigger a\nhost is down ( HOST_DOWN ) alert. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click   for the deployment that you want to\nshut down. Click  Shutdown . Click  Shutdown Process  to confirm. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click  Modify  for the deployment with the process that you\nwant to shut down. Cloud Manager  displays the  Editing <myReplicaSet>  page. Scroll to  Member Configuration  section of the page. Click   for the process that you want to\nshut down. Click  Shutdown . Click  Shutdown Process  to confirm. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "Cloud Manager supports shutting down individual mongod and mongos\nprocesses, as well as replica sets and\nsharded clusters. When you shut down a\nprocess, cluster, or replica set, Cloud Manager continues to manage it.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/prepare-for-maintenance",
            "title": "Prepare for Cluster Maintenance",
            "headings": [
                "oplog Size",
                "Priority",
                "Fault Tolerance",
                "Unique Index Builds"
            ],
            "paragraphs": "Cloud Manager  performs a  rolling restart \nwhen you  perform maintenance \non nodes in a cluster. Automation updates nodes in a cluster one-by-one\nuntil all nodes are updated to maintain cluster availability during a\nmaintenance period. Before you perform maintenance on your clusters, review the following\nconsiderations and take action, if necessary, to maintain cluster\navailability. To learn about how Automation performs maintenance on your clusters,\nsee  How does  Cloud Manager  perform maintenance on cluster nodes? . Each node in a cluster is restarted in standalone mode before\nmaintenance starts. The node replays writes in the  oplog  to\ncatch up to the other nodes when it is added back to the cluster after\nmaintenance completes. Make sure that the cluster's oplog is large enough to store all writes\nthat you application might make during the maintenance period. Use\nthe  replication.oplogSizeMB  advanced deployment option\nto adjust the oplog size. All client connections to a primary node are dropped when maintenance\nstarts on that node. Connections are re-established to the newly elected\nprimary node. You may prefer a node in a specific data center to become the new primary\nnode.  Edit the cluster's configuration \nand adjust the priority of each node to indicate your preferred primary\nnode. Nodes undergoing maintenance don't provide failover support to the\ncluster. For three-member replica sets, if an additional node becomes\nunavailable while one node is undergoing maintenance, the cluster has\nlost the majority of nodes. The primary node loses this status and\nsteps down to become a secondary node. A new primary can't be elected\nuntil a majority of the cluster's nodes are available. For mission-critical applications with high uptime needs, consider\nconverting a three-member replica set to a five-member replica\nset before performing maintenance to maintain cluster majority in case\nan additional cluster node becomes unavailable during a maintenance\nperiod. A simpler but less resilient option to increase multiple failure\ntolerance is to  add a temporary arbiter  to a\nthree-member replica set before you perform maintenance. Five-member replica sets or larger are more resilient and less likely\nto experience loss of majority during maintenance periods. Automation builds indexes on cluster nodes one at a time using identical\nbut independent commands. To ensure that writes respect the  unique \nquality of indexed fields in a  unique indexe ,\nall writes to the collection on the cluster must stop before you build\nthe index. You can't use  Data Explorer  or the\n Automation Config Resource  in\n Cloud Manager  to create unique indexes in a rolling fashion because these\nmethods don't stop writes to the cluster. If your use case requires you to build new unique indexes: Stop all writes to the affected collection. For more information.\nsee  db.fsyncLock()  in the\nMongoDB Manual. See  Build Indexes on Replica Sets  in the MongoDB Manual\nto build the unique index in a rolling fashion. Create an Index",
            "code": [],
            "preview": "Cloud Manager performs a rolling restart\nwhen you perform maintenance\non nodes in a cluster. Automation updates nodes in a cluster one-by-one\nuntil all nodes are updated to maintain cluster availability during a\nmaintenance period.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/provisioning-prep",
            "title": "Deployment Prerequisites",
            "headings": [
                "System Requirements",
                "Hardware and Software",
                "Server Networking Access",
                "MongoDB 4.2 Backup Support",
                "MongoDB Agent System User Permissions",
                "Installation Options",
                "Installing MongoDB Enterprise Dependencies",
                "Installing to a Host Before Installing MongoDB",
                "Installing to a Host that Already Runs MongoDB"
            ],
            "paragraphs": "Each host must meet the following requirements. At least 10 GB of free disk space plus whatever space is necessary to\nhold your MongoDB data. At least 4 GB of RAM. If you use  AWS (Amazon Web Services)  EC2 instances, you should use a minimum of an\n m5.large  instance. The MongoDB Agent must be installed only on 64-bit architectures. The hosts that serve the MongoDB deployments must: The network configuration must allow each MongoDB Agent to make a direct\nconnection to every MongoDB deployment listed on the\n Deployment  page.  Cloud Manager  does not support port forwarding. Have full networking access to each other through their  FQDN (fully qualified domain name) s.\nEach host must be able to reach every other host through the  FQDN (fully qualified domain name) .\nTo find the  FQDN (fully qualified domain name)  for each host, run the following command in the\nshell: Resolve each  FQDN (fully qualified domain name)  to a unique IP address. Run the following\ncommand in the shell to resolve the  FQDN (fully qualified domain name) : Set the Common Name or  Subject Alternative Name  value\nof any  SSL (Secure Sockets Layer)  certificates to the MongoDB host\u2019s  FQDN (fully qualified domain name) . Enabling backup on MongoDB 4.2 hosts with an\n FCV  of\n 4.2  has the following impact: Increased disk usage, disk I/O, and network I/O on each MongoDB 4.2\nhost with backup enabled while a snapshot is being taken. If you want the MongoDB Agent to manage your MongoDB deployments, the\nMongoDB Agent System User must have permission: To stop the MongoDB processes. The MongoDB Agent System User restarts\nthe processes using the agent's own set of MongoDB binaries. If you had installed MongoDB with a package manager, use the same\npackage manager to install the MongoDB Agent. This gives the\nMongoDB Agent the same owner as MongoDB. To  Read  and  Write  the MongoDB data directories and log\ndirectories. Set to the same user ID (UID) and group ID (GID) of the MongoDB\nprocess to be automated. If the MongoDB processes to be automated are\nnot running as the same user and group, the Agent cannot manage those\nprocesses. If your MongoDB Agent runs as the  mongod  system user in the\n mongod  system group, the MongoDB process must also run as the\n mongod  system user in the  mongod  system group. On Microsoft Windows systems, the MongoDB Agent, and therefore the\n mongod  or  mongos  services it manages, run as Windows\nservices as the  SYSTEM  user. The existing MongoDB process\nshould run as either  SYSTEM  or  Administrator  before adding\nit to Automation. If you want to run\n MongoDB Enterprise , you\nmust manually install a set of dependencies to each host  before\ninstalling MongoDB . Automation cannot install MongoDB Enterprise if\nthese dependencies are not installed. MongoDB Connector for BI  isn't supported on Ubuntu 22.04. If you deploy the MongoDB Agent to a host onto which you want to have\nAutomation install MongoDB, ensure the system user that owns the\nMongoDB Agent has  Read  and  Write  permissions on the MongoDB data\nand log directories you plan to use. If you install the MongoDB Agent to a host on which Automation is\nmanaging a MongoDB process, the MongoDB Agent system user must have the following permissions: To stop the MongoDB process. The MongoDB Agent restarts the process\nusing its own set of MongoDB binaries. If you had installed MongoDB\nwith a package manager, use the same package manager to install the\nMongoDB Agent. This gives the MongoDB Agent the same owner as MongoDB. To  Read  and  Write  to the MongoDB data and log directories.",
            "code": [
                {
                    "lang": "sh",
                    "value": "hostname -f"
                },
                {
                    "lang": "sh",
                    "value": "dig +short myip.opendns.com @resolver1.opendns.com"
                },
                {
                    "lang": "sh",
                    "value": "sudo apt-get install \\\n     libcurl4 libgssapi-krb5-2 libldap-2.4-2 liblzma5 \\\n     libsasl2-2 libsasl2-modules \\\n     libsasl2-modules-gssapi-mit libwrap0 openssl snmp"
                },
                {
                    "lang": "sh",
                    "value": "sudo apt-get install \\\n     libcurl4 libgssapi-krb5-2 libldap-2.4-2 liblzma5 \\\n     libsasl2-2 libsasl2-modules \\\n     libsasl2-modules-gssapi-mit libwrap0 openssl snmp"
                },
                {
                    "lang": "sh",
                    "value": "sudo apt-get install \\\n     libcurl4 libgssapi-krb5-2 libldap-2.4-2 liblzma5 \\\n     libsasl2-2 libsasl2-modules \\\n     libsasl2-modules-gssapi-mit libwrap0 openssl snmp"
                },
                {
                    "lang": "sh",
                    "value": "sudo apt-get install \\\n     libcurl3 libgssapi-krb5-2 libldap-2.4-2 liblzma5 \\\n     libsasl2-2 libsasl2-modules \\\n     libsasl2-modules-gssapi-mit libwrap0 openssl snmp"
                },
                {
                    "lang": "sh",
                    "value": "sudo apt-get install \\\n     libcurl4 libgssapi-krb5-2 libldap-2.4-2 liblzma5 \\\n     libsasl2-2 libsasl2-modules \\\n     libsasl2-modules-gssapi-mit libwrap0 openssl snmp"
                },
                {
                    "lang": "sh",
                    "value": "sudo yum install cyrus-sasl cyrus-sasl-gssapi \\\n     cyrus-sasl-plain krb5-libs libcurl net-snmp \\\n     net-snmp-libs openldap openssl xz-libs"
                },
                {
                    "lang": "sh",
                    "value": "sudo yum install cyrus-sasl cyrus-sasl-gssapi \\\n     cyrus-sasl-plain krb5-libs libcurl \\\n     lm_sensors-libs net-snmp net-snmp-agent-libs \\\n     openldap openssl tcp_wrappers-libs xz-libs"
                },
                {
                    "lang": "sh",
                    "value": "sudo yum install cyrus-sasl cyrus-sasl-gssapi \\\n     cyrus-sasl-plain krb5-libs libcurl \\\n     lm_sensors-libs net-snmp net-snmp-agent-libs \\\n     openldap openssl xz-libs"
                },
                {
                    "lang": "sh",
                    "value": "sudo zypper install cyrus-sasl cyrus-sasl-plain \\\n     cyrus-sasl-gssapi krb5 libcurl4 libldap-2_4-2 \\\n     libopenssl1_0_0 libsensors4 libsnmp30 libwrap0 \\\n     liblzma5"
                },
                {
                    "lang": "sh",
                    "value": "sudo zypper install cyrus-sasl cyrus-sasl-plain \\\n     cyrus-sasl-gssapi krb5 libcurl4 libldap-2_4-2 \\\n     libopenssl1_1 libsensors4 libsnmp30 libwrap0 \\\n     liblzma5"
                },
                {
                    "lang": "sh",
                    "value": "sudo yum install cyrus-sasl cyrus-sasl-gssapi \\\n     cyrus-sasl-plain krb5-libs libcurl net-snmp \\\n     net-snmp-libs openldap openssl xz-libs"
                },
                {
                    "lang": "sh",
                    "value": "sudo yum install cyrus-sasl cyrus-sasl-gssapi \\\n     cyrus-sasl-plain krb5-libs libcurl \\\n     lm_sensors-libs net-snmp net-snmp-agent-libs \\\n     openldap openssl tcp_wrappers-libs xz-libs"
                }
            ],
            "preview": "Each host must meet the following requirements.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/change-backup-region",
            "title": "Change the Backup Region",
            "headings": [
                "Overview",
                "Procedure",
                "Download any required backup snapshots.",
                "Terminate your backups.",
                "Navigate to the Support page for your organization.",
                "Open a support case.",
                "Restart your backups."
            ],
            "paragraphs": "The following regions are available for  Cloud Manager  Backups.\nIf you need to change your backup region, complete the\nprocedure on this page. AWS (Amazon Web Services)  Region Location eu-west-1 Ireland eu-west-2 London, England, UK eu-central-1 Frankfurt, Germany us-east-1 Northern Virginia, USA us-west-2 Oregon, USA ap-southeast-2 Sydney, NSW, Australia You can view your current  Cloud Manager  Backup region in the\n Continuous Backup  section. To change your\nbackup region: To find the download link,\nclick  Continuous Backup , then the\n Restore History  tab, then click the  download \nlink next to the snapshot. For each backup job, complete the steps to\n terminate your backups . When you terminate\na deployment's backup,  Cloud Manager  immediately deletes the snapshots that\nare within the dates of the current retention policy. The backup region can only be changed once all backup jobs are\nin the  inactive  state. Select your desired organization\nfrom the    Organizations  menu in the\nnavigation bar. In the left sidebar, click  Support . In the  Request Support  dialog, click\n Create New Case . In the support case, specify the  Cloud Manager  project and the backup\nregion that you want to switch to. After MongoDB Support has changed the backup region for your project,\nyou can restart your backups. For detailed instructions,\nsee  Restart Backup for a Deployment .",
            "code": [],
            "preview": "The following regions are available for Cloud Manager Backups.\nIf you need to change your backup region, complete the\nprocedure on this page.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/query-backup",
            "title": "Query a Backup Snapshot",
            "headings": [
                "Considerations",
                "Read-Only Instance",
                "Query Restrictions on the Queryable Snapshots",
                "Cannot Query Encrypted Snapshots",
                "Cannot Query Namespace Filtered Snapshots",
                "Connection Methods",
                "Prerequisites",
                "Query Backup (Use Tunnel to Connect)",
                "Go to Backup view and click the Overview tab.",
                "Follow the prompts to query a backup snapshot.",
                "Query Backup (Handle TLS (Transport Layer Security) Authentication Manually)",
                "Go to Backup view and click the Overview tab.",
                "Follow the prompts to query a backup snapshot.",
                "Next Steps"
            ],
            "paragraphs": "Cloud Manager  provides queryable backups. This\nfunctionality allows you to more quickly query specific backup\nsnapsnots. You can use the queryable backups to: Restore a subset of data within the MongoDB deployment. Compare previous versions of data against the current data. Identify the best point in time to restore a system by comparing data\nfrom multiple snapshots. Cloud Manager  provisions these queryable snapshots as  read-only  MongoDB\ninstances. These instances are available for up to 24 hours. You cannot perform the following operations on queryable snapshots: Map-reduce operations . Queries that require disk usage, such as\n running aggregation \nwith the  allowDiskUse  option to perform large sort\noperations. If you  encrypted your snapshots , you\ncan't query those encrypted snapshots. If you applied  namespace filters  to a\nsnapshot, you can't query that snapshot. Connections to these instances are over  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)   and require\n x.509 authentication .   Cloud Manager  provides: An executable that creates a  tunnel  which\nhandles the connection, including the client  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and the x.509\nauthentication. x.509 certificates if you want to handle the connection details\nmanually, including the  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and the x.509 authentication. Queryable backups are available for MongoDB 3.2 or later replica\nsets or MongoDB 3.2 or later sharded clusters with  CSRS (Config Servers as Replica Sets) . Use the latest versions of  MongoDB Database Tools , which include\n mongodump  and  mongorestore .\nUse the latest version of  mongosh . Older versions of  mongodump  include an issue\nthat can cause keys in collection options to be dumped in the wrong order.\nTo learn more, see  TOOLS-3411 . The tunnel handles the security ( TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  and x.509 authentication)\nfor connecting to the instance. For the deployment whose backup you want to query, click the ellipsis\nbutton under  Options  column and select  Query . You can also click the deployment to view its snapshots and click the\n Query  button under the  Actions  column. Select the snapshot to query and click  Next . Start  the process to query a snapshot. You will be\nprompted for 2-factor verification. Select  Backup Tunnel  as the connection method to the\nqueryable snapshot. Select your Platform and download. Uncompress the downloaded file. Open a terminal or command prompt and go to the uncompressed\n<tunnel> directory. Run the executable to start the tunnel. The default port for the tunnel is  27017 . To change the port,\nuse the  --local  flag, as in the following example: For the full list of options you can pass to the tunnel, run the\ntunnel exectuable with the  -h  option: If you change the port, you must include the port information\nwhen connecting. Use  mongosh  or a MongoDB driver to connect\nto the backup via the tunnel. If connecting locally from the same machine as where the tunnel\nis running, you do not need to specify a connection string or\nhost information. Otherwise, specify a connection string or\nhost information for the machine where the tunnel is running. If you have changed the port that the tunnel is listening on,\nyou must specify the port information when connecting. Once you have finished querying this snapshot, you can terminate the\nqueryable instance: Go to the  Restore History  and hover over the\n Status  column for the deployment item. Click  Cancel . If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore. The X.509 certificates are valid for 24 hours. For the deployment whose backup you want to query, click\n  under  Options  column then select\n Query . You can also click the deployment to view its snapshots and click\nthe  Query  button under the  Actions  column. Select the snapshot to query and click  Next . Start  the process to query a snapshot. If prompted\nfor your password, enter your password to verify. Select  Connect Manually  as the connection method to\nthe queryable snapshot. Download the X.509 client PEM file. Download the  Certificate Authority  PEM file. Use  mongosh  or a MongoDB driver to connect\nto the queryable backup host. To connect, you must specify the\nhostname and port, the  TLS (Transport Layer Security)  option, and the X.509 certificates. If using  mongosh  to connect to the instance: Once you have finished querying this snapshot, you can terminate the\nqueryable instance: Go to the  Restore History  and hover over the\n Status  column for the deployment item. Click  Cancel . If you restore an\n encrypted snapshot  that  Cloud Manager \nencrypted with  AES256-GCM (Advanced Encryption Standards 256-bit Galois/Counter Mode) ,\n rotate your master key \nafter completing the restore. To restore a database or a collection using the queryable backup\nMongoDB instance, see  Restore a Database or Collection from Queryable Backup .",
            "code": [
                {
                    "lang": "javascript",
                    "value": "./<tunnel executable> --local localhost:27020"
                },
                {
                    "lang": "javascript",
                    "value": "./<tunnel executable> -h"
                },
                {
                    "lang": "sh",
                    "value": "mongosh my-queryable-backup-host.mongodb.com:27217 \\\n      --tls --tlsCertificateKeyFile <client certificate> \\\n      --tlsCAFile mms-backup-ca.pem"
                }
            ],
            "preview": "Cloud Manager provides queryable backups. This\nfunctionality allows you to more quickly query specific backup\nsnapsnots. You can use the queryable backups to:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/restart-processes",
            "title": "Restart Processes",
            "headings": [
                "Restart One Entire Deployment",
                "Navigate to the Clusters view for your deployment.",
                "Restart the deployment.",
                "Click Review & Deploy to review your changes.",
                "Restart One Process in One Deployment",
                "Navigate to the Clusters view for your deployment.",
                "Restart the process in your deployment.",
                "Click Review & Deploy to review your changes."
            ],
            "paragraphs": "You can restart a running  sharded cluster ,  replica set ,\nor  standalone  process directly from the  Cloud Manager  console. Instead of restarting\nan entire deployment, you can also restart individual  Cloud Manager -managed\nMongoDB member processes of a deployment. If  Cloud Manager  Automation manages a  mongos  process and that process\nremains unreachable for 30 days,  Cloud Manager  removes that process from the\n Deployment  tab view. If you restart the  mongos \nprocess,  Cloud Manager  detects it again. To learn more, see the\nhost is down ( HOST_DOWN ) alert. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click the ellipsis icon [  ]\nfor the deployment that you want to restart. Click  Restart . Click  Confirm . If you are restarting a running deployment,\n Cloud Manager  restarts the deployment after the next publish.\nDeployments with multiple members remain available as  Cloud Manager \nperforms a rolling restart. During an  Cloud Manager  rolling restart,\nseveral processes can go offline at once, but the majority of\nprocesses remain available. Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Click on the name of the deployment. Click the  Actions  dropdown next to the\nmember process that you want to restart. Click  Restart . Click  Confirm . Cloud Manager  displays your proposed changes. If you are satisfied, click  Confirm & Deploy . If you want to make further configuration changes,\nclick  Cancel . Click  Modify  for the\ncluster to make additional changes.",
            "code": [],
            "preview": "You can restart a running sharded cluster, replica set,\nor standalone process directly from the Cloud Manager console. Instead of restarting\nan entire deployment, you can also restart individual Cloud Manager-managed\nMongoDB member processes of a deployment.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/enable-appdb-monitoring",
            "title": "Enable Application Database Monitoring",
            "headings": [
                "Prerequisites",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Prepare the data directory.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring.",
                "Log in to the Cloud Manager.",
                "Enable Application Database Monitoring.",
                "Install the MongoDB Agent.",
                "Download the latest version of the MongoDB Agent.",
                "Extract the MongoDB Agent.",
                "Change to the extracted binary directory.",
                "Edit the MongoDB Agent configuration file.",
                "Optional: Configure the MongoDB Agent to use a proxy server.",
                "Optional: Create the binary, log, and data directories.",
                "Assign permissions to the system user that runs the MongoDB Agent.",
                "Start the MongoDB Agent.",
                "Verify that the MongoDB Agent is running.",
                "Enable monitoring of the Backing Databases.",
                "Provide the Connection Details for the Backing Databases.",
                "Confirm the Backing Databases setup.",
                "Enable operational monitoring for the Application Database.",
                "Install Automation Agent on each of your servers.",
                "Review and confirm your deployment for operational monitoring."
            ],
            "paragraphs": "To enable application database monitoring, including  dbStats \nand  database profiling \ninformation, the database account connecting to AppDB must authenticate as a\nuser with the following minimum role: Required Role Database clusterMonitor admin Use this procedure to enable monitoring on an application\ndatabase: On x86_64 architecture running Debian 10 or 11, and\nUbuntu 18.04, 20.04, or 22.04: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Debian 8/9, Ubuntu 16.X/18.X - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forUbuntu 18.04/20.04/22.04 or Debian 9/10/11 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . On zSeries architecture running Ubuntu 18.04 using a  deb \npackage: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Ubuntu 18.X Z-Series (s390x) - DEB. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forUbuntu 18.04 for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. The data directory stores MongoDB data. For an existing MongoDB\ndeployment, ensure that the directory is owned by the  mongodb \nuser. If no MongoDB deployment exists, create the directory and set\nthe owner. To create a data directory and set the owner as the  mongodb  user: Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . Use this procedure to enable monitoring on an application\ndatabase: On x86_64 architecture: Running RHEL / CentOS 6.x using an\n rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Amazon Linux - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer for64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . RHEL / CentOS 7.x/8.x/9.x, SUSE12, SUSE15 or\nAmazon Linux 2: Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forRHEL 7 for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . Using a  tar  archive: To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux 2 - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forRHEL for 64-bit x86: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into the. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open the local.config file in your preferred text editor: Update the following configuration options: The resulting changes to the local.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . On RHEL / CentOS (7.x) on PowerPC architecture (managing\nMongoDB 3.4 or later deployments): Using an  rpm  package: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X), SUSE12, Amazon Linux2 - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forRHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . Using a  tar  archive: To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL/CentOS (7.X) Power (ppc64le) - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forRHEL 7 for PowerPC: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open the local.config file in your preferred text editor: Update the following configuration options: The resulting changes to the local.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . On zSeries architecture (managing MongoDB 4.4 or later\ndeployments), use RHEL / CentOS 7.x or 8.x: Running RHEL / CentOS 7.x/8.x using the  rpm  package\nmanager: Starting with  version 10.24.0.6714-1 , when you install the MongoDB Agent\nusing  deb  or  rpm  packages, the package doesn't add\nMongoDB binaries to the  PATH  environment variable. If your deployment depends on the presence of MongoDB binaries in\nthe  PATH , you must manually add the paths to MongoDB\nbinaries to the  PATH . To learn how to update environment\nvariables, refer to your operating system's documentation. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect RHEL 7.X/8X Z-Series (s390x) - RPM. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forRHEL 7.X/8.X for IBM zSeries: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . In the directory where you installed the MongoDB Agent, open the automation-agent.config file in your preferred text editor: Update the following configuration options: The resulting changes to the automation-agent.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open theautomation-agent.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. Issue the following command: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . Use this procedure to install enable monitoring on an application\ndatabase on Linux systems that do not use  deb  or  rpm \npackages. To enable application database monitoring: Click the  Admin  link in the upper-right corner of the\n Ops Manager  console. Click  Enable  from either: The banner introducing the monitoring capability or The  Enable Monitoring  setting. Click  View Agent Install Instructions . The\n Install Agent Instructions  modal opens. From the  Select Your Server's Operating System  menu,\nselect Other Linux - TAR. Click  Next . The\n Install New MongoDB Agent  modal opens. From a system shell on the host that will run the MongoDB Agent,\nissue the following  curl  command to download the installer forGeneric 64-bit Linux: Starting with this step, follow the MongoDB Agent\ninstallation modal and copy the commands provided into theLinux shell. Replace  <OpsManagerHost>:<Port>  with the hostname and port of\nyour  Cloud Manager . You can install the MongoDB Agent in any directory. If you want\nto move the archive to another directory before extracting, you may\ndo so. To install the MongoDB Agent, extract the archive: Change into the directory that was created after extracting the\nMongoDB Agent binary: In the directory where you installed the MongoDB Agent, open the local.config file in your preferred text editor: Update the following configuration options: The resulting changes to the local.config file should\nlook like the following: Key Value mmsGroupId ProjectID  of your project. mmsApiKey project. mmsbaseurl URL (Uniform Resource Locator)  (hostname and port) of the  Cloud Manager . To configure the MongoDB Agent to connect to  Cloud Manager  via a proxy\nserver, you must specify the server in the  httpProxy \nenvironment variable. In the directory where you installed the MongoDB Agent, open thelocal.config file in your preferred text editor. Add the following configuration key: Key Value httpProxy URL (Uniform Resource Locator)  (hostname and port) of to your proxy server. If you have an existing Monitoring Agent user and do not plan on\nactivating Automation, you only need to create the log directory. Create the following directories to store files that the\nMongoDB Agent needs. Run the following commands to create the directories: The use of  mongodb-mms-automation  in the file path is a\nlegacy artifact and does not mean that the MongoDB Agent is being\ninstalled with Automation configured. Component Default Directory Description Binaries /var/lib/mongodb-mms-automation These are the binaries that the MongoDB Agent manages.\nThey include the MongoDB Agent, BI Connector, and MongoDB\nbinaries. MongoDB Agent logs /var/log/mongodb-mms-automation These are the log files that the MongoDB Agent creates. MongoDB databases /data These are the databases that the MongoDB Agent creates and\nmanages. By default, the Agent binaries and  Cloud Manager \nconfiguration backup file are located in\n /var/lib/mongodb-mms-automation .\nIf you want to store these files in a different\ndirectory, follow these procedures: To change the location of the Agent Binaries: To change the location of the Agent configuration backup: Click  Deployment , then  Agents , and\nthen  Downloads & Settings . Below the  Download Directory  heading, click the\npencil icon to the right of the path shown in\n Download Directory (Linux) . Change the path to the new path you want. Click  Save . Create the new directory you specified on each host that runs\nan Agent. Open the\n Agent configuration file \nin your preferred text editor. Change the  mmsConfigBackup  setting to the new path for\nthe configuration backup file. Save the Agent configuration file. Move the configuration backup file to the new directory. Run the following commands: From the directory in which you installed the MongoDB Agent and\nas the system user you created in the last step, issue the following\ncommand: In the  Install Agent Instructions  modal,\nwait for each deployment to show  Verified  in the\n Install the MongoDB Agent  step. Click  Continue . In the  Set Up Ops Manager Monitoring  modal,\nwait for the agent to show  Monitoring  as enabled. Click  Continue . Complete the following fields: After  Ops Manager  displays  Deployment found , click\n Continue . Hostname Provide the hostname of the host that serves the backing\ndatabase. Port Provide the port of the backing database. Enable Authentication Toggle this to enable authentication. Use TLS/SSL Toggle to enable TLS. Ops Manager  displays the host serving the backing databases and the\nrunning agent. Click  Continue . Operational monitoring allows you to track CPU, memory, and disk\ncapacity of the Application Database servers and set up alert\nnotification when a specified  alert condition  occurs. To disable operational monitoring, click  No, Just Monitor . To enable operational monitoring: Review the requirements to add Automation in read-only mode\nfor operational monitoring on each server in your deployment. Select the checkbox to confirm that you have read the requirements\nand risks listed in the page. Click  Continue . Select  Automation  from the  Install Agent \ndropdown list. Click  Initialize Automation . The MongoDB Agent gathers detailed information about the MongoDB\nprocesses for operational monitoring. To review the information gathered by the MongoDB Agent, click\n Review Deployment . Review the  settings \nin the  AppDB: Review Your Changes  modal and click\n Confirm & Deploy . If you can't view monitoring data, verify that at least one host has\nmonitoring enabled.",
            "code": [
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.amd64.ubuntu1604.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.ubuntu1804.deb"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -p /data; sudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo systemctl start mongodb-mms-automation-agent.service"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.ppc641e.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.rhel7_ppc64le"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.s390x.rhel7.rpm"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "sudo vi /etc/mongodb-mms/automation-agent.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "shell",
                    "value": "curl -OL https://<OpsManagerHost>:<Port>/download/agent/automation/mongodb-mms-automation-agent-manager-latest.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "tar -xvzf mongodb-mms-automation-agent-<VERSION>.linux_x86_64.tar.gz"
                },
                {
                    "lang": "sh",
                    "value": "cd mongodb-mms-automation-agent-<VERSION>.linux_x86_64"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "ini",
                    "value": "mmsGroupId=<Project ID>\nmmsApiKey=<agent API key>\nmmsBaseUrl=<application URL>"
                },
                {
                    "lang": "sh",
                    "value": "vi <install-path>/local.config"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /var/lib/mongodb-mms-automation\nsudo mkdir -m 755 -p /var/log/mongodb-mms-automation\nsudo mkdir -m 755 -p /data"
                },
                {
                    "lang": "sh",
                    "value": "sudo mkdir -m 755 -p /<newPath>"
                },
                {
                    "lang": "ini",
                    "value": "mmsConfigBackup=/<newPath>/mms-cluster-config-backup.json"
                },
                {
                    "lang": "sh",
                    "value": "sudo mv /var/lib/mongodb-mms-automation/mms-cluster-config-backup.json /<newPath>"
                },
                {
                    "lang": "sh",
                    "value": "# Create mongodb user and group if they do not exist\n\nif ! sudo /usr/bin/id -g mongodb &>/dev/null; then\n  sudo /usr/sbin/groupadd -r mongodb\nfi\n\n# Create mongodb user if they do not exist and assign\n# them to the mongodb group\n\nif ! sudo /usr/bin/id mongodb &>/dev/null; then\n  sudo /usr/sbin/useradd -M -r -g mongodb \\\n    -d /var/lib/mongo -s /bin/false \\\n    -c mongodb mongodb > /dev/null 2>&1\nfi\n\n# Grant the mongodb:mongodb user and group permissions\n# to manage deployments.\n\nsudo chown mongodb:mongodb /var/lib/mongodb-mms-automation\nsudo chown mongodb:mongodb /var/log/mongodb-mms-automation\nsudo chown mongodb:mongodb /data"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent \\\n  --config=local.config \\\n  >> /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
                }
            ],
            "preview": "To enable application database monitoring, including dbStats\nand database profiling\ninformation, the database account connecting to AppDB must authenticate as a\nuser with the following minimum role:",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/connect-to-mongodb",
            "title": "Connect to a MongoDB Process",
            "headings": [
                "Overview",
                "Firewall Rules",
                "Procedures",
                "Get a Shell Command to Connect to a MongoDB Instance",
                "Navigate to the Clusters view for your deployment.",
                "On the line listing the cluster, replica set, or process, click the ellipsis icon and select Connect to this instance.",
                "Get the Host and Port for a MongoDB Process",
                "Navigate to the Clusters view for your deployment.",
                "(Optional) For sharded clusters, filter which process type is listed.",
                "On the line listing the process, click Metrics.",
                "Connect to a Deployment Using mongosh",
                "Connect to a Deployment Using a MongoDB Driver"
            ],
            "paragraphs": "To connect to a MongoDB, retrieve the hostname and port information\nfrom  Cloud Manager  and then use a MongoDB client, such as  mongosh  or a\n MongoDB driver , to connect. To\nconnect to a  cluster , retrieve the hostname\nand port for the  mongos  process. To connect to a\n replica set  or  standalone process , retrieve\nthe hostname and port for the  mongod  processes. Firewall rules and user authentication affect your access to MongoDB.\nYou must have access to the server and port of the MongoDB process.\nFor information on firewalls on servers running MongoDB, see\nthe firewall information in the  Network Security  document in the MongoDB manual. If your MongoDB instance runs on Amazon Web Services (AWS), then the\nsecurity group associated with the AWS servers also affects access. AWS\nsecurity groups control inbound and outbound traffic to their\nassociated servers. You can retrieve a shell command for connecting to your MongoDB\ninstance, or you can retrieve the host and port number of a specific\nMongoDB process and create your own command for connecting using either\nshell or\n MongoDB driver . If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. Cloud Manager  provides a  mongo  command that you can use\nto connect to the MongoDB process. If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. If it is not already displayed, click  Deployment  in\nthe sidebar. Click the  Clusters  view. The four buttons are listed in the following order, left to right:\n Shards ,  Configs ,  Mongos , and\n BIs . Process Displays Shards mongod  processes that host your data. Configs mongod  processes that run as  config\nservers  to store a sharded cluster's metadata. Mongos mongos  processes that route data in a sharded\ncluster. BIs BI (Business Intelligence)  processes that access data\nin a sharded cluster. Cloud Manager  displays the hostname and port of the process at the top of the\ncharts page. Get the host and port using the  previous procedure . From a shell, run  mongosh  and specify the\nhost and port. For example: Get the host and port using the  above procedure .\nSee your  driver's instructions  for\ncreating a  connection string  that\nspecifies the hostname and port. For sharded clusters, you specify the hostname and port of the\n mongos  instance. For a replica set, you specify a seed list of\nall hosts in the replica set. Your driver will automatically connect to\nthe  primary . For example: Interact with Your Data",
            "code": [
                {
                    "lang": "sh",
                    "value": "mongosh --username <user> --password <pass> --host <host> --port <port>"
                },
                {
                    "lang": "javascript",
                    "value": "mongodb://[<username>:<password>@]hostname0<:port>[,hostname1:<port1>][,hostname2:<port2>][...][,hostnameN:<portN>]"
                }
            ],
            "preview": "To connect to a MongoDB, retrieve the hostname and port information\nfrom Cloud Manager and then use a MongoDB client, such as mongosh or a\nMongoDB driver, to connect. To\nconnect to a cluster, retrieve the hostname\nand port for the mongos process. To connect to a\nreplica set or standalone process, retrieve\nthe hostname and port for the mongod processes.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/mongodb-processes",
            "title": "MongoDB Processes",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/mongodb-agent",
            "title": "MongoDB Agent",
            "headings": [],
            "paragraphs": "Before the introduction of the MongoDB Agent, each function --\nAutomation, Backup, and Monitoring -- ran as a separate agent binary in\nyour project. The MongoDB Agent runs as a single binary that can perform any -- or all\n-- of the three functions depending upon what you need. Activate the monitoring and/or backup functions using  Cloud Manager  UI. Activate automation when you create a new cluster or import an\nexisting one.",
            "code": [],
            "preview": "Before the introduction of the MongoDB Agent, each function --\nAutomation, Backup, and Monitoring -- ran as a separate agent binary in\nyour project.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/add-servers",
            "title": "Provision Servers",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/k8s-config-for-mdb-resource",
            "title": "Configure Kubernetes for Deploying MongoDB Resource",
            "headings": [
                "Verify Permissions",
                "Navigate to the Kubernetes Setup Page in the Cloud Manager UI",
                "Log in to Cloud Manager and select the organization that contains your desired project from the  Organizations menu in the navigation bar.",
                "Select your desired project from the Project menu in the navigation bar.",
                "Click the Add dropdown and select Prepare Kubernetes Configuration to display the Kubernetes Setup page.",
                "Log in to Cloud Manager and select your desired organization from the  Organizations menu in the navigation bar.",
                "Click Kubernetes Setup in the sidebar, or click Kubernetes Setup in the navigation bar.",
                "Set Up Kubernetes for a MongoDB Resource",
                "Generating the YAML Files",
                "Specify the API keys for accessing your Cloud Manager project.",
                "Enter the IP addresses to add to your Cloud Manager project's IP access list to grant programmatic access from your Kubernetes environment.",
                "Generate ConfigMap and Kubernetes secret YAML files.",
                "Follow the steps in the Generated ConfigMap and Secret YAML file modal to apply the generated ConfigMap and Kubernetes secret YAML files to your Kubernetes environment."
            ],
            "paragraphs": "You can use the Kubernetes Operator to deploy MongoDB resources such as\n a replica set ,  a sharded\ncluster , or  a standalone\ninstance  using an  object .\n Cloud Manager  can generate the YAML files you need to configure your Kubernetes\nenvironment for deploying a MongoDB Database resource. To generate the YAML files: Verify Permissions Navigate to the Kubernetes Setup Page in the  Cloud Manager  UI Set Up Kubernetes for a MongoDB Resource You must have one of the following roles to access the  Cloud Manager  UI for\nsetting up Kubernetes: Organization Owner Project Owner Project Data Access Admin To access the  Kubernetes Setup  page in the  Cloud Manager  UI: If you are a  Global Owner  or  Organization Owner , you can access the Kubernetes Setup page in the  Cloud Manager  UI\nby doing the following also: The  MongoDB Enterprise Kubernetes Operator  requires a Kubernetes ConfigMap to create or link\nyour  Cloud Manager  project. You can use the  Cloud Manager   Kubernetes Setup  page to\nautomatically generate the ConfigMap. The generated YAML file for the\nConfigMap looks similar to the following: You need to store your  Programmatic API Key \nas a Kubernetes secret to create or update Kubernetes  objects \nin your  Cloud Manager  project. A Kubernetes secret stores authentication\ncredentials so only Kubernetes can access them. You can specify your existing API keys or generate new API keys to\ncreate the Kubernetes secret in the  Cloud Manager   Kubernetes\nSetup  page. The generated YAML file for the secret looks similar to\nthe following: To setup Kubernetes for a MongoDB resource: Click  Create New API Keys  to generate new API keys. Click  Use Existing API Keys  to specify your existing\npublic and private keys. To generate the ConfigMap and Kubernetes secret YAML files: Click  Generate Key and YAML  if you are generating new\nAPI keys. Click  Generate YAML  if you are using existing API keys.",
            "code": [
                {
                    "lang": "yaml",
                    "value": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-project\n  namespace: mongodb\ndata:\n  baseUrl: https://cloud.mongodb.com\n\n  # Optional Parameters\n  # projectName: <your-project-name>\n\n  orgId: <your-org-id>"
                },
                {
                    "lang": "shell",
                    "value": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: organization-secret\n  namespace: mongodb\nstringData:\n  user: <private-key>\n  publicApiKey: <public-api-key>"
                }
            ],
            "preview": "You can use the Kubernetes Operator to deploy MongoDB resources such as\na replica set, a sharded\ncluster, or a standalone\ninstance using an object.\nCloud Manager can generate the YAML files you need to configure your Kubernetes\nenvironment for deploying a MongoDB Database resource.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/manage-project-settings",
            "title": "Edit Project Settings",
            "headings": [
                "Navigate to the Settings page for your project.",
                "View or modify project settings.",
                "Project Settings"
            ],
            "paragraphs": "You can configure project-specific settings from the project's\n Settings  page. Reopen a Locked Account Remove Project from Automation Process Payment for  Cloud Manager Cloud Manager  Access Manage Agent API Keys If it is not already displayed, select the organization that\ncontains your desired project from the    Organizations  menu  in the\nnavigation bar. If it is not already displayed, select your desired project\nfrom the  Projects  menu in the navigation bar. Next to the  Projects  menu, expand the\n Options  menu, then click  Project Settings . Project Settings  displays the configurable settings.\nSee  Project Settings  to view the setting descriptions. Project Settings  apply to all the users in the project. Setting Description Project Sets your project's name. Only a user with  Project Owner  access for the\nproject can edit the project name. Project Time Zone Sets your project's time zone. Only a user with  Project Owner  access for the\nproject can edit the project time zone. Collect Logs For All Hosts Activates or deactivates the collection of log data for all\nhosts. This overwrites the statuses set on the individual hosts. Collect Profiling Information for All Hosts Activates or deactivates  Cloud Manager  collection of data from the\nMongoDB  database profilers \nrunning on your  mongod  instances. A  mongod \ninstance must have its profiler enabled in order for  Cloud Manager  to\ncollect data from it. When you change this setting,  Cloud Manager  applies the change globally\nto all  mongod  processes in the project. For example,\nif you disable this setting,  Cloud Manager  disables the collection of\nprofiling data for all the project's processes. This setting\ndoes not affect whether the profiler is enabled on a given\n mongod  process, only whether  Cloud Manager  collects profiling\ndata. To enable the collection of profiling data on a\nprocess-by-process basis, see  Profile Databases . When profiling is enabled,  Cloud Manager  collects data from MongoDB\u2019s\nprofiler to provide statistics about performance and database\noperations. Ensure exposing profile data to  Cloud Manager  is consistent\nwith your information security practices. Also be aware the\nprofiler can consume resources which may adversely affect\nMongoDB performance. For more information, see  Profile Databases . Collect Database Specific Statistics Allows you to enable or disable the collection of database\nstatistics. For more information, see\n Profile Databases . Default Project Server Type Sets the default server type for all hosts added to this\nproject. Server Intention Environment Purpose License Requirement Production Server Hosts your application to your internal or external end users. If an end user might use an environment, it functions as a\nProduction environment. This applies whether the environment\nalso provides testing, quality assurance, evaluation, or\ndevelopment capabilities. One license per server Test/QA Server This type of environment can be used to: Test Exercises your application to verify that it works as\ndesigned and expected. The platform configuration might\nbe a less performant version of Production in compute,\nnetwork, and storage capability. Assure system quality Validates your application against a combination of data,\nhardware, and software configured to simulate Production.\nThe platform configuration should be a smaller scale of\nProduction in compute, network, and storage capability. Stage Simulates the Production environment including\nperformance testing and release candidate approval. The\nplatform configuration should mirror Production in\ncompute, network, and storage capability. One license per server Development Server Hosts in progress design, code, debugging or some combination\nthereof for your application. Used to evaluate if the current\nstate of your application can be promoted to another\nenvironment. None RAM Pool Provides any combination of servers for any environment purpose. One license for any number of servers up to the maximum of\nthe total GB of RAM you purchased across these servers. Backing Database Hosts your  Ops Manager  backing database.\n Enable Application Database Monitoring  to enable this\noption. None This does  not  modify the default server type of existing\nhosts. Reset Duplicates Allows you to reset and remove all detected duplicate hosts.\nThis is useful if your server environment has drastically\nchanged and you believe a host is incorrectly marked as a\nduplicate. Preferred Hostnames Allows you to specify resolvable hostnames or  IP (Internet Protocol)  addresses\nfor your deployment's host.  Cloud Manager  keeps a list of the multiple\nways to which each host is referred (hostname,  FQDN (fully qualified domain name) ,  IPv4 (Internet Protocol version 4) \naddress,  IPv6 (Internet Protocol version 6)  address) and uses heuristics to determine the\nbest choice. Specify a preferred hostname to make sure  Cloud Manager \nuses a hostname that can resolve to a host. The method you\nchoose becomes the method used to display the hosts in  Cloud Manager . To specify a preferred hostname, click  Add  and do\none of the following: To specify hostnames that end with a particular string, click\nthe  Ends With  button and enter the string. To specify hostnames that match a pattern, click the\n Regex  button and enter a regular expression. An\nexpression that uses \"starts with\" behavior must have  .* \nat the end in order to correctly match. To specify hostnames that start with  acme- , enter: Suppress Mongos Automatic Discovery Suppresses automatic discovery of all  mongos \nprocesses in your deployment's sharded clusters. Real Time Performance Panel Enables the collection and display of real time metrics from\nyour MongoDB databases in the\n Real-Time Performance Panel If you toggle  Real-Time Performance Panel  to\n Off , you disable this feature for every user in the Project. You might see some  PII (Personally identifiable information)  if you have permission to use this\nfeature. Data Explorer Enables the ability to query of your MongoDB databases from\n Cloud Manager . If you toggle  Data Explorer  to  Off , you disable\nthis feature for every user in the Project. You might see some  PII (Personally identifiable information)  if you have permission to use this\nfeature. Performance Advisor Enables the ability to analyze the logs of your MongoDB database\nto recommend performance improvements. If you toggle  Performance Advisor  to  Off , you\ndisable this feature for every user in the Project. You might see some  PII (Personally identifiable information)  if you have permission to use this\nfeature. Delete Project Click  Delete  to remove the project from  Cloud Manager . The\n Delete Project  modal displays. Click\n Delete Project  to confirm your decision.",
            "code": [
                {
                    "lang": "none",
                    "value": "^acme-.*"
                }
            ],
            "preview": "Project Settings apply to all the users in the project.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/update-mongodb-agent",
            "title": "Update to the MongoDB Agent",
            "headings": [],
            "paragraphs": "If you need to update your legacy Agents to the MongoDB Agent, follow one of these scenarios to make the transition.",
            "code": [],
            "preview": "If you need to update your legacy Agents to the MongoDB Agent, follow one of these scenarios to make the transition.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/mongodb-versions",
            "title": "MongoDB Versions",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/backup-restore-deployments",
            "title": "Restore MongoDB Deployments",
            "headings": [],
            "paragraphs": "Use these procedures to restore a MongoDB deployment using Backup\nartifacts. New MongoDB Backup Restore Utility for Point-in-Time Restores.\nFor more information, refer to the individual restore procedures.",
            "code": [],
            "preview": "Use these procedures to restore a MongoDB deployment using Backup\nartifacts.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/backup-deployments",
            "title": "Back up MongoDB Deployments",
            "headings": [],
            "paragraphs": "This section describes how Backup works and how to create a backup.",
            "code": [],
            "preview": "This section describes how Backup works and how to create a backup.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/alerts",
            "title": "Configure and Resolve Alerts",
            "headings": [
                "Alert Conditions",
                "Configure Alerts",
                "Resolve Alerts",
                "Alerts Workflow",
                "The alert condition is met.",
                "The alert condition remains past the amount of time specified in the send if condition lasts at least field.",
                "The alert remains active until it resolves, or you disable or delete it."
            ],
            "paragraphs": "Cloud Manager  issues alerts for the conditions configured in your\n alert settings . When a condition triggers an\nalert, you receive the alert at regular intervals until the alert\nresolves or  Cloud Manager  cancels it. When you configure alerts, you specify alert conditions and thresholds.\nReview the possible  alert conditions  for\nwhich you can trigger alerts related to your clusters. To set which conditions trigger alerts and how  Cloud Manager  notifies users,\n Configure Alert Settings . You can configure alerts at the organization\nor project level.  Cloud Manager  provides default alerts at the project\nlevel. You can clone existing alerts and configure maintenance window\nalerts. When a condition triggers an alert,  Cloud Manager  displays a warning symbol\non the cluster and sends alert notifications. Resolve these\nalerts and work to prevent alert conditions from occurring in the\nfuture. To learn how to fix the immediate problem, implement a\nlong-term solution, and monitor your progress, see\n Resolve Alerts . When an  alert condition  is met, the following\nalert lifecycle begins: For informational alerts like the\n User joined the organization .\nalert,  Cloud Manager  sends notifications as soon as the condition is\nmet. These alerts don't appear in the  Cloud Manager  UI. The\ninformational alerts workflow ends here. Otherwise,  Cloud Manager  retrieves metrics at regular intervals\nbased on granularity. When the retrieved metrics indicate that\nan alert condition is met,  Cloud Manager  tracks the alert condition\nuntil it ends, or until it remains past the amount of time\nspecified in the  send if condition lasts at least \nfield. If the alert condition ends between sampling periods,\n Cloud Manager  doesn't track the alert condition or send any\nnotifications. Cloud Manager  sends notifications. The alerts appear on the\n All Alerts  tab (organization alerts) or the\n Open Alerts  tab (project alerts). The following stages might occur: You  acknowledge the alert .  Cloud Manager \nsends no further notifications until either the acknowledgement\nperiod ends, you resolve the alert condition, or you\nunacknowledge the alert. If an alert condition ends during an\nacknowledgment period,  Cloud Manager  sends a notification. You  unacknowledge an alert  that\nyou previously acknowledged. After you unacknowledge an active\nalert,  Cloud Manager  resumes sending notifications at regular\nintervals until the condition resolves or you delete, disable,\nor re-acknowledge the alert. You  disable the alert .\n Cloud Manager  cancels active alerts related to the setting. A disabled\nalert setting remains visible but grayed-out and you can later\nre-enable it. You  enable an alert  that\nyou previously disabled. You  delete the alert .  Cloud Manager \ncancels active alerts related to the setting. A deleted alert\nsetting does not remain visible. The alert condition resolves. The alert appears on the\n All Alerts  tab (organization alerts) or the\n Closed Alerts  tab (project alerts).",
            "code": [],
            "preview": "Cloud Manager issues alerts for the conditions configured in your\nalert settings. When a condition triggers an\nalert, you receive the alert at regular intervals until the alert\nresolves or Cloud Manager cancels it.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/account-management",
            "title": "Account Management",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/api-tutorials",
            "title": "Cloud Manager Administration API Tutorials",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/alerts-and-monitoring",
            "title": "Monitor Your Deployments",
            "headings": [
                "Slow Queries",
                "Schema Design",
                "Alerts",
                "Deployment Metrics",
                "Third-Party Integrations",
                "MongoDB Logs"
            ],
            "paragraphs": "Cloud Manager  provides built-in tools, alerts, charts, integrations, and\nlogs to help you monitor your cluster.  Cloud Manager  provides the following\nways to monitor your deployments and improve performance. To optimize your query performance,  review the best\npractices for query performance . You can also\n analyze slow queries  and troubleshoot\nslow operations executed on your clusters. Use the following built-in tools: Monitor and improve slow queries  with\nthe Performance Advisor. Monitor query performance  with the\nProfiler. To optimize your schema design, review our frequently used  schema\ndesign patterns . You can also  improve\nyour schema . Improve your schema based on\nrecommendations from the  Performance Advisor  and the  Data Explorer . To trigger alerts based on  alert conditions \nand to help ensure deployment performance,\n configure alerts and resolve them promptly . You can\nconfigure alerts based on specific conditions for your\ndatabases, users, accounts, and more. When you resolve alerts, you\nshould fix the immediate problem, implement a long-term solution, and\nmonitor your progress. To monitor your deployment performance,  view\ndeployment metrics . View historical\nthroughput, performance, and utilization metrics for your databases. To\nlearn more,  review the available metrics . To receive  MongoDB Atlas  alerts in various\nexternal monitoring services,\n integrate with third-party monitoring services . To view  log messages  and  system event audit messages ,  view and download your MongoDB logs .",
            "code": [],
            "preview": "Cloud Manager provides built-in tools, alerts, charts, integrations, and\nlogs to help you monitor your cluster. Cloud Manager provides the following\nways to monitor your deployments and improve performance.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/configure-mongodb-agent",
            "title": "Configure the MongoDB Agent for Access Control",
            "headings": [],
            "paragraphs": "If your MongoDB deployment enforces access control, the MongoDB Agent\nmust authenticate to your MongoDB databases as a user with the proper  roles  and\n privileges .",
            "code": [],
            "preview": "If your MongoDB deployment enforces access control, the MongoDB Agent\nmust authenticate to your MongoDB databases as a user with the proper roles and\nprivileges.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/access-control-mongodb",
            "title": "Manage MongoDB Users and Roles",
            "headings": [],
            "paragraphs": "You can enable MongoDB access control and manage MongoDB users and roles\ndirectly from the  Cloud Manager  interface.",
            "code": [],
            "preview": "You can enable MongoDB access control and manage MongoDB users and roles\ndirectly from the Cloud Manager interface.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/host-mappings",
            "title": "Host Mappings",
            "headings": [
                "Preferred Hostnames",
                "Aliases"
            ],
            "paragraphs": "Host mappings are based on the data that the Monitoring\nretrieves on a regular interval.  Cloud Manager  regenerates the entries on the\n Host Mappings  page after each retrieval. Host mappings are displayed in three-column rows: If a host has multiple aliases, each mapping of host to alias is\nlisted in its own row. Column Content Host The preferred hostname and port for the deployment. Alias One alternative hostname or address and port for the\ndeployment. Last Updated The timestamp when the host mapping was updated. The preferred hostname also appears in the  Name  column of\nthe  Deployment  page. This hostname can be a hostname, an\n FQDN (fully qualified domain name) , an  IPv4 (Internet Protocol version 4)  address, or an  IPv6 (Internet Protocol version 6)  address. If you want a\ndifferent preferred hostname than what  Cloud Manager  chose, regenerate the list\nof mappings in one of the following ways: Specify constraints on how  Cloud Manager  picks a preferred hostname. For\nmore information, see  Preferred Hostnames  in\n Edit Project Settings . Reset the mapping list. For more information, see\n Reset Duplicates  in\n Edit Project Settings . Resetting duplicates and setting constraints on the selection of a\npreferred hostname cause  Cloud Manager  to lose the monitoring history for\naffected hosts. Chart data based on this history is also lost. Depending on what  Cloud Manager  obtains from a monitored host, the alias may be\nin any one of the following forms: Fully qualified domain name (FQDN) Internal hostname External  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address Internal  IPv4 (Internet Protocol version 4)  or  IPv6 (Internet Protocol version 6)  address To prevent naming conflicts,  Cloud Manager  does not use  localhost  or\nsimiliar local designations for new or remapped hosts unless no\nother hostname option is possible.",
            "code": [],
            "preview": "Host mappings are based on the data that the Monitoring\nretrieves on a regular interval. Cloud Manager regenerates the entries on the\nHost Mappings page after each retrieval.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/backup-use",
            "title": "Back Up and Restore Deployments",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/monitor-and-manage",
            "title": "Manage Deployments",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/security",
            "title": "Security",
            "headings": [],
            "paragraphs": "Describes  Cloud Manager  security features. Describes the ports that  Cloud Manager  components use. Enable  TLS (Transport Layer Security)  for connections to your MongoDB deployments. Configure the Authentication Mechanisms used by your  Cloud Manager  project\nfor communication between the  Cloud Manager  agents and your deployments. Link  Cloud Manager  to an Identity Provider to federate credentials across\nmultiple systems. Configure  Cloud Manager  to encrypt snapshots when stored in persistent\nstorage. Rotate master encryption keys. Configure  Cloud Manager  to audit various events on  mongod  and  mongos \ninstances.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/manage-hosts-kubernetes",
            "title": "Deploy MongoDB Resources Using Kubernetes",
            "headings": [],
            "paragraphs": "Use  Cloud Manager  UI to set up Kubernetes for deploying MongoDB resource. Use  Cloud Manager  and the  Kubernetes Operator  to deploy a managed replica set. Use  Cloud Manager  and the  Kubernetes Operator  to deploy a managed sharded cluster. Use  Cloud Manager  and the  Kubernetes Operator  to deploy a standalone for testing\nand development.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/backup-use-operations",
            "title": "Manage Backups",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/start-or-stop-mongodb-agent",
            "title": "Restart the MongoDB  Agent",
            "headings": [
                "Restart the MongoDB Agent",
                "Start the MongoDB Agent",
                "Stop the MongoDB Agent"
            ],
            "paragraphs": "For maintenance or troubleshooting purposes, you may want to\ntemporarily shut down or restart the MongoDB Agent. If you installed the MongoDB Agent using an  rpm  package,\nsuch as on RHEL, CentOS, or SUSE, issue the following command to\nrestart the MongoDB Agent: If you installed the MongoDB Agent using a  deb  package,\nas on Ubuntu, issue the following command to restart the\nMongoDB Agent: Use these commands if you installed to Linux using a\n tar  file. Issue the following commands from the directory to\nwhich you installed the MongoDB Agent: If you installed the MongoDB Agent using an  rpm  package,\nsuch as on RHEL, CentOS, or SUSE, issue the following command to\nstart the MongoDB Agent: If you installed the MongoDB Agent using a  deb  package,\nas on Ubuntu, issue the following command to start the\nMongoDB Agent: Use this command if you installed to Linux using a\n tar  file. Issue the following command from the directory to\nwhich you installed the MongoDB Agent: If you installed the MongoDB Agent using an  rpm  package,\nsuch as on RHEL, CentOS, or SUSE, issue the following command\nto stop the MongoDB Agent: If you installed the MongoDB Agent using a  deb  package,\nas on Ubuntu, issue the following command to stop the MongoDB Agent: If you installed to a Linux system using a  tar  file,\nissue the following command to stop the MongoDB Agent:",
            "code": [
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent restart"
                },
                {
                    "lang": "sh",
                    "value": "sudo restart mongodb-mms-automation-agent"
                },
                {
                    "lang": "sh",
                    "value": "pkill -f mongodb-mms-automation-agent\nnohup ./mongodb-mms-automation-agent >> automation-agent.log 2>&1 &"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent start"
                },
                {
                    "lang": "sh",
                    "value": "sudo start mongodb-mms-automation-agent"
                },
                {
                    "lang": "sh",
                    "value": "nohup ./mongodb-mms-automation-agent >> automation-agent.log 2>&1 &"
                },
                {
                    "lang": "sh",
                    "value": "sudo service mongodb-mms-automation-agent stop"
                },
                {
                    "lang": "sh",
                    "value": "sudo stop mongodb-mms-automation-agent"
                },
                {
                    "lang": "sh",
                    "value": "pkill -f mongodb-mms-automation-agent"
                }
            ],
            "preview": "For maintenance or troubleshooting purposes, you may want to\ntemporarily shut down or restart the MongoDB Agent.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/install-mongodb-agent",
            "title": "Install MongoDB Agent",
            "headings": [],
            "paragraphs": "Cloud Manager  displays the MongoDB Agent install instructions after you choose\nyour MongoDB Agent download. You can copy all the necessary commands from\nthe  Cloud Manager . Please review the  MongoDB Agent Prerequisites  before installing the MongoDB Agent.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/alert-resolutions",
            "title": "Resolve Alerts",
            "headings": [
                "Resolved Alerts",
                "Cancelled Alerts"
            ],
            "paragraphs": "Cloud Manager  issues an alert for each condition configured in your\n alert settings  when an\n alert condition  occurs, such as an\nunresponsive host or an outdated agent. To view all alert\nnotifications, click  Alerts  in  Cloud Manager . When a condition triggers an alert, you receive the alert at regular\nintervals until the alert resolves or  Cloud Manager  cancels it. You can\nacknowledge an alert for a period of time, but if the alert condition\npersists, you will again receive notifications once the acknowledgment\nperiod ends. You can temporarily suspend alerts on a resource by creating an alert\n maintenance window .\nFor example, you can create a maintenance window\nthat suspends host alerts while you shut down hosts for maintenance. To learn more, see  Alerts Workflow  and  Manage Alerts . Cloud Manager  administrators  define alert configurations  on a per-project basis. Alerts resolve when the alert condition no longer applies. For example,\nif a replica set's  primary  goes down,  Cloud Manager  issues an alert\nthat the replica set does not have a primary. When a new primary is\nelected, the alert condition no longer applies, and the alert will\nresolve.  Cloud Manager  sends a notification of the alert's resolution. Cloud Manager  cancels an alert if the alert configuration that triggered the\nalert is deleted, disabled, edited, or if the open alert becomes\ninvalid. Some examples of an alert becoming invalid are: When an alert is canceled,  Cloud Manager  does  not  send a notification and\ndoes not record an entry on the  Cloud Manager   Alerts  lists. There is an open \"Host Down\" alert, and then you delete the target\nhost. There is an open \"Replication Lag\" alert, and the target host becomes\nthe primary. There is an open \"Replica set has no primary\" alert for a replica set\nwhose name is \"rs0,\" and the target replica set is renamed to \"rs1.\"",
            "code": [],
            "preview": "Cloud Manager issues an alert for each condition configured in your\nalert settings when an\nalert condition occurs, such as an\nunresponsive host or an outdated agent. To view all alert\nnotifications, click Alerts in Cloud Manager.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/manage-hosts",
            "title": "Create or Import a MongoDB Deployment",
            "headings": [],
            "paragraphs": "System and Network requirements for  Cloud Manager  and its Agents. Provision servers for MongoDB deployments. Add existing MongoDB deployment to  Cloud Manager . Use  Cloud Manager  to deploy a managed replica set. Use  Cloud Manager  to deploy a managed sharded cluster. For testing and development, create a new standalone MongoDB instance. Install a Kubernetes Operator to help manage MongoDB deployments. Use the  MongoDB Enterprise Kubernetes Operator  to deploy MongoDB resources. Use  Cloud Manager  to deploy a service to translate SQL queries to MongoDB aggregation pipelines. Connect to a MongoDB deployment managed by  Cloud Manager . View collection and index information for your MongoDB deployments.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/mongodb-agent",
            "title": "MongoDB Agent Changelog",
            "headings": [
                "MongoDB Agent 13.8.1.8557-1",
                "MongoDB Agent 13.7.0.8514",
                "MongoDB Agent 13.6.0.8483-1",
                "MongoDB Agent 13.5.0.8451-1",
                "MongoDB Agent 13.4.01.8413-1",
                "MongoDB Agent 13.3.1.8376-1",
                "MongoDB Agent 13.3.0.8373-1",
                "MongoDB Agent 13.2.0.8337-1",
                "MongoDB Agent 13.1.0.8282-1",
                "MongoDB Agent 12.17.0.8238-1",
                "MongoDB Agent 12.16.0.8175-1",
                "MongoDB Agent 12.15.0.8092",
                "MongoDB Agent 12.14.0.8069",
                "MongoDB Agent 12.13.0.8043",
                "MongoDB Agent 12.12.0.8018-1",
                "MongoDB Agent 12.11.2.7970-1",
                "MongoDB Agent 12.11.0.7961",
                "MongoDB Agent 12.10.2.7935-1",
                "MongoDB Agent 12.10.0.7929",
                "MongoDB Agent 12.9.0.7902-1",
                "MongoDB Agent 12.8.0.7876-1",
                "MongoDB Agent 12.7.0.7844-1",
                "MongoDB Agent 12.6.0.7792",
                "MongoDB Agent 12.5.0.7738-1",
                "MongoDB Agent 12.4.0.7703",
                "MongoDB Agent 12.3.0.7658-1",
                "MongoDB Agent 12.2.0.7631",
                "MongoDB Agent 12.1.0.7593",
                "MongoDB Agent 12.0.4.7554",
                "MongoDB Agent 12.0.0.7536",
                "MongoDB Agent 11.15.0.7497",
                "MongoDB Agent 11.14.0.7475",
                "MongoDB Agent 11.13.0.7438",
                "MongoDB Agent 11.12.0.7401",
                "MongoDB Agent 11.11.0.7355",
                "MongoDB Agent 11.10.0.7307",
                "MongoDB Agent 11.9.0.7253-1",
                "MongoDB Agent 11.8.0.7223-1",
                "MongoDB Agent 11.7.0.7181-1",
                "MongoDB Agent 11.6.0.7119",
                "MongoDB Agent 11.5.0.7078-1",
                "MongoDB Agent 11.4.0.7057-1",
                "MongoDB Agent 11.3.0.7029-1",
                "MongoDB Agent 11.2.0.6985",
                "MongoDB Agent 11.1.0.6961",
                "MongoDB Agent 11.0.0.6919",
                "MongoDB Agent 10.30.0.6882-1",
                "MongoDB Agent 10.29.0.6856-1",
                "MongoDB Agent 10.28.0.6828-1",
                "MongoDB Agent 10.27.0.6799",
                "MongoDB Agent 10.26.0.6757",
                "MongoDB Agent 10.25.0.6735-1",
                "MongoDB Agent 10.24.0.6714-1",
                "MongoDB Agent 10.23.0.6688-1",
                "MongoDB Agent 10.21.0.6634",
                "MongoDB Agent 10.20.0.6609-1",
                "MongoDB Agent 10.19.0.6585-1",
                "MongoDB Agent 10.19.0.6566-1",
                "MongoDB Agent 10.17.0.6529-1",
                "MongoDB Agent 10.15.0.6463",
                "MongoDB Agent 10.14.0.6306-1",
                "MongoDB Agent 10.13.0.6247",
                "MongoDB Agent 10.12.0.6196-1",
                "MongoDB Agent 10.11.0.6161",
                "MongoDB Agent 10.10.0.6122-1",
                "MongoDB Agent 10.9.0.6088-1",
                "MongoDB Agent 10.7.0.6016",
                "MongoDB Agent 10.6.0.5959-1",
                "MongoDB Agent 10.4.1.5917",
                "MongoDB Agent 10.4.0.5913",
                "MongoDB Agent 10.3.1.5880",
                "MongoDB Agent 10.3.0.5877",
                "MongoDB Agent 10.1.2.5805",
                "MongoDB Agent 10.1.0.5785",
                "MongoDB Agent 10.0.1.5755-1",
                "MongoDB Agent 10.0.0.5753"
            ],
            "paragraphs": "Released  2023-11-15 Improves upgrading  mongosh  when multiple versions are present. Improves validations of invalid MongoDB database paths. Improves visibility into processes that may prevent the MongoDB Agent from\nreaching the desired goal state. Released  2023-10-18 Fixes an issue where  Cloud Manager  reported an invalid configuration when\nupgrading a managed deployment with multiple tags. Upgrades the  mongosh  used by  Cloud Manager  to version\n 2.0.2 . Adds support for automating deployments on Ubuntu 22.04 for both x86_64\nand ARM64/aarch64 architectures. Released  2023-10-04 Released  2023-09-13 Released  2023-08-23 Flushes the  mongos  cache when you upgrade from MongoDB 5.0 to MongoDB 6.0. Ensures that the MongoDB Agent always runs a shutdown on request, even when the MongoDB process is unresponsive. Released  2023-08-02 Released  2023-08-02 Adds the following improvements for backup snapshots: Ensures that the backup cursor stops if the MongoDB Agent is not the session winner. Increases the socket timeout length when the backup cursor opens. Released  2023-07-12 Adds support for the upcoming release of MongoDB 7.0. Released  2023-06-14 Released  2023-05-24 Uses aggregation operators instead of  currentOp  and  collStats  commands. Adds support for the  security.kmip.useLegacyProtocol  MongoDB configuration\nfile option. Released  2023-05-03 Fixes an issue where restores could be interrupted by transient issues\nwhen retrieving a replication status. Improves  TLS (Transport Layer Security)  certificate validation when configuring  TLS (Transport Layer Security)  for\nMongoDB deployments in the UI. Released  2023-04-12 The MongoDB Agent now properly supports the simultaneous change of the\nAgent's authentication mechanism, deployment authentication mechanism,\nand the MongoDB version. Adds support for Ubuntu 20, 22. Released  2023-03-21 Fixes a formatting issue that could prevent the  Kubernetes Operator  from\nsuccessfully passing a localhost override to the monitoring module. Released  2023-03-01 Improves logging. Released  2023-02-15 Fixes an issue with managing the default read/write concerns when converting a replica set to a sharded cluster. Fixes the calculation of the number of available mongos during a rolling restart change when some mongos are explicitly disabled. Fixes the race condition when resetting an expired DNS cache. Released  2023-02-07 Fixes  collStats  and  db.currentOp()  errors that caused missing data from the  Slowest Operations  chart in the Real-Time Performance Panel. Released  2023-01-25 Uses Go 1.19. Sets the correct topology time on a MongoDB 6.0+ target sharded cluster\nduring a push live migration to  MongoDB Atlas . Supports changing runtime-settable MongoDB Server parameters without\nrequiring a restart. Fixes the processing of the  collStats  and\n db.currentOp()  commands\nso that they use corresponding aggregation stages. To learn more,\nsee  Database Commands Used by Monitoring \nand  Real Time Metrics . Improves logging. Released  2023-01-05 Released  2023-01-05 Improves memory management when collecting information on chunks in sharded collections. Improves logging. Released  2022-12-14 Removes old  mongosh  versions automatically. Released  2022-11-16 MongoDB Agent now compresses rotated log files. Adds support for rotating the  automation-agent-fatal.log  file. Improves logging. Released  2022-10-27 Adds support for new methods of retrieving sharded data distribution\non MongoDB 6.0. Adds support for the rotation of the log file used for system\nstart-up errors . Fixes an issue that caused log errors in  systemd  services on\n mkdir  if the directory already existed. Released  2022-10-05 Fixes an issue that race detector identified. Fixes a float64 issue that occurred when  Cloud Manager  collected hardware\nmetrics. Released  2022-09-15 Fixes an issue where new indexes created with the Rolling Index Build\nfeature are vulnerable to index key inconsistencies during subsequent\nreplication rollback or server crash. Released  2022-08-24 Adds support for an upcoming feature that allows you to set\ncluster-wide parameters. Fixes a bug that could cause the MongoDB Agent self-update to stall if\nit encountered an issue downloading new binaries. Fixes an issue with rotating MongoDB audit log files. Released  2022-08-04 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Improves automatic race detection and fixes detected race conditions. Improves audit log rotation by tightening regex for determining which\nfiles are audit logs. Released  2022-07-13 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Fixes a bug for MongoDB Agent versions 12.1.1 and later where rolling\nindex builds ignored the  hidden  property when built on Data\nExplorer. Improves logging. Adds support for the upcoming release of MongoDB 6.0. Released  2022-06-22 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Adds support for the upcoming release of MongoDB 6.0. Released  2022-06-01 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Adds support for the upcoming release of MongoDB 6.0.0. Released  2022-05-10 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Adds support for the upcoming release of MongoDB 6.0.0. Released  2022-04-20 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Adds support for the upcoming release of MongoDB 6.0. Released  2022-03-31 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Removes support for managing MongoDB 3.4 clusters, but still\nsupports monitoring and backup. Includes additional optimization for DNS lookups that the MongoDB\nAgent performs. Improves error handling for parallel restores. Released  2022-03-09 Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Reduces the rate of DNS lookups performed by the MongoDB Agent. Released  2022-02-16 Fixes an issue where the MongoDB Agent erroneously determined that\nprocesses were down before they were completely shut down. Updates the Automation  systemd  configuration script to send the\ncorrect termination signal. Released  2022-01-25 Improves memory management during backup snapshots. Released  2022-01-05 Fixes problem when removing a shard in a sharded cluster using a\nnon-default value for cluster-wide read or write concern. Released  2021-12-02 Removes support for macOS. Improves detection of NUMA-enabled hardware. Improves logging. Released  2021-11-17 Adds support for the release of MongoDB 5.1. Improves management of database users additions and removals. Released  2021-10-27 Improves hardware metrics collection for Windows. Improves logging during download of software components. Released  2021-10-06 Removes support for RHEL/CentOS 6. Improves handling during restores for MongoDB processes with very\nlong start-up times. Released  2021-09-15 Improves support for the recently released MongoDB 5.0. Released  2021-08-25 Improves support for the recently released MongoDB 5.0. Released  2021-08-03 Improves support for the recently released MongoDB 5.0. Released  2021-07-07 Improves support for the upcoming release of MongoDB 5.0. Released  2021-06-23 Improves support for the upcoming release of MongoDB 5.0. Improves logging for RHEL, CentOS, and SUSE hosts that use\n systemd . Released  2021-06-02 Adds support for the upcoming release of MongoDB 5.0. Released  2021-05-11 Improves logging when removing a shard. Fixes problems rotating the  KMIP (Key Management Interoperability)  master key for MongoDB deployments\nrunning on Windows. Released  2021-04-21 Uses Go 1.15 to build the MongoDB Agent. Before upgrading to this version,\nensure that all  TLS (Transport Layer Security)  certificates used in your MongoDB deployment\ncontain a Subject Alternative Name. For more information, see\n Troubleshooting . Improves logging. Released   2021-03-30 Improves support for the upcoming MongoDB 5.0 release. Released   2021-03-09 Improves handling of  TLS (Transport Layer Security)  state transitions if a process\nunexpectedly crashes. Released  2021-02-17 Fixes a bug that ensures fixed ordering of index options for all nodes\nin a rolling index build. Released  2021-01-26 Improves memory management while taking snapshots of clusters running\nMongoDB 4.2+. Released  2021-01-06 Stops adding MongoDB binaries (such as  mongod ,  mongos , etc.)\nto the Linux path when installing from RPM and DEB packages. Released  2020-12-15 Improves resiliency during the snapshot phase for MongoDB 4.2+\nbackups. Ensures that  Cloud Manager  uses a healthy  mongos  when querying to determine\nthe current state of a sharded cluster. Released   2020-11-04 Ensures backup functions are shut down cleanly and promptly upon\nMongoDB Agent shutdown. Released  2020-10-14 Improves resiliency of incremental backup snapshots. Released  2020-09-23 Fixes an issue when configuring tags for a sharded cluster with\n FCV=4.4 . Ensures that ObjectIds are properly handled as the value\nfor the  _id  field. Fixes an issue where, in rare cases, an error during a backup initial\nsync could lead to a MongoDB Agent crash. Released  2020-09-01 Improves logging: only log to  stdout/sterr  if no other log\nmechanism is available. Adds additional retries if certain error conditions are encountered when\ntaking a snapshot. Released   2020-08-12 Released  2020-07-21 Improves logging when a MongoDB process fails to start. Improves support for the upcoming release of MongoDB 4.4. Released   2020-06-24 Support for the upcoming release of MongoDB 4.4. Signature verification for all MongoDB binary downloads. Released   2020-04-21 Supports the upcoming release of MongoDB 4.4. Includes optimizations to reduce the number of simultaneous connections\nfrom the MongoDB Agent to  mongos . Released   2020-03-31 Support for upcoming MongoDB 4.4 release. Fixes an issue that caused monitoring module discovery to stall if\nthe first contact with an unauthenticated  mongod  resulted in an\nerror. Ensures that integer values for  setParameter  are always correctly\nformatted as integers. Ensures that the MongoDB Agent never interprets network errors as\nauthentication errors, leading to spurious attempts to rotate the\nkeyfile. Released  2020-03-10 If a cluster has unhealthy nodes prior to initiating a\nstorage-affecting rolling change, the MongoDB Agent ensures that a\nmajority of healthy nodes remain up at all times. Released  2020-02-18 Fixes log rotation issue. Ensures that an error rotating one category\nof log file does not interfere with rotations for another category of\nlog file. Improves logging. Released  2020-01-28 Upgrades to MongoDB Go Driver 1.1.4. Reduces memory allocations for buffers used for HTTPS communication\nwith cloud services, increasing the operational efficiency of the\n Real Time Performance Panel . Adds a timezone to MongoDB Agent\n log lines . Supports concurrent\n draining \nof multiple shards for MongoDB 4.2.1+. Allows automated restores to proceed if the target processes are\ncorrupt before the restore begins. Fixes indexing issue. During a rolling index build for an unsharded\ncollection on a sharded collection, only index the collection on the\nshard on which it already exists. Released  2020-01-07 Improves performance when applying changes to sharded clusters with\nmany shards. Significant memory management improvements for sharded clusters with\nvery large tag sets for\n zoned sharding . Fixes issue with automated restores. They can proceed successfully if\nthe target process is unresponsive before the restore begins. Released   2019-11-18 Removes support for MongoDB 3.2. MongoDB Agent is now built on Go 1.13. Removes the  shardIdentity  document during an automated restore if the\nreplica set member is not part of a sharded cluster. This ensures that a\nshard from the sharded cluster is restored as its own replica set. When connecting to MongoDB, recognizes \"connection reset by peer\" as MongoDB\npossibly not supporting TLS and connects appropriately. Restarts the restore operation if the oplog recovery phase fails. This\nimproves resilience for MongoDB 4.2 restores. Released  2019-10-23 Adds support for managing deployments using  externally sourced\nconfiguration file values . Prefers connecting to MongoDB as the specified user instead of the\nsystem user. Includes the inherited roles in the privileges check when importing\nMongoDB users. Released  2019-09-13 Fix encoding issue for keyfiles containing newlines. Released   2019-09-10 Support for  rolling keyfile changes  in MongoDB 4.2. Released  2019-08-05 Fixes issue with health check for integration with Kubernetes Operator. Released  2019-08-01 Further work to support upcoming release of MongoDB Server 4.2. Released  2019-06-11 Monitoring function converted to use the new MongoDB Go Driver. Released   2019-05-29 Monitoring module updated to MongoDB's new Go driver. Incremental work to support the upcoming MongoDB Server 4.2 release. Released  2019-05-13 Fix builds for deployments using GSSAPI authentication. Released   2019-05-13 Incorporate the Monitoring and Backup Agents into a single process,\nwhich will now be known as the MongoDB Agent.\n Learn more  about this\nchange.",
            "code": [],
            "preview": "Released 2023-11-15",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/security-enable-authentication",
            "title": "Enable Authentication for a Cloud Manager Project",
            "headings": [],
            "paragraphs": "",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "tutorial/nav/restore-overview",
            "title": "Restore Overview",
            "headings": [
                "Cancel a Restore",
                "Automated Restore",
                "Limitations",
                "Prerequisites",
                "Restore to Different Project",
                "Potential Causes for Automated Restore Failure",
                "Restore Procedures",
                "Manual Restore",
                "Prerequisites",
                "Restore File Format",
                "Manual Restore Procedures",
                "Restore Process Flows"
            ],
            "paragraphs": "To restore a deployment from a backup, select a snapshot or point in\ntime from which you want to restore your database.  Cloud Manager  provides you\nwith the files from which you can restore your database. You can restore a single MongoDB database, a  replica set , or all\nshards in a  sharded cluster . You can restore a deployment from an existing  snapshot  or a\nspecific point in time. For the point in time, you can specify a date and time,\nan oplog timestamp, or a  checkpoint  for\na  sharded cluster . If you are restoring from a point in time, you must download the\nMongoDB Backup Restore Utility to your target host. The  MBRU (MongoDB Backup Restore Utility)  requests\nand applies  oplog  entries between the latest complete snapshot\nand the point in time you choose. To restore your backup, use one of these options: Restore the files to another cluster using automation Manually copy restored files to the hosts you choose Restore from a queryable backup To cancel a restore: Navigate to the  Backup  >  Restore History \ntab. Click  Cancel . If you choose to have  Cloud Manager  automation restore your backup, the Automation\nremoves all existing data from the target hosts and replaces that data\nwith new backup data from your  snapshot . If you are restoring a sharded cluster, you must restore all shards. The\nrestore process fails if you try to restore a single shard in a sharded\ncluster. To perform automated restores: Install an MongoDB Agent installed on the source and all target hosts,\nand check that an MongoDB Agent on the target deployment can connect\nto all hosts in the target deployment. Configure  Backup Admin  and\n Automation Admin  roles in  Cloud Manager . For sharded clusters running FCV 4.0 or earlier,\n enable checkpoints . Check that the target cluster's  featureCompatibilityVersion  is greater\nthan or equal to the source cluster's  featureCompatibilityVersion . Run the following command to retrieve the\n featureCompatibilityVersion  of a given host: To learn more, see\n setFeatureCompatibilityVersion . Review the following compatibility matrix for the supported source cluster\n FCV (Feature Compatibility Version)  of each MongoDB version. The MongoDB version of each host in\nthe target cluster  must  support the  FCV (Feature Compatibility Version)  of the snapshot of the\nsource cluster. Source Cluster  FCV (Feature Compatibility Version) 3.4 3.6 4.0 4.2 4.4 5.0 6.0 You can choose to restore to a cluster of a different project: To restore to another  Cloud Manager  project, you must have\n Automation Admin  or\n Backup Admin  roles for the\ntarget project. To restore to another  MongoDB Atlas  project, you must have\n Project Owner  role for the target project. An automated restore can fail when certain storage settings of the\nbackup's database and target database do not match: No method exists to check for mismatches before attempting a restore.\nIf a restore attempt fails,  Cloud Manager  displays any mismatched settings. If\nyou still want to restore the backup's database, fix the settings in\nthe target database that do not match backup's database, then retry the\nrestore process for the backup's database. An automated restore fails when you attempt to restore a single shard\nin a sharded cluster. If you are restoring a sharded cluster, you must\nrestore all shards. storage.engine storage.directoryPerDB storage.mmapv1.nsSize storage.mmapv1.smallFiles storage.wiredTiger.collectionConfig.blockCompressor storage.wiredTiger.engineConfig.directoryForIndexes MongoDB removed support for the MMAPv1 storage engine in MongoDB 4.2.\nIf you\n edit your deployment's configuration \nto change your storage engine to  WiredTiger Storage Engine ,  Cloud Manager \nrestarts the MongoDB processes. To perform an automated restore, see the procedure for the deployment\nyou want to restore: Replica Set Sharded Cluster To perform manual restores, you must have the\n Backup Admin  role in  Cloud Manager . Cloud Manager  provides each  snapshot  as an uncompressed ( .tar )\narchive containing a complete copy of the data directory. For a  replica set ,  Cloud Manager  provides one  snapshot  that\nyou copy to each replica set member. For a sharded cluster,  Cloud Manager  provides one  snapshot  for the\n config servers  and one  snapshot  for\neach  shard . To perform a manual restore, see: Restore a Single Database or Collection using Queryable Backup Restore a Replica Set Restore a Sharded Cluster You can restore from a completed shapshot or from a specific point in time.\nUse the following pages to learn about the manual restore process flows.",
            "code": [
                {
                    "lang": "javascript",
                    "value": "db.adminCommand( {\n  getParameter: 1,\n  featureCompatibilityVersion: 1\n} )"
                }
            ],
            "preview": "To restore a deployment from a backup, select a snapshot or point in\ntime from which you want to restore your database. Cloud Manager provides you\nwith the files from which you can restore your database.",
            "tags": null,
            "facets": {
                "genre": [
                    "tutorial"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/application",
            "title": "Cloud Manager Server Changelog",
            "headings": [
                "2023 Releases",
                "15 November 2023 Release",
                "18 October 2023 Release",
                "04 October 2023 Release",
                "13 September 2023 Release",
                "23 August 2023 Release",
                "2 August 2023 Release",
                "12 July 2023 Release",
                "14 June 2023 Release",
                "25 May 2023 Release",
                "3 May 2023 Release",
                "12 April 2023 Release",
                "22 March 2023 Release",
                "01 March 2023 Release",
                "15 February 2023 Release",
                "25 January 2023 Release",
                "05 January 2023 Release",
                "2022 Releases",
                "14 December 2022 Release",
                "16 November 2022 Release",
                "27 October 2022 Release",
                "5 October 2022 Release",
                "14 September 2022 Release",
                "24 August 2022 Release",
                "04 August 2022 Release",
                "13 July 2022 Release",
                "22 June 2022 Release",
                "01 June 2022 Release",
                "11 May 2022 Release",
                "20 April 2022 Release",
                "31 March 2022 Release",
                "9 March 2022 Release",
                "16 February 2022 Release",
                "25 January 2022 Release",
                "5 January 2022 Release",
                "2021 Releases",
                "2 December 2021 Release",
                "17 November 2021 Release",
                "27 October 2021 Release",
                "06 October 2021 Release",
                "15 September 2021 Release",
                "25 August 2021 Release",
                "03 August 2021 Release",
                "13 July 2021 Release",
                "23 June 2021 Release",
                "11 May 2021 Release",
                "30 March 2021 Release",
                "09 March 2021 Release",
                "17 February 2021 Release",
                "2020 Releases",
                "23 November 2020 Release",
                "04 November 2020 Release",
                "12 August 2020 Release",
                "30 July 2020 Release",
                "24 June 2020 Release",
                "21 April 2020 Release",
                "31 March 2020 Release",
                "18 February 2020 Release",
                "04 February 2020 Release",
                "2019 Releases",
                "16 December 2019 Release",
                "18 November 2019 Release",
                "01 October 2019 Release",
                "10 September 2019 Release",
                "20 August 2019 Release",
                "30 July 2019 Release",
                "09 July 2019 Release",
                "11 June 2019 Release",
                "29 May 2019 Release",
                "13 May 2019 Release",
                "16 April 2019 Release",
                "26 March 2019 Release",
                "05 March 2019 Release",
                "13 February 2019 Release",
                "23 January 2019 Release",
                "03 January 2019 Release",
                "2018 Releases",
                "04 December 2018 Release",
                "13 November 2018 Release",
                "24 October 2018 Release",
                "04 October 2018 Release",
                "11 September 2018 Release"
            ],
            "paragraphs": "Updates the MongoDB Agent to  MongoDB Agent 13.8.1.8557-1 . Improves upgrading  mongosh  when multiple versions are present. Improves validations of invalid MongoDB database paths. Improves visibility into processes that may prevent the MongoDB Agent from\nreaching the desired goal state. Fixes PagerDuty notification validation in alerts. Updates the MongoDB Agent to  MongoDB Agent 13.7.0.8514 . Updates the MongoDB Agent to  13.6.0.8483-1 . Released MongoDB Shell 2.0.0. Adds support for  private endpoints  for sharded clusters for live migration (push)\nof a MongoDB 6.0.8+ sharded cluster monitored by  Cloud Manager  into a sharded\ncluster in  MongoDB Atlas . To learn more, see  Private endpoints for\nLive Migration \nin the  MongoDB Atlas  documentation. Adds support for  MongoDB Connector for BI  2.14.11. Updates the MongoDB Agent to  13.5.0.8451-1 . Improves error message when importing a replica set. Ensures that  mongos  always flushes its cache when you upgrade\nfrom MongoDB 5.0 to MongoDB 6.0. Ensures that the MongoDB Agent always shuts down on request, even when\nthe process is unresponsive. Updates the MongoDB Agent to  13.4.01.8413-1 . Adds support for  MongoDB Connector for BI  2.14.10. Compatible with  MongoDB Database Tools 100.8.0 . Updates the MongoDB Agent to  13.3.1.8376-1 . Compatible with  MongoDB Database Tools 100.7.4 . Adds support for  MongoDB Connector for BI  2.14.9. Improves validations for custom privileges when you edit a role in the UI. Fixes  CVE-2023-4009 : Privilege Escalation for  Project Owner \nand  Project User Admin  roles in  Ops Manager . In MongoDB  Ops Manager  5.0 prior to 5.0.22, an authenticated user with\n Project Owner  or  Project User Admin  access\nroles could generate an API key with the privileges of the\n Organization Owner  role, resulting in privilege escalation. CVSS Score: 7.2. CWE-648 : Incorrect Use of Privileged APIs. Updates the MongoDB Agent to  13.2.0.8337-1 . Improves the groom job logs. Fixes an issue with the  Modify  button for projects with multiple instances\nof  MongoDB Connector for BI . Compatible with  MongoDB Database Tools 100.7.3 . Adds cluster removal, shutdown, startup, and restart ability to the  managedSharding  API parameter. Updates the MongoDB Agent to  13.1.0.8282-1 . Adds support for  MongoDB Connector for BI  2.14.7. Updates Go to 1.19.9+ to address the following  CVE (Common Weakness Enumeration) s: CVE-2023-29400 CVE-2023-24539 CVE-2023-24540 Adds support for the  security.kmip.useLegacyProtocol  MongoDB\nconfiguration file option. Improves the API for incremental backup tracking of sharded clusters. Supports  MongoDB Connector for BI  2.14.6. Shows incremental snapshots in the UI. Adds the ability to access performance and snapshot metrics. You can now\n use Prometheus  to view metrics\ngraphs and query newly created collections. Updates MongoDB Agent to  12.17.0.8238-1 . Updates JDK to  jdk-11.0.19+7 . Updates  com.fasterxml.woodstox:woodstox-core  to 6.4.0 to address\n CVE-2022-40152 . Updates MongoDB Agent to  12.16.0.8175-1 . Defaults the  Backup Multiple Workers Per File  option to\n On . Adds the ability to regularly rotate the\n automation-agent-fatal.log  file.\n Reinstall the MongoDB Agent \nto enable automatic fatal log file rotation. Updates MongoDB Agent to  12.15.0.8092 . Updates MongoDB Agent to  12.14.0.8069 . Updates MongoDB Agent to  12.13.0.8043 . Supports using multiple workers for a single file during backups. Updates MongoDB Agent to  12.12.0.8018-1 . Improves alert configuration validation. Adds a port number to the hostnames in the backup metrics page. Fixes a bug with the parameter format for  logComponentVerbosity \nwhen using  setParameter . Releases version 1.6.2 of  mongosh  to  Cloud Manager . Updates MongoDB Agent to  12.11.2.7970-1 . Improves Live Migration Service validation error message when waiting for monitoring data. Reduces the impact when collecting and ingesting Automation Agent logs. Updates MongoDB Agent to  12.10.2.7935-1 . Redacts third-party integration credentials when you view or edit an alert through the UI or query it through the  API (Application Programming Interface) . These credentials are also now encrypted on disk. Fixes the snapshot size for snapshots with  filterList . Fixes the missing  Base URL  field during MongoDB Agent installations on Windows. Adds an alert option for when a snapshot is falling behind the scheduled time. Updates MongoDB Agent to  12.9.0.7902-1 . Adds support for  private endpoints  with  live migration of replica sets . Removes old  mongosh  versions automatically. Updates MongoDB Agent to  12.8.0.7876-1 . Deprecates Managed Sharded Collections functionality in the  UI\n(User Interface) . Note that  Manage Sharding  will be\nremoved from the  UI (User Interface)  in a future release. Updates MongoDB Agent to  12.7.0.7844-1 . Adds the ability to easily remove replica set member tags. Updates MongoDB Agent  12.6.0.7792 . Adds support for  Debian 11 . Updates MongoDB Agent to  12.5.0.7738-1 . Fixes an issue where the  Backup Jobs Project  page did not\ncorrectly display backup labels. Adds an alert configuration  id  to error messages to help identify\nthe location of a failing alert. Adds pre-migration TLS validation to the Push Live Migration\nService Fixes an issue where UI did not display the  defaultRWConcern \nfield correctly. Optimizes the automation status UI for large clusters. Adds the ability to filter statuses in the automation cluster view by\nprocess type. Adds pagination to the automation cluster view. Adds VPC peering validation to the Push Live Migration Service. Adds  PKCS#8  encrypted private key support. Updates MongoDB Agent to  12.4.0.7703 . Adds pagination to the automation status page. Reduces the number of alerts generated by jobs that are not being\nprocessed. Fixes an issue where snapshots actively being used in restore jobs\ncould be groomed. Updates MongoDB Agent to  12.3.0.7658-1 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Introduces the general availability of\n MongoDB 6.0 , which includes\nsupport for: New aggregation stages and operators $lookup  and  $graphLookup  with Sharded Collections Improvements to Change Streams New cluster administration options and more. Improves the ability to disable audit log rotation. Adds the ability to detect NaN values in the\n Data Explorer . Extends index shard key validation for managed sharding to include\ncompound indexes. Updates MongoDB Agent to  12.2.0.7631 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Adds the ability to create hidden rolling indexes with the\n Data Explorer . Adds the ability to enable and run the sharded cluster balancer\nthrough the  MongoDB Cloud Manager  UI using Automation. Compatible with  MongoDB Database Tools 100.5.3 . Updates MongoDB Agent to  12.1.0.7593 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Updates MongoDB Agent to  12.0.4.7554 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Updates PagerDuty integration to use the\n PagerDuty Events API v2 . Adds the  OPLOG_REPLICATION_LAG_TIME  host measurement series to\nthe  Measurements Administration API resource . Deprecates the  OPLOG_SLAVE_LAG_MASTER_TIME  metric. Updates MongoDB Agent to  12.0.0.7536 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Updates MongoDB Agent to  11.15.0.7497 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Updates MongoDB Agent to  11.14.0.7475 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Introduces a  metrics integration with Prometheus . Updates MongoDB Agent to  11.13.0.7438 . Due to critical issue  SERVER-68925 ,  Cloud Manager  deployments\nusing this version of the MongoDB Agent should not perform  automated rolling index builds  on clusters running the following MongoDB versions: You can continue to perform  manual rolling index builds  safely on your clusters.\nTo perform automated rolling index builds safely, upgrade the MongoDB Agent to  12.4.0.7703  or later or\nupgrade your clusters to: MongoDB 4.2.19-4.2.22 MongoDB 4.4.13-4.4.16 MongoDB 5.0.6-5.0.11 MongoDB 6.0.0-6.0.1 MongoDB 4.2.23 or later MongoDB 4.4.17 or later MongoDB 5.0.12 or later MongoDB 6.0.2 or later Updates MongoDB Agent to  11.12.0.7401 . Adds the ability to  set separate rules for server log rotation and audit log rotation . Adds new API endpoints for  federated authentication configuration . Adds a Microsoft Teams alerts integration. Removes workaround to use an X.509 CommonName instead of a  SAN (Subject Alternative Name) . Adds support for  tlsLogVersions  in  Advanced Configuration Options . Updates MongoDB Agent to  11.10.0.7307 . Removes support for macOS for the MongoDB Agent. Updates MongoDB Agent to  11.9.0.7253-1 . Improves speed and resiliency of snapshot restores when using\nMongoDB Agent version 11.7.0.7183-1 and later. Updates MongoDB Agent to  11.8.0.7223-1 . Updates MongoDB Agent to  11.7.0.7181-1 . Updates MongoDB Agent to  11.6.0.7119 . Adds support for time series collections in Data Explorer and Query\nProfiler including: Ability to create new time series collections and build secondary\nindexes from the UI. Ability to visualize slow queries in times series collections. Updates the deployment security settings user interface for improved\nusability. Updates MongoDB Agent to  11.5.0.7078-1 . Adds metrics that report maximum observed values for all hardware\nmetrics. Your  Cloud Manager  plan determines the  granularity  of these metrics. Adds the ability to specify  Sort ,  Project , and  Collation  query options when you  query your data  using  Data Explorer . Updates MongoDB Agent to  11.4.0.7057-1 . Fully removes personal  API (Application Programming Interface)  keys. Use  programmatic API keys \nto access the  API . Updates MongoDB Agent to  11.3.0.7029-1 . Introduces the general availability of\n MongoDB 5.0 , which includes\nsupport for: Time Series collections, Live Re-Sharding, the Versioned  API (Application Programming Interface) , Client Side Field Level Encryption via  AWS (Amazon Web Services)  KMS,\nGoogle Cloud KMS and Azure Key Vault, and more. Updates MongoDB Agent to  11.2.0.6985 . Updates MongoDB Agent to  11.1.0.6961 . Updates MongoDB Agent to  10.30.0.6882-1 . Introduces the ability to  trigger initial sync for a process \nin the  MongoDB Atlas  user interface. Updates MongoDB Agent to  10.28.0.6828-1 . Changes the  protocolVersion \nAPI parameter from an integer to a string. For example, previously,\nyou could specify   1  for this parameter. Now, you must specify\n \"1\"  for this parameter instead. Adds recommendations to  remove redundant indexes  in Performance Advisor. Updates MongoDB Agent to  10.27.0.6799 . Fixes a bug that ensures fixed ordering of index options for all nodes\nin a rolling index build. Updates MongoDB Agent to  10.26.0.6757 . Updates terminology for API Access List management. Introduces API\nAccess List for Programmatic API Keys and deprecates  API Whitelist . Introduces the ability to use Okta Verify mobile app for\n multi-factor authentication . Enhances  Performance Advisor and Query Profiler  with higher volume log ingestion. Improves UX for the  Real Time Performance Panel , including one-minute history views. Updates MongoDB Agent to  10.17.0.6529-1 . Introduces general availability of MongoDB 4.4. Supports WiredTiger checkpoint backups with encryption at rest in\nMongoDB 4.2 and later. Updates MongoDB Agent to  10.15.0.6463 . Redesigns the MongoDB Cloud navigation. Introduces schema suggestions in  Monitor and Improve Slow Queries  and\n Interact with Your Data  for  MongoDB Cloud Manager  Premium. Updates MongoDB Agent to  10.14.0.6306-1 . Supports queryable backups for MongoDB 4.2. Updates MongoDB Agent to  10.13.0.6247 . Supports \"Click-to-Create\" Index Suggestions in Performance Advisor. Updates MongoDB Agent to  10.11.0.6161 . Supports using Google authentication for MongoDB Cloud user login. Introduces  account.mongodb.com : a unified login\nexperience for MongoDB Cloud, Support, JIRA, and Feedback. Introduces\n Identity Federation with SAML . Enables API management for third party service integrations. Removes Automation for MongoDB 3.2 clusters. Introduces the  humanReadable  field to webhook alert notifications. This\nfield contains a human-readable description of the alert. Enhancements to index recommendations in  Performance\nAdvisor . Agent Upgrade:\n MongoDB Agent 10.7.0.6016 Enhances Integrations interface for third party services. Introduces EU destination for Opsgenie integration. MongoDB Cloud billing authenticates credit cards for customers in the\nEuropean Economic Area in compliance with the second Payment Services\nDirective (PSD2). To learn more about Strong Customer Authentication, see  Strong Customer Authentication . Agent Upgrade:\n MongoDB Agent 10.4.0.5913 Supports MongoDB 4.2. Disables the ability to create new Personal  API (Application Programming Interface)  Keys. These keys are\ndeprecated. Use\n Programmatic API Keys  to\naccess the  Cloud Manager   API (Application Programming Interface) . Unifies the login experience: accounts for MongoDB Cloud, Support, and\nJIRA use the same credentials. Released  MongoDB Connector for BI  2.11.0. Added Aggregation Pipeline Builder to the\n Data Explorer . Support to search for organization or project names\nthat are one character long. Agent Upgrade:\n MongoDB Agent 10.1.0.5785 The Monitoring and Backup Agent have been merged into the Automation\nAgent, which will now be known as the MongoDB Agent.\n Learn more  about this\nchange. Enhanced left-hand navigations. Agent Upgrade:  MongoDB Agent 10.0.0.5753 Supports  BI Connector  2.10. Agent Upgrades:\n Backup Agent 7.8.0.1107 Agent Upgrades:\n Monitoring Agent 7.2.0.488-1 Adds support for managing MongoDB deployments on IBM zSeries for the\nUbuntu 18.04, SUSE12, and RHEL7 operating systems. Numerous improvements to Automation Agent logging and UI feedback to\nusers. Agent Upgrades:\n Automation Agent 6.4.0.5657 ,\n Backup Agent 7.6.0.1059 ,\n Monitoring Agent 7.1.0.487 Agent Upgrades:\n Automation Agent 6.3.0.5643 ,\n Backup Agent 7.5.0.1051 ,\n Monitoring Agent 7.0.0.481 Improved Deployment: List view. Now shows automation status, easy\nindividual process log collection, topological deployment grouping,\nand BI Connectors. Adds support for IPv6 deployments. Allows creation of API Keys that are scoped to an organization and are\nnot tied to a human. Credit cards will be authorized for a small amount ($1.00) to reduce\nthe risk of failed charges. Users can now remove themselves from a project. Agent Upgrades:\n Automation Agent 6.2.0.5620-1 ,\n Backup Agent 7.4.0.1036-1 ,\n Monitoring Agent 6.9.0.477-1 Deprecated Monitoring \"Display Name\" has been removed from the user\ninterface and  API (Application Programming Interface) . Agent Upgrades:\n Automation Agent 6.1.0.5603 ,\n Backup Agent 7.2.0.1023 ,\n Monitoring Agent 6.8.0.472 Agent Upgrades:  Automation Agent 6.0.0.5591 ,  Backup Agent 7.2.0.1018 Agent Upgrades:  Automation Agent 5.9.1.5566-1 Can now manage deployments with FIPS mode enabled. Can now  create rolling indexes \nvia Data Explorer. Agent Upgrades:  Automation Agent 5.9.0.5561-1 Removed support for automation for MongoDB 2.6 and 3.0 clusters. Agent Upgrades:  Automation Agent 5.8.0.5546 ,\n Backup Agent 7.1.0.1011 ,  Monitoring Agent 6.7.0.466 Ubuntu 18.04 support for Automation, Backup, Monitoring Agents. Public API:  Ability to perform point in time automated restores. Send project alert notifications to organization members by role. Agent Upgrades:  Automation Agent 5.7.0.5532",
            "code": [],
            "preview": "Disables the ability to create new Personal API (Application Programming Interface) Keys. These keys are\ndeprecated. Use\nProgrammatic API Keys to\naccess the Cloud Manager API (Application Programming Interface).",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/backup-agent",
            "title": "Backup Agent Changelog",
            "headings": [
                "Backup Agent 7.8.1.1109",
                "Backup Agent 7.8.0.1107",
                "Backup Agent 7.6.0.1059",
                "Backup Agent 7.5.0.1051",
                "Backup Agent 7.4.0.1036-1",
                "Backup Agent 7.2.0.1023",
                "Backup Agent 7.2.0.1018",
                "Backup Agent 7.1.0.1011",
                "Backup Agent 7.0.0.1008-1",
                "Backup Agent 6.9.0.1004-1",
                "Backup Agent 6.8.1.996",
                "Backup Agent 6.8.0.993",
                "Backup Agent 6.7.0.985",
                "Backup Agent 6.6.1.965",
                "Backup Agent 6.6.0.959",
                "Backup Agent 6.5.0.756",
                "Backup Agent 6.4.0.734",
                "Backup Agent 6.3.0.728",
                "Backup Agent 6.2.0.714",
                "Backup Agent 6.1.1.693",
                "Backup Agent 6.1.0.688",
                "Backup Agent 6.0.0.680",
                "Backup Agent 6.0.0.676",
                "Backup Agent 5.9.0.662",
                "Backup Agent 5.8.0.655",
                "Backup Agent 5.7.0.637",
                "Backup Agent 5.6.0.61",
                "Backup Agent 5.5.0.512",
                "Backup Agent 5.4.0.493",
                "Backup Agent 5.3.0.484",
                "Backup Agent 5.2.0.473",
                "Backup Agent 5.1.0.467",
                "Backup Agent 5.0.3.465",
                "Backup Agent 5.0.1.453",
                "Backup Agent 4.6.0.425",
                "Backup Agent 4.5.0.412",
                "Backup Agent 4.4.0.396",
                "Backup Agent 4.3.0.384",
                "Backup Agent 4.2.0.373",
                "Backup Agent 4.1.0.347",
                "Backup Agent 4.0.0.343",
                "Backup Agent 3.9.0.336",
                "Backup Agent 3.8.1.320",
                "Backup Agent 3.8.0.315",
                "Backup Agent 3.7.0.300",
                "Backup Agent 3.6.0.292",
                "Backup Agent 3.5.0.286-1",
                "Backup Agent 3.4.0.273",
                "Backup Agent 3.3.0.261",
                "Backup Agent 3.2.0.262",
                "Backup Agent 3.1.0.250",
                "Backup Agent 3.0.0.246",
                "Backup Agent 2.9.1.235-1",
                "Backup Agent 2.9.0.223",
                "Backup Agent 2.8.0.204",
                "Backup Agent 2.7.1.206",
                "Backup Agent 2.7.0.193",
                "Backup Agent 2.6.0.176",
                "Backup Agent 2.5.0",
                "Backup Agent 2.4.0.156",
                "Backup Agent 2.3.0.149",
                "Backup Agent 2.2.2.125",
                "Backup Agent 2.2.1.122",
                "Backup Agent 2.1.0.106-1",
                "Backup Agent 2.0.0.90-1",
                "Backup Agent 1.6.1.87-1",
                "Backup Agent 1.6.0.55-1",
                "Backup Agent 1.4.6.43-1",
                "Backup Agent 1.4.4.34-1",
                "Backup Agent 1.4.3.28-1",
                "Backup Agent 1.4.2.23-1",
                "Backup Agent 1.4.0.17",
                "Backup Agent v20131216.1",
                "Backup Agent v20131118.0",
                "Backup Agent v20130923.0",
                "Backup Agent v20130826.0",
                "Backup Agent v20130812.1"
            ],
            "paragraphs": "The Backup and Monitoring Agent have been merged into the\nAutomation Agent, which will now be known as the MongoDB Agent.\n Learn more  about this\nchange. Released  2019-05-02 Fix:  Log optimizations when applying oplogs during a point in time\nrestore. Released   2019-04-16 Convert to new MongoDB Go Driver Released   2019-03-05 Work to support the upcoming MongoDB 4.2 release. Released   2019-02-13 Increased timeouts when applying oplogs during a point in time\nrestore. Prevent failures during long-running index builds during a point in\ntime restore. Released   2019-01-23 Add support for  sslTrustedServerCertificates ,\n sslClientCertificate , and\n sslRequireValidServerCertificates  to the Point in Time\nRestore Utility. Released   2019-01-03 Built on Go 1.10. Released 2018-12-05 Built on Go 1.9. Released 2018-10-04 Improved handling of expiration of the queryable backup tunnel\nutility. Released 2018-08-01 Fix file extension when downloading a Backup Agent in Microsoft Edge\nand Firefox. Ensure that the UUID of the  system.views  collection is preserved\nduring a Backup initial sync. Released 2018-07-16 Maintain UUID for  system.views  collection by copying it on\ninitial sync. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Make responseHeaderTimeout configurable. Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Support for persistent HTTPS connections (default to off). Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 Logging enhancements. Released 2018-03-06 Fix:  Backup Agent should produce an error message and not crash\nwhen erroneous authentication credentials are provided for a source\ncluster. Released 2018-02-13 During a PIT restore, suppress errors when dropping non-existent\nnamespaces. During a PIT restore, always apply oplogs with upsert=true. Released 2018-01-23 Fix:  Send compound index keys as ordered BSON. Fix:  Send less detailed data in the initial summary payload at the\nstart of an initial sync. Collect more detailed data for each\ncollection individually. Released 2018-01-08 Fix:  Relax validation when  krb5ConfigLocation  parameter is\nspecified. This no longer implies that  krb5Principal  and\n krb5Keytab  are required. Fix:   Use correct format for point in time restore oplog seed\nwhen no oplog are available. Released 2017-11-19 Fix:  Upgrades of the Backup Agent performed by the Automation Agent\nwere missing a parameter on Windows. Released 2017-11-14 Support for upcoming release of MongoDB 3.6. Released 2017-10-26 Support for upcoming release of MongoDB 3.6. Released 2017-10-25 Support for upcoming release of MongoDB 3.6. Released 2017-09-13 Use BSON.d for missing docs. Released 2017-08-25 Allow oplogs for a point in time restore to be applied client-side. Released 2017-08-01 Support for optimized point in time restores. Released 2017-07-11 During initial sync, add verification that shard name matches\nthe expected shard name. Released 2017-06-15 Use HTTP basic auth to authenticate HTTPS requests between the\nBackup Agent and cloud.mongodb.com. Performance enhancement: Use  bson.Raw  for initial sync. Released 2017-04-19 Reduce memory used during initial sync. Ensure messages printed to  STDOUT  and  STDERR  is also\nincluded in the Backup Agent log file. Released 2017-03-29 Optimization for collection of data in the initial sync phase.\n(Recompiled with the MGO-128 fix.) Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Fix:  Can send logs to Cloud Manager for Backup Agents running on\nWindows. Released 2016-12-13 Handle capped collections that are capped using a floating point size. Released 2016-11-21 Support for MongoDB 3.4 Views. Support for MongoDB 3.4 featureCompatiblityVersion. Released 2016-11-07 Allow managed Backup Agents to be run as a service on Windows. Released 2016-09-14 Update of underlying Go driver. Partial support for upcoming major release of MongoDB 3.4.0. Partial support for Kerberos on Windows. Released 2016-08-24 Support for Power Linux. Released 2016-07-12 Agent support for restarting incremental initial syncs. Released 2016-05-16 Updated to use Go 1.6. Released 2016-04-20 Added support for log rotation. Added a sticky header to log files. Released 2016-02-18 Use systemD management on RHEL7 and Ubuntu 16.04. Set  ulimits  in the packaged builds. Released 2016-01-07 Added the ability to customize the Kerberos configuration file\nlocation. Added support to tune the number of concurrent initial syncs. Added support to adjust the size of the  oplog  and sync slice\nchannels according to the size of the documents: this can lower memory\nconsumption. Released 2015-11-02 Support for streaming initial syncs. Support for MongoDB 3.2 clusters with config server replica sets. Released 2015-10-14 Upgraded to Go 1.5.1. Released 2015-09-16 Built with Go 1.5.0. Fix:  Ignore collections deleted during an initial sync. Released 2015-08-10 Added fix to not trim spaces from collection names. Upgraded to new version of snappy compression library. Released 2015-07-15 Backup .. _bgent-5.0.286-1: Added minor optimization to explicitly set the  Content-Type  on\nHTTP requests. Released 2015-06-24 Updated documentation and setting URLs to cloud.mongodb.com. Added support for backing up selected namespaces. This functionality\nis not yet exposed in the  Cloud Manager  user interface. Released 2015-04-22 Added an explicit timeout for SSL connections to  mongod \ninstances. Added an optimization for syncs of collections with lots of small\ndocuments. The Kerberos credentials cache now uses a fixed name. Released 2015-03-10 Logging improvements. Released 2015-02-23 Ability to monitor and back up deployments without managing them\nthrough Automation. Specifically, you can  import an existing\ndeployment into Monitoring \nand then use  Cloud Manager  to back up the deployment. Support for x.509 certificate authentication. Fix:  A race condition which could result in inconsistent\nclustershots for MongoDB 3.0+ sharded clusters using the\n backup  role no longer occurs. Released 2015-01-08 Logging improvements for Windows. Released 2015-01-08 Enhancements to support backup of MongoDB 3.0. Released 2014-12-17 Agent now encodes all collection meta-data. Avoids edge-case issues\nwith unexpected characters in collection settings. Released 2014-12-04 Can now explicitly pass collections options for the WiredTiger storage\nengine from the backed up  mongod  to  Cloud Manager . Released 2014-11-12 The Backup Agent will now identify itself to the  Cloud Manager  servers using the\nfully qualified domain name (FQDN) of the server on which it is running. Released 2014-11-06 Use no-timeout cursors to work around  MGO-53 . Released 2014-10-29 When tailing the oplog, the agent no longer pre-fetches the next batch\nof oplog entries before exhausting the current batch. Adds support for non-default Kerberos service names. Adds support for RHEL7. Released 2014-09-30 Minor logging change, clarifying when stopping the balancer if there\nis no balancer settings document. Released 2014-09-10 Added support for authentication using MongoDB 2.4 style client\ncertificates. Released 2014-08-19 The Backup Agent will now capture a checkpoint even if it is unable to\nstop the balancer. These checkpoints are  not  guaranteed to be\nconsistent, because of in-progress chunk migrations.  The user\ninterface identifies these checkpoints. Released 2014-07-29 Upgraded agent to use to Go 1.3. Added support for  version  and  -version. Added support for connecting to hosts using LDAP authentication. Agent now provides additional logging information when the Backup\nAgent manipulates the balancer. Agent now supports configuring HTTP with the config file. Released 2014-07-09 Fixes issue with agent on Windows using the  MONGODB-CR \nauthentication mechanism. Released 2014-07-08 Fixes issues with connecting to replica set members that use auth\nwith an updated Go client library. Agent is now able to send a stack trace of its current state to\n Cloud Manager . Fixes regression in the Agent's rollback handling. Released 2014-06-17 Support for a new API t hat allows  Cloud Manager  to ingest oplog entries before\nthe entire payload has reached the  Cloud Manager  servers. Released 2014-05-28 Agent supports deployment architectures with multiple active\n(i.e. primary) Backup Agents. Improved stability around oplog tokens for environments with\nunstable networks. Released 2014-05-19 Critical update for users running the MongoDB 2.6 series that use\nauthorization. The Backup Agent now includes  system.version  and\n system.role  collections from the  admin  database in the\ninitial sync. Released 2014-05-09 The agent now sends oplog slices to  Cloud Manager  in batches to increase\nthroughout and stability. Major stability update. Prevent a file descriptor leak. Correct handling of timeouts for connections hung in the  TLS (Transport Layer Security) / SSL (Secure Sockets Layer) \nhandshaking phase. Support for using the Backup Agent via an HTTP proxy Allow upgrading the agent using the Windows MSI installer. Improved logging. Fix an open files leak on bad HTTP responses. Added support for Windows MSI installer. For sharded clusters, less aggressive polling to determine if\nbalancer has been stopped. Fail fast on connections to mongods that are not responding. Added support for sharded cluster checkpoints that add additional\npoints-in-time, in between scheduled snapshots, that  Cloud Manager  can use to\ncreate restores. Configure checkpoints using the  Edit Snapshot\nSchedule  link and interface. This version marks a change in the numbering scheme of Backup Agents\nto support improved packaging options for the Backup Agent. Added support for connecting to MongoDB instances running  TLS (Transport Layer Security) . The agent will try to use additional  mongos  instances to take a\ncluster snapshot if the first  mongos  is unavailable. Significantly reduced the amount of time needed by the agent to\ndetect situations that require a resync. Allow automatic resync operations for config servers in sharded\nclusters. The agent can now resync automatically from these\nservers. When the agent sends the initial meta-data about the data to back up\n(e.g. the list of databases, collections,and indexes,) to the  Cloud Manager \nAPI, the agent will not include any databases or collections in the\n\"excluded namespace\" configuration. Adds support for managing excluded namespaces: Backup Agent no\nlonger sends data for excluded collections or databases. Major stability update If the communication between the Backup Agent and the  Cloud Manager  API\nis interrupted, the Backup Agent can more reliably recover the\ncurrent state. This results in fewer \"resync required\" errors.",
            "code": [],
            "preview": "Released 2019-05-02",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/monitoring-agent",
            "title": "Monitoring Agent Changelog",
            "headings": [
                "Monitoring Agent 7.2.0.488-1",
                "Monitoring Agent 7.1.0.487",
                "Monitoring Agent 7.0.0.481",
                "Monitoring Agent 6.9.0.477-1",
                "Monitoring Agent 6.8.0.472",
                "Monitoring Agent 6.7.0.466",
                "Monitoring Agent 6.6.1.462",
                "Monitoring Agent 6.6.0.460",
                "Monitoring Agent 6.5.0.456",
                "Monitoring Agent 6.4.1.439",
                "Monitoring Agent 6.4.0.433",
                "Monitoring Agent 6.3.0.401",
                "Monitoring Agent 6.2.0.397",
                "Monitoring Agent 6.1.0.387",
                "Monitoring Agent 6.0.0.381",
                "Monitoring Agent 5.7.0.368",
                "Monitoring Agent 5.6.0.364",
                "Monitoring Agent 5.5.0.358",
                "Monitoring Agent 5.4.2.354",
                "Monitoring Agent 5.4.1.350",
                "Monitoring Agent 5.3.0.341",
                "Monitoring Agent 5.2.0.331",
                "Monitoring Agent 5.1.0.323",
                "Monitoring Agent 5.0.0.309",
                "Monitoring Agent 4.3.0.265",
                "Monitoring Agent 4.2.0.263",
                "Monitoring Agent 4.1.0.251",
                "Monitoring Agent 4.0.0.242",
                "Monitoring Agent 3.9.1.238",
                "Monitoring Agent 3.9.0.233",
                "Monitoring Agent 3.8.0.222-1",
                "Monitoring Agent 3.7.0.212",
                "Monitoring Agent 3.6.0.201",
                "Monitoring Agent 3.5.0.197",
                "Monitoring Agent 3.4.0.190",
                "Monitoring Agent 3.3.0.183",
                "Monitoring Agent 3.2.0.177",
                "Monitoring Agent 3.1.0.173",
                "Monitoring Agent 3.0.0.167",
                "Monitoring Agent 2.9.0.164",
                "Monitoring Agent 2.8.0.143",
                "Monitoring Agent 2.7.0.136",
                "Monitoring Agent 2.6.0.123",
                "Monitoring Agent 2.5.0",
                "Monitoring Agent 2.4.1.108",
                "Monitoring Agent 2.4.0.101",
                "Monitoring Agent 2.3.1.89-1",
                "Monitoring Agent 2.2.0.70-1",
                "Monitoring Agent 2.1.4.51-1",
                "Monitoring Agent 2.1.2.43-1",
                "Monitoring Agent 2.1.0",
                "Monitoring Agent 2.0.1",
                "Monitoring Agent 2.0.0",
                "Monitoring Agent 1.6.8",
                "Monitoring Agent 1.6.7",
                "Monitoring Agent 1.6.6",
                "Monitoring Agent 1.6.5",
                "Monitoring Agent 1.6.4",
                "Monitoring Agent 1.6.3",
                "Monitoring Agent 1.6.2",
                "Monitoring Agent 1.6.1",
                "Monitoring Agent 1.6.0",
                "Monitoring Agent 1.5.9",
                "Monitoring Agent 1.5.8",
                "Monitoring Agent 1.5.7",
                "Monitoring Agent 1.5.6"
            ],
            "paragraphs": "The Monitoring and Backup Agent have been merged into the\nAutomation Agent, which will now be known as the MongoDB Agent.\n Learn more  about this\nchange. Released   2019-03-26 Made minor stabilization improvements. Released   2019-03-05 Support for IBM zSeries for the Ubuntu 18.04, SUSE12, and RHEL7\noperating systems. Released   2019-02-13 Built using Go 1.10. Released   2019-01-23 Preliminary work to support future consolidation of agents into a\nsingle agent. Released   2019-01-03 Support for monitoring MongoDB instances deployed in\n IPv6  environments. Released 2018-10-04 Monitoring agent now collections information about balancer state. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Incremental work to support MongoDB 4.0. Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 Logging enhancements. Released 2018-01-08 Fix:  Relax validation when  krb5ConfigLocation  parameter is\nspecified. This no longer implies that  krb5Principal  and\n krb5Keytab  are required. Released 2017-12-07 Performance improvement: Make all uses of  listDatabases  use\n nameOnly  flag. Released 2017-10-26 Rename \"Group\" to \"Project\" on the Windows installer. Released 2017-06-15 Use HTTP basic auth to authenticate HTTPS requests between the\nMonitoring Agent and cloud.mongodb.com Released 2017-04-19 Do not print an error message when monitoring a newly created sharded\ncluster for which the config.settings document does not yet exist. Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Released 2016-12-13 Ensure that replica set members in STARTUP2 can be monitored\nsuccessfully. Released 2016-11-21 Fix:  Prevent slow collection of database-specific stats from\naffecting main metrics collection loop. Released 2016-11-07 Allow managed Monitoring Agents to be run as a service on Windows. Released 2016-09-14 Update of underlying Go driver. Partial support for upcoming major release of MongoDB 3.4.0. Partial support for Kerberos on Windows. Released 2016-08-24 Support for Power Linux. Released 2016-07-12 Support for automatically backing off of monitoring interval for\nauto-scaled mongos deployments. Released 2016-06-22 Support for high resolution monitoring for Cloud Manager Premium Plans. Support for multiple active monitoring agents. Explicit monitoring of arbiters. Released 2016-05-16 Retrieve information on mongos in a cluster by querying the config\nservers. Released 2016-04-20 Added support for log rotation. Added a sticky header to log files. Released 2016-02-18 Use systemD management on RHEL7 and Ubuntu 16.04. Set  ulimits  in the packaged builds. Released 2016-01-07 Added the ability to customize the Kerberos configuration file\nlocation. Released 2015-10-14 Upgraded build to Go 1.5.1. Released 2015-10-08 Support for MongoDB 3.2.0 config servers as replica sets Released 2015-09-16 Built with Go 1.5.0. Released 2015-08-10 Updated retrieval logic for oplog information to retrieve from either\n serverStatus  or the  oplog  collection as determined by the\nroles of Monitoring Agent user to avoid authentication errors related\nto oplog information retrieval in MongoDB logs. Released 2015-07-15 Added optimization to ensure that profile data collection is\nnot impacted by clock skew. Stopped collecting data-base specific  recordStats  information. Released 2015-06-24 Updated documentation and setting URLs to cloud.mongodb.com Released 2015-06-03 Adds an optimization to ensure the Monitoring Agent's database stats\ncollection tasks do not synchronize. Released 2015-04-22 Added an explicit timeout for  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  connections to\n mongod  instances. The Kerberos credentials cache now uses a fixed name. Released 2015-03-31 Upgraded the version of the MongoDB Go driver (mgo), which fixes a rare\ndeadlock while monitoring  mongos  processes. Released 2015-02-23 Ability to monitor and back up deployments without managing them\nthrough Automation. Specifically, you can import an existing\ndeployment into Monitoring, which allows you to use  Cloud Manager  to\nmonitor and optionally back up the deployment. See\n Add Existing MongoDB Processes to  Cloud Manager . Support for x.509 certificate authentication. Improved support for collecting database statistics from\nsecondaries as well as primaries. The  Deployment  tab now displays all deployment information,\nfor both servers and processes, on one page, with icons for selecting\nview options. Released 2015-01-28 Stagger the timing of DNS look-ups, to avoid triggering a rare issue\nin glibc 2.19 on Ubuntu 14.04. Released 2015-01-08 Improved error handling on Windows. Released 2014-11-12 The Monitoring Agent now identifies itself to the  Cloud Manager  servers using\nthe fully qualified domain name (FQDN) of the server on which it is\nrunning. Improved connection management for monitored MongoDB processes. Released 2014-10-29 Improve correctness of database statics collection by moving data\ncollection into separate internal thread. Adds support for non-default Kerberos service names. Adds support for RHEL7. Released 2014-09-30 Now uses the  listDatabases  to retrieve a list of databases. Released 2014-09-10 Added support for authentication using MongoDB 2.4 style client\ncertificates. Released 2014-08-25 The default value for  sslTrustedServerCertificates  is now\n true .  Users upgrading from 2.4.0 and using  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  will\nneed to set the value of  sslTrustedServerCertificates  in\ntheir configuration file. See  sslTrustedServerCertificates . Released 2014-07-29 Upgraded agent to use Go 1.3. Updated  mgo  driver, which includes fix for  MGO-34 . All\nDNS lookups should now timeout appropriately. Added support for connecting to hosts using LDAP authentication. Added support for  version  and  -version . Agent now displays git commit hash of Monitoring Agent in the log\nfile. Updates to the configuration file format. Released 2014-07-08 Fixes issues with connecting to replica set members that use auth\nwith an updated Go client library. Added support for HTTP proxy configuration in the agent\nconfiguration file. Agent includes support for an Offline data collection mode. Released 2014-05-28 Improved logging for MongoDB 2.6 config servers when connecting with a\nuser that has the built-in  clusterMonitor  role. Released 2014-05-09 Reduce log spam when a  mongod  connection attempt fails, or\nthe when connecting to a 2.0  mongod . Prevent high CPU use when monitoring unreachable  mongod . Released 2014-04-15 Reduction in unnecessary log messages for unsupported operations on\nmonitored MongoDB 2.2 instances. Released 2014-03-26 Added Kerberos support for the new 2.x Monitoring Agent. Windows click to install MSI agent installer. Fixed duplicated profiling data error. Released 2014-03-18 Enhanced ability to stay connected when network connections become\nunstable due to firewalls and other factors. Included HTTP network proxy support for new 2.x Monitoring Agent with\nsame environment variable mechanism available to the Python version of\nthe Monitoring Agent. Released 2014-03-11 A new 2.x Monitoring Agent with no Python dependencies for deployments\nnot using Kerberos authentication or connecting to the internet via\nproxy. Released 2014-01-06 Added a periodic diagnostic log message to the Agent that includes\nactive host count. Removed deprecated agent auto-update. Released 2013-12-16 Added optional support for validating MongoDB  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  certificates\nand custom CA certificate paths. Improved robustness of host IP address detection. Released 2013-11-30 Added kerberos support for agents running on Python 2.4.x. Added logging when the  dbstats  command fails. Internal release only, not released . Released 2013-11-18 Added support for the agent to connect to MongoDB deployments that\nuse Kerberos. Allowed the Monitoring Agent to send data to the  Cloud Manager  server after\ndetecting changes, such as adding a new host. Internal Release Only - not published . Released 2013-11-05 Fixed bug that led to high CPU service with log collection\nand the agent's connection to a  mongod  instance failed. Released 2013-10-21 Added options in the agent's ' settings.py  to suppress database\nspecific statics at the agent level. Improved error messages in agent logs. Released 2013-10-07 For monitored instances on MongoDB 2.4.x series, fixed\na bug that reported monitored  mongod  instances as down\nduring foreground index builds. Released 2013-08-12 Agent now collects timestamps associated with hardware metrics, so\nthat  Cloud Manager  can display more accurate minute-level charts. Released 2013-07-15 Increased collection of data on shard names. Released 2013-04-23 Removed the  writeBacksQueued  queued call. Released 2013-03-20 Removed an error from the log if the agent is unable to collect\nprofiling stats.",
            "code": [],
            "preview": "Released 2019-03-26",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/automation-agent",
            "title": "Automation Agent Changelog",
            "headings": [
                "Automation Agent 10.2.1.5858",
                "Automation Agent 6.5.5.5702-1",
                "Automation Agent 6.5.4.5699-1",
                "Automation Agent 6.5.3.5696",
                "Automation Agent 6.5.2.5660",
                "Automation Agent 6.5.1.5691-1",
                "Automation Agent 6.5.0.5689-1",
                "Automation Agent 6.4.0.5657",
                "Automation Agent 6.3.0.5643",
                "Automation Agent 6.2.0.5620-1",
                "Automation Agent 6.1.0.5603",
                "Automation Agent 6.0.0.5591",
                "Automation Agent 5.9.1.5566-1",
                "Automation Agent 5.9.0.5561-1",
                "Automation Agent 5.8.1.5548",
                "Automation Agent 5.8.0.5546",
                "Automation Agent 5.7.0.5532",
                "Automation Agent 5.6.1.5525",
                "Automation Agent 5.6.0.5523",
                "Automation Agent 5.5.0.5499",
                "Automation Agent 5.4.8.5478-1",
                "Automation Agent 5.4.7.5469-1",
                "Automation Agent 5.4.5.5460",
                "Automation Agent 5.4.2.5440",
                "Automation Agent 5.4.0.5435",
                "Automation Agent 5.3.0.5394",
                "Automation Agent 5.2.1.5387",
                "Automation Agent 5.2.0.5382",
                "Automation Agent 5.1.1.5353",
                "Automation Agent 5.1.0.5350",
                "Automation Agent 5.0.3.2562",
                "Automation Agent 5.0.0.2526",
                "Automation Agent 5.0.0.2526",
                "Automation Agent 4.9.2.2525",
                "Automation Agent 4.9.1.2502",
                "Automation Agent 4.9.0.2490",
                "Automation Agent 4.8.2.2491",
                "Automation Agent 4.8.2.2459",
                "Automation Agent 4.8.1.2451",
                "Automation Agent 4.8.0.2438",
                "Automation Agent 4.7.0.2418",
                "Automation Agent 4.5.9.2395",
                "Automation Agent 4.5.8.2390",
                "Automation Agent 4.5.7.2375",
                "Automation Agent 4.5.4.2347",
                "Automation Agent 4.5.3.2339",
                "Automation Agent 4.5.1.2319",
                "Automation Agent 4.5.0.2305",
                "Automation Agent 4.4.2.2274",
                "Automation Agent 4.4.1.2267",
                "Automation Agent 4.4.0.2256",
                "Automation Agent 4.3.0.2225",
                "Automation Agent 4.2.0.2209",
                "Automation Agent 4.1.0.2188",
                "Automation Agent 4.0.0.2153",
                "Automation Agent 3.9.0.2131",
                "Automation Agent 3.8.0.2108",
                "Automation Agent 3.7.1.2094",
                "Automation Agent 3.7.0.2059",
                "Automation Agent 3.6.2.2060",
                "Automation Agent 3.6.1.2041",
                "Automation Agent 3.6.0.2024",
                "Automation Agent 3.5.0.2003",
                "Automation Agent 3.4.1.1996",
                "Automation Agent 3.4.0.1986",
                "Automation Agent 3.3.1.1976",
                "Automation Agent 3.3.0.1963",
                "Automation Agent 3.2.7.1927",
                "Automation Agent 3.2.6.1916",
                "Automation Agent 3.2.5.1907",
                "Automation Agent 3.2.4.1901",
                "Automation Agent 3.2.3.1894",
                "Automation Agent 3.2.2.1890",
                "Automation Agent 3.2.1.1884",
                "Automation Agent 3.1.2.1850",
                "Automation Agent 3.1.1.1845",
                "Automation Agent 3.1.0.1813",
                "Automation Agent 3.0.0.1798",
                "Automation Agent 2.9.0.1764",
                "Automation Agent 2.8.1.1725",
                "Automation Agent 2.8.0.1714",
                "Automation Agent 2.7.3.1679",
                "Automation Agent 2.7.2.1649",
                "Automation Agent 2.7.1.1631",
                "Automation Agent 2.7.0.1626",
                "Automation Agent 2.6.4.1612",
                "Automation Agent 2.6.3.1603",
                "Automation Agent 2.6.1.1564",
                "Automation Agent 2.6.0.1551",
                "Automation Agent 2.5.15.1526",
                "Automation Agent 2.5.14.1514",
                "Automation Agent 2.5.11.1484",
                "Automation Agent 2.5.9.1477",
                "Automation Agent 2.5.7.1471",
                "Automation Agent 2.5.6.1469",
                "Automation Agent 2.5.4.1444",
                "Automation Agent 2.5.2.1439",
                "Automation Agent 2.5.0.1430",
                "Automation Agent 2.4.1.1393",
                "Automation Agent 2.4.0.1384",
                "Automation Agent 2.3.0.1335",
                "Automation Agent 2.2.3.1337",
                "Automation Agent 2.2.1.1322",
                "Automation Agent 2.2.0.1307",
                "Automation Agent 2.1.0.1280",
                "Automation Agent 2.0.12.1238",
                "Automation Agent 2.0.11.1231",
                "Automation Agent 2.0.9.1201",
                "Automation Agent 2.0.8.1184",
                "Automation Agent 2.0.7.1158",
                "Automation Agent 2.0.6.1148",
                "Automation Agent 2.0.4.1140",
                "Automation Agent 2.0.2.1138",
                "Automation Agent 2.0.2.1136",
                "Automation Agent 2.0.0.1120",
                "Automation Agent 1.9.3.1109",
                "Automation Agent 1.9.1.1100",
                "Automation Agent 1.9.1.1093",
                "Automation Agent 1.9.0.1073",
                "Automation Agent 1.8.1.1042",
                "Automation Agent 1.8.0.1034",
                "Automation Agent 1.7.1.1023",
                "Automation Agent 1.7.0.992",
                "Automation Agent 1.6.2.960",
                "Automation Agent 1.3.0.718",
                "Automation Agent 0.4.0"
            ],
            "paragraphs": "The Monitoring and Backup Agent have been merged into the\nAutomation Agent, which will now be known as the MongoDB Agent.\n Learn more  about this\nchange. Released  2019-07-23 Further work to support the upcoming release of MongoDB 4.2 Released  2019-05-02 Fix:  Properly handle nested directories when downloading tar\nfiles. Released  2019-04-24 Update to Go driver 1.0.1. Released  2019-04-21 Additional work for MongoDB connection management. Released  2019-04-12 Stabilization work for MongoDB connection management. Released  2019-04-09 Fix:  Use the estimated count instead of the full document count\nwhen counting documents in the oplog. This fixes a severe performance\nregression. Released  2019-04-08 Converted to use the new MongoDB Go driver. Released   2019-03-05 Various improvements to logging. Released   2019-02-13 No longer runs the metrics collection during restores, resulting\nin cleaner log files. Improved error handling during restores for better resumability. Released   2019-01-23 Fix rotation of log files when MongoDB log rotation is enabled and\nthe maximum number of uncompressed log files is set to two. Released   2019-01-03 Built with Go 1.10. Significant reduction in memory footprint when managing\nsharded clusters. Fix:  Allow successful conversion of MongoDB storageEngine for\na standalone with  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  enabled. Released 2018-12-05 Increase timeout for log collection jobs Released 2018-11-13 Improved handling of state gathering in the first moments of MongoDB\nstart-up. Released 2018-10-24 Optimized ordering for sharded zone management. Optimized state gathering in clusters with high latency between\nmembers. Released 2018-10-09 Fix:  Restores for MongoDB 4.0 fail if snapshot download for all\nnodes does not finish at approximately same time Released 2018-10-04 Improved performance for state changes in large clusters with high\nlatency between cluster members Removed support for MongoDB 2.6 and 3.0. Released 2018-09-11 Added support for Ubuntu 18.04 Fix:  When determining desired balancer settings, perform a merge\nbetween new settings and old settings. Released 2018-08-30 Fix issue performing point in time restores for MongoDB 4.0 Released 2018-08-21 Critical Fix: During a rolling change of a storage-affecting field\n(for example the storage engine), data loss could occur if an\nexternal process caused replica set nodes to restart unexpectedly. Automation Agent now built using Go 1.9. Support for Ubuntu 18. Allow simultaneous disabling of multiple config servers. Don't remove binaries that are currently in use by unmanaged\nprocesses. Performance improvement for clusters with lots of sharding tags. Only block rolling updates if there are not enough replica set\nmembers without replication lag to do majority writes. Handle rolling index build on non-existent collections. Released 2018-08-01 Performance improvements. Improve determination of when a mongod process is running. Fix issue in which a replica set configuration change fails to\ncomplete if the primary is removed from the replica set. Enforce a pause between nodes when doing a rolling oplog size. Prevent issues completing an oplog resize if the mongod is very slow\nto start-up. Released 2018-07-16 Allow recreation of previously deleted sharded collections. Support additional configuration options for the  MongoDB Connector for BI . If, when downloading a file, no bytes have been retrieved in the\nstream in a certain amount of time, the download fails. Released: 2018-06-25 Fix issue with automated restores for Atlas Snapshot Backup and\nMongoDB 3.6. Support automated restores for Atlas Snapshot Backup and MongoDB\n4.0. Fix issue with automated restores to a new  Cloud Manager  cluster\nthat does not have MongoDB authentication enabled. Released 2018-06-19 Further support for the upcoming release of MongoDB 4.0. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Improved retry behavior during an automated restore. Incremental work to support MongoDB 4.0. Released 2018-05-03 Allow option to rotate MongoDB audit logs along with MongoDB logs. Released 2018-04-18 Fix: After performing an automated restore of a sharded cluster,\nre-enable the balancer. Fix: Improved handling for shutdown of mongosqld processes. When managing sharded collections, attempt to shard all desired\ncollections before returning any error. Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 When performing maintenance on a shard member (for example, oplog\nresizing) start the node * with  --recoverShardingState false Within a replica set, allow the SSL mode to be modified for each node\nindividually. Add support for  security.ldap.validateLDAPServerConfig  configuration\noption for MongoDB 3.4.14+ and MongoDB 3.6.3+. Released 2018-03-14 Support for new  security.ldap.validateLDAPServerConfig \nconfiguration parameter Released 2018-03-12 Fix: Disable MongoDB's TTL monitor thread while applying oplogs\nduring a point in time restore. Released 2018-03-06 Allow Automation Agent user password to be changed. Always download needed versions of MongoDB, before performing a\nbounce restart of a cluster. Released 2018-03-01 Support for upcoming enhancements to Data Explorer. Released 2018-02-22 Support for MongoDB Connector for Business Intelligence 2.4.0 Released 2018-02-13 Support for upcoming improvements to real time performance monitoring Released 2018-02-10 When performing an automated restore, remove all elements in the\nconfig.mongos collection that are included in the restore files. Released 2018-01-31 When bringing up a new sharded cluster, ensure that the CSRS\nreplica set is fully up before modifying balancer settings. Released 2018-01-30 Support sharding metadata changes on replica sets. Released 2018-01-23 Support MongoDB authentication for managed BI Connectors, without also\nrequiring  TLS (Transport Layer Security) / SSL (Secure Sockets Layer) . Released 2018-01-08 Add support for sampleRefreshIntervalSecs and sampleSize when\nconfiguring a BI Connector. Support for MongoDB 3.6 User Authentication Restrictions. Released 2017-12-07 Automation Agent on Windows should manage the firewall for the BI\nConnector. Released 2017-12-06 Fix race condition when upgrading MongoDB version and feature\ncompatibility version simultaneously. Released 2017-11-28 Fix:  Restore from a MongoDB 3.6 sharded cluster without\nauthorization enabled, to a sharded cluster with authorization\nenabled. Released 2017-11-14 Support for upcoming release of MongoDB 3.6. Released 2017-11-09 Support automated restore for MongoDB 3.6. Fix:  When slow query log tailing is enabled for\nPerformance Advisor, start at the end of the current file. Released 2017-11-01 Continued work for support for upcoming release of MongoDB 3.6. Released 2017-10-26 Support for upcoming release of MongoDB 3.6. Released 2017-10-13 Fix:  Issue with spurious extra line in the Windows\nconfiguration file. Released 2017-10-10 Fix:  Issue parsing keyfiles that contain spaces. Released 2017-10-05 Fix:  When Automation creates a temporary Windows service in order to\nperform maintenance operations on a  mongod , remove the service when\nthe maintenance is completed. Released 2017-09-13 Support for advanced replica set configuration fields. Support for cross-Project PIT restores. Released 2017-08-25 Allow oplogs for a point in time restore to be applied client-side. Fix:  Do not try to set explicit permissions for the Monitoring\nAgent and Backup Agent config files on Windows. Released 2017-08-01 Support for optimized point in time restores. Released 2017-07-11 When performing a resync, leave the  diagnostic.data  directory\nintact. Released 2017-06-15 During a restore, update the Automation Agent credentials. This allows\nrestores between Projects that do not share the same Automation Agent\ncredentials. Fix:  During a conversion to config server replica sets, use a\nseparate log file for the temporary config server processes. Released 2017-05-17 Automated restores always configure the destination replica set's\n protocol version  to the default\nprotocol version for the MongoDB version. Released 2017-05-02 Fix:  Issue managing MongoDB users with no roles. Released 2017-04-19 Final removal of all support for MongoDB 2.4. Released 2017-04-18 Increase response header timeout for HTTP requests. Released 2017-04-11 Fix:  Can restore a sharded cluster to a new sharded cluster with\ndifferent shard names. Fix:  Sorted index keys in Data Explorer. Released 2017-03-29 Substantial optimization for state monitoring of sharded clusters.\nConsiderably fewer requests will be made by the Automation Agents to\nthe deployment. Fix:  Process shutdown during a restore of a sharded cluster on\nWindows. Released 2017-03-08 Add support for upcoming data explorer feature. Fix for deployments that use  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  with a password-protected PEM\nfile. Released 2017-02-01 Fixes bug in shard removal for MongoDB 3.4. Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Released 2017-01-10 Support for upcoming real time performance monitoring feature for\nMongoDB 3.0. Released 2017-01-05 Support for upcoming real time performance monitoring feature. Fix:  Symlink to latest MongoDB version\nif a previous version was manually deleted from disk. Fix:  support of configurations that require both  SCRAM-SHA1 \nand LDAP authentication, with LDAP authorization. Released 2016-11-23 Final support for sharded cluster downgrades in MongoDB 3.4. Adds support for management of Monitoring/Backup Agents on\nPowerPC-based Linux systems for MongoDB 3.4 or later deployments\nonly. Released 2016-11-14 Better handling of timeouts in a sharded cluster when all config\nservers are down. Released 2016-11-07 When restoring a replica set, delete data directories for\narbiters to prevent  protocolVersion  mismatches. Released 2016-11-03 Fixed issue wiht upgrading from MongoDB 2.4 to 2.6 while staying\non authSchemaVersion 1. Do not create Windows firewall rules for processes that are\nstarted on temporary ports where external access is not required. Released 2016-10-26 Fix:  Downgrade order for sharded clusters from MongoDB 3.4 to\nMongoDB 3.2. Support for MongoDB 3.4.0-RC1. Released 2016-10-25 Minor logging changes. Released 2016-10-11 Fix:  When performing a rolling operation, do not wait for\nreplication lag to catch-up on delayed secondaries. Released 2016-09-30 More generous time-out for shutting down a  mongod  process. Released 2016-09-28 Fix:  Can verify PEMKey passwords. Released 2016-09-14 Change order of sharded cluster upgrades in prep for upcoming\nMongoDB 3.4.0. New order is: config servers, shards,  mongos . Released 2016-08-24 Support for management of Monitoring/Backup Agents on Power Linux. Fix:   systemd  Automation Agent packages should not shut down\nmanaged processes on agent shutdown. Released 2016-08-04 When performing a rolling operation in a replica set, wait for\nreplication lag to catch-up before moving on to the next node. Fix:  ability to enable clusterAuthMode in a sharded cluster. Released 2016-07-01 Supports high resolution monitoring of hardware metrics for Cloud\nManager Premium. Fixes a bug in rolling index builds of text indexes. Released 2016-06-22 Now built using Go 1.6. When importing a process that uses a password for the  PEMKeyFile ,\nimport it without making the user re-enter it. Significant performance improves for state gathering, especially\nfor larger sharded clusters. Add a configurable timeout. Always attempt to step down replica set member nodes before\nshutting down. Released 2016-06-03 Adjust timeout when creating oplog collections to 12 hours. Ensure that if first SCCC config server cannot be started, second\nand third config servers are restarted. Optimization - when a  mongod  process is down, query the\ndeployment only for relevant information. Released 2016-05-16 Better logging for  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  connection failures. Use absolute paths for determining which Monitoring and Backup\nAgents are managed. When restoring a backup, ensure that arbiter nodes never download\ndata. Released 2016-04-22 Always send hardware metrics in association with the FQDN of the\nserver, rather than with any defined aliases. Released 2016-04-20 Send enhanced status messages to the server. Minor changes to hardware statistics the Auomation Agents gather. Released 2016-03-29 Fixed memory leak when querying for state on arbiters. Released 2016-03-22 Fix issue where config server replica set conversion is unable to\ncomplete. Allow users to specify a specific temporary port for use during\nconversion to config server replica sets. Released 2016-03-09 Support  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  downgrades, i.e. changes from stricter to looser\n TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  settings (required -> preferred) Released 2016-02-18 Uses systemD management on RHEL7 and Ubuntu 16.04. Includes support for no-downtime conversions to config server\nreplica sets, for MongoDB 3.2.4. Fix:  Automation Agent will not fail\nvalidation for auth schema versions for arbiters. Fix:  More accurate computation of current size of oplog. Released 2016-01-19 Added optimization to prioritize replica set reconfiguration\nactions over index builds. Improved index building mechanism: index builds are no longer\nperformed in a rolling fashion for 2-node replica sets, but instead\nare build in the background. Added optimization to not compare unsupported index options when\ndetermining whether or not an index already exists. Released 2016-01-07 Fixed issue with importing existing deployments that include\n arbiters  running with authentication. Fixed issue with rolling storage engine conversion for\n replica sets  to ensure a super majority is\nalways up. Fixed issue with creating custom roles on  sharded clusters  running MongoDB 3.2 with config server\nreplica sets. Added support for restores for sharded clusters running MongoDB 3.2\nwith config server replica sets. Added support for floating point replica set priorities. General fixes to improve stability for restores. Released 2015-12-07 Fix race condition during replica set reconfiguration at the\ncompletion of an automated restore. Released 2015-12-03 Fix race condition in which a restored replica set member is left\nout of the replica set at the end of the restore process. Released 2015-11-30 Fix:  Do not run  mongos --upgrade  when upgrading to the\nMongoDB 3.2 series, it is not necessary. Released 2015-11-24 Fix:  When building a rolling index on a single-node replica set,\nsimply create the index with background:true Fix:  If a MongoDB version is used, removed and then used again,\nensure that it is re-downloaded. Released 2015-11-11 Fix:  After starting a new Monitoring or Backup Agent, ensure that\nthe process is running achieving Goal State. Released 2015-11-09 Fix:  Do not overwrite the log file for the Monitoring and Backup\nAgents when starting a new instance. Released 2015-11-02 Support for rolling conversion to X.509 member auth. Fixes for rolling index builds. Released 2015-10-15 Fix:  Keyfile paths for mixed Windows/OS clusters handled properly. Released 2015-10-08 Support for performing a restore via Automation Agents. Support for rolling index builds. Send error codes in log messages. Support for configuring WiredTiger encrypted storage for MongoDB\n3.2.0. Released 2015-09-16 Basic support for MongoDB 3.1.7 including the ability to build a\n3.1.7 cluster with a CSRS replica set, handling of new enterprise\nversion format, ability to configure WT encrypted storage with\nlocal keys. Shut down the Automation Agent if the automatic update fails 100\ntimes in a row. Fix:  Failed Automation Agent automatic updates can cause surge in\nconfiguration calls from the Automation Agent. Released 2015-09-11 Fixes  glibc  incompatibility issue on RHEL5 and RHEL6. Released 2015-09-03 Fixes issue in which the Automation Agent crashes when attempting\nto load an invalid certificate bundle. Released 2015-08-31 Improved handling of sharded clusters with members running on\nboth Linux and Windows-based operating systems. Fix:  Delays during the conversion to  TLS (Transport Layer Security) / SSL (Secure Sockets Layer)  remediated. Released 2015-08-10 Added functionality to retrieve and send hardware stats to Cloud\nManager servers. Released 2015-07-22 Fix:  Rare issue encountered in automatic upgrade process, which\nwould prevent the upgrade process from completing successfully. Released 2015-07-15 MMS-2711 : Fixed an issue with rolling storage engine\nupgrades for authenticated replica sets that include an arbiter. MMS-2707 : Improved handling of rolling operations for\nreplica sets that contain more than one arbiter. MMS-2759 : fixed an issue with importing  SCRAM-SHA-1  users\ninto an existing deployment. Added optimization to ensure that the credentials used during\nan Import Existing job are not cached or reused. Released 2015-06-24 Fix:  Rolling upgrades when one or more\n secondaries  has significant replication lag to\nensure that a secondary has always fully caught up before upgrading\nthe  primary . Fix:  Creation of  SCRAM-SHA-1  users imported from one\ndeployment item ( standalone ,  replica set , or\n sharded cluster ) and then applied to a new sharded cluster. Added a small sleep time during the auto-upgrade process. Released 2015-06-17 Fix:  Users can be deleted from the  $external  database. Added fix that prevents the Automation, Monitoring and Backup\nagents from sharing a Kerberos credentials cache. Reverted to an earlier version of a third-party library as the newer\nedition prevented JSON parsing from working correctly on Windows. Released 2015-06-12 Added fix for  MMS-2612 , where users imported from a\nMongoDB 3.0 deployment running with  authSchemaVersion=5  could\nnot be applied to other deployment items. Released 2015-05-29 Fixed issue with importing existing deployments using  TLS (Transport Layer Security) / SSL (Secure Sockets Layer) \nbut not  MONGODB-X509  authentication. Released 2015-05-22 Fixed issue determining the Kerberos keytab for a process on Ubuntu. Released 2015-05-21 Fixed issue with configuring the Windows firewall when the Windows\nfirewall was disabled. Released 2015-05-20 Enabled storage engine conversions for single-node replica sets and\nstandalones. Added optimization where  Cloud Manager  assumes success when starting a forked\nMongoDB process, rather than waiting for EOF. Released 2015-05-13 Added functionality to delete MongoDB binaries on disk that are not\nused by an managed process. Fix:  Management of the Monitoring and Backup Agents by\nthe Automation Agent on Windows. Added up-front validation to ensure that MongoDB processes are\nrunning as the same user as the Automation Agent. Released 2015-05-08 Added fix for  MMS-2489 : fixed issue deriving the default\nport for config servers started with the\n --configsvr  option but with no port specified. Released 2015-05-01 Added support for importing an existing deployment to automation\nwhen the deployment contains authenticated arbiters on which the\nhostname does not resolve locally to the loopback interface. Released 2015-04-30 Fixed memory leak issue with the Automation Agent. Released 2015-04-21 Added ability to change the storage engine for replica sets with\nmore than one data node. Added a RHEL7-specific Automation Agent build. The generic\nbuilds will not work with RHEL7. If you run an earlier Automation Agent (prior to  1.9.0 ), the\nagent will fail to auto-upgrade on RHEL7: you will need to do the\nupgrade manually. Added more detailed logging of when MongoDB, Monitoring Agent,\nor Backup Agent log rotation. Added support for new distribution-specific MongoDB builds. The Kerberos credentials cache now uses a fixed name. When deleting directories,  Cloud Manager  no longer deletes symlinks. Released 2015-04-06 Fix:  Replica set tags stay set when reconfiguring an\nunrelated replica set. Released 2015-04-01 Added ability to upgrade  authSchemaVersion  when auth is not\nenabled. Added support to\n import an existing \n mongos  running with a config file. Fixed issue where the Automation Agent interfered with\nmanually-created replica set tags. Released 2015-03-27 Ensures that the Automation Agent fails gracefully in the\ncase where an expected user does not exist during an initial import. Released: 2015-03-16 Improves algorithm for balancing  mongod  processes across\ncores. Fixed issue with configuring oplog sizes greater than 1 TB. Improvements that make auto-upgrades more reliable. Released 2015-02-23 Ability to import an existing deployment into Automation, which allows\nyou to use Automation to manage the deployment.\nSee  MongoDB Agent . The  Deployment  tab now displays all deployment\ninformation, for both servers and processes, on one page, with icons\nfor selecting view options. Released 2014-11-12 Support for MongoDB 2.8. Fixed issues with upgrades for 2.6-series minor version with auth\nenabled. Released 2014-05-08 Initial release for Automation beta program.",
            "code": [],
            "preview": "Released 2019-07-23",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/automation-agent/changelog-automation-agent-onprem-v3.6",
            "title": "Automation Agent 4.5.17.5289-1",
            "headings": [
                "Automation Agent 4.5.16.5284-1",
                "Automation Agent 4.5.15.5281",
                "Automation Agent 4.5.15.5279-1",
                "Automation Agent 4.5.14.5266",
                "Automation Agent 4.5.13.5261",
                "Automation Agent 4.5.12.2514",
                "Automation Agent 4.5.11.2453",
                "Automation Agent 4.5.10.2429",
                "Automation Agent 4.5.9.2403",
                "Automation Agent 4.5.7.2375"
            ],
            "paragraphs": "Released with Ops Manager 3.6.10 on 2019-01-10 Fix:  Allow CSRS replica set members to be shut down. Released with Ops Manager 3.6.9 on 2018-11-01 Critical Fix:  Storage affecting field changes in a replica set\ncould result in data loss if processes were restarted unexpectedly. Fix:  Memory leak when using Server Pools feature. Released with Ops Manager 3.6.8 on 2018-08-02 Critical Fix:  Set  TasksMax=infinity  and\n TasksAccounting=false  in  systemd  scripts for\nAutomation Agent. Ends support for SLES 11 and Ubuntu 12.04. Automation Agent support for BI Connector 2.5. Compound Text Indexes through Automation. Fix:  When collecting logs, ignore errors for files that have\ndisappeared. Replace evergreen Ubuntu 12 testing with Ubuntu 14. Update version of BI Connector tested to 2.5.0. Released with Ops Manager 3.6.6 on 2018-05-03 Fix:  Automation Agents should not attempt to rotate BI Connector\nlog files for BI Connectors on other servers. Released with Ops Manager 3.6.5 on 2018-04-05 Fix:  Disable MongoDB's TTL monitor thread while applying oplogs\nduring a point in time restore. When performing maintenance on a MongoDB 3.2 shard member for oplog\nresizing, start the node with  --recoverShardingState  false. When the Automation Agent performs a resize on a MongoDB 3.2 sharded\ncluster, disable sharding recovery while the node is started up as a\nstandalone. Released with Ops Manager 3.6.4 on 2018-03-01 Changes made to any storage-affecting options in MongoDB will\nautomatically result in a rolling initial sync of the replica set. For single node replica sets and standalones a\n mongodump  /\n mongorestore \nwill be performed. These options include\n security.enableEncryption ,\n storage.smallfiles ,  storage.directoryPerDb  and\n wiredTiger.directoryForIndexes . (The  storage.engine  parameter\nhas always had this treatment.) Fix:  Automation Agent correctly resizes the  oplog  for\nMongoDB clusters that use X-509 for cluster authentication. Ops Manager 3.6.4  fixes an issue in\nwhich setting a value for a  setParameter  field using Automation\nmay not have resulted in appropriate restart of the MongoDB cluster.\nAs a consequence of this fix, clusters in which a  setParameter \nfield is specifically set to the default value for the\n setParameter  may experience a rolling restart on upgrade to\n Ops Manager 3.6.4 . When configuring a  setParameter  field in the MongoDB\nconfiguration via Automation, always perform a rolling restart. Released with Ops Manager 3.6.3 on 2018-02-01 Fix:  Automation Agent determination of Goal State was incorrect\nfor multi-server deployments using the  ldap.bind.queryPassword \nparameter. This is now resolved and rolling changes will proceed\ncorrectly on these deployments. Fix:  Rotation of  BI Connector  logs by the Automation\nAgent for timezones with positive GMT offsets. Released with Ops Manager 3.6.2 on 2018-01-11 Allow user to specify sampleRefreshIntervalSecs and sampleSize BI\nConnector flags Fix:  Relax validation when  krb5ConfigLocation parameter  is\nspecified. This no longer implies that  krb5Principal  and\n krb5Keytab  are required. Fix:  BI Connector Log Rotation config now respects timestamps\nfrom  UTC (Coordinated Universal Time)  hosts. Fix:  Improve logic controlling when the Backup Agent uses the\nPrimary as a sync source. Released with Ops Manager 3.6.1 on 2017-12-19 Fix:  Prevent race condition when MongoDB version and FCV are\nupdated at the same time. Manage Windows Firewall rules for the BI Connector. Released with Ops Manager 3.6.0 on 2017-12-05 Support for MongoDB 3.6. Support for advanced replica set configuration fields. Support for new Agent API Key model.",
            "code": [],
            "preview": "Released with Ops Manager 3.6.10 on 2019-01-10",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/automation-agent/changelog-automation-agent-onprem-v4.0",
            "title": "Automation Agent 5.4.24.5565",
            "headings": [
                "Automation Agent 5.4.23.5559",
                "Automation Agent 5.4.22.5547",
                "Automation Agent 5.4.21.5544",
                "Automation Agent 5.4.20.5541",
                "Automation Agent 5.4.19.5537",
                "Automation Agent 5.4.16.5515",
                "Automation Agent 5.4.15.5513",
                "Automation Agent 5.4.14.5509",
                "Automation Agent 5.4.13.5505",
                "Automation Agent 5.4.12.5501",
                "Automation Agent 5.4.11.5498",
                "Automation Agent 5.4.10.5496",
                "Automation Agent 5.4.9.5483",
                "Automation Agent 5.4.6.5465"
            ],
            "paragraphs": "Released with Ops Manager 4.0.17 on 2020-02-06 Redacts sensitive configuration data in MongoDB Agent log files to\nimprove security. Released with Ops Manager 4.0.16 on 2019-11-07 Adds support for the  businessCategory  field in extended validation\n  certificates. The Automation Agent is now built using Go 1.13. Released with Ops Manager 4.0.15 on 2019-09-05 Fixes a bug where the MongoDB Agent could panic and delete files from\nits current working directory. Released with Ops Manager 4.0.14 on 2019-07-31 Fix:  Restore downloads performed by Automation Agent now respect\nthe configured  sslTrustedMMSServerCertificate   \nparameter. sslTrustedMMSServerCertificate  has been deprecated. Use\n  instead. Released with Ops Manager 4.0.13 on 2019-07-04 Released with Ops Manager 4.0.12 on 2019-06-06 Fix:  Automation Agent now periodically closes all idle  \nconnections. Fix:  Allow Automation Agent to connect to   through either\n\"short\" or \"long\" hostnames. Fix:  Fix failure in the\n make-init-scripts  tool. Fix:  Lower the default   Header time out in the Automation\nAgent from 15 minutes to 30 seconds. This ensures faster failures\nin the event of   service infrastructure changes, such as\nload balancers moving nodes out of a pool. Fix:  When restoring a sharded cluster, remove all sharding\nmetadata from the  config.system.sessions  collection. If you\ndo not remove the sharding metadata, MongoDB cannot to re-create this\ncollection after the restore is complete. Released with Ops Manager 4.0.8 on 2019-02-07 Fix:  Reduce the amount of memory used to generate plans for large\nsharded clusters. Fix:  Rotation of log files when MongoDB log rotation is\nenabled and the maximum number of uncompressed log files is set to\ntwo. Released with Ops Manager 4.0.7 on 2019-01-10 Add support for the net.ssl.certificateSelector configuration option. Fix:  Allow the successful change in the storageEngine for\nstandalone binary:  ~bin.mongod  with   enabled. Fix:  Automation Agent no longer attempts to authenticate to\narbiters that are configured to use X.509 for  clusterAuthMode . Released with Ops Manager 4.0.6 on 2018-12-10 Released with Ops Manager 4.0.5 on 2018-11-01 Add support for the  ssl.FIPSMode  parameter. Fix:  Memory leak when using Server Pools feature. Released with Ops Manager 4.0.4 on 2018-10-12 Critical Fix:  MongoDB 4.0 restores may fail if snapshot\ndownloads for nodes in the replica set finish at significantly\ndifferent times. Fix:  Restore the ability to upgrade from  authSchemaVersion  3\nto 5 in a sharded cluster. Released with Ops Manager 4.0.3 on 2018-10-04 Fix:  Automation Agent can add new MongoDB users even if\nSCRAM-SHA-1 authentication was enabled for the deployment after\nenabling SCRAM-SHA-256. Released with Ops Manager 4.0.2 on 2018-09-06 Storage affecting field changes in a replica set could result in\ndata loss if processes were restarted unexpectedly. Automation Agent was unable to properly determine state if\nthe process ID previously used by a MongoDB process was reclaimed by\na different process after an unexpected server reboot. Fix:  Allow  CSRS (Config Server Replica Set)  members to\nbe shut down. Released with Ops Manager 4.0.1 on 2018-08-02 Critical Fix:  Set  TasksMax=infinity  and\n TasksAccounting=false  in  systemd  scripts for\nAutomation Agent. Fix:  Automation Agent handling of enterprise builds for\nAmazon Linux 2. Released with Ops Manager 4.0.0 on 2018-06-27 Added support for MongoDB 4.0. Added support for SCRAM-SHA-256 Added platform support for: zLinux on  RHEL (Red Hat Enterprise Linux)  6 Debian 9 Amazon Linux 2 MongoDB 4.0 Community Edition requires\n libcurl . Install  libcurl \nbefore using   to install MongoDB 4.0 Community.",
            "code": [],
            "preview": "Released with Ops Manager 4.0.17 on 2020-02-06",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2018",
            "title": "04 December 2018 Release",
            "headings": [
                "13 November 2018 Release",
                "24 October 2018 Release",
                "04 October 2018 Release",
                "11 September 2018 Release"
            ],
            "paragraphs": "Agent Upgrades:  ,  Agent Upgrades:  Can now manage deployments with FIPS mode enabled. Can now  create rolling indexes \nvia Data Explorer. Agent Upgrades:  Removed support for automation for MongoDB 2.6 and 3.0 clusters. Agent Upgrades:  ,\n ,  Ubuntu 18.04 support for Automation, Backup, Monitoring Agents. Public API:  Ability to perform point in time automated restores. Send project alert notifications to organization members by role. Agent Upgrades: ",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/automation-agent/changelog-automation-agent-eol",
            "title": "Automation Agent 2.5.22.1876",
            "headings": [
                "Automation Agent 2.5.20.1755",
                "Automation Agent 2.5.19.1732",
                "Automation Agent 2.5.18.1647",
                "Automation Agent 2.5.17.1604",
                "Automation Agent 2.5.16.1552",
                "Automation Agent 2.5.15.1526",
                "Automation Agent 2.5.11.1484",
                "Automation Agent 2.0.14.1398",
                "Automation Agent 2.0.12.1238",
                "Automation Agent 2.0.9.1201",
                "Automation Agent 1.4.18.1199-1",
                "Automation Agent 1.4.16.1075",
                "Automation Agent 1.4.15.999",
                "Automation Agent 1.4.14.983"
            ],
            "paragraphs": "Released with Ops Manager 2.0.7 on 2016-11-03 MongoDB data and log files will have a  umask  of  027 .\nRequires new package install. Released with Ops Manager 2.0.6 on 2016-08-18 Improve logging on authentication failures. Fix:  Can set  clusterAuthMode  on sharded clusters. Released with Ops Manager 2.0.5 on 2016-07-14 Substantial optimization in state-gathering. Configurable timeout for connections to MongoDB processes. Fix:  Problem verifying success when creating text indexes in\nrolling index builds. Released with Ops Manager 2.0.4 on 2016-05-20 Agent no longer downloads restore data for arbiters. Fix:  Some cases where CSRS conversion could get stuck. Fix:  Agent can restart a config server if all config servers are\ndown. Fix:  validating MongoDB versions when a cluster was on\nmixed operating systems. Released with Ops Manager 2.0.3 on 2016-03-24 Fix:  Can import of arbiter using a different keyfile then\nexisting configuration. Allow specifying a temporary port for use during a CRSR upgrade. Released with Ops Manager 2.0.2 on 2016-03-01 Added support for managing MongoDB on SUSE12. Added support for rolling upgrades to config servers as a replica\nset. See  . Released with Ops Manager 2.0.1 on 2016-01-21 Stability and performance improvements for restores via automation. Added optimization to prioritize replica set reconfiguration\nactions over index builds. Improved index building mechanism: index builds are no longer\nperformed in a rolling fashion for 2-node replica sets, but\ninstead are built in the background. Added optimization to not compare unsupported index options when\ndetermining whether or not an index already exists. Fix:  Can import existing deployments that include\narbiters running with authentication. Fix:  Rolling storage engine conversion for replica\nsets to ensure a super majority is always up. Fix:  Can create custom roles on sharded clusters running\nMongoDB 3.2 with config server replica sets. Released with Ops Manager 2.0.0 on 2015-12-08 Added aupport for MongoDB 3.2.0 clusters with config servers as\nreplica sets. Added aupport for automated restores via the Automation Agent. Added aupport for rolling index builds. Added aupport for configuring WiredTiger encrypted storage for\nMongoDB 3.2. Added aupport for rolling conversion to X-509 member authentication. Improved handling of sharded clusters with members running on both\nLinux and Windows-based operating systems. Added optimization when starting a new Monitoring or Backup Agent\nto ensure that the process is running before achieving Goal State. Fix:   glibc  compatibility issue on RHEL5 and RHEL6. Fix:  Automation Agent automatic update failures could cause\nsurge in configuration calls from the Automation Agent. Released with Ops Manager 1.8.2 on 2015-10-20 Fix:  Agent from not recognizing RHEL Workstations as RHEL. Released with Ops Manager 1.8.1 on 2015-08-17 Fix:  Can manage an existing deploy with user that has \"root\"\nprivileges. Fix:  Storage engine conversions do not get stuck if\nreplica set contained an arbiter. Fix:  Can update credentials after failed attempt to manage an\nexisting deployment. Released with Ops Manager 1.8 on 2015-06-23 Added support for managing SSL-enabled deployments. Added support for managing deployment using Kerberos, LDAP, and\nx.509 Client Certificate authentication. Added support to import an existing  mongos  with a config\nfile. Added support for importing an existing deployment that contains\nauthenticated  arbiters  on which the hostname does\nnot resolve locally to the loopback interface. Added the ability to upgrade the  authSchemaVersion  when auth is\nnot enabled. Added support to change the storage engine for  replica sets  with more than one data node. Enabled storage engine conversions for single-node replica sets\nand  standalones . Added more detailed logging of when MongoDB, the Monitoring Agent,\nor the Backup Agent rotate their logs. Added support for distribution-specific MongoDB Community Edition\nbuilds. Added up-front validation to ensure that MongoDB processes are\nrunning as the same user as the Automation Agent. Added functionality to delete MongoDB binaries on disk that are\nnot used by a managed process. Added optimization where   assumes success when starting a forked\nMongoDB process, rather than waiting for EOF. Improved algorithm for balancing  mongod  processes across\ncores. When deleting directories, symlinks are no longer deleted. Fix:  Can import credentials for  MONGODB-CR  users from\n SCRAM-SHA-1  deployments. See:  MMS-2612  for more\ndetails. Fix:  Can derive the default port for config servers\nstarted with the  --configsvr  option but\nwith no port specified. See:  MMS-2489 . Fix:  Can configure  oplog  sizes greater than 1TB. Fix:  Automation Agent does not interfere with\nmanually-created replica set tags. Ensured that the Automation Agent fails gracefully when an expected\nuser does not exist during an initial import. Released with Ops Manager 1.6.3 on 2015-06-23 Added support for importing an existing deployment that contains\nauthenticated  arbiters  on which the hostname does\nnot resolve locally to the loopback interface. Fix:  Logic used for performing a rolling restart. Fix:  with deriving the default port for config servers started\nwith the  --configsvr  option but with no port specified. See\n MMS-2489 . Released 2015-04-28 Fix:  Can update users created on MongoDB 2.4. Fix:  No longer have  config server  repair occur if the\nthird config server was out of sync. Released 2015-03-26 Fix:  a rare edge-case that prevented the Automation Agent from\nsuccessfully enabling authentication. Released 2015-03-02 Initial release.",
            "code": [],
            "preview": "Released with Ops Manager 2.0.7 on 2016-11-03",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2020",
            "title": "23 November 2020 Release",
            "headings": [
                "04 November 2020 Release",
                "12 August 2020 Release",
                "30 July 2020 Release",
                "24 June 2020 Release",
                "21 April 2020 Release",
                "31 March 2020 Release",
                "18 February 2020 Release",
                "04 February 2020 Release"
            ],
            "paragraphs": "Updates terminology for API Access List management. Introduces API\nAccess List for Programmatic API Keys and deprecates  API Whitelist . Introduces the ability to use Okta Verify mobile app for\n multi-factor authentication . Enhances  Performance Advisor and Query Profiler  with higher volume log ingestion. Improves UX for the  Real Time Performance Panel , including one-minute history views. Updates MongoDB Agent to  10.17.0.6529-1 . Introduces general availability of MongoDB 4.4. Supports WiredTiger checkpoint backups with encryption at rest in\nMongoDB 4.2 and later. Updates MongoDB Agent to  10.15.0.6463 . Redesigns the MongoDB Cloud navigation. Introduces schema suggestions in   and\n  for   Premium. Updates MongoDB Agent to  10.14.0.6306-1 . Supports queryable backups for MongoDB 4.2. Updates MongoDB Agent to  10.13.0.6247 . Supports \"Click-to-Create\" Index Suggestions in Performance Advisor. Updates MongoDB Agent to  10.11.0.6161 . Supports using Google authentication for MongoDB Cloud user login. Introduces  account.mongodb.com : a unified login\nexperience for MongoDB Cloud, Support, JIRA, and Feedback.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2019",
            "title": "16 December 2019 Release",
            "headings": [
                "18 November 2019 Release",
                "01 October 2019 Release",
                "10 September 2019 Release",
                "20 August 2019 Release",
                "30 July 2019 Release",
                "09 July 2019 Release",
                "11 June 2019 Release",
                "29 May 2019 Release",
                "13 May 2019 Release",
                "16 April 2019 Release",
                "26 March 2019 Release",
                "05 March 2019 Release",
                "13 February 2019 Release",
                "23 January 2019 Release",
                "03 January 2019 Release"
            ],
            "paragraphs": "Introduces\n Identity Federation with SAML . Enables API management for third party service integrations. Removes Automation for MongoDB 3.2 clusters. Introduces the  humanReadable  field to webhook alert notifications. This\nfield contains a human-readable description of the alert. Enhancements to index recommendations in  Performance\nAdvisor . Agent Upgrade:\n Enhances Integrations interface for third party services. Introduces EU destination for Opsgenie integration. MongoDB Cloud billing authenticates credit cards for customers in the\nEuropean Economic Area in compliance with the second Payment Services\nDirective (PSD2). To learn more about Strong Customer Authentication, see  . Agent Upgrade:\n Supports MongoDB 4.2. Disables the ability to create new Personal   Keys. These keys are\ndeprecated. Use\n Programmatic API Keys  to\naccess the    . Unifies the login experience: accounts for MongoDB Cloud, Support, and\nJIRA use the same credentials. Released   2.11.0. Added Aggregation Pipeline Builder to the\n Data Explorer . Support to search for organization or project names\nthat are one character long. Agent Upgrade:\n The Monitoring and Backup Agent have been merged into the Automation\nAgent, which will now be known as the MongoDB Agent.\n Learn more  about this\nchange. Enhanced left-hand navigations. Agent Upgrade:  Supports   2.10. Agent Upgrades:\n Agent Upgrades:\n Adds support for managing MongoDB deployments on IBM zSeries for the\nUbuntu 18.04, SUSE12, and RHEL7 operating systems. Numerous improvements to Automation Agent logging and UI feedback to\nusers. Agent Upgrades:\n ,\n ,\n Agent Upgrades:\n ,\n ,\n Improved Deployment: List view. Now shows automation status, easy\nindividual process log collection, topological deployment grouping,\nand BI Connectors. Adds support for IPv6 deployments. Allows creation of API Keys that are scoped to an organization and are\nnot tied to a human. Credit cards will be authorized for a small amount ($1.00) to reduce\nthe risk of failed charges. Users can now remove themselves from a project. Agent Upgrades:\n ,\n ,\n Deprecated Monitoring \"Display Name\" has been removed from the user\ninterface and  . Agent Upgrades:\n ,\n ,\n",
            "code": [],
            "preview": "Disables the ability to create new Personal  Keys. These keys are\ndeprecated. Use\nProgrammatic API Keys to\naccess the  .",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2023",
            "title": "15 November 2023 Release",
            "headings": [
                "18 October 2023 Release",
                "04 October 2023 Release",
                "13 September 2023 Release",
                "23 August 2023 Release",
                "2 August 2023 Release",
                "12 July 2023 Release",
                "14 June 2023 Release",
                "25 May 2023 Release",
                "3 May 2023 Release",
                "12 April 2023 Release",
                "22 March 2023 Release",
                "01 March 2023 Release",
                "15 February 2023 Release",
                "25 January 2023 Release",
                "05 January 2023 Release"
            ],
            "paragraphs": "Updates the MongoDB Agent to  . Improves upgrading   when multiple versions are present. Improves validations of invalid MongoDB database paths. Improves visibility into processes that may prevent the MongoDB Agent from\nreaching the desired goal state. Fixes PagerDuty notification validation in alerts. Updates the MongoDB Agent to  . Updates the MongoDB Agent to  13.6.0.8483-1 . Released MongoDB Shell 2.0.0. Adds support for  private endpoints  for sharded clusters for live migration (push)\nof a MongoDB 6.0.8+ sharded cluster monitored by   into a sharded\ncluster in  . To learn more, see  Private endpoints for\nLive Migration \nin the   documentation. Adds support for   2.14.11. Updates the MongoDB Agent to  13.5.0.8451-1 . Improves error message when importing a replica set. Ensures that  mongos  always flushes its cache when you upgrade\nfrom MongoDB 5.0 to MongoDB 6.0. Ensures that the MongoDB Agent always shuts down on request, even when\nthe process is unresponsive. Updates the MongoDB Agent to  13.4.01.8413-1 . Adds support for   2.14.10. Compatible with  MongoDB Database Tools 100.8.0 . Updates the MongoDB Agent to  13.3.1.8376-1 . Compatible with  MongoDB Database Tools 100.7.4 . Adds support for   2.14.9. Improves validations for custom privileges when you edit a role in the UI. Fixes  CVE-2023-4009 : Privilege Escalation for  \nand   roles in  . In MongoDB   5.0 prior to 5.0.22, an authenticated user with\n  or   access\nroles could generate an API key with the privileges of the\n  role, resulting in privilege escalation. CVSS Score: 7.2. CWE-648 : Incorrect Use of Privileged APIs. Updates the MongoDB Agent to  13.2.0.8337-1 . Improves the groom job logs. Fixes an issue with the  Modify  button for projects with multiple instances\nof  . Compatible with  MongoDB Database Tools 100.7.3 . Adds cluster removal, shutdown, startup, and restart ability to the  managedSharding  API parameter. Updates the MongoDB Agent to  13.1.0.8282-1 . Adds support for   2.14.7. Updates Go to 1.19.9+ to address the following  s: CVE-2023-29400 CVE-2023-24539 CVE-2023-24540 Adds support for the  security.kmip.useLegacyProtocol  MongoDB\nconfiguration file option. Improves the API for incremental backup tracking of sharded clusters. Supports   2.14.6. Shows incremental snapshots in the UI. Adds the ability to access performance and snapshot metrics. You can now\n use Prometheus  to view metrics\ngraphs and query newly created collections. Updates MongoDB Agent to  12.17.0.8238-1 . Updates JDK to  jdk-11.0.19+7 . Updates  com.fasterxml.woodstox:woodstox-core  to 6.4.0 to address\n CVE-2022-40152 . Updates MongoDB Agent to  12.16.0.8175-1 . Defaults the  Backup Multiple Workers Per File  option to\n On . Adds the ability to regularly rotate the\n automation-agent-fatal.log  file.\n Reinstall the MongoDB Agent \nto enable automatic fatal log file rotation. Updates MongoDB Agent to  12.15.0.8092 . Updates MongoDB Agent to  12.14.0.8069 . Updates MongoDB Agent to  12.13.0.8043 . Supports using multiple workers for a single file during backups. Updates MongoDB Agent to  12.12.0.8018-1 . Improves alert configuration validation. Adds a port number to the hostnames in the backup metrics page. Fixes a bug with the parameter format for  logComponentVerbosity \nwhen using  setParameter . Releases version 1.6.2 of   to  . Updates MongoDB Agent to  12.11.2.7970-1 . Improves Live Migration Service validation error message when waiting for monitoring data. Reduces the impact when collecting and ingesting Automation Agent logs. Updates MongoDB Agent to  12.10.2.7935-1 . Redacts third-party integration credentials when you view or edit an alert through the UI or query it through the  . These credentials are also now encrypted on disk. Fixes the snapshot size for snapshots with  filterList . Fixes the missing  Base URL  field during MongoDB Agent installations on Windows. Adds an alert option for when a snapshot is falling behind the scheduled time.",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2022",
            "title": "14 December 2022 Release",
            "headings": [
                "16 November 2022 Release",
                "27 October 2022 Release",
                "5 October 2022 Release",
                "14 September 2022 Release",
                "24 August 2022 Release",
                "04 August 2022 Release",
                "13 July 2022 Release",
                "22 June 2022 Release",
                "01 June 2022 Release",
                "11 May 2022 Release",
                "20 April 2022 Release",
                "31 March 2022 Release",
                "9 March 2022 Release",
                "16 February 2022 Release",
                "25 January 2022 Release",
                "5 January 2022 Release"
            ],
            "paragraphs": "Updates MongoDB Agent to  12.9.0.7902-1 . Adds support for  private endpoints  with  live migration of replica sets . Removes old   versions automatically. Updates MongoDB Agent to  12.8.0.7876-1 . Deprecates Managed Sharded Collections functionality in the  UI\n(User Interface) . Note that  Manage Sharding  will be\nremoved from the  UI (User Interface)  in a future release. Updates MongoDB Agent to  12.7.0.7844-1 . Adds the ability to easily remove replica set member tags. Updates MongoDB Agent  12.6.0.7792 . Adds support for  Debian 11 . Updates MongoDB Agent to  12.5.0.7738-1 . Fixes an issue where the  Backup Jobs Project  page did not\ncorrectly display backup labels. Adds an alert configuration  id  to error messages to help identify\nthe location of a failing alert. Adds pre-migration TLS validation to the Push Live Migration\nService Fixes an issue where UI did not display the  defaultRWConcern \nfield correctly. Optimizes the automation status UI for large clusters. Adds the ability to filter statuses in the automation cluster view by\nprocess type. Adds pagination to the automation cluster view. Adds VPC peering validation to the Push Live Migration Service. Adds  PKCS#8  encrypted private key support. Updates MongoDB Agent to  12.4.0.7703 . Adds pagination to the automation status page. Reduces the number of alerts generated by jobs that are not being\nprocessed. Fixes an issue where snapshots actively being used in restore jobs\ncould be groomed. Updates MongoDB Agent to  12.3.0.7658-1 . Introduces the general availability of\n MongoDB 6.0 , which includes\nsupport for: New aggregation stages and operators $lookup  and  $graphLookup  with Sharded Collections Improvements to Change Streams New cluster administration options and more. Improves the ability to disable audit log rotation. Adds the ability to detect NaN values in the\n Data Explorer . Extends index shard key validation for managed sharding to include\ncompound indexes. Updates MongoDB Agent to  12.2.0.7631 . Adds the ability to create hidden rolling indexes with the\n Data Explorer . Adds the ability to enable and run the sharded cluster balancer\nthrough the   UI using Automation. Compatible with  MongoDB Database Tools 100.5.3 . Updates MongoDB Agent to  12.1.0.7593 . Updates MongoDB Agent to  12.0.4.7554 . Updates PagerDuty integration to use the\n PagerDuty Events API v2 . Adds the  OPLOG_REPLICATION_LAG_TIME  host measurement series to\nthe  Measurements Administration API resource . Deprecates the  OPLOG_SLAVE_LAG_MASTER_TIME  metric. Updates MongoDB Agent to  12.0.0.7536 . Updates MongoDB Agent to  11.15.0.7497 . Updates MongoDB Agent to  11.14.0.7475 . Introduces a  metrics integration with Prometheus . Updates MongoDB Agent to  11.13.0.7438 . Updates MongoDB Agent to  11.12.0.7401 . Adds the ability to  set separate rules for server log rotation and audit log rotation . Adds new API endpoints for  federated authentication configuration . Adds a Microsoft Teams alerts integration. Removes workaround to use an X.509 CommonName instead of a  . Adds support for  tlsLogVersions  in  Advanced Configuration Options . Updates MongoDB Agent to  11.10.0.7307 .",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/cloud-manager/changelog-cloud-2021",
            "title": "2 December 2021 Release",
            "headings": [
                "17 November 2021 Release",
                "27 October 2021 Release",
                "06 October 2021 Release",
                "15 September 2021 Release",
                "25 August 2021 Release",
                "03 August 2021 Release",
                "13 July 2021 Release",
                "23 June 2021 Release",
                "11 May 2021 Release",
                "30 March 2021 Release",
                "09 March 2021 Release",
                "17 February 2021 Release"
            ],
            "paragraphs": "Removes support for macOS for the MongoDB Agent. Updates MongoDB Agent to  11.9.0.7253-1 . Improves speed and resiliency of snapshot restores when using\nMongoDB Agent version 11.7.0.7183-1 and later. Updates MongoDB Agent to  11.8.0.7223-1 . Updates MongoDB Agent to  11.7.0.7181-1 . Updates MongoDB Agent to  11.6.0.7119 . Adds support for time series collections in Data Explorer and Query\nProfiler including: Ability to create new time series collections and build secondary\nindexes from the UI. Ability to visualize slow queries in times series collections. Updates the deployment security settings user interface for improved\nusability. Updates MongoDB Agent to  11.5.0.7078-1 . Adds metrics that report maximum observed values for all hardware\nmetrics. Your   plan determines the  granularity  of these metrics. Adds the ability to specify  Sort ,  Project , and  Collation  query options when you  query your data  using  Data Explorer . Updates MongoDB Agent to  11.4.0.7057-1 . Fully removes personal   keys. Use  programmatic API keys \nto access the  API . Updates MongoDB Agent to  11.3.0.7029-1 . Introduces the general availability of\n MongoDB 5.0 , which includes\nsupport for: Time Series collections, Live Re-Sharding, the Versioned  , Client Side Field Level Encryption via   KMS,\nGoogle Cloud KMS and Azure Key Vault, and more. Updates MongoDB Agent to  11.2.0.6985 . Updates MongoDB Agent to  11.1.0.6961 . Updates MongoDB Agent to  10.30.0.6882-1 . Introduces the ability to  trigger initial sync for a process \nin the   user interface. Updates MongoDB Agent to  10.28.0.6828-1 . Changes the  protocolVersion \nAPI parameter from an integer to a string. For example, previously,\nyou could specify   1  for this parameter. Now, you must specify\n \"1\"  for this parameter instead. Adds recommendations to  remove redundant indexes  in Performance Advisor. Updates MongoDB Agent to  10.27.0.6799 . Fixes a bug that ensures fixed ordering of index options for all nodes\nin a rolling index build. Updates MongoDB Agent to  10.26.0.6757 .",
            "code": [],
            "preview": null,
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/mongodb-agent/changelog-mongodb-agent-onprem-v4.2",
            "title": "MongoDB Agent 10.2.25.6010",
            "headings": [
                "MongoDB Agent 10.2.24.6007",
                "MongoDB Agent 10.2.22.6000",
                "MongoDB Agent 10.2.21.5995",
                "MongoDB Agent 10.2.20.5992",
                "MongoDB Agent 10.2.20.5991",
                "MongoDB Agent 10.2.19.5989",
                "MongoDB Agent 10.2.18.5978",
                "MongoDB Agent 10.2.17.5970",
                "MongoDB Agent 10.2.16.5960",
                "MongoDB Agent 10.2.15.5958",
                "MongoDB Agent 10.2.14.5953",
                "MongoDB Agent 10.2.14.5953",
                "MongoDB Agent 10.2.13.5943",
                "MongoDB Agent 10.2.12.5930",
                "MongoDB Agent 10.2.11.5927",
                "MongoDB Agent 10.2.10.5921",
                "MongoDB Agent 10.2.9.5909",
                "MongoDB Agent 10.2.8.5901-1",
                "MongoDB Agent 10.2.7.5898",
                "MongoDB Agent 10.2.6.5879-1"
            ],
            "paragraphs": "Released with Ops Manager 4.2.25 on 2021-06-03 . Released with Ops Manager 4.2.24 on 2020-05-05 . Uses Go 1.15 to build the MongoDB Agent. Before upgrading to this\nversion, ensure that all   certificates used in your MongoDB\ndeployment contain a Subject Alternative Name. For more information,\nsee  Troubleshooting Automation . Released with Ops Manager 4.2.22 on 2020-12-03 . Released with Ops Manager 4.2.21 on 2020-11-05 . Released with Ops Manager 4.2.17 on 2020-09-13 Fixes a bug where the MongoDB Agent ignored other agent\nauthentication mechanisms if  clusterAuth``was set to ``x509 . Released with Ops Manager 4.2.16 on 2020-08-06 Released with Ops Manager 4.2.15 on 2020-07-02 Reduces number of connections per second. Improves the Backup Module  oplog  tail performance. Released with Ops Manager 4.2.14 on 2020-06-04 Allows Automation for managed deployments to start   processes\nif only the   primary is available, instead of requiring all\n  members to be available. Fixes a rare issue with managed deployments where the MongoDB Agent is\nunable to start MongoDB processes. Fixes an issue where the MongoDB Agent ignores other agent\nauthentication mechanisms if  clusterAuth  is set to  x509 . Released with Ops Manager 4.2.13 on 2020-05-14 Fixes an issue with managed deployments that can occur when a sharded\ncluster has a shard added and an index built at the same time. Supports SUSE 15. Released with Ops Manager 4.2.12 on 2020-04-09 Fixes an issue that resulted in failures creating snapshots when\nhandling sessions between the MongoDB Agent and MongoDB 4.2 clusters. Released with Ops Manager 4.2.11 on 2020-04-06 Ensures that the MongoDB Agent never interprets network errors as\nauthentication configuration errors, leading to illegitimate attempts\nto rotate the keyfile. Released with Ops Manager 4.2.10 on 2020-03-16 Ensures that an error when rotating one type of log file does not interfere\nwith log rotation of other log files. Ensures that the MongoDB Agent always respects the optionality of keyfiles\nfor MongoDB deployments using X-509 cluster authentication. Ensures that a majority of healthy nodes remains up at all times if a cluster\nhas unhealthy nodes prior to the initiation of a storage-affecting rolling\nchange. Ensures that when importing a new sharded cluster for monitoring, the\nalgorithm for auto-discovering all processes in the sharded cluster\nwill also consider the fully qualified domain names. Upgrades the backup module of the MongoDB Agent to use the MongoDB Go Driver\nversion 1.1.4. Released with Ops Manager 4.2.9 on 2020-03-05 Ensures that an error when rotating one type of log file does not interfere\nwith log rotation of other log files. Ensures that the MongoDB Agent always respects the optionality of keyfiles\nfor MongoDB deployments using X-509 cluster authentication. Ensures that a majority of healthy nodes remains up at all times if a cluster\nhas unhealthy nodes prior to the initiation of a storage-affecting rolling\nchange. Upgrades the backup module of the MongoDB Agent to use the MongoDB Go Driver\nversion 1.1.4. Released with Ops Manager 4.2.8 on 2020-02-06 Adds support for management of MongoDB deployments on Debian 10. Fixes the following issues: During a rolling index build for an unsharded collection on a\nsharded collection, only index the collection on the shard on which\nit already exists. When the MongoDB Agent authenticates to MongoDB clusters using\n  authentication, ensure that   falls back to other\nauthentication methods if the  kinit  call fails. Can perform a restore to a cluster that is unhealthy before the\nrestore is requested. Redacts sensitive configuration data in MongoDB Agent log files to\nimprove security. Released with Ops Manager 4.2.7 on 2020-01-09 Improves the behavior when a rollback occurs on a source cluster\nusing replication protocol v0 when backing up clusters running\nMongoDB 4.0 and earlier. Released with Ops Manager 4.2.6 on 2019-12-19 Resolves memory leak in MongoDB Agent when performing snapshots for\nMongoDB 4.2 clusters. Released with Ops Manager 4.2.5 on 2019-12-12 MongoDB Agent is now built using Go 1.13. Released with Ops Manager 4.2.4 on 2019-11-07 MongoDB Agent is now built using Go 1.13. Fixes an issue where the MongoDB Agent fails to complete some\nrequested actions on a sharded cluster if a config server is down. When creating an index using  Data Explorer ,\nthe optional name property of an index is no longer ignored. Released with Ops Manager 4.2.3 on 2019-10-10 Fixes an issue where upgrading to\n MongoDB Agent 10.2.7  from any previous\nversion restarted all   processes. Released with Ops Manager 4.2.2 on 2019-10-03 Adds support for the  businessCategory  field in extended\nvalidation   certificates. MongoDB Agent is now built using Go 1.12. Adds support for the\n partialFilterExpression \nindex option when creating an index using\n Data Explorer . Backup:  Adds support for the  businessCategory  field in\nextended validation   certificates. Monitoring:  Adds support for the  businessCategory  field in\nextended validation   certificates. Released with Ops Manager 4.2.1 on 2019-09-05 Fixes a bug where the MongoDB Agent could panic and delete files from\nits current working directory. Improves logging in the MongoDB Agent such that when a connection to\na MongoDB process is deliberately canceled, it does not appear as an\nerror.",
            "code": [],
            "preview": "Released with Ops Manager 4.2.25 on 2021-06-03.",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/monitoring-agent/changelog-monitoring-agent-eol",
            "title": "Monitoring Agent 3.9.1.326",
            "headings": [
                "Monitoring Agent 3.9.1.238",
                "Monitoring Agent 3.7.1.227",
                "Monitoring Agent 3.7.0.212",
                "Monitoring Agent 3.3.1.193",
                "Monitoring Agent 2.9.2.184",
                "Monitoring Agent 2.9.1.176",
                "Monitoring Agent 2.4.2.113",
                "Monitoring Agent 2.3.1.89-1",
                "Monitoring Agent 2.1.4.51-1",
                "Monitoring Agent 2.1.3.48-1",
                "Monitoring Agent 2.1.1.41-1",
                "Monitoring Agent 1.6.6"
            ],
            "paragraphs": "Released with Ops Manager 2.0.5 on 2016-07-14 Fixed expired code-signing certificate in MSI. This is a packaging\nchange only, the agent version did not change. Released with Ops Manager 2.0.0 on 2015-12-08 Added support for MongoDB 3.2.0 config servers as replica sets. Released with Ops Manager 1.8.2 on 2015-10-20 Fixed potential memory leak when profiler is enabled. Released with Ops Manager 1.8.1 on 2015-08-17 Avoid harmless authentication in  mongod  log files when reading\n oplog  stats using the  clusterMonitor  role. Released with Ops Manager 1.8.0 on 2015-06-23 Added support for x.509 Client Certificate authentication. The Kerberos credentials cache now uses a fixed name. Improved support for collecting database statistics from secondaries. Added an optimization to ensure the Monitoring Agent's database stats\ncollection tasks do not synchronize. Released 2015-04-28 Added an explicit timeout for SSL connections to MongoDB instances. Upgraded the MongoDB Go driver (mgo) version, which fixed a rare\ndeadlock issue that could occur when monitoring  mongos \ninstances. Added support for non-default Kerberos service names. Added support for authentication using MongoDB 2.4 style client\ncertificates. The Monitoring Agent now identifies itself to the MMS servers using\nthe fully qualified domain name (FQDN) of the server on which it is\nrunning.  now staggers the timing of DNS look-ups, to avoid triggering a\nrare issue in glibc 2.19 on Ubuntu 14.04. Added support for RHEL7. Improved error handling on Windows. Improved connection management for monitored MongoDB processes. Improve correctness of the database statics collection. Now uses the   command to retrieve a list of\ndatabases. The default value for   is now\n true . Users upgrading from 2.4.0 and using SSL will need to set\nthe value of   in their\nconfiguration file. See   for\nmore information. Released with OnPrem 1.5.0 Upgraded agent to use Go 1.3. Updated mgo driver, which includes fix for  MGO-34 . All DNS\nlookups should now timeout appropriately. Added support for connecting to hosts using LDAP authentication. Added support for  version  and  -version  command line options. Agent now displays git commit hash of Monitoring Agent in the log\nfile. Updates to the configuration file format. Released with OnPrem 1.4.3 Improved logging for MongoDB 2.6 config servers when connecting with\na user that has the built-in clusterMonitor role. Fix:  Issue with connecting to replica set members that use auth\nwith an updated Go client library. Added support for HTTP proxy configuration in the agent\nconfiguration file. Agent includes support for an Offline data collection mode. Released with OnPrem 1.4.2 Prevent high CPU use when monitoring unreachable  mongod . Released with OnPrem 1.4.1 Reduction in unnecessary log messages for unsupported operations on\nmonitored MongoDB 2.2 instances. Released with OnPrem 1.4.0 Ability to monitor hosts using Kerberos authentication. Released with OnPrem 1.3.0 Added kerberos support for agents running on Python 2.4.x. Added logging when the  dbstats  command fails.",
            "code": [],
            "preview": "Released with Ops Manager 2.0.5 on 2016-07-14",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/backup-agent/changelog-backup-agent-eol",
            "title": "Backup Agent 3.9.1.382",
            "headings": [
                "Backup Agent 3.9.1.382",
                "Backup Agent 3.9.0.336",
                "Backup Agent 3.4.2.314",
                "Backup Agent 3.4.1.283",
                "Backup Agent 3.1.2.274",
                "Backup Agent 3.1.1.263",
                "Backup Agent 2.3.3.209-1",
                "Backup Agent 2.3.1.160",
                "Backup Agent 1.5.1.83-1",
                "Backup Agent 1.5.0.57-1",
                "Backup Agent 1.4.6.42-1"
            ],
            "paragraphs": "Released with Ops Manager 2.0.9 on 2017-05-23 Fix:  Add a flush method to DigestOutputStream to avoid timeouts. Fix:  Some  deleteIndex  oplog entries not supported during\ninitial sync. Fix:  FileSystemStorejobRunner thread gets killed if exception is\nthrown while getting the Job. Fix:  Failure to create collection if the mongod being backed up\nis configured with encryption. Released with Ops Manager 2.0.4 on 2016-05-20 Fix:  If a collection was deleted during an initial sync, no\ncrash results. Released with Ops Manager 2.0.0 on 2015-12-08 Added support for streaming initial syncs. Added support for MongoDB 3.2.0 config servers as replica sets. Added the ability to only backup selected namespaces (whitelist). Fixed issue with initial sync failing due to collections being\ndeleted during the sync. Fixed issue with collection names with trailing spaces. Released with Ops Manager 1.8.2 on 2015-10-20 Fix:  Initial syncs do not fail if a namespace was deleted\nduring the sync. Released with Ops Manager 1.8 on 2015-06-23 Added support for x.509 Client Certificate authentication. The Kerberos credentials cache now uses a fixed name. Fix:  Race condition which could result in inconsistent cluster\nsnapshots for MongoDB 3.0+ sharded clusters using the\n  role. Released 2015-04-28 Added an explicit timeout for SSL connections to MongoDB instances. Added an optimization for syncs of collections with lots of small\ndocuments. Released 2015-03-02 Adds support for non-default Kerberos service names. Adds support for authentication using MongoDB 2.4-style client\ncertificates. The Backup Agent now identifies itself to the   servers using the\nfully qualified domain name (FQDN) of the server on which it is\nrunning. The Backup Agent now captures a checkpoint even if it is unable to\nstop the balancer. These checkpoints are not guaranteed to be\nconsistent, because of in-progress chunk migrations. The user\ninterface identifies these checkpoints. Released with OnPrem 1.5.2 Use no-timeout cursors to work around  MGO-53 . Released with |mms| OnPrem 1.5.0 Backup Agent now sends oplog slices in batches. Improved stability around oplog tokens for environments with\nunstable networks. Support for a new API that allows   to ingest oplog entries\nbefore the entire payload has reached the   servers. Upgraded agent to use to Go 1.3. Added support for  version  and  -version  command line options. Added support for connecting to hosts using LDAP authentication. Agent now provides additional logging information when the Backup\nAgent manipulates the balancer. Agent now supports configuring HTTP proxies with the config file. Released with OnPrem 1.4.2 Critical update for users running the MongoDB 2.6 series that use\nauthorization. Backup Agent now includes  system.version  and\n system.role  collections from the admin database in the\ninitial sync. Released with OnPrem 1.4.1 Support for backing up Kerberos-authenticated replica sets and clusters Released with OnPrem 1.4.0 Major stability update. Prevent a file descriptor leak. Correct handling of timeouts for connections hung in the SSL\nhandshaking phase.",
            "code": [],
            "preview": "Released with Ops Manager 2.0.9 on 2017-05-23",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/mongodb-agent/changelog-mongodb-agent-cloud",
            "title": "MongoDB Agent 13.8.1.8557-1",
            "headings": [
                "MongoDB Agent 13.7.0.8514",
                "MongoDB Agent 13.6.0.8483-1",
                "MongoDB Agent 13.5.0.8451-1",
                "MongoDB Agent 13.4.01.8413-1",
                "MongoDB Agent 13.3.1.8376-1",
                "MongoDB Agent 13.3.0.8373-1",
                "MongoDB Agent 13.2.0.8337-1",
                "MongoDB Agent 13.1.0.8282-1",
                "MongoDB Agent 12.17.0.8238-1",
                "MongoDB Agent 12.16.0.8175-1",
                "MongoDB Agent 12.15.0.8092",
                "MongoDB Agent 12.14.0.8069",
                "MongoDB Agent 12.13.0.8043",
                "MongoDB Agent 12.12.0.8018-1",
                "MongoDB Agent 12.11.2.7970-1",
                "MongoDB Agent 12.11.0.7961",
                "MongoDB Agent 12.10.2.7935-1",
                "MongoDB Agent 12.10.0.7929",
                "MongoDB Agent 12.9.0.7902-1",
                "MongoDB Agent 12.8.0.7876-1",
                "MongoDB Agent 12.7.0.7844-1",
                "MongoDB Agent 12.6.0.7792",
                "MongoDB Agent 12.5.0.7738-1",
                "MongoDB Agent 12.4.0.7703",
                "MongoDB Agent 12.3.0.7658-1",
                "MongoDB Agent 12.2.0.7631",
                "MongoDB Agent 12.1.0.7593",
                "MongoDB Agent 12.0.4.7554",
                "MongoDB Agent 12.0.0.7536",
                "MongoDB Agent 11.15.0.7497",
                "MongoDB Agent 11.14.0.7475",
                "MongoDB Agent 11.13.0.7438",
                "MongoDB Agent 11.12.0.7401",
                "MongoDB Agent 11.11.0.7355",
                "MongoDB Agent 11.10.0.7307",
                "MongoDB Agent 11.9.0.7253-1",
                "MongoDB Agent 11.8.0.7223-1",
                "MongoDB Agent 11.7.0.7181-1",
                "MongoDB Agent 11.6.0.7119",
                "MongoDB Agent 11.5.0.7078-1",
                "MongoDB Agent 11.4.0.7057-1",
                "MongoDB Agent 11.3.0.7029-1",
                "MongoDB Agent 11.2.0.6985",
                "MongoDB Agent 11.1.0.6961",
                "MongoDB Agent 11.0.0.6919",
                "MongoDB Agent 10.30.0.6882-1",
                "MongoDB Agent 10.29.0.6856-1",
                "MongoDB Agent 10.28.0.6828-1",
                "MongoDB Agent 10.27.0.6799",
                "MongoDB Agent 10.26.0.6757",
                "MongoDB Agent 10.25.0.6735-1",
                "MongoDB Agent 10.24.0.6714-1",
                "MongoDB Agent 10.23.0.6688-1",
                "MongoDB Agent 10.21.0.6634",
                "MongoDB Agent 10.20.0.6609-1",
                "MongoDB Agent 10.19.0.6585-1",
                "MongoDB Agent 10.19.0.6566-1",
                "MongoDB Agent 10.17.0.6529-1",
                "MongoDB Agent 10.15.0.6463",
                "MongoDB Agent 10.14.0.6306-1",
                "MongoDB Agent 10.13.0.6247",
                "MongoDB Agent 10.12.0.6196-1",
                "MongoDB Agent 10.11.0.6161",
                "MongoDB Agent 10.10.0.6122-1",
                "MongoDB Agent 10.9.0.6088-1",
                "MongoDB Agent 10.7.0.6016",
                "MongoDB Agent 10.6.0.5959-1",
                "MongoDB Agent 10.4.1.5917",
                "MongoDB Agent 10.4.0.5913",
                "MongoDB Agent 10.3.1.5880",
                "MongoDB Agent 10.3.0.5877",
                "MongoDB Agent 10.1.2.5805",
                "MongoDB Agent 10.1.0.5785",
                "MongoDB Agent 10.0.1.5755-1",
                "MongoDB Agent 10.0.0.5753"
            ],
            "paragraphs": "Released  2023-11-15 Improves upgrading   when multiple versions are present. Improves validations of invalid MongoDB database paths. Improves visibility into processes that may prevent the MongoDB Agent from\nreaching the desired goal state. Released  2023-10-18 Fixes an issue where   reported an invalid configuration when\nupgrading a managed deployment with multiple tags. Upgrades the  mongosh  used by   to version\n 2.0.2 . Adds support for automating deployments on Ubuntu 22.04 for both x86_64\nand ARM64/aarch64 architectures. Released  2023-10-04 Released  2023-09-13 Released  2023-08-23 Flushes the   cache when you upgrade from MongoDB 5.0 to MongoDB 6.0. Ensures that the MongoDB Agent always runs a shutdown on request, even when the MongoDB process is unresponsive. Released  2023-08-02 Released  2023-08-02 Adds the following improvements for backup snapshots: Ensures that the backup cursor stops if the MongoDB Agent is not the session winner. Increases the socket timeout length when the backup cursor opens. Released  2023-07-12 Adds support for the upcoming release of MongoDB 7.0. Released  2023-06-14 Released  2023-05-24 Uses aggregation operators instead of  currentOp  and  collStats  commands. Adds support for the  security.kmip.useLegacyProtocol  MongoDB configuration\nfile option. Released  2023-05-03 Fixes an issue where restores could be interrupted by transient issues\nwhen retrieving a replication status. Improves   certificate validation when configuring   for\nMongoDB deployments in the UI. Released  2023-04-12 The MongoDB Agent now properly supports the simultaneous change of the\nAgent's authentication mechanism, deployment authentication mechanism,\nand the MongoDB version. Adds support for Ubuntu 20, 22. Released  2023-03-21 Fixes a formatting issue that could prevent the   from\nsuccessfully passing a localhost override to the monitoring module. Released  2023-03-01 Improves logging. Released  2023-02-15 Fixes an issue with managing the default read/write concerns when converting a replica set to a sharded cluster. Fixes the calculation of the number of available mongos during a rolling restart change when some mongos are explicitly disabled. Fixes the race condition when resetting an expired DNS cache. Released  2023-02-07 Fixes  collStats  and  db.currentOp()  errors that caused missing data from the  Slowest Operations  chart in the Real-Time Performance Panel. Released  2023-01-25 Uses Go 1.19. Sets the correct topology time on a MongoDB 6.0+ target sharded cluster\nduring a push live migration to  . Supports changing runtime-settable MongoDB Server parameters without\nrequiring a restart. Fixes the processing of the   and\n db.currentOp()  commands\nso that they use corresponding aggregation stages. To learn more,\nsee  Database Commands Used by Monitoring \nand  Real Time Metrics . Improves logging. Released  2023-01-05 Released  2023-01-05 Improves memory management when collecting information on chunks in sharded collections. Improves logging. Released  2022-12-14 Removes old   versions automatically. Released  2022-11-16 MongoDB Agent now compresses rotated log files. Adds support for rotating the  automation-agent-fatal.log  file. Improves logging. Released  2022-10-27 Adds support for new methods of retrieving sharded data distribution\non MongoDB 6.0. Adds support for the rotation of the log file used for system\nstart-up errors . Fixes an issue that caused log errors in  systemd  services on\n mkdir  if the directory already existed. Released  2022-10-05 Fixes an issue that race detector identified. Fixes a float64 issue that occurred when   collected hardware\nmetrics. Released  2022-09-15 Fixes an issue where new indexes created with the Rolling Index Build\nfeature are vulnerable to index key inconsistencies during subsequent\nreplication rollback or server crash. Released  2022-08-24 Adds support for an upcoming feature that allows you to set\ncluster-wide parameters. Fixes a bug that could cause the MongoDB Agent self-update to stall if\nit encountered an issue downloading new binaries. Fixes an issue with rotating MongoDB audit log files. Released  2022-08-04 Improves automatic race detection and fixes detected race conditions. Improves audit log rotation by tightening regex for determining which\nfiles are audit logs. Released  2022-07-13 Fixes a bug for MongoDB Agent versions 12.1.1 and later where rolling\nindex builds ignored the  hidden  property when built on Data\nExplorer. Improves logging. Adds support for the upcoming release of MongoDB 6.0. Released  2022-06-22 Adds support for the upcoming release of MongoDB 6.0. Released  2022-06-01 Adds support for the upcoming release of MongoDB 6.0.0. Released  2022-05-10 Adds support for the upcoming release of MongoDB 6.0.0. Released  2022-04-20 Adds support for the upcoming release of MongoDB 6.0. Released  2022-03-31 Removes support for managing MongoDB 3.4 clusters, but still\nsupports monitoring and backup. Includes additional optimization for DNS lookups that the MongoDB\nAgent performs. Improves error handling for parallel restores. Released  2022-03-09 Reduces the rate of DNS lookups performed by the MongoDB Agent. Released  2022-02-16 Fixes an issue where the MongoDB Agent erroneously determined that\nprocesses were down before they were completely shut down. Updates the Automation  systemd  configuration script to send the\ncorrect termination signal. Released  2022-01-25 Improves memory management during backup snapshots. Released  2022-01-05 Fixes problem when removing a shard in a sharded cluster using a\nnon-default value for cluster-wide read or write concern. Released  2021-12-02 Removes support for macOS. Improves detection of NUMA-enabled hardware. Improves logging. Released  2021-11-17 Adds support for the release of MongoDB 5.1. Improves management of database users additions and removals. Released  2021-10-27 Improves hardware metrics collection for Windows. Improves logging during download of software components. Released  2021-10-06 Removes support for RHEL/CentOS 6. Improves handling during restores for MongoDB processes with very\nlong start-up times. Released  2021-09-15 Improves support for the recently released MongoDB 5.0. Released  2021-08-25 Improves support for the recently released MongoDB 5.0. Released  2021-08-03 Improves support for the recently released MongoDB 5.0. Released  2021-07-07 Improves support for the upcoming release of MongoDB 5.0. Released  2021-06-23 Improves support for the upcoming release of MongoDB 5.0. Improves logging for RHEL, CentOS, and SUSE hosts that use\n systemd . Released  2021-06-02 Adds support for the upcoming release of MongoDB 5.0. Released  2021-05-11 Improves logging when removing a shard. Fixes problems rotating the   master key for MongoDB deployments\nrunning on Windows. Released  2021-04-21 Uses Go 1.15 to build the MongoDB Agent. Before upgrading to this version,\nensure that all   certificates used in your MongoDB deployment\ncontain a Subject Alternative Name. For more information, see\n Troubleshooting . Improves logging. Released   2021-03-30 Improves support for the upcoming MongoDB 5.0 release. Released   2021-03-09 Improves handling of   state transitions if a process\nunexpectedly crashes. Released  2021-02-17 Fixes a bug that ensures fixed ordering of index options for all nodes\nin a rolling index build. Released  2021-01-26 Improves memory management while taking snapshots of clusters running\nMongoDB 4.2+. Released  2021-01-06 Stops adding MongoDB binaries (such as  ,  , etc.)\nto the Linux path when installing from RPM and DEB packages. Released  2020-12-15 Improves resiliency during the snapshot phase for MongoDB 4.2+\nbackups. Ensures that   uses a healthy   when querying to determine\nthe current state of a sharded cluster. Released   2020-11-04 Ensures backup functions are shut down cleanly and promptly upon\nMongoDB Agent shutdown. Released  2020-10-14 Improves resiliency of incremental backup snapshots. Released  2020-09-23 Fixes an issue when configuring tags for a sharded cluster with\n FCV=4.4 . Ensures that ObjectIds are properly handled as the value\nfor the  _id  field. Fixes an issue where, in rare cases, an error during a backup initial\nsync could lead to a MongoDB Agent crash. Released  2020-09-01 Improves logging: only log to  stdout/sterr  if no other log\nmechanism is available. Adds additional retries if certain error conditions are encountered when\ntaking a snapshot. Released   2020-08-12 Released  2020-07-21 Improves logging when a MongoDB process fails to start. Improves support for the upcoming release of MongoDB 4.4. Released   2020-06-24 Support for the upcoming release of MongoDB 4.4. Signature verification for all MongoDB binary downloads. Released   2020-04-21 Supports the upcoming release of MongoDB 4.4. Includes optimizations to reduce the number of simultaneous connections\nfrom the MongoDB Agent to  . Released   2020-03-31 Support for upcoming MongoDB 4.4 release. Fixes an issue that caused monitoring module discovery to stall if\nthe first contact with an unauthenticated  mongod  resulted in an\nerror. Ensures that integer values for  setParameter  are always correctly\nformatted as integers. Ensures that the MongoDB Agent never interprets network errors as\nauthentication errors, leading to spurious attempts to rotate the\nkeyfile. Released  2020-03-10 If a cluster has unhealthy nodes prior to initiating a\nstorage-affecting rolling change, the MongoDB Agent ensures that a\nmajority of healthy nodes remain up at all times. Released  2020-02-18 Fixes log rotation issue. Ensures that an error rotating one category\nof log file does not interfere with rotations for another category of\nlog file. Improves logging. Released  2020-01-28 Upgrades to MongoDB Go Driver 1.1.4. Reduces memory allocations for buffers used for HTTPS communication\nwith cloud services, increasing the operational efficiency of the\n Real Time Performance Panel . Adds a timezone to MongoDB Agent\n log lines . Supports concurrent\n draining \nof multiple shards for MongoDB 4.2.1+. Allows automated restores to proceed if the target processes are\ncorrupt before the restore begins. Fixes indexing issue. During a rolling index build for an unsharded\ncollection on a sharded collection, only index the collection on the\nshard on which it already exists. Released  2020-01-07 Improves performance when applying changes to sharded clusters with\nmany shards. Significant memory management improvements for sharded clusters with\nvery large tag sets for\n zoned sharding . Fixes issue with automated restores. They can proceed successfully if\nthe target process is unresponsive before the restore begins. Released   2019-11-18 Removes support for MongoDB 3.2. MongoDB Agent is now built on Go 1.13. Removes the  shardIdentity  document during an automated restore if the\nreplica set member is not part of a sharded cluster. This ensures that a\nshard from the sharded cluster is restored as its own replica set. When connecting to MongoDB, recognizes \"connection reset by peer\" as MongoDB\npossibly not supporting TLS and connects appropriately. Restarts the restore operation if the oplog recovery phase fails. This\nimproves resilience for MongoDB 4.2 restores. Released  2019-10-23 Adds support for managing deployments using  externally sourced\nconfiguration file values . Prefers connecting to MongoDB as the specified user instead of the\nsystem user. Includes the inherited roles in the privileges check when importing\nMongoDB users. Released  2019-09-13 Fix encoding issue for keyfiles containing newlines. Released   2019-09-10 Support for  rolling keyfile changes  in MongoDB 4.2. Released  2019-08-05 Fixes issue with health check for integration with Kubernetes Operator. Released  2019-08-01 Further work to support upcoming release of MongoDB Server 4.2. Released  2019-06-11 Monitoring function converted to use the new MongoDB Go Driver. Released   2019-05-29 Monitoring module updated to MongoDB's new Go driver. Incremental work to support the upcoming MongoDB Server 4.2 release. Released  2019-05-13 Fix builds for deployments using GSSAPI authentication. Released   2019-05-13 Incorporate the Monitoring and Backup Agents into a single process,\nwhich will now be known as the MongoDB Agent.\n Learn more  about this\nchange.",
            "code": [],
            "preview": "Released 2023-11-15",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/automation-agent/changelog-automation-agent-cloud",
            "title": "Automation Agent 10.2.1.5858",
            "headings": [
                "Automation Agent 6.5.5.5702-1",
                "Automation Agent 6.5.4.5699-1",
                "Automation Agent 6.5.3.5696",
                "Automation Agent 6.5.2.5660",
                "Automation Agent 6.5.1.5691-1",
                "Automation Agent 6.5.0.5689-1",
                "Automation Agent 6.4.0.5657",
                "Automation Agent 6.3.0.5643",
                "Automation Agent 6.2.0.5620-1",
                "Automation Agent 6.1.0.5603",
                "Automation Agent 6.0.0.5591",
                "Automation Agent 5.9.1.5566-1",
                "Automation Agent 5.9.0.5561-1",
                "Automation Agent 5.8.1.5548",
                "Automation Agent 5.8.0.5546",
                "Automation Agent 5.7.0.5532",
                "Automation Agent 5.6.1.5525",
                "Automation Agent 5.6.0.5523",
                "Automation Agent 5.5.0.5499",
                "Automation Agent 5.4.8.5478-1",
                "Automation Agent 5.4.7.5469-1",
                "Automation Agent 5.4.5.5460",
                "Automation Agent 5.4.2.5440",
                "Automation Agent 5.4.0.5435",
                "Automation Agent 5.3.0.5394",
                "Automation Agent 5.2.1.5387",
                "Automation Agent 5.2.0.5382",
                "Automation Agent 5.1.1.5353",
                "Automation Agent 5.1.0.5350",
                "Automation Agent 5.0.3.2562",
                "Automation Agent 5.0.0.2526",
                "Automation Agent 5.0.0.2526",
                "Automation Agent 4.9.2.2525",
                "Automation Agent 4.9.1.2502",
                "Automation Agent 4.9.0.2490",
                "Automation Agent 4.8.2.2491",
                "Automation Agent 4.8.2.2459",
                "Automation Agent 4.8.1.2451",
                "Automation Agent 4.8.0.2438",
                "Automation Agent 4.7.0.2418",
                "Automation Agent 4.5.9.2395",
                "Automation Agent 4.5.8.2390",
                "Automation Agent 4.5.7.2375",
                "Automation Agent 4.5.4.2347",
                "Automation Agent 4.5.3.2339",
                "Automation Agent 4.5.1.2319",
                "Automation Agent 4.5.0.2305",
                "Automation Agent 4.4.2.2274",
                "Automation Agent 4.4.1.2267",
                "Automation Agent 4.4.0.2256",
                "Automation Agent 4.3.0.2225",
                "Automation Agent 4.2.0.2209",
                "Automation Agent 4.1.0.2188",
                "Automation Agent 4.0.0.2153",
                "Automation Agent 3.9.0.2131",
                "Automation Agent 3.8.0.2108",
                "Automation Agent 3.7.1.2094",
                "Automation Agent 3.7.0.2059",
                "Automation Agent 3.6.2.2060",
                "Automation Agent 3.6.1.2041",
                "Automation Agent 3.6.0.2024",
                "Automation Agent 3.5.0.2003",
                "Automation Agent 3.4.1.1996",
                "Automation Agent 3.4.0.1986",
                "Automation Agent 3.3.1.1976",
                "Automation Agent 3.3.0.1963",
                "Automation Agent 3.2.7.1927",
                "Automation Agent 3.2.6.1916",
                "Automation Agent 3.2.5.1907",
                "Automation Agent 3.2.4.1901",
                "Automation Agent 3.2.3.1894",
                "Automation Agent 3.2.2.1890",
                "Automation Agent 3.2.1.1884",
                "Automation Agent 3.1.2.1850",
                "Automation Agent 3.1.1.1845",
                "Automation Agent 3.1.0.1813",
                "Automation Agent 3.0.0.1798",
                "Automation Agent 2.9.0.1764",
                "Automation Agent 2.8.1.1725",
                "Automation Agent 2.8.0.1714",
                "Automation Agent 2.7.3.1679",
                "Automation Agent 2.7.2.1649",
                "Automation Agent 2.7.1.1631",
                "Automation Agent 2.7.0.1626",
                "Automation Agent 2.6.4.1612",
                "Automation Agent 2.6.3.1603",
                "Automation Agent 2.6.1.1564",
                "Automation Agent 2.6.0.1551",
                "Automation Agent 2.5.15.1526",
                "Automation Agent 2.5.14.1514",
                "Automation Agent 2.5.11.1484",
                "Automation Agent 2.5.9.1477",
                "Automation Agent 2.5.7.1471",
                "Automation Agent 2.5.6.1469",
                "Automation Agent 2.5.4.1444",
                "Automation Agent 2.5.2.1439",
                "Automation Agent 2.5.0.1430",
                "Automation Agent 2.4.1.1393",
                "Automation Agent 2.4.0.1384",
                "Automation Agent 2.3.0.1335",
                "Automation Agent 2.2.3.1337",
                "Automation Agent 2.2.1.1322",
                "Automation Agent 2.2.0.1307",
                "Automation Agent 2.1.0.1280",
                "Automation Agent 2.0.12.1238",
                "Automation Agent 2.0.11.1231",
                "Automation Agent 2.0.9.1201",
                "Automation Agent 2.0.8.1184",
                "Automation Agent 2.0.7.1158",
                "Automation Agent 2.0.6.1148",
                "Automation Agent 2.0.4.1140",
                "Automation Agent 2.0.2.1138",
                "Automation Agent 2.0.2.1136",
                "Automation Agent 2.0.0.1120",
                "Automation Agent 1.9.3.1109",
                "Automation Agent 1.9.1.1100",
                "Automation Agent 1.9.1.1093",
                "Automation Agent 1.9.0.1073",
                "Automation Agent 1.8.1.1042",
                "Automation Agent 1.8.0.1034",
                "Automation Agent 1.7.1.1023",
                "Automation Agent 1.7.0.992",
                "Automation Agent 1.6.2.960",
                "Automation Agent 1.3.0.718",
                "Automation Agent 0.4.0"
            ],
            "paragraphs": "Released  2019-07-23 Further work to support the upcoming release of MongoDB 4.2 Released  2019-05-02 Fix:  Properly handle nested directories when downloading tar\nfiles. Released  2019-04-24 Update to Go driver 1.0.1. Released  2019-04-21 Additional work for MongoDB connection management. Released  2019-04-12 Stabilization work for MongoDB connection management. Released  2019-04-09 Fix:  Use the estimated count instead of the full document count\nwhen counting documents in the oplog. This fixes a severe performance\nregression. Released  2019-04-08 Converted to use the new MongoDB Go driver. Released   2019-03-05 Various improvements to logging. Released   2019-02-13 No longer runs the metrics collection during restores, resulting\nin cleaner log files. Improved error handling during restores for better resumability. Released   2019-01-23 Fix rotation of log files when MongoDB log rotation is enabled and\nthe maximum number of uncompressed log files is set to two. Released   2019-01-03 Built with Go 1.10. Significant reduction in memory footprint when managing\nsharded clusters. Fix:  Allow successful conversion of MongoDB storageEngine for\na standalone with   enabled. Released 2018-12-05 Increase timeout for log collection jobs Released 2018-11-13 Improved handling of state gathering in the first moments of MongoDB\nstart-up. Released 2018-10-24 Optimized ordering for sharded zone management. Optimized state gathering in clusters with high latency between\nmembers. Released 2018-10-09 Fix:  Restores for MongoDB 4.0 fail if snapshot download for all\nnodes does not finish at approximately same time Released 2018-10-04 Improved performance for state changes in large clusters with high\nlatency between cluster members Removed support for MongoDB 2.6 and 3.0. Released 2018-09-11 Added support for Ubuntu 18.04 Fix:  When determining desired balancer settings, perform a merge\nbetween new settings and old settings. Released 2018-08-30 Fix issue performing point in time restores for MongoDB 4.0 Released 2018-08-21 Critical Fix: During a rolling change of a storage-affecting field\n(for example the storage engine), data loss could occur if an\nexternal process caused replica set nodes to restart unexpectedly. Automation Agent now built using Go 1.9. Support for Ubuntu 18. Allow simultaneous disabling of multiple config servers. Don't remove binaries that are currently in use by unmanaged\nprocesses. Performance improvement for clusters with lots of sharding tags. Only block rolling updates if there are not enough replica set\nmembers without replication lag to do majority writes. Handle rolling index build on non-existent collections. Released 2018-08-01 Performance improvements. Improve determination of when a mongod process is running. Fix issue in which a replica set configuration change fails to\ncomplete if the primary is removed from the replica set. Enforce a pause between nodes when doing a rolling oplog size. Prevent issues completing an oplog resize if the mongod is very slow\nto start-up. Released 2018-07-16 Allow recreation of previously deleted sharded collections. Support additional configuration options for the  . If, when downloading a file, no bytes have been retrieved in the\nstream in a certain amount of time, the download fails. Released: 2018-06-25 Fix issue with automated restores for Atlas Snapshot Backup and\nMongoDB 3.6. Support automated restores for Atlas Snapshot Backup and MongoDB\n4.0. Fix issue with automated restores to a new   cluster\nthat does not have MongoDB authentication enabled. Released 2018-06-19 Further support for the upcoming release of MongoDB 4.0. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Improved retry behavior during an automated restore. Incremental work to support MongoDB 4.0. Released 2018-05-03 Allow option to rotate MongoDB audit logs along with MongoDB logs. Released 2018-04-18 Fix: After performing an automated restore of a sharded cluster,\nre-enable the balancer. Fix: Improved handling for shutdown of mongosqld processes. When managing sharded collections, attempt to shard all desired\ncollections before returning any error. Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 When performing maintenance on a shard member (for example, oplog\nresizing) start the node * with  --recoverShardingState false Within a replica set, allow the SSL mode to be modified for each node\nindividually. Add support for  security.ldap.validateLDAPServerConfig  configuration\noption for MongoDB 3.4.14+ and MongoDB 3.6.3+. Released 2018-03-14 Support for new  security.ldap.validateLDAPServerConfig \nconfiguration parameter Released 2018-03-12 Fix: Disable MongoDB's TTL monitor thread while applying oplogs\nduring a point in time restore. Released 2018-03-06 Allow Automation Agent user password to be changed. Always download needed versions of MongoDB, before performing a\nbounce restart of a cluster. Released 2018-03-01 Support for upcoming enhancements to Data Explorer. Released 2018-02-22 Support for MongoDB Connector for Business Intelligence 2.4.0 Released 2018-02-13 Support for upcoming improvements to real time performance monitoring Released 2018-02-10 When performing an automated restore, remove all elements in the\nconfig.mongos collection that are included in the restore files. Released 2018-01-31 When bringing up a new sharded cluster, ensure that the CSRS\nreplica set is fully up before modifying balancer settings. Released 2018-01-30 Support sharding metadata changes on replica sets. Released 2018-01-23 Support MongoDB authentication for managed BI Connectors, without also\nrequiring  . Released 2018-01-08 Add support for sampleRefreshIntervalSecs and sampleSize when\nconfiguring a BI Connector. Support for MongoDB 3.6 User Authentication Restrictions. Released 2017-12-07 Automation Agent on Windows should manage the firewall for the BI\nConnector. Released 2017-12-06 Fix race condition when upgrading MongoDB version and feature\ncompatibility version simultaneously. Released 2017-11-28 Fix:  Restore from a MongoDB 3.6 sharded cluster without\nauthorization enabled, to a sharded cluster with authorization\nenabled. Released 2017-11-14 Support for upcoming release of MongoDB 3.6. Released 2017-11-09 Support automated restore for MongoDB 3.6. Fix:  When slow query log tailing is enabled for\nPerformance Advisor, start at the end of the current file. Released 2017-11-01 Continued work for support for upcoming release of MongoDB 3.6. Released 2017-10-26 Support for upcoming release of MongoDB 3.6. Released 2017-10-13 Fix:  Issue with spurious extra line in the Windows\nconfiguration file. Released 2017-10-10 Fix:  Issue parsing keyfiles that contain spaces. Released 2017-10-05 Fix:  When Automation creates a temporary Windows service in order to\nperform maintenance operations on a  mongod , remove the service when\nthe maintenance is completed. Released 2017-09-13 Support for advanced replica set configuration fields. Support for cross-Project PIT restores. Released 2017-08-25 Allow oplogs for a point in time restore to be applied client-side. Fix:  Do not try to set explicit permissions for the Monitoring\nAgent and Backup Agent config files on Windows. Released 2017-08-01 Support for optimized point in time restores. Released 2017-07-11 When performing a resync, leave the  diagnostic.data  directory\nintact. Released 2017-06-15 During a restore, update the Automation Agent credentials. This allows\nrestores between Projects that do not share the same Automation Agent\ncredentials. Fix:  During a conversion to config server replica sets, use a\nseparate log file for the temporary config server processes. Released 2017-05-17 Automated restores always configure the destination replica set's\n protocol version  to the default\nprotocol version for the MongoDB version. Released 2017-05-02 Fix:  Issue managing MongoDB users with no roles. Released 2017-04-19 Final removal of all support for MongoDB 2.4. Released 2017-04-18 Increase response header timeout for HTTP requests. Released 2017-04-11 Fix:  Can restore a sharded cluster to a new sharded cluster with\ndifferent shard names. Fix:  Sorted index keys in Data Explorer. Released 2017-03-29 Substantial optimization for state monitoring of sharded clusters.\nConsiderably fewer requests will be made by the Automation Agents to\nthe deployment. Fix:  Process shutdown during a restore of a sharded cluster on\nWindows. Released 2017-03-08 Add support for upcoming data explorer feature. Fix for deployments that use   with a password-protected PEM\nfile. Released 2017-02-01 Fixes bug in shard removal for MongoDB 3.4. Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Released 2017-01-10 Support for upcoming real time performance monitoring feature for\nMongoDB 3.0. Released 2017-01-05 Support for upcoming real time performance monitoring feature. Fix:  Symlink to latest MongoDB version\nif a previous version was manually deleted from disk. Fix:  support of configurations that require both  SCRAM-SHA1 \nand LDAP authentication, with LDAP authorization. Released 2016-11-23 Final support for sharded cluster downgrades in MongoDB 3.4. Adds support for management of Monitoring/Backup Agents on\nPowerPC-based Linux systems for MongoDB 3.4 or later deployments\nonly. Released 2016-11-14 Better handling of timeouts in a sharded cluster when all config\nservers are down. Released 2016-11-07 When restoring a replica set, delete data directories for\narbiters to prevent  protocolVersion  mismatches. Released 2016-11-03 Fixed issue wiht upgrading from MongoDB 2.4 to 2.6 while staying\non authSchemaVersion 1. Do not create Windows firewall rules for processes that are\nstarted on temporary ports where external access is not required. Released 2016-10-26 Fix:  Downgrade order for sharded clusters from MongoDB 3.4 to\nMongoDB 3.2. Support for MongoDB 3.4.0-RC1. Released 2016-10-25 Minor logging changes. Released 2016-10-11 Fix:  When performing a rolling operation, do not wait for\nreplication lag to catch-up on delayed secondaries. Released 2016-09-30 More generous time-out for shutting down a  mongod  process. Released 2016-09-28 Fix:  Can verify PEMKey passwords. Released 2016-09-14 Change order of sharded cluster upgrades in prep for upcoming\nMongoDB 3.4.0. New order is: config servers, shards,  mongos . Released 2016-08-24 Support for management of Monitoring/Backup Agents on Power Linux. Fix:   systemd  Automation Agent packages should not shut down\nmanaged processes on agent shutdown. Released 2016-08-04 When performing a rolling operation in a replica set, wait for\nreplication lag to catch-up before moving on to the next node. Fix:  ability to enable clusterAuthMode in a sharded cluster. Released 2016-07-01 Supports high resolution monitoring of hardware metrics for Cloud\nManager Premium. Fixes a bug in rolling index builds of text indexes. Released 2016-06-22 Now built using Go 1.6. When importing a process that uses a password for the  PEMKeyFile ,\nimport it without making the user re-enter it. Significant performance improves for state gathering, especially\nfor larger sharded clusters. Add a configurable timeout. Always attempt to step down replica set member nodes before\nshutting down. Released 2016-06-03 Adjust timeout when creating oplog collections to 12 hours. Ensure that if first SCCC config server cannot be started, second\nand third config servers are restarted. Optimization - when a  mongod  process is down, query the\ndeployment only for relevant information. Released 2016-05-16 Better logging for   connection failures. Use absolute paths for determining which Monitoring and Backup\nAgents are managed. When restoring a backup, ensure that arbiter nodes never download\ndata. Released 2016-04-22 Always send hardware metrics in association with the FQDN of the\nserver, rather than with any defined aliases. Released 2016-04-20 Send enhanced status messages to the server. Minor changes to hardware statistics the Auomation Agents gather. Released 2016-03-29 Fixed memory leak when querying for state on arbiters. Released 2016-03-22 Fix issue where config server replica set conversion is unable to\ncomplete. Allow users to specify a specific temporary port for use during\nconversion to config server replica sets. Released 2016-03-09 Support   downgrades, i.e. changes from stricter to looser\n  settings (required -> preferred) Released 2016-02-18 Uses systemD management on RHEL7 and Ubuntu 16.04. Includes support for no-downtime conversions to config server\nreplica sets, for MongoDB 3.2.4. Fix:  Automation Agent will not fail\nvalidation for auth schema versions for arbiters. Fix:  More accurate computation of current size of oplog. Released 2016-01-19 Added optimization to prioritize replica set reconfiguration\nactions over index builds. Improved index building mechanism: index builds are no longer\nperformed in a rolling fashion for 2-node replica sets, but instead\nare build in the background. Added optimization to not compare unsupported index options when\ndetermining whether or not an index already exists. Released 2016-01-07 Fixed issue with importing existing deployments that include\n arbiters  running with authentication. Fixed issue with rolling storage engine conversion for\n replica sets  to ensure a super majority is\nalways up. Fixed issue with creating custom roles on  sharded clusters  running MongoDB 3.2 with config server\nreplica sets. Added support for restores for sharded clusters running MongoDB 3.2\nwith config server replica sets. Added support for floating point replica set priorities. General fixes to improve stability for restores. Released 2015-12-07 Fix race condition during replica set reconfiguration at the\ncompletion of an automated restore. Released 2015-12-03 Fix race condition in which a restored replica set member is left\nout of the replica set at the end of the restore process. Released 2015-11-30 Fix:  Do not run  mongos --upgrade  when upgrading to the\nMongoDB 3.2 series, it is not necessary. Released 2015-11-24 Fix:  When building a rolling index on a single-node replica set,\nsimply create the index with background:true Fix:  If a MongoDB version is used, removed and then used again,\nensure that it is re-downloaded. Released 2015-11-11 Fix:  After starting a new Monitoring or Backup Agent, ensure that\nthe process is running achieving Goal State. Released 2015-11-09 Fix:  Do not overwrite the log file for the Monitoring and Backup\nAgents when starting a new instance. Released 2015-11-02 Support for rolling conversion to X.509 member auth. Fixes for rolling index builds. Released 2015-10-15 Fix:  Keyfile paths for mixed Windows/OS clusters handled properly. Released 2015-10-08 Support for performing a restore via Automation Agents. Support for rolling index builds. Send error codes in log messages. Support for configuring WiredTiger encrypted storage for MongoDB\n3.2.0. Released 2015-09-16 Basic support for MongoDB 3.1.7 including the ability to build a\n3.1.7 cluster with a CSRS replica set, handling of new enterprise\nversion format, ability to configure WT encrypted storage with\nlocal keys. Shut down the Automation Agent if the automatic update fails 100\ntimes in a row. Fix:  Failed Automation Agent automatic updates can cause surge in\nconfiguration calls from the Automation Agent. Released 2015-09-11 Fixes  glibc  incompatibility issue on RHEL5 and RHEL6. Released 2015-09-03 Fixes issue in which the Automation Agent crashes when attempting\nto load an invalid certificate bundle. Released 2015-08-31 Improved handling of sharded clusters with members running on\nboth Linux and Windows-based operating systems. Fix:  Delays during the conversion to   remediated. Released 2015-08-10 Added functionality to retrieve and send hardware stats to Cloud\nManager servers. Released 2015-07-22 Fix:  Rare issue encountered in automatic upgrade process, which\nwould prevent the upgrade process from completing successfully. Released 2015-07-15 MMS-2711 : Fixed an issue with rolling storage engine\nupgrades for authenticated replica sets that include an arbiter. MMS-2707 : Improved handling of rolling operations for\nreplica sets that contain more than one arbiter. MMS-2759 : fixed an issue with importing  SCRAM-SHA-1  users\ninto an existing deployment. Added optimization to ensure that the credentials used during\nan Import Existing job are not cached or reused. Released 2015-06-24 Fix:  Rolling upgrades when one or more\n secondaries  has significant replication lag to\nensure that a secondary has always fully caught up before upgrading\nthe  primary . Fix:  Creation of  SCRAM-SHA-1  users imported from one\ndeployment item ( ,  replica set , or\n sharded cluster ) and then applied to a new sharded cluster. Added a small sleep time during the auto-upgrade process. Released 2015-06-17 Fix:  Users can be deleted from the  $external  database. Added fix that prevents the Automation, Monitoring and Backup\nagents from sharing a Kerberos credentials cache. Reverted to an earlier version of a third-party library as the newer\nedition prevented JSON parsing from working correctly on Windows. Released 2015-06-12 Added fix for  MMS-2612 , where users imported from a\nMongoDB 3.0 deployment running with  authSchemaVersion=5  could\nnot be applied to other deployment items. Released 2015-05-29 Fixed issue with importing existing deployments using  \nbut not  MONGODB-X509  authentication. Released 2015-05-22 Fixed issue determining the Kerberos keytab for a process on Ubuntu. Released 2015-05-21 Fixed issue with configuring the Windows firewall when the Windows\nfirewall was disabled. Released 2015-05-20 Enabled storage engine conversions for single-node replica sets and\nstandalones. Added optimization where   assumes success when starting a forked\nMongoDB process, rather than waiting for EOF. Released 2015-05-13 Added functionality to delete MongoDB binaries on disk that are not\nused by an managed process. Fix:  Management of the Monitoring and Backup Agents by\nthe Automation Agent on Windows. Added up-front validation to ensure that MongoDB processes are\nrunning as the same user as the Automation Agent. Released 2015-05-08 Added fix for  MMS-2489 : fixed issue deriving the default\nport for config servers started with the\n --configsvr  option but with no port specified. Released 2015-05-01 Added support for importing an existing deployment to automation\nwhen the deployment contains authenticated arbiters on which the\nhostname does not resolve locally to the loopback interface. Released 2015-04-30 Fixed memory leak issue with the Automation Agent. Released 2015-04-21 Added ability to change the storage engine for replica sets with\nmore than one data node. Added a RHEL7-specific Automation Agent build. The generic\nbuilds will not work with RHEL7. If you run an earlier Automation Agent (prior to  1.9.0 ), the\nagent will fail to auto-upgrade on RHEL7: you will need to do the\nupgrade manually. Added more detailed logging of when MongoDB, Monitoring Agent,\nor Backup Agent log rotation. Added support for new distribution-specific MongoDB builds. The Kerberos credentials cache now uses a fixed name. When deleting directories,   no longer deletes symlinks. Released 2015-04-06 Fix:  Replica set tags stay set when reconfiguring an\nunrelated replica set. Released 2015-04-01 Added ability to upgrade  authSchemaVersion  when auth is not\nenabled. Added support to\n import an existing \n mongos  running with a config file. Fixed issue where the Automation Agent interfered with\nmanually-created replica set tags. Released 2015-03-27 Ensures that the Automation Agent fails gracefully in the\ncase where an expected user does not exist during an initial import. Released: 2015-03-16 Improves algorithm for balancing  mongod  processes across\ncores. Fixed issue with configuring oplog sizes greater than 1 TB. Improvements that make auto-upgrades more reliable. Released 2015-02-23 Ability to import an existing deployment into Automation, which allows\nyou to use Automation to manage the deployment.\nSee  . The  Deployment  tab now displays all deployment\ninformation, for both servers and processes, on one page, with icons\nfor selecting view options. Released 2014-11-12 Support for MongoDB 2.8. Fixed issues with upgrades for 2.6-series minor version with auth\nenabled. Released 2014-05-08 Initial release for Automation beta program.",
            "code": [],
            "preview": "Released 2019-07-23",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/monitoring-agent/changelog-monitoring-agent-cloud",
            "title": "Monitoring Agent 7.2.0.488-1",
            "headings": [
                "Monitoring Agent 7.1.0.487",
                "Monitoring Agent 7.0.0.481",
                "Monitoring Agent 6.9.0.477-1",
                "Monitoring Agent 6.8.0.472",
                "Monitoring Agent 6.7.0.466",
                "Monitoring Agent 6.6.1.462",
                "Monitoring Agent 6.6.0.460",
                "Monitoring Agent 6.5.0.456",
                "Monitoring Agent 6.4.1.439",
                "Monitoring Agent 6.4.0.433",
                "Monitoring Agent 6.3.0.401",
                "Monitoring Agent 6.2.0.397",
                "Monitoring Agent 6.1.0.387",
                "Monitoring Agent 6.0.0.381",
                "Monitoring Agent 5.7.0.368",
                "Monitoring Agent 5.6.0.364",
                "Monitoring Agent 5.5.0.358",
                "Monitoring Agent 5.4.2.354",
                "Monitoring Agent 5.4.1.350",
                "Monitoring Agent 5.3.0.341",
                "Monitoring Agent 5.2.0.331",
                "Monitoring Agent 5.1.0.323",
                "Monitoring Agent 5.0.0.309",
                "Monitoring Agent 4.3.0.265",
                "Monitoring Agent 4.2.0.263",
                "Monitoring Agent 4.1.0.251",
                "Monitoring Agent 4.0.0.242",
                "Monitoring Agent 3.9.1.238",
                "Monitoring Agent 3.9.0.233",
                "Monitoring Agent 3.8.0.222-1",
                "Monitoring Agent 3.7.0.212",
                "Monitoring Agent 3.6.0.201",
                "Monitoring Agent 3.5.0.197",
                "Monitoring Agent 3.4.0.190",
                "Monitoring Agent 3.3.0.183",
                "Monitoring Agent 3.2.0.177",
                "Monitoring Agent 3.1.0.173",
                "Monitoring Agent 3.0.0.167",
                "Monitoring Agent 2.9.0.164",
                "Monitoring Agent 2.8.0.143",
                "Monitoring Agent 2.7.0.136",
                "Monitoring Agent 2.6.0.123",
                "Monitoring Agent 2.5.0",
                "Monitoring Agent 2.4.1.108",
                "Monitoring Agent 2.4.0.101",
                "Monitoring Agent 2.3.1.89-1",
                "Monitoring Agent 2.2.0.70-1",
                "Monitoring Agent 2.1.4.51-1",
                "Monitoring Agent 2.1.2.43-1",
                "Monitoring Agent 2.1.0",
                "Monitoring Agent 2.0.1",
                "Monitoring Agent 2.0.0",
                "Monitoring Agent 1.6.8",
                "Monitoring Agent 1.6.7",
                "Monitoring Agent 1.6.6",
                "Monitoring Agent 1.6.5",
                "Monitoring Agent 1.6.4",
                "Monitoring Agent 1.6.3",
                "Monitoring Agent 1.6.2",
                "Monitoring Agent 1.6.1",
                "Monitoring Agent 1.6.0",
                "Monitoring Agent 1.5.9",
                "Monitoring Agent 1.5.8",
                "Monitoring Agent 1.5.7",
                "Monitoring Agent 1.5.6"
            ],
            "paragraphs": "Released   2019-03-26 Made minor stabilization improvements. Released   2019-03-05 Support for IBM zSeries for the Ubuntu 18.04, SUSE12, and RHEL7\noperating systems. Released   2019-02-13 Built using Go 1.10. Released   2019-01-23 Preliminary work to support future consolidation of agents into a\nsingle agent. Released   2019-01-03 Support for monitoring MongoDB instances deployed in\n IPv6  environments. Released 2018-10-04 Monitoring agent now collections information about balancer state. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Incremental work to support MongoDB 4.0. Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 Logging enhancements. Released 2018-01-08 Fix:  Relax validation when  krb5ConfigLocation  parameter is\nspecified. This no longer implies that  krb5Principal  and\n krb5Keytab  are required. Released 2017-12-07 Performance improvement: Make all uses of  listDatabases  use\n nameOnly  flag. Released 2017-10-26 Rename \"Group\" to \"Project\" on the Windows installer. Released 2017-06-15 Use HTTP basic auth to authenticate HTTPS requests between the\nMonitoring Agent and cloud.mongodb.com Released 2017-04-19 Do not print an error message when monitoring a newly created sharded\ncluster for which the config.settings document does not yet exist. Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Released 2016-12-13 Ensure that replica set members in STARTUP2 can be monitored\nsuccessfully. Released 2016-11-21 Fix:  Prevent slow collection of database-specific stats from\naffecting main metrics collection loop. Released 2016-11-07 Allow managed Monitoring Agents to be run as a service on Windows. Released 2016-09-14 Update of underlying Go driver. Partial support for upcoming major release of MongoDB 3.4.0. Partial support for Kerberos on Windows. Released 2016-08-24 Support for Power Linux. Released 2016-07-12 Support for automatically backing off of monitoring interval for\nauto-scaled mongos deployments. Released 2016-06-22 Support for high resolution monitoring for Cloud Manager Premium Plans. Support for multiple active monitoring agents. Explicit monitoring of arbiters. Released 2016-05-16 Retrieve information on mongos in a cluster by querying the config\nservers. Released 2016-04-20 Added support for log rotation. Added a sticky header to log files. Released 2016-02-18 Use systemD management on RHEL7 and Ubuntu 16.04. Set  ulimits  in the packaged builds. Released 2016-01-07 Added the ability to customize the Kerberos configuration file\nlocation. Released 2015-10-14 Upgraded build to Go 1.5.1. Released 2015-10-08 Support for MongoDB 3.2.0 config servers as replica sets Released 2015-09-16 Built with Go 1.5.0. Released 2015-08-10 Updated retrieval logic for oplog information to retrieve from either\n serverStatus  or the  oplog  collection as determined by the\nroles of Monitoring Agent user to avoid authentication errors related\nto oplog information retrieval in MongoDB logs. Released 2015-07-15 Added optimization to ensure that profile data collection is\nnot impacted by clock skew. Stopped collecting data-base specific  recordStats  information. Released 2015-06-24 Updated documentation and setting URLs to cloud.mongodb.com Released 2015-06-03 Adds an optimization to ensure the Monitoring Agent's database stats\ncollection tasks do not synchronize. Released 2015-04-22 Added an explicit timeout for   connections to\n mongod  instances. The Kerberos credentials cache now uses a fixed name. Released 2015-03-31 Upgraded the version of the MongoDB Go driver (mgo), which fixes a rare\ndeadlock while monitoring  mongos  processes. Released 2015-02-23 Ability to monitor and back up deployments without managing them\nthrough Automation. Specifically, you can import an existing\ndeployment into Monitoring, which allows you to use   to\nmonitor and optionally back up the deployment. See\n . Support for x.509 certificate authentication. Improved support for collecting database statistics from\nsecondaries as well as primaries. The  Deployment  tab now displays all deployment information,\nfor both servers and processes, on one page, with icons for selecting\nview options. Released 2015-01-28 Stagger the timing of DNS look-ups, to avoid triggering a rare issue\nin glibc 2.19 on Ubuntu 14.04. Released 2015-01-08 Improved error handling on Windows. Released 2014-11-12 The Monitoring Agent now identifies itself to the   servers using\nthe fully qualified domain name (FQDN) of the server on which it is\nrunning. Improved connection management for monitored MongoDB processes. Released 2014-10-29 Improve correctness of database statics collection by moving data\ncollection into separate internal thread. Adds support for non-default Kerberos service names. Adds support for RHEL7. Released 2014-09-30 Now uses the   to retrieve a list of databases. Released 2014-09-10 Added support for authentication using MongoDB 2.4 style client\ncertificates. Released 2014-08-25 The default value for   is now\n true .  Users upgrading from 2.4.0 and using   will\nneed to set the value of   in\ntheir configuration file. See  . Released 2014-07-29 Upgraded agent to use Go 1.3. Updated  mgo  driver, which includes fix for  MGO-34 . All\nDNS lookups should now timeout appropriately. Added support for connecting to hosts using LDAP authentication. Added support for  version  and  -version . Agent now displays git commit hash of Monitoring Agent in the log\nfile. Updates to the configuration file format. Released 2014-07-08 Fixes issues with connecting to replica set members that use auth\nwith an updated Go client library. Added support for HTTP proxy configuration in the agent\nconfiguration file. Agent includes support for an Offline data collection mode. Released 2014-05-28 Improved logging for MongoDB 2.6 config servers when connecting with a\nuser that has the built-in   role. Released 2014-05-09 Reduce log spam when a  mongod  connection attempt fails, or\nthe when connecting to a 2.0  mongod . Prevent high CPU use when monitoring unreachable  mongod . Released 2014-04-15 Reduction in unnecessary log messages for unsupported operations on\nmonitored MongoDB 2.2 instances. Released 2014-03-26 Added Kerberos support for the new 2.x Monitoring Agent. Windows click to install MSI agent installer. Fixed duplicated profiling data error. Released 2014-03-18 Enhanced ability to stay connected when network connections become\nunstable due to firewalls and other factors. Included HTTP network proxy support for new 2.x Monitoring Agent with\nsame environment variable mechanism available to the Python version of\nthe Monitoring Agent. Released 2014-03-11 A new 2.x Monitoring Agent with no Python dependencies for deployments\nnot using Kerberos authentication or connecting to the internet via\nproxy. Released 2014-01-06 Added a periodic diagnostic log message to the Agent that includes\nactive host count. Removed deprecated agent auto-update. Released 2013-12-16 Added optional support for validating MongoDB   certificates\nand custom CA certificate paths. Improved robustness of host IP address detection. Released 2013-11-30 Added kerberos support for agents running on Python 2.4.x. Added logging when the  dbstats  command fails. Internal release only, not released . Released 2013-11-18 Added support for the agent to connect to MongoDB deployments that\nuse Kerberos. Allowed the Monitoring Agent to send data to the   server after\ndetecting changes, such as adding a new host. Internal Release Only - not published . Released 2013-11-05 Fixed bug that led to high CPU service with log collection\nand the agent's connection to a  mongod  instance failed. Released 2013-10-21 Added options in the agent's ' settings.py  to suppress database\nspecific statics at the agent level. Improved error messages in agent logs. Released 2013-10-07 For monitored instances on MongoDB 2.4.x series, fixed\na bug that reported monitored  mongod  instances as down\nduring foreground index builds. Released 2013-08-12 Agent now collects timestamps associated with hardware metrics, so\nthat   can display more accurate minute-level charts. Released 2013-07-15 Increased collection of data on shard names. Released 2013-04-23 Removed the  writeBacksQueued  queued call. Released 2013-03-20 Removed an error from the log if the agent is unable to collect\nprofiling stats.",
            "code": [],
            "preview": "Released 2019-03-26",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/release-advisories/advisories-v4.2-backup",
            "title": "Backup Features Supported at Present",
            "headings": [
                "Requirements and Limitations"
            ],
            "paragraphs": "Feature Databases running FCV 4.2 and later Databases running FCV 4.0 and earlier Backs up Data using WiredTiger Snapshots Backs up Data using the Backup Daemon Backs up Replica Sets Backs up Sharded Clusters Can Filter using Namespaces  Can Specify Sync Source Database Can Restore Data to Specific Point in Time  Can Perform Incremental Backups  Supports Snapshots that use   Encryption  Supports Snapshots that use Local Key Encryption  Supports Saving to blockstore snapshot storage Supports Saving to   Snapshot Storage Supports Saving to File System Storage  Supports Databases running MongoDB Enterprise Supports Databases running MongoDB Community Requires a MongoDB Agent with\n backup enabled  on every  \ncluster node Namespace filtering is supported only for   versions\n6.0.8 and later. Your MongoDB deployments must have\n featureCompatibilityVersion  values of  4.0  and earlier,\nor  6.0.1  and later. Performing a   restore requires   4.2.13 or later.  requires a full backup for your first backup, after a\nsnapshot has been deleted, and if the blockstore block size has\nbeen changed. Incremental backups reduce network transfer and\nstorage costs. This feature works with: MongoDB 4.0 and earlier. MongoDB 4.2.6 or later if running   4.2 or later. Querying an encrypted snapshot requires\n MongoDB Enterprise  4.2.9 and later\nor 4.4.0 and later.  4.2 and later backups don't support\n local key encryption . Backups to a   4.2 or later database to a File\nSystem Store ignore\n File System Store Gzip Compression Level . To run backups and restores if you are running MongoDB 4.2 or later\nwith   4.2 or later, you: Must run  MongoDB Enterprise . Must account for the change in blockstore block size. If you\ndidn't set your block size and used the default, that block size\nchanges from 64 KB to 1 MB. This can impact storage usage. Must ensure the hostnames in your replica set configuration match\nthe hostnames that the MongoDB Agent uses, or that your\n host mappings  contain the correct hostnames. You\ncan use  rs.conf()  to verify\nyour replica set configuration. Can use namespace filter lists to define the\n namespaces  included in a backup only if you are\nrunning MongoDB 6.0 or later. Snapshots taken on versions MongoDB 4.2\nthrough 5.0 always include all namespaces. Don't need a sync source database. When taking a Snapshot,  \nselects the replica set member with the least performance impact\nand greatest storage-level duplication of Snapshot data. Must deploy a MongoDB Agent with every   node in\nthe cluster. If   doesn't manage your cluster: Grant  the\n  and   roles to the\nMongoDB user that runs backups. Ensure that the operating system user that runs the MongoDB Agent\nhas read permission for all data files (including journal files)\nof the deployment.",
            "code": [],
            "preview": "To run backups and restores if you are running MongoDB 4.2 or later\nwith  4.2 or later, you:",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        },
        {
            "slug": "release-notes/changelogs/backup-agent/changelog-backup-agent-cloud",
            "title": "Backup Agent 7.8.1.1109",
            "headings": [
                "Backup Agent 7.8.0.1107",
                "Backup Agent 7.6.0.1059",
                "Backup Agent 7.5.0.1051",
                "Backup Agent 7.4.0.1036-1",
                "Backup Agent 7.2.0.1023",
                "Backup Agent 7.2.0.1018",
                "Backup Agent 7.1.0.1011",
                "Backup Agent 7.0.0.1008-1",
                "Backup Agent 6.9.0.1004-1",
                "Backup Agent 6.8.1.996",
                "Backup Agent 6.8.0.993",
                "Backup Agent 6.7.0.985",
                "Backup Agent 6.6.1.965",
                "Backup Agent 6.6.0.959",
                "Backup Agent 6.5.0.756",
                "Backup Agent 6.4.0.734",
                "Backup Agent 6.3.0.728",
                "Backup Agent 6.2.0.714",
                "Backup Agent 6.1.1.693",
                "Backup Agent 6.1.0.688",
                "Backup Agent 6.0.0.680",
                "Backup Agent 6.0.0.676",
                "Backup Agent 5.9.0.662",
                "Backup Agent 5.8.0.655",
                "Backup Agent 5.7.0.637",
                "Backup Agent 5.6.0.61",
                "Backup Agent 5.5.0.512",
                "Backup Agent 5.4.0.493",
                "Backup Agent 5.3.0.484",
                "Backup Agent 5.2.0.473",
                "Backup Agent 5.1.0.467",
                "Backup Agent 5.0.3.465",
                "Backup Agent 5.0.1.453",
                "Backup Agent 4.6.0.425",
                "Backup Agent 4.5.0.412",
                "Backup Agent 4.4.0.396",
                "Backup Agent 4.3.0.384",
                "Backup Agent 4.2.0.373",
                "Backup Agent 4.1.0.347",
                "Backup Agent 4.0.0.343",
                "Backup Agent 3.9.0.336",
                "Backup Agent 3.8.1.320",
                "Backup Agent 3.8.0.315",
                "Backup Agent 3.7.0.300",
                "Backup Agent 3.6.0.292",
                "Backup Agent 3.5.0.286-1",
                "Backup Agent 3.4.0.273",
                "Backup Agent 3.3.0.261",
                "Backup Agent 3.2.0.262",
                "Backup Agent 3.1.0.250",
                "Backup Agent 3.0.0.246",
                "Backup Agent 2.9.1.235-1",
                "Backup Agent 2.9.0.223",
                "Backup Agent 2.8.0.204",
                "Backup Agent 2.7.1.206",
                "Backup Agent 2.7.0.193",
                "Backup Agent 2.6.0.176",
                "Backup Agent 2.5.0",
                "Backup Agent 2.4.0.156",
                "Backup Agent 2.3.0.149",
                "Backup Agent 2.2.2.125",
                "Backup Agent 2.2.1.122",
                "Backup Agent 2.1.0.106-1",
                "Backup Agent 2.0.0.90-1",
                "Backup Agent 1.6.1.87-1",
                "Backup Agent 1.6.0.55-1",
                "Backup Agent 1.4.6.43-1",
                "Backup Agent 1.4.4.34-1",
                "Backup Agent 1.4.3.28-1",
                "Backup Agent 1.4.2.23-1",
                "Backup Agent 1.4.0.17",
                "Backup Agent v20131216.1",
                "Backup Agent v20131118.0",
                "Backup Agent v20130923.0",
                "Backup Agent v20130826.0",
                "Backup Agent v20130812.1"
            ],
            "paragraphs": "Released  2019-05-02 Fix:  Log optimizations when applying oplogs during a point in time\nrestore. Released   2019-04-16 Convert to new MongoDB Go Driver Released   2019-03-05 Work to support the upcoming MongoDB 4.2 release. Released   2019-02-13 Increased timeouts when applying oplogs during a point in time\nrestore. Prevent failures during long-running index builds during a point in\ntime restore. Released   2019-01-23 Add support for  ,\n , and\n  to the Point in Time\nRestore Utility. Released   2019-01-03 Built on Go 1.10. Released 2018-12-05 Built on Go 1.9. Released 2018-10-04 Improved handling of expiration of the queryable backup tunnel\nutility. Released 2018-08-01 Fix file extension when downloading a Backup Agent in Microsoft Edge\nand Firefox. Ensure that the UUID of the  system.views  collection is preserved\nduring a Backup initial sync. Released 2018-07-16 Maintain UUID for  system.views  collection by copying it on\ninitial sync. Released 2018-06-04 Fix deadlock in underlying Go driver. Released 2018-05-31 Make responseHeaderTimeout configurable. Support for upcoming MongoDB 4.0 release. Released 2018-05-09 Support for persistent HTTPS connections (default to off). Released 2018-03-28 Fix corrupted build for RHEL6. Released 2018-03-27 Logging enhancements. Released 2018-03-06 Fix:  Backup Agent should produce an error message and not crash\nwhen erroneous authentication credentials are provided for a source\ncluster. Released 2018-02-13 During a PIT restore, suppress errors when dropping non-existent\nnamespaces. During a PIT restore, always apply oplogs with upsert=true. Released 2018-01-23 Fix:  Send compound index keys as ordered BSON. Fix:  Send less detailed data in the initial summary payload at the\nstart of an initial sync. Collect more detailed data for each\ncollection individually. Released 2018-01-08 Fix:  Relax validation when  krb5ConfigLocation  parameter is\nspecified. This no longer implies that  krb5Principal  and\n krb5Keytab  are required. Fix:   Use correct format for point in time restore oplog seed\nwhen no oplog are available. Released 2017-11-19 Fix:  Upgrades of the Backup Agent performed by the Automation Agent\nwere missing a parameter on Windows. Released 2017-11-14 Support for upcoming release of MongoDB 3.6. Released 2017-10-26 Support for upcoming release of MongoDB 3.6. Released 2017-10-25 Support for upcoming release of MongoDB 3.6. Released 2017-09-13 Use BSON.d for missing docs. Released 2017-08-25 Allow oplogs for a point in time restore to be applied client-side. Released 2017-08-01 Support for optimized point in time restores. Released 2017-07-11 During initial sync, add verification that shard name matches\nthe expected shard name. Released 2017-06-15 Use HTTP basic auth to authenticate HTTPS requests between the\nBackup Agent and cloud.mongodb.com. Performance enhancement: Use  bson.Raw  for initial sync. Released 2017-04-19 Reduce memory used during initial sync. Ensure messages printed to  STDOUT  and  STDERR  is also\nincluded in the Backup Agent log file. Released 2017-03-29 Optimization for collection of data in the initial sync phase.\n(Recompiled with the MGO-128 fix.) Released 2017-01-23 Support for macOS Sierra. Compiled with Go 1.7.4. Fix:  Can send logs to Cloud Manager for Backup Agents running on\nWindows. Released 2016-12-13 Handle capped collections that are capped using a floating point size. Released 2016-11-21 Support for MongoDB 3.4 Views. Support for MongoDB 3.4 featureCompatiblityVersion. Released 2016-11-07 Allow managed Backup Agents to be run as a service on Windows. Released 2016-09-14 Update of underlying Go driver. Partial support for upcoming major release of MongoDB 3.4.0. Partial support for Kerberos on Windows. Released 2016-08-24 Support for Power Linux. Released 2016-07-12 Agent support for restarting incremental initial syncs. Released 2016-05-16 Updated to use Go 1.6. Released 2016-04-20 Added support for log rotation. Added a sticky header to log files. Released 2016-02-18 Use systemD management on RHEL7 and Ubuntu 16.04. Set  ulimits  in the packaged builds. Released 2016-01-07 Added the ability to customize the Kerberos configuration file\nlocation. Added support to tune the number of concurrent initial syncs. Added support to adjust the size of the  oplog  and sync slice\nchannels according to the size of the documents: this can lower memory\nconsumption. Released 2015-11-02 Support for streaming initial syncs. Support for MongoDB 3.2 clusters with config server replica sets. Released 2015-10-14 Upgraded to Go 1.5.1. Released 2015-09-16 Built with Go 1.5.0. Fix:  Ignore collections deleted during an initial sync. Released 2015-08-10 Added fix to not trim spaces from collection names. Upgraded to new version of snappy compression library. Released 2015-07-15 Backup .. _bgent-5.0.286-1: Added minor optimization to explicitly set the  Content-Type  on\nHTTP requests. Released 2015-06-24 Updated documentation and setting URLs to cloud.mongodb.com. Added support for backing up selected namespaces. This functionality\nis not yet exposed in the   user interface. Released 2015-04-22 Added an explicit timeout for SSL connections to  mongod \ninstances. Added an optimization for syncs of collections with lots of small\ndocuments. The Kerberos credentials cache now uses a fixed name. Released 2015-03-10 Logging improvements. Released 2015-02-23 Ability to monitor and back up deployments without managing them\nthrough Automation. Specifically, you can  import an existing\ndeployment into Monitoring \nand then use   to back up the deployment. Support for x.509 certificate authentication. Fix:  A race condition which could result in inconsistent\nclustershots for MongoDB 3.0+ sharded clusters using the\n  role no longer occurs. Released 2015-01-08 Logging improvements for Windows. Released 2015-01-08 Enhancements to support backup of MongoDB 3.0. Released 2014-12-17 Agent now encodes all collection meta-data. Avoids edge-case issues\nwith unexpected characters in collection settings. Released 2014-12-04 Can now explicitly pass collections options for the WiredTiger storage\nengine from the backed up  mongod  to  . Released 2014-11-12 The Backup Agent will now identify itself to the   servers using the\nfully qualified domain name (FQDN) of the server on which it is running. Released 2014-11-06 Use no-timeout cursors to work around  MGO-53 . Released 2014-10-29 When tailing the oplog, the agent no longer pre-fetches the next batch\nof oplog entries before exhausting the current batch. Adds support for non-default Kerberos service names. Adds support for RHEL7. Released 2014-09-30 Minor logging change, clarifying when stopping the balancer if there\nis no balancer settings document. Released 2014-09-10 Added support for authentication using MongoDB 2.4 style client\ncertificates. Released 2014-08-19 The Backup Agent will now capture a checkpoint even if it is unable to\nstop the balancer. These checkpoints are  not  guaranteed to be\nconsistent, because of in-progress chunk migrations.  The user\ninterface identifies these checkpoints. Released 2014-07-29 Upgraded agent to use to Go 1.3. Added support for  version  and  -version. Added support for connecting to hosts using LDAP authentication. Agent now provides additional logging information when the Backup\nAgent manipulates the balancer. Agent now supports configuring HTTP with the config file. Released 2014-07-09 Fixes issue with agent on Windows using the  MONGODB-CR \nauthentication mechanism. Released 2014-07-08 Fixes issues with connecting to replica set members that use auth\nwith an updated Go client library. Agent is now able to send a stack trace of its current state to\n . Fixes regression in the Agent's rollback handling. Released 2014-06-17 Support for a new API t hat allows   to ingest oplog entries before\nthe entire payload has reached the   servers. Released 2014-05-28 Agent supports deployment architectures with multiple active\n(i.e. primary) Backup Agents. Improved stability around oplog tokens for environments with\nunstable networks. Released 2014-05-19 Critical update for users running the MongoDB 2.6 series that use\nauthorization. The Backup Agent now includes  system.version  and\n system.role  collections from the  admin  database in the\ninitial sync. Released 2014-05-09 The agent now sends oplog slices to   in batches to increase\nthroughout and stability. Major stability update. Prevent a file descriptor leak. Correct handling of timeouts for connections hung in the  \nhandshaking phase. Support for using the Backup Agent via an HTTP proxy Allow upgrading the agent using the Windows MSI installer. Improved logging. Fix an open files leak on bad HTTP responses. Added support for Windows MSI installer. For sharded clusters, less aggressive polling to determine if\nbalancer has been stopped. Fail fast on connections to mongods that are not responding. Added support for sharded cluster checkpoints that add additional\npoints-in-time, in between scheduled snapshots, that   can use to\ncreate restores. Configure checkpoints using the  Edit Snapshot\nSchedule  link and interface. This version marks a change in the numbering scheme of Backup Agents\nto support improved packaging options for the Backup Agent. Added support for connecting to MongoDB instances running  . The agent will try to use additional  mongos  instances to take a\ncluster snapshot if the first  mongos  is unavailable. Significantly reduced the amount of time needed by the agent to\ndetect situations that require a resync. Allow automatic resync operations for config servers in sharded\nclusters. The agent can now resync automatically from these\nservers. When the agent sends the initial meta-data about the data to back up\n(e.g. the list of databases, collections,and indexes,) to the  \nAPI, the agent will not include any databases or collections in the\n\"excluded namespace\" configuration. Adds support for managing excluded namespaces: Backup Agent no\nlonger sends data for excluded collections or databases. Major stability update If the communication between the Backup Agent and the   API\nis interrupted, the Backup Agent can more reliably recover the\ncurrent state. This results in fewer \"resync required\" errors.",
            "code": [],
            "preview": "Released 2019-05-02",
            "tags": null,
            "facets": {
                "genre": [
                    "reference"
                ],
                "target_product": [
                    "com"
                ]
            }
        }
    ]
}